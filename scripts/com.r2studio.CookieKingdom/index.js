var window = window || {};


function start(jsonConfig){window.start(jsonConfig);}
function stop(){window.stop();}

/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ (function() {

var window = window || {};



/***/ }),

/***/ "./node_modules/Rerouter/dist/index.js":
/*!*********************************************!*\
  !*** ./node_modules/Rerouter/dist/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = void 0;
__exportStar(__webpack_require__(/*! ./src/screen */ "./node_modules/Rerouter/dist/src/screen.js"), exports);
__exportStar(__webpack_require__(/*! ./src/rerouter */ "./node_modules/Rerouter/dist/src/rerouter.js"), exports);
__exportStar(__webpack_require__(/*! ./src/struct */ "./node_modules/Rerouter/dist/src/struct.js"), exports);
__exportStar(__webpack_require__(/*! ./src/utils */ "./node_modules/Rerouter/dist/src/utils.js"), exports);
exports.version = 1;
var writeFileTmp = writeFile;
// @ts-ignore
writeFile = function (path, content) {
    var rtn = writeFileTmp(path, content);
    execute("chmod 777 ".concat(path));
    return rtn;
};
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/rerouter.js":
/*!****************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/rerouter.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rerouter = exports.Rerouter = void 0;
var struct_1 = __webpack_require__(/*! ./struct */ "./node_modules/Rerouter/dist/src/struct.js");
var screen_1 = __webpack_require__(/*! ./screen */ "./node_modules/Rerouter/dist/src/screen.js");
var utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/Rerouter/dist/src/utils.js");
__webpack_require__(/*! core-js/es/object/assign */ "./node_modules/core-js/es/object/assign.js");
__webpack_require__(/*! core-js/es/array/find-index */ "./node_modules/core-js/es/array/find-index.js");
var Rerouter = /** @class */ (function () {
    function Rerouter() {
        this.debug = true;
        this.defaultConfig = struct_1.DefaultConfigValue;
        this.rerouterConfig = struct_1.DefaultRerouterConfig;
        this.screenConfig = struct_1.DefaultScreenConfig;
        this.screen = new screen_1.Screen(this.screenConfig);
        this.running = false;
        this.routeConflictRecord = [];
        this.routes = [];
        this.tasks = [];
        this.routeContext = null;
        this.unknownRouteAction = null;
        this.startAppRouteAction = null;
    }
    Rerouter.prototype.reset = function () {
        // NOTE: this is an another way that resets Rerouter, just leaving here for memory
        // rerouterContainer.instance = new Rerouter();
        // @ts-ignore included 'core-js/es/object/assign'
        Object.assign(this, new Rerouter());
    };
    /**
     * Recalculate some value like device width or height in screenConfig
     */
    Rerouter.prototype.init = function () {
        var _a;
        // sort routes by priority
        this.routes.sort(function (a, b) { return b.priority - a.priority; });
        // check and calculate screen config
        var deviceWH = getScreenSize();
        var max = Math.max(deviceWH.width, deviceWH.height);
        var min = Math.min(deviceWH.width, deviceWH.height);
        var dWidth = this.screenConfig.rotation === 'horizontal' ? max : min;
        var dHeight = this.screenConfig.rotation === 'vertical' ? max : min;
        this.screenConfig.deviceWidth = this.screenConfig.deviceWidth || dWidth;
        this.screenConfig.deviceHeight = this.screenConfig.deviceHeight || dHeight;
        this.screenConfig.screenWidth = this.screenConfig.screenWidth || dWidth;
        this.screenConfig.screenHeight = this.screenConfig.screenHeight || dHeight;
        this.log("screenWidth: ".concat(this.screenConfig.screenWidth, ", screenHeight: ").concat(this.screenConfig.screenHeight));
        this.screenConfig.logScreenshotFolder = utils_1.Utils.joinPaths(this.rerouterConfig.saveImageRoot, this.rerouterConfig.deviceId);
        if ((_a = this.rerouterConfig.savePageReference) === null || _a === void 0 ? void 0 : _a.enable) {
            var folderPath = this.rerouterConfig.savePageReference.folderPath || utils_1.Utils.joinPaths(this.rerouterConfig.saveImageRoot, 'pageReference');
            this.rerouterConfig.savePageReference.folderPath = folderPath;
            execute("mkdir -p ".concat(folderPath));
        }
        // new screen if screen config changed
        this.screen = new screen_1.Screen(this.screenConfig);
    };
    /**
     * Add RouteConfig to Rerouter routes, after starting Rerouter will run over all RouteConfigs to match screen and do action
     * @param config information about how route match and route action
     */
    Rerouter.prototype.addRoute = function (config) {
        // @ts-ignore included 'core-js/es/array/find-index'
        var existingRouteIndex = this.routes.findIndex(function (route) { return route.path === config.path; });
        // If it exists, log a warning and decide what to do next
        if (existingRouteIndex !== -1) {
            this.warning("A route with the path '".concat(config.path, "' already exists. Duplicate route will not be added."));
            // Option 1: Update the existing route with the new configuration
            // this.routes[existingRouteIndex] = this.wrapRouteConfigWithDefault(config);
            // Option 2: Simply return and don't add the new route
            return;
        }
        // If it doesn't exist, push the new route
        this.routes.push(this.wrapRouteConfigWithDefault(config));
    };
    /**
     * Tell Rerouter what to do if not matching any route
     * @param action function to do if not matching
     */
    Rerouter.prototype.addUnknownAction = function (action) {
        this.unknownRouteAction = action;
    };
    Rerouter.prototype.addStartAppAction = function (action) {
        this.startAppRouteAction = action;
    };
    /**
     * Add TaskConfig to Rerouter tasks, after starting Rerouter will run over all Tasks by task condition
     * @param config information about how task works
     */
    Rerouter.prototype.addTask = function (config) {
        this.tasks.push({
            name: config.name,
            config: this.wrapTaskConfigWithDefault(config),
            startTime: 0,
            lastRunTime: 0,
            runTimes: 0,
        });
    };
    /**
     * start Rerouter to run over tasks and routes
     * @param packageName
     */
    Rerouter.prototype.start = function (packageName) {
        this.rerouterConfig.packageName = packageName;
        // check tasks
        if (this.tasks.length === 0) {
            this.log("Rerouter start failed, no tasks ...");
            return;
        }
        this.init();
        this.log("Rerouter started ...");
        // task controller
        this.running = true;
        this.startTaskLoop();
        this.log("Rerouter stopped ...");
    };
    /**
     * stop Rerouter
     */
    Rerouter.prototype.stop = function () {
        this.log("Rerouter stop called, trying to stop task loop");
        this.running = false;
        if (this.routeContext !== null) {
            this.routeContext.scriptRunning = false;
        }
    };
    Rerouter.prototype.checkInApp = function () {
        var packageName = utils_1.Utils.getCurrentApp()[0];
        if (packageName === this.rerouterConfig.packageName) {
            return true;
        }
        return utils_1.Utils.isAppOnTop(this.rerouterConfig.packageName);
    };
    Rerouter.prototype.checkAndStartApp = function () {
        if (!this.checkInApp()) {
            this.log("AppIsNotStarted, startApp ".concat(this.rerouterConfig.packageName));
            this.startApp();
            return true;
        }
        return false;
    };
    Rerouter.prototype.startApp = function () {
        if (!this.rerouterConfig.packageName) {
            this.log("Rerouter start app failed, no packageName ...");
            return;
        }
        utils_1.Utils.startApp(this.rerouterConfig.packageName);
        utils_1.Utils.sleep(this.rerouterConfig.startAppDelay);
    };
    Rerouter.prototype.stopApp = function () {
        if (!this.rerouterConfig.packageName) {
            this.log("Rerouter stop app failed, no packageName ...");
            return;
        }
        utils_1.Utils.stopApp(this.rerouterConfig.packageName);
        utils_1.Utils.sleep(1000);
    };
    Rerouter.prototype.restartApp = function () {
        this.stopApp();
        this.startApp();
    };
    Rerouter.prototype.goNext = function (page) {
        if (page.next !== undefined) {
            this.screen.tap(page.next);
        }
        else {
            this.warning("".concat(page.name, " action == goNext, but no next xy"));
        }
    };
    Rerouter.prototype.goBack = function (page) {
        if (page.back !== undefined) {
            this.screen.tap(page.back);
        }
        else {
            this.warning("".concat(page.name, " action == goBack, but no back xy"));
        }
    };
    Rerouter.prototype.isPageMatch = function (page) {
        var image = this.screen.getCvtDevScreenshot();
        var isMatch = this.isPageMatchImage(page, image);
        releaseImage(image);
        return isMatch;
    };
    Rerouter.prototype.isPageMatchImage = function (page, image) {
        if (typeof page === 'string') {
            var p = this.getPageByName(page);
            if (p === null) {
                this.warning("isPageMatchImage ".concat(page, " not exist"));
                return false;
            }
            page = p;
        }
        if (page instanceof struct_1.Page) {
            return this.isMatchPageImpl(image, page, this.defaultConfig.PageThres, this.debug);
        }
        else {
            var pages = this.isMatchGroupPageImpl(image, page, this.defaultConfig.GroupPageThres, this.debug);
            return pages.length > 0;
        }
    };
    Rerouter.prototype.getPagesMatch = function (groupPage) {
        var image = this.screen.getCvtDevScreenshot();
        var match = this.getPagesMatchImage(groupPage, image, this.defaultConfig.GroupPageThres);
        releaseImage(image);
        return match;
    };
    Rerouter.prototype.getPagesMatchImage = function (groupPage, image, parentThres, debug) {
        var _a, _b;
        var pages = [];
        var thres = (_b = (_a = groupPage.thres) !== null && _a !== void 0 ? _a : parentThres) !== null && _b !== void 0 ? _b : this.defaultConfig.PageThres;
        for (var i = 0; i < groupPage.pages.length; i++) {
            var page = groupPage.pages[i];
            var isPageMatch = this.isMatchPageImpl(image, page, thres, this.debug);
            if (isPageMatch) {
                pages.push(page);
            }
        }
        return pages;
    };
    Rerouter.prototype.waitScreenForMatchingPage = function (page, timeout, matchTimes, interval) {
        var _this = this;
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        return utils_1.Utils.waitForAction(function () { return _this.isPageMatch(page); }, timeout, matchTimes, interval);
    };
    Rerouter.prototype.isRouteMatch = function (route) {
        var image = this.screen.getCvtDevScreenshot();
        var isMatch = this.isRouteMatchImage(route, image);
        releaseImage(image);
        return isMatch;
    };
    Rerouter.prototype.isRouteMatchImage = function (route, image) {
        var routeConfig = this.getRouteConfig(route);
        if (routeConfig === null) {
            this.warning("isRouteMatchImage ".concat(route, " not exist"));
            return false;
        }
        var filledRouteConfig = this.wrapRouteConfigWithDefault(routeConfig);
        var rotation = this.screen.getImageRotation(image);
        var isMatched = this.isMatchRouteImpl(image, rotation, filledRouteConfig, 'waitScreenForMatchingRoute').isMatched;
        if (isMatched) {
            return true;
        }
        return false;
    };
    Rerouter.prototype.waitScreenForMatchingRoute = function (route, timeout, matchTimes, interval) {
        var _this = this;
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        return utils_1.Utils.waitForAction(function () { return _this.isRouteMatch(route); }, timeout, matchTimes, interval);
    };
    Rerouter.prototype.getPageByName = function (name) {
        var _a;
        for (var _i = 0, _b = this.routes; _i < _b.length; _i++) {
            var route = _b[_i];
            if (name === ((_a = route.match) === null || _a === void 0 ? void 0 : _a.name)) {
                return route.match;
            }
        }
        return null;
    };
    Rerouter.prototype.getRouteConfigByPath = function (path) {
        for (var _i = 0, _a = this.routes; _i < _a.length; _i++) {
            var route = _a[_i];
            if (path === route.path) {
                return route;
            }
        }
        return null;
    };
    Rerouter.prototype.getCurrentMatchNames = function () {
        var _this = this;
        var image = this.screen.getCvtDevScreenshot();
        var matchedNames = [];
        this.routes.forEach(function (route) {
            var match = route.match;
            if ((match instanceof struct_1.Page && _this.isMatchPageImpl(image, match, _this.defaultConfig.PageThres, _this.debug)) ||
                (match instanceof struct_1.GroupPage && _this.isMatchGroupPageImpl(image, match, _this.defaultConfig.PageThres, _this.debug).length > 0)) {
                matchedNames.push(match.name);
            }
        });
        this.log("current match: ", matchedNames);
        releaseImage(image);
        return matchedNames;
    };
    Rerouter.prototype.getRouteConfig = function (r) {
        var route;
        if (typeof r === 'string') {
            route = this.getRouteConfigByPath(r);
        }
        else {
            route = r;
        }
        return route;
    };
    Rerouter.prototype.wrapRouteConfigWithDefault = function (config) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        return {
            path: config.path,
            action: config.action,
            match: (_a = config.match) !== null && _a !== void 0 ? _a : null,
            customMatch: (_b = config.customMatch) !== null && _b !== void 0 ? _b : null,
            rotation: (_c = config.rotation) !== null && _c !== void 0 ? _c : this.screenConfig.rotation,
            shouldMatchTimes: (_d = config.shouldMatchTimes) !== null && _d !== void 0 ? _d : this.defaultConfig.RouteConfigShouldMatchTimes,
            shouldMatchDuring: (_e = config.shouldMatchDuring) !== null && _e !== void 0 ? _e : this.defaultConfig.RouteConfigShouldMatchDuring,
            beforeActionDelay: (_f = config.beforeActionDelay) !== null && _f !== void 0 ? _f : this.defaultConfig.RouteConfigBeforeActionDelay,
            afterActionDelay: (_g = config.afterActionDelay) !== null && _g !== void 0 ? _g : this.defaultConfig.RouteConfigAfterActionDelay,
            priority: (_h = config.priority) !== null && _h !== void 0 ? _h : this.defaultConfig.RouteConfigPriority,
            debug: (_j = config.debug) !== null && _j !== void 0 ? _j : this.defaultConfig.RouteConfigDebug,
        };
    };
    Rerouter.prototype.wrapTaskConfigWithDefault = function (config) {
        var _a, _b, _c, _d, _e, _f, _g;
        return {
            name: config.name,
            maxTaskRunTimes: (_a = config.maxTaskRunTimes) !== null && _a !== void 0 ? _a : this.defaultConfig.TaskConfigMaxTaskRunTimes,
            maxTaskDuring: (_b = config.maxTaskDuring) !== null && _b !== void 0 ? _b : this.defaultConfig.TaskConfigMaxTaskDuring,
            minRoundInterval: (_c = config.minRoundInterval) !== null && _c !== void 0 ? _c : this.defaultConfig.TaskConfigMinRoundInterval,
            forceStop: (_d = config.forceStop) !== null && _d !== void 0 ? _d : this.defaultConfig.TaskConfigAutoStop,
            findRouteDelay: (_e = config.findRouteDelay) !== null && _e !== void 0 ? _e : this.defaultConfig.TaskConfigFindRouteDelay,
            beforeRoute: (_f = config.beforeRoute) !== null && _f !== void 0 ? _f : null,
            afterRoute: (_g = config.afterRoute) !== null && _g !== void 0 ? _g : null,
        };
    };
    Rerouter.prototype.startTaskLoop = function () {
        var taskIdx = 0;
        while (this.running) {
            var task = this.tasks[taskIdx % this.tasks.length];
            taskIdx++;
            var now = Date.now();
            var isTaskRunFirstTime = task.lastRunTime === 0;
            if (now - task.lastRunTime <= task.config.minRoundInterval && !isTaskRunFirstTime) {
                this.log("Task: ".concat(task.name, " during: ").concat(now - task.lastRunTime, " <= minRoundInterval, skip"));
                utils_1.Utils.sleep(this.rerouterConfig.taskDelay);
                continue;
            }
            task.startTime = now;
            task.runTimes = 0;
            var exitTask = false;
            for (var i = 0; i < task.config.maxTaskRunTimes && this.running && !exitTask; i++) {
                this.log("Task: ".concat(task.name, " run ").concat(task.runTimes));
                var skipRoute = false;
                if (task.config.beforeRoute !== null) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " do beforeRoute()"));
                    if (task.config.beforeRoute(task) === 'skipRouteLoop') {
                        skipRoute = true;
                    }
                }
                if (skipRoute) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " skipRouteLoop"));
                }
                else {
                    exitTask = this.startRouteLoop(task);
                }
                if (task.config.afterRoute !== null) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " do afterRoute()"));
                    task.config.afterRoute(task);
                }
                task.runTimes++;
                task.lastRunTime = now;
                var during = now - task.startTime;
                if (task.config.maxTaskDuring > 0 && during >= task.config.maxTaskDuring) {
                    this.log("Task: ".concat(task.name, " taskDuring: ").concat(during, "/").concat(task.config.maxTaskDuring, " reached, stop"));
                    break;
                }
            }
            utils_1.Utils.sleep(this.rerouterConfig.taskDelay);
        }
    };
    Rerouter.prototype.startRouteLoop = function (task) {
        var _this = this;
        var _a, _b, _c, _d, _e;
        this.routeContext = {
            task: task,
            screen: this.screen,
            scriptRunning: this.running,
            path: '',
            lastMatchedPath: (_b = (_a = this.routeContext) === null || _a === void 0 ? void 0 : _a.lastMatchedPath) !== null && _b !== void 0 ? _b : '',
            matchTimes: 0,
            matchStartTS: 0,
            matchDuring: 0,
        };
        var routeLoop = true;
        var exitTaskResult = false;
        var finishRoundFunc = function (exitTask) {
            var _a;
            if (exitTask === void 0) { exitTask = false; }
            routeLoop = false;
            exitTaskResult = exitTask;
            _this.log("finish round: ".concat((_a = _this.routeContext) === null || _a === void 0 ? void 0 : _a.task.name, "; exitTask: ").concat(exitTask));
        };
        // pointer for short code
        var context = this.routeContext;
        while (routeLoop && this.running) {
            var now = Date.now();
            // check task.autoStop
            var taskRunDuring = now - task.startTime;
            if (task.config.forceStop && taskRunDuring > task.config.maxTaskDuring) {
                this.log("Task ".concat(task.name, " AutoStop, exceed taskRunDuring"));
                break;
            }
            // check isAppOn or auto launch it
            if (this.rerouterConfig.autoLaunchApp) {
                if (this.checkAndStartApp()) {
                    if (this.startAppRouteAction !== null) {
                        this.startAppRouteAction(context, finishRoundFunc);
                    }
                    continue;
                }
            }
            var rotation = this.screen.getRotation();
            var image = this.screen.getCvtDevScreenshot();
            var matches = this.findMatchedRouteImpl(task.name, image, rotation);
            var matchedRoute = (_c = matches[0]) === null || _c === void 0 ? void 0 : _c.matchedRoute;
            var matchedPages = (_d = matches[0]) === null || _d === void 0 ? void 0 : _d.matchedPages;
            // context.matchStartTS = 0 if init run
            context.matchStartTS = context.matchStartTS || now;
            context.path = (_e = matchedRoute === null || matchedRoute === void 0 ? void 0 : matchedRoute.path) !== null && _e !== void 0 ? _e : '';
            // first match
            if (context.path !== context.lastMatchedPath) {
                context.matchTimes = 0;
                context.matchStartTS = now;
            }
            context.matchDuring = now - context.matchStartTS;
            context.matchTimes++;
            switch (matches.length) {
                case 0:
                    // no match
                    if (this.unknownRouteAction !== null) {
                        this.unknownRouteAction(context, image, finishRoundFunc);
                    }
                    break;
                case 1:
                    // perfect match 1
                    this.doActionForRoute(context, image, matchedRoute, matchedPages, finishRoundFunc);
                    break;
                default:
                    // conflict
                    var error = this.handleConflictRoutes(task.name, image, matches, finishRoundFunc);
                    if (error) {
                        releaseImage(image);
                        throw error;
                    }
                    break;
            }
            // update lastMatchedPath after action done
            // otherwise the lastMatchedPath will be current path when doing action
            context.lastMatchedPath = context.path;
            releaseImage(image);
            utils_1.Utils.sleep(task.config.findRouteDelay);
        }
        return exitTaskResult;
    };
    Rerouter.prototype.doActionForRoute = function (context, image, route, matchedPages, finishRound) {
        var _a, _b;
        this.logImpl(route.debug, "handleMatchedRoute: ".concat(route.path, ", times: ").concat(context.matchTimes, ", during: ").concat(context.matchDuring));
        if (context.matchTimes < route.shouldMatchTimes || context.matchDuring < route.shouldMatchDuring) {
            // should still wait for matching condition
            return;
        }
        var nextXY = (_a = matchedPages[0]) === null || _a === void 0 ? void 0 : _a.next;
        var backXY = (_b = matchedPages[0]) === null || _b === void 0 ? void 0 : _b.back;
        // matched and fit condition, do action
        utils_1.Utils.sleep(route.beforeActionDelay);
        if (route.action === 'goNext') {
            if (nextXY !== undefined) {
                this.screen.tap(nextXY);
            }
            else {
                this.warning("".concat(route.path, " action == goNext, but no next xy"));
            }
        }
        else if (route.action === 'goBack') {
            if (backXY !== undefined) {
                this.screen.tap(backXY);
            }
            else {
                this.warning("".concat(route.path, " action == goBack, but no back xy"));
            }
        }
        else if (route.action === 'keycodeBack') {
            keycode('BACK', this.screenConfig.actionDuring);
        }
        else {
            route.action(context, image, matchedPages, finishRound);
        }
        this.savePageReferenceImage(image, matchedPages);
        utils_1.Utils.sleep(route.afterActionDelay);
    };
    Rerouter.prototype.findMatchedRouteImpl = function (taskName, image, rotation) {
        var matches = [];
        for (var _i = 0, _a = this.routes; _i < _a.length; _i++) {
            var route = _a[_i];
            var _b = this.isMatchRouteImpl(image, rotation, route, taskName), isMatched = _b.isMatched, matchedPages = _b.matchedPages;
            if (isMatched) {
                this.logImpl(route.debug, 'current match:', matchedPages.map(function (p) { return p.name; }));
                matches.push({ matchedRoute: route, matchedPages: matchedPages });
            }
        }
        return matches;
    };
    Rerouter.prototype.handleConflictRoutes = function (taskName, image, matches, finishRound) {
        var matchDetails = matches
            .map(function (item) {
            var _a;
            var path = ((_a = item.matchedRoute) === null || _a === void 0 ? void 0 : _a.path) || 'emptyRoutePath';
            var pages = item.matchedPages.map(function (p) { return p.name; });
            return "".concat(path, ": (").concat(pages.join(', '), ")");
        })
            .join('\n');
        var warningMsg = "a route conflict when in Task: \"".concat(taskName, "\", details: \n").concat(matchDetails);
        this.warning(warningMsg);
        if (this.rerouterConfig.strictMode) {
            // TODO: save image rather than take another screenshot
            utils_1.Utils.saveScreenshotToDisk(this.rerouterConfig.saveImageRoot, "".concat(struct_1.DefaultRerouterConfig.deviceId, "_conflictedRoutes"));
            if (this.rerouterConfig.debugSlackUrl !== '') {
                utils_1.Utils.sendSlackMessage(this.rerouterConfig.debugSlackUrl, 'Conflict Routes Report', "".concat(struct_1.DefaultRerouterConfig.deviceId, " just logged ").concat(warningMsg));
            }
            return new Error("Intentional crash due to multiple route applied to current screen: ".concat(matchDetails));
        }
        // default handle conflict routes in non-strict mode
        this.log("try handle conflict");
        finishRound(true);
        var now = Date.now();
        this.routeConflictRecord.push(now);
        var duringLimit = 60 * 1000;
        var countsLimit = 5;
        while (this.routeConflictRecord.length > 0 && now - this.routeConflictRecord[0] > duringLimit) {
            this.routeConflictRecord.shift();
        }
        if (this.routeConflictRecord.length >= countsLimit) {
            this.routeConflictRecord = [now];
            this.restartApp();
            return;
        }
        keycode('BACK', this.screenConfig.actionDuring);
    };
    Rerouter.prototype.isMatchRouteImpl = function (image, rotation, route, taskName) {
        var _a;
        // check rotation
        if (route.rotation !== rotation) {
            this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " not match rotation, skip"));
            return { isMatched: false, matchedPages: [] };
        }
        var isMatched = false;
        var matchedPages = [];
        // check route.match
        if (route.match !== null) {
            if (route.match instanceof struct_1.Page) {
                var match = this.isMatchPageImpl(image, route.match, this.defaultConfig.PageThres, route.debug);
                if (match) {
                    isMatched = true;
                    matchedPages.push(route.match);
                }
            }
            else if (route.match instanceof struct_1.GroupPage) {
                var match = this.isMatchGroupPageImpl(image, route.match, this.defaultConfig.GroupPageThres, route.debug);
                if (match.length !== 0) {
                    isMatched = true;
                    matchedPages.push.apply(matchedPages, match);
                }
            }
        }
        // check route.isMatch function
        if (!isMatched && route.customMatch !== null) {
            isMatched = route.customMatch(taskName, image);
            this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " isMatch() => ").concat(isMatched));
        }
        this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " match: ").concat(isMatched, ", firstPage: ").concat((_a = matchedPages[0]) === null || _a === void 0 ? void 0 : _a.name));
        return {
            isMatched: isMatched,
            matchedPages: matchedPages,
        };
    };
    Rerouter.prototype.isMatchPageImpl = function (image, page, parentThres, debug) {
        var _a, _b;
        var pageThres = page.thres;
        var isSame = true;
        this.logImpl(debug, "checkMatchPage[".concat(page.name, "]"));
        for (var i = 0; isSame && i < page.points.length; i++) {
            var point = page.points[i];
            var thres = (_b = (_a = point.thres) !== null && _a !== void 0 ? _a : pageThres) !== null && _b !== void 0 ? _b : parentThres;
            var color = getImageColor(image, point.x, point.y);
            var score = utils_1.Utils.identityColor(point, color);
            var isPointColorMatch = score >= thres;
            if (!isPointColorMatch) {
                isSame = false;
                this.logImpl(debug, "point[".concat(i, "] match false: score: ").concat(score, ", thres: ").concat(thres, "\n"), "expect: ".concat(utils_1.Utils.formatXYRGB(point), "\n"), "   get: ".concat(utils_1.Utils.formatXYRGB(__assign(__assign({}, color), { x: point.x, y: point.y }))));
            }
        }
        this.logImpl(debug, "checkMatchPage[".concat(page.name, "][match: ").concat(isSame, "]"));
        return isSame;
    };
    Rerouter.prototype.isMatchGroupPageImpl = function (image, groupPage, parentThres, debug) {
        var _a;
        var thres = (_a = groupPage.thres) !== null && _a !== void 0 ? _a : parentThres;
        for (var i = 0; i < groupPage.pages.length; i++) {
            var page = groupPage.pages[i];
            var isPageMatch = this.isMatchPageImpl(image, page, thres, debug);
            this.logImpl(debug, "checkMatchGroupPage: ".concat(groupPage.name, ", page[").concat(i, "]: ").concat(page.name, " match: ").concat(isPageMatch));
            if (groupPage.matchOP === '||' && isPageMatch) {
                return [page];
            }
            if (groupPage.matchOP === '&&' && !isPageMatch) {
                return [];
            }
        }
        return groupPage.matchOP === '&&' ? groupPage.pages : [];
    };
    Rerouter.prototype.savePageReferenceImage = function (image, matchedPages) {
        var _a = this.rerouterConfig.savePageReference || {}, enable = _a.enable, folderPath = _a.folderPath, rgba = _a.rgba;
        if (!enable || !folderPath || matchedPages.length === 0) {
            return;
        }
        matchedPages.forEach(function (page) {
            utils_1.Utils.savePointsMarkedImage({
                image: image,
                name: page.name,
                points: page.points,
                folderPath: folderPath,
                rgba: rgba,
            });
        });
    };
    Rerouter.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.logImpl.apply(this, __spreadArray([this.debug], args, false));
    };
    Rerouter.prototype.logImpl = function (debug) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (!debug || !this.debug) {
            return;
        }
        // only log when debug + this.debug is true
        utils_1.Utils.log.apply(utils_1.Utils, __spreadArray(['[Rerouter][debug]'], args, false));
    };
    Rerouter.prototype.warning = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        utils_1.Utils.log.apply(utils_1.Utils, __spreadArray(['[Rerouter][warning]'], args, false));
    };
    return Rerouter;
}());
exports.Rerouter = Rerouter;
// NOTE: this is an another way that resets Rerouter, just leaving here for memory
// const rerouterContainer = {
//   instance: new Rerouter(),
// };
// import 'proxy-polyfill';
// export const rerouter: Rerouter = new Proxy(rerouterContainer, {
//   get: (target, prop: keyof Rerouter) => {
//     return target.instance[prop];
//   },
//   set: (target, prop: keyof Rerouter, value: any) => {
//     target.instance[prop] = value;
//     return true;
//   },
// }) as any as Rerouter;
exports.rerouter = new Rerouter();
//# sourceMappingURL=rerouter.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/screen.js":
/*!**************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/screen.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Screen = void 0;
var utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/Rerouter/dist/src/utils.js");
var Screen = /** @class */ (function () {
    function Screen(config) {
        this.config = config;
    }
    Screen.prototype.calculateDeviceOffset = function (func) {
        var results = func(this);
        this.config.screenWidth = results.screenWidth;
        this.config.screenHeight = results.screenHeight;
        this.config.screenOffsetX = results.screenOffsetX;
        this.config.screenOffsetY = results.screenOffsetY;
    };
    Screen.prototype.getScreenX = function (devX) {
        return Math.floor(this.config.screenOffsetX + (devX * this.config.screenWidth) / this.config.devWidth) || 0;
    };
    Screen.prototype.getScreenY = function (devY) {
        return Math.floor(this.config.screenOffsetY + (devY * this.config.screenHeight) / this.config.devHeight) || 0;
    };
    Screen.prototype.getScreenXY = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            return { x: x, y: y };
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            return { x: x, y: y };
        }
        else {
            throw new Error("getScreenXY wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tap = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tap(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tap(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tapDown = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tapDown(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tapDown(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.moveTo = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            moveTo(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            moveTo(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tapUp = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tapUp(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tapUp(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.getScreenColor = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var img = this.getCvtDevScreenshot();
            var rgb = getImageColor(img, p1.x, p1.y);
            releaseImage(img);
            return rgb;
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var img = this.getCvtDevScreenshot();
            var rgb = getImageColor(img, p1, p2);
            releaseImage(img);
            return rgb;
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.findImage = function (devImg) {
        var img = this.getCvtDevScreenshot();
        var result = findImage(img, devImg);
        releaseImage(img);
        return result;
    };
    Screen.prototype.tapImage = function (devImg) {
        var xy = this.findImage(devImg);
        this.tap(xy);
    };
    Screen.prototype.isSameColor = function (devColorPoint, thres) {
        if (thres === void 0) { thres = 0.9; }
        var rgb = this.getScreenColor(devColorPoint);
        var score = utils_1.Utils.identityColor(rgb, devColorPoint);
        if (score > thres) {
            return true;
        }
        return false;
    };
    // currently real device screenshot
    Screen.prototype.getDeviceScreenshot = function () {
        return getScreenshot();
    };
    // currently device screenshot cut by offset
    Screen.prototype.getScreenScreenshot = function () {
        return getScreenshotModify(this.config.screenOffsetX, this.config.screenOffsetY, this.config.screenWidth, this.config.screenHeight, this.config.screenWidth, this.config.screenHeight, 100);
    };
    Screen.prototype.checkAndSaveScreenshots = function () {
        if (this.config.logScreenshotFolder !== '' && Date.now() - this.config.logScreenshotLastTime > this.config.logScreenshotMinIntervalInSec * 1000) {
            this.config.logScreenshotLastTime = Date.now();
            utils_1.Utils.saveScreenshotToDisk(this.config.logScreenshotFolder, 'log');
            utils_1.Utils.removeOldestFilesIfExceedsLimit(this.config.logScreenshotFolder, this.config.logScreenshotMaxFiles);
        }
    };
    Screen.prototype.getCvtDevScreenshot = function () {
        this.checkAndSaveScreenshots();
        return getScreenshotModify(this.config.screenOffsetX, this.config.screenOffsetY, this.config.screenWidth, this.config.screenHeight, this.config.devWidth, this.config.devHeight, 100);
    };
    Screen.prototype.getRotation = function () {
        var _a = getScreenSize(), width = _a.width, height = _a.height;
        if (width > height) {
            return 'horizontal';
        }
        return 'vertical';
    };
    Screen.prototype.getImageRotation = function (image) {
        var _a = getImageSize(image), width = _a.width, height = _a.height;
        if (width > height) {
            return 'horizontal';
        }
        return 'vertical';
    };
    Screen.prototype.setActionDuring = function (during) {
        this.config.actionDuring = during;
    };
    Screen.debug = false;
    return Screen;
}());
exports.Screen = Screen;
//# sourceMappingURL=screen.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/struct.js":
/*!**************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/struct.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultScreenConfig = exports.DefaultRerouterConfig = exports.DefaultConfigValue = exports.GroupPage = exports.Page = void 0;
var Page = /** @class */ (function () {
    function Page(name, devPoints, next, back, thres) {
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        if (thres === void 0) { thres = undefined; }
        this.name = name;
        this.points = devPoints;
        this.next = next;
        this.back = back;
        this.thres = thres;
    }
    return Page;
}());
exports.Page = Page;
var GroupPage = /** @class */ (function () {
    function GroupPage(name, pages, next, back, thres, matchOP) {
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        if (thres === void 0) { thres = undefined; }
        if (matchOP === void 0) { matchOP = undefined; }
        this.name = name;
        this.pages = pages;
        this.next = next;
        this.back = back;
        this.thres = thres;
        this.matchOP = matchOP || '||';
    }
    return GroupPage;
}());
exports.GroupPage = GroupPage;
exports.DefaultConfigValue = {
    XYRGBThres: 0.9,
    PageThres: 0.9,
    GroupPageThres: 0.9,
    GroupPageMatchOP: '||',
    RouteConfigShouldMatchTimes: 1,
    RouteConfigShouldMatchDuring: 0,
    RouteConfigBeforeActionDelay: 250,
    RouteConfigAfterActionDelay: 250,
    RouteConfigPriority: 1,
    RouteConfigDebug: false,
    TaskConfigMaxTaskRunTimes: 1,
    TaskConfigMaxTaskDuring: 0,
    TaskConfigMinRoundInterval: 0,
    TaskConfigAutoStop: false,
    TaskConfigFindRouteDelay: 2000,
};
exports.DefaultRerouterConfig = {
    packageName: '',
    taskDelay: 2000,
    startAppDelay: 6000,
    autoLaunchApp: true,
    testingScreenshotPath: './screenshot',
    deviceId: '',
    strictMode: false,
    debugSlackUrl: '',
    saveImageRoot: '/sdcard/Pictures/Screenshots/robotmon',
};
exports.DefaultScreenConfig = {
    devWidth: 640,
    devHeight: 360,
    deviceWidth: 0,
    deviceHeight: 0,
    screenWidth: 0,
    screenHeight: 0,
    screenOffsetX: 0,
    screenOffsetY: 0,
    actionDuring: 180,
    rotation: 'horizontal',
    logScreenshotLastTime: 0,
    logScreenshotMinIntervalInSec: 10,
    logScreenshotMaxFiles: 100,
    logScreenshotFolder: '',
};
//# sourceMappingURL=struct.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/utils.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Utils = exports.log = void 0;
function log() {
    var msgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        msgs[_i] = arguments[_i];
    }
    var date = new Date().toLocaleString('en-US', {
        timeZone: 'Asia/Taipei',
    });
    var message = "[".concat(date, "] ");
    for (var _a = 0, msgs_1 = msgs; _a < msgs_1.length; _a++) {
        var msg = msgs_1[_a];
        if (typeof msg === 'object') {
            message += "".concat(JSON.stringify(msg), " ");
        }
        else {
            message += "".concat(msg, " ");
        }
    }
    console.log(message.substr(0, message.length - 1));
}
exports.log = log;
var Utils = /** @class */ (function () {
    function Utils() {
    }
    Utils.identityColor = function (e1, e2) {
        var mean = (e1.r + e2.r) / 2;
        var r = e1.r - e2.r;
        var g = e1.g - e2.g;
        var b = e1.b - e2.b;
        return 1 - Math.sqrt((((512 + mean) * r * r) >> 8) + 4 * g * g + (((767 - mean) * b * b) >> 8)) / 768;
    };
    Utils.formatXYRGB = function (xyrgb) {
        var keys = Object.keys(xyrgb);
        var formatObj = {};
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var k = keys_1[_i];
            var str = "".concat(xyrgb[k]);
            while (str.length < 3) {
                str = ' ' + str;
            }
            formatObj[k] = str;
        }
        var x = formatObj.x, y = formatObj.y, r = formatObj.r, g = formatObj.g, b = formatObj.b;
        return "{ x: ".concat(x, ", y: ").concat(y, ", r: ").concat(r, ", g: ").concat(g, ", b: ").concat(b, " }");
    };
    Utils.sortStringNumberMap = function (map) {
        var results = [];
        for (var key in map) {
            results.push({ key: key, count: map[key] });
        }
        results.sort(function (a, b) { return b.count - a.count; });
        return results;
    };
    Utils.sleep = function (during) {
        while (during > 200) {
            during -= 200;
            sleep(200);
        }
        if (during > 0) {
            sleep(during);
        }
    };
    Utils.getTaiwanTime = function () {
        return Date.now() + 8 * 60 * 60 * 1000;
    };
    Utils.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        for (var i = 0; i < args.length; i++) {
            var arg = args[i];
            if (typeof arg === 'object') {
                args[i] = JSON.stringify(arg);
            }
        }
        var date = new Date(Utils.getTaiwanTime());
        var dateString = "[".concat(date.getMonth() + 1, "-").concat(date.getDate(), "T").concat(date.getHours(), ":").concat(date.getMinutes(), ":").concat(date.getSeconds(), "]");
        console.log.apply(console, __spreadArray([dateString], args, false));
    };
    Utils.notifyEvent = function (event, content) {
        if (sendEvent != undefined) {
            Utils.log('sendEvent', event, content);
            sendEvent('' + event, '' + content);
        }
    };
    Utils.startApp = function (packageName) {
        execute("BOOTCLASSPATH=/system/framework/core.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/framework2.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/webviewchromium.jar am start -n ".concat(packageName));
        execute("ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am start -n ".concat(packageName));
        execute("ANDROID_DATA=/data monkey --pct-syskeys 0 -p ".concat(packageName, " -c android.intent.category.LAUNCHER 1"));
        execute('ANDROID_BOOTLOGO=1 ' +
            'ANDROID_ROOT=/system ' +
            'ANDROID_ASSETS=/system/app ' +
            'ANDROID_DATA=/data ' +
            'ANDROID_STORAGE=/storage ' +
            'ANDROID_ART_ROOT=/apex/com.android.art ' +
            'ANDROID_I18N_ROOT=/apex/com.android.i18n ' +
            'ANDROID_TZDATA_ROOT=/apex/com.android.tzdata ' +
            'EXTERNAL_STORAGE=/sdcard ' +
            'ASEC_MOUNTPOINT=/mnt/asec ' +
            'BOOTCLASSPATH=/apex/com.android.art/javalib/core-oj.jar:/apex/com.android.art/javalib/core-libart.jar:/apex/com.android.art/javalib/core-icu4j.jar:/apex/com.android.art/javalib/okhttp.jar:/apex/com.android.art/javalib/bouncycastle.jar:/apex/com.android.art/javalib/apache-xml.jar:/system/framework/framework.jar:/system/framework/ext.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/framework-atb-backward-compatibility.jar:/apex/com.android.conscrypt/javalib/conscrypt.jar:/apex/com.android.media/javalib/updatable-media.jar:/apex/com.android.mediaprovider/javalib/framework-mediaprovider.jar:/apex/com.android.os.statsd/javalib/framework-statsd.jar:/apex/com.android.permission/javalib/framework-permission.jar:/apex/com.android.sdkext/javalib/framework-sdkextensions.jar:/apex/com.android.wifi/javalib/framework-wifi.jar:/apex/com.android.tethering/javalib/framework-tethering.jar ' +
            'DEX2OATBOOTCLASSPATH=/apex/com.android.art/javalib/core-oj.jar:/apex/com.android.art/javalib/core-libart.jar:/apex/com.android.art/javalib/core-icu4j.jar:/apex/com.android.art/javalib/okhttp.jar:/apex/com.android.art/javalib/bouncycastle.jar:/apex/com.android.art/javalib/apache-xml.jar:/system/framework/framework.jar:/system/framework/ext.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/framework-atb-backward-compatibility.jar ' +
            'SYSTEMSERVERCLASSPATH=/system/framework/com.android.location.provider.jar:/system/framework/services.jar:/system/framework/ethernet-service.jar:/apex/com.android.permission/javalib/service-permission.jar:/apex/com.android.ipsec/javalib/android.net.ipsec.ike.jar ' +
            "monkey --pct-syskeys 0 -p ".concat(packageName, " -c android.intent.category.LAUNCHER 1"));
    };
    Utils.stopApp = function (packageName) {
        execute("BOOTCLASSPATH=/system/framework/core.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/framework2.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/webviewchromium.jar am force-stop ".concat(packageName));
        execute("ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am force-stop ".concat(packageName));
    };
    Utils.getCurrentApp = function () {
        var result = execute('dumpsys window windows').split('mCurrentFocus');
        if (result.length < 2) {
            return ['', ''];
        }
        result = result[1].split(' ');
        if (result.length < 3) {
            return ['', ''];
        }
        result[2] = result[2].replace('}', '');
        result = result[2].split('/');
        var packageName = '';
        var activityName = '';
        if (result.length == 1) {
            packageName = result[0].trim();
        }
        else if (result.length > 1) {
            packageName = result[0].trim();
            activityName = result[1].trim();
        }
        return [packageName, activityName];
    };
    Utils.isAppOnTop = function (packageName) {
        var topInfo = execute('dumpsys activity activities | grep mResumedActivity');
        return topInfo.indexOf(packageName) !== -1;
    };
    Utils.sendSlackMessage = function (url, title, message) {
        var body = {
            blocks: [
                {
                    type: 'section',
                    text: {
                        type: 'mrkdwn',
                        text: '*' + title + '*',
                    },
                },
                {
                    type: 'divider',
                },
                {
                    type: 'section',
                    text: {
                        type: 'mrkdwn',
                        text: message,
                    },
                },
            ],
        };
        httpClient('POST', url, JSON.stringify(body), {
            'Content-Type': 'application/json',
        });
    };
    Utils.waitForAction = function (action, timeout, matchTimes, interval) {
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        var now = Date.now();
        var matchs = 0;
        while (Date.now() - now < timeout) {
            if (action()) {
                matchs++;
            }
            if (matchs >= matchTimes) {
                break;
            }
            Utils.sleep(interval);
        }
        if (matchs >= matchTimes) {
            return true;
        }
        return false;
    };
    Utils.padZero = function (num) {
        return num < 10 ? "0".concat(num) : "".concat(num);
    };
    Utils.saveScreenshotToDisk = function (folderPath, saveReason) {
        var _this = this;
        saveReason = saveReason === undefined ? 'crash-img' : saveReason;
        var date = new Date(Utils.getTaiwanTime());
        var _a = [date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()].map(function (item) { return _this.padZero(item); }), YYYY = _a[0], MM = _a[1], dd = _a[2], hh = _a[3], mm = _a[4], ss = _a[5];
        var filename = "".concat(YYYY, "-").concat(MM, "-").concat(dd, "T").concat(hh, ".").concat(mm, ".").concat(ss, "_").concat(saveReason, ".png");
        var img = getScreenshot();
        saveImage(img, "".concat(folderPath, "/").concat(filename));
        Utils.log("Write to file: ".concat(folderPath, "/").concat(filename));
        releaseImage(img);
    };
    Utils.removeOldestFilesIfExceedsLimit = function (folderPath, maxFiles) {
        if (maxFiles === void 0) { maxFiles = 100; }
        var fileList = execute("ls -l ".concat(folderPath)).split('\n');
        // Some OS return first line total 8 (Mac, redroid), some not (Memu)
        if (fileList[0] && fileList[0].indexOf('total') === 0) {
            fileList.shift();
        }
        var filesWithDates = fileList.map(function (line) {
            var parts = line.trim().split(' ');
            var filename = parts[parts.length - 1]; // 2023-09-02T15.08.17_log.png
            var dateObj = new Date(parts[parts.length - 3].split('_')[0]);
            return {
                date: dateObj,
                filename: filename,
            };
        });
        filesWithDates.sort(function (a, b) { return a.date.getTime() - b.date.getTime(); });
        // If there are more than ${maxFiles} files, remove the oldest
        while (filesWithDates.length > maxFiles) {
            var oldestFile = filesWithDates.shift();
            if (oldestFile) {
                execute("rm ".concat(folderPath, "/").concat(oldestFile.filename));
                Utils.log("rm: ".concat(folderPath, "/").concat(oldestFile.filename));
            }
        }
    };
    Utils.joinPaths = function (path1, path2) {
        if (path2 === '') {
            return path1;
        }
        if (path1.charAt(path1.length - 1) === '/') {
            return path1 + path2;
        }
        else {
            return path1 + '/' + path2;
        }
    };
    Utils.savePointsMarkedImage = function (_a) {
        var image = _a.image, name = _a.name, points = _a.points, folderPath = _a.folderPath, rgba = _a.rgba;
        var filepath = "".concat(folderPath, "/").concat(name, ".png");
        // if file exists, skip
        var res = execute("test -e ".concat(filepath, " && echo 1"));
        if (res === '1') {
            return;
        }
        var clonedImg = clone(image);
        var _b = rgba || { r: 255, g: 0, b: 0, a: 255 }, r = _b.r, g = _b.g, b = _b.b, a = _b.a;
        var radius = 3;
        for (var i in points) {
            var _c = points[i], x = _c.x, y = _c.y;
            drawCircle(clonedImg, x, y, radius, r, g, b, a);
        }
        saveImage(clonedImg, filepath);
        releaseImage(clonedImg);
        console.log("[savePointsMarkedImage]: ".concat(name));
    };
    return Utils;
}());
exports.Utils = Utils;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/core-js/es/array/find-index.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/es/array/find-index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ../../modules/es.array.find-index */ "./node_modules/core-js/modules/es.array.find-index.js");
var entryUnbind = __webpack_require__(/*! ../../internals/entry-unbind */ "./node_modules/core-js/internals/entry-unbind.js");

module.exports = entryUnbind('Array', 'findIndex');


/***/ }),

/***/ "./node_modules/core-js/es/object/assign.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/es/object/assign.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ../../modules/es.object.assign */ "./node_modules/core-js/modules/es.object.assign.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Object.assign;


/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw new $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] === undefined) {
  defineProperty(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $String = String;
var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw new $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE === 1;
  var IS_FILTER = TYPE === 2;
  var IS_SOME = TYPE === 3;
  var IS_EVERY = TYPE === 4;
  var IS_FIND_INDEX = TYPE === 6;
  var IS_FILTER_REJECT = TYPE === 7;
  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var $Array = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? $Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ (function(module) {

"use strict";

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

module.exports = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-global-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/document-all.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";

var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

module.exports = {
  all: documentAll,
  IS_HTMLDDA: IS_HTMLDDA
};


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ (function(module) {

"use strict";

module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/entry-unbind.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/entry-unbind.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (CONSTRUCTOR, METHOD) {
  return uncurryThis(global[CONSTRUCTOR].prototype[METHOD]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ (function(module) {

"use strict";

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-clause.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis(fn);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || this || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ (function(module) {

"use strict";

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var $Object = Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) === 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-constructor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.test(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-null-or-undefined.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
/***/ (function(module) {

"use strict";

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
module.exports = function (it) {
  return it === null || it === undefined;
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

module.exports = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var $Object = Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/make-built-in.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;
var stringSlice = uncurryThis(''.slice);
var replace = uncurryThis(''.replace);
var join = uncurryThis([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ "./node_modules/core-js/internals/math-trunc.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
/***/ (function(module) {

"use strict";

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
module.exports = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-assign.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-assign.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw new $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (isNullOrUndefined(it)) throw new $TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || defineGlobalProperty(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.33.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.33.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-constructor-detection.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var $String = global.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/core-js/internals/math-trunc.js");

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw new $TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";

var $String = String;

module.exports = function (argument) {
  try {
    return $String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/weak-map-basic-detection.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var Symbol = global.Symbol;
var WellKnownSymbolsStore = shared('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
      ? Symbol[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.find-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.find-index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $findIndex = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").findIndex);
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
// eslint-disable-next-line es/no-array-prototype-findindex -- testing
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findindex
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.assign.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stop = exports.start = exports.cookieKingdom = exports.CookieKingdom = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var types_1 = __webpack_require__(/*! ./src/types */ "./src/types.ts");
var utils_1 = __webpack_require__(/*! ./src/utils */ "./src/utils.ts");
var helper_1 = __webpack_require__(/*! ./src/helper */ "./src/helper.ts");
var scriptConfig_1 = __webpack_require__(/*! ./src/scriptConfig */ "./src/scriptConfig.ts");
var PAGES = __importStar(__webpack_require__(/*! ./src/pages */ "./src/pages.ts"));
var ICONS = __importStar(__webpack_require__(/*! ./src/icons */ "./src/icons.ts"));
var CONSTANTS = __importStar(__webpack_require__(/*! ./src/constants */ "./src/constants.ts"));
var tasks_1 = __webpack_require__(/*! ./src/tasks */ "./src/tasks.ts");
var storage_1 = __webpack_require__(/*! ./src/storage */ "./src/storage.ts");
var bounties_1 = __webpack_require__(/*! ./src/tasks/bounties */ "./src/tasks/bounties.ts");
var hotAirBallon_1 = __webpack_require__(/*! ./src/tasks/hotAirBallon */ "./src/tasks/hotAirBallon.ts");
var pvpArena_1 = __webpack_require__(/*! ./src/tasks/pvpArena */ "./src/tasks/pvpArena.ts");
var tropicalIsland_1 = __webpack_require__(/*! ./src/tasks/tropicalIsland */ "./src/tasks/tropicalIsland.ts");
var gnomeLab_1 = __webpack_require__(/*! ./src/tasks/gnomeLab */ "./src/tasks/gnomeLab.ts");
var guild_1 = __webpack_require__(/*! ./src/tasks/guild */ "./src/tasks/guild.ts");
var login_1 = __webpack_require__(/*! ./src/tasks/login */ "./src/tasks/login.ts");
var tradeHabor_1 = __webpack_require__(/*! ./src/tasks/tradeHabor */ "./src/tasks/tradeHabor.ts");
var wishingTree_1 = __webpack_require__(/*! ./src/tasks/wishingTree */ "./src/tasks/wishingTree.ts");
var fountain_1 = __webpack_require__(/*! ./src/tasks/fountain */ "./src/tasks/fountain.ts");
var VERSION_CODE = 0.1;
var CookieKingdom = /** @class */ (function () {
    function CookieKingdom(config) {
        this.packageName = 'com.devsisters.ck';
        this.config = scriptConfig_1.defaultConfig;
        this.rerouter = new Rerouter_1.Rerouter();
        this.wishes = scriptConfig_1.defaultWishes;
        this.taskStatus = {};
        this.lastBattleChecked = 0;
        console.log('############ new CRK ############');
        console.log('new CRK with input: ', JSON.stringify(config));
        try {
            if (typeof xDecodeHex === 'undefined') {
                // case Robotmon
                config.isMaintainanceMode = false;
                (0, utils_1.logs)('start', 'case Robotmon');
            }
            else {
                // case XRobotmon
                var decodedUrl = xDecodeHex('f9a4b6f742d4597037c1865f886c3f0d594e94d7d8bc9e9d4d0c343f32b5b36da5a529bb0c4b892468e8bc159598172e3faefefd3eab45a151db5cea2900a5bdcb77125fd61d1946924a8280ce2cd9d54eac9650819d9744660d8704505fe1da');
                if (typeof decodedUrl === 'string') {
                    Rerouter_1.rerouter.rerouterConfig.debugSlackUrl = decodedUrl;
                }
                Rerouter_1.rerouter.rerouterConfig.saveImageRoot = '/data/media/0/Downloads/';
                if (config.licenseId === '') {
                    (0, utils_1.logs)('start', 'config.licenseId is empty thus goto maintainance mode');
                    config.isMaintainanceMode = true;
                }
                else {
                    config.account = xDecodeHex(config.account);
                    config.password = xDecodeHex(config.password);
                    (0, utils_1.logs)('start', "xDecodeHex successfully: ".concat(config.account));
                }
            }
        }
        catch (e) {
            (0, utils_1.logs)('start', "typeof xDecodeHex throw an unexpected error: ".concat(e));
        }
        this.config = config;
        Rerouter_1.rerouter.defaultConfig.TaskConfigAutoStop = true;
        Rerouter_1.rerouter.defaultConfig.RouteConfigDebug = true;
        Rerouter_1.rerouter.screenConfig.rotation = 'horizontal';
        Rerouter_1.rerouter.screenConfig.devHeight = 360;
        Rerouter_1.rerouter.screenConfig.devWidth = 640;
        Rerouter_1.rerouter.debug = false;
        Rerouter_1.rerouter.rerouterConfig.deviceId = this.config.deviceId;
        Rerouter_1.rerouter.rerouterConfig.strictMode = true;
        if (this.config.isMaintainanceMode) {
            Rerouter_1.rerouter.screenConfig.logScreenshotMinIntervalInSec = 180;
            Rerouter_1.rerouter.screenConfig.logScreenshotMaxFiles = 20;
        }
        else {
            Rerouter_1.rerouter.screenConfig.logScreenshotMinIntervalInSec = 20;
            Rerouter_1.rerouter.screenConfig.logScreenshotMaxFiles = 200;
        }
        console.log("script version ".concat(VERSION_CODE));
    }
    CookieKingdom.prototype.start = function () {
        this.init();
        this.initTaskStatus();
        console.log('>', Rerouter_1.rerouter.getCurrentMatchNames());
        // console.log('>>', findUnmatchInPage(rfpageSuperMayhemReadyToBattle));
        // return;
        Rerouter_1.rerouter.start(this.packageName);
    };
    CookieKingdom.prototype.stop = function () {
        var allIcons = ICONS;
        for (var iconIdx in allIcons) {
            var icon = allIcons[iconIdx];
            if (!(icon instanceof types_1.Icon) || icon.image === undefined) {
                continue;
            }
            releaseImage(icon.image);
            console.log("release: ".concat(iconIdx));
        }
        for (var idx in ICONS.numberImagesProdutRequirements) {
            if (ICONS.numberImagesProdutRequirements[idx].image !== undefined) {
                ICONS.numberImagesProdutRequirements[idx].releaseImage();
            }
        }
        for (var idx in ICONS.numberImagesPvP) {
            if (ICONS.numberImagesPvP[idx].image !== undefined) {
                ICONS.numberImagesPvP[idx].releaseImage();
            }
        }
        for (var idx in ICONS.numberImagesSuperMayhem) {
            if (ICONS.numberImagesSuperMayhem[idx].image !== undefined) {
                ICONS.numberImagesSuperMayhem[idx].releaseImage();
            }
        }
        for (var idx in ICONS.numberImagesWishingTree) {
            if (ICONS.numberImagesWishingTree[idx].image !== undefined) {
                ICONS.numberImagesWishingTree[idx].releaseImage();
            }
        }
        Rerouter_1.rerouter.stop();
    };
    CookieKingdom.prototype.init = function () {
        this.addTasks();
        this.addRoutes();
        this.addStartAppAction();
        this.handleUnknown();
        // show current page
        // rerouter.getCurrentMatchNames();
        for (var idx in ICONS.numberImagesProdutRequirements) {
            if (ICONS.numberImagesProdutRequirements[idx].image === undefined) {
                ICONS.numberImagesProdutRequirements[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberImagesPvP) {
            if (ICONS.numberImagesPvP[idx].image === undefined) {
                ICONS.numberImagesPvP[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberImagesSuperMayhem) {
            if (ICONS.numberImagesSuperMayhem[idx].image === undefined) {
                ICONS.numberImagesSuperMayhem[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberImagesWishingTree) {
            if (ICONS.numberImagesWishingTree[idx].image === undefined) {
                ICONS.numberImagesWishingTree[idx].loadImage();
            }
        }
        for (var idx in ICONS.bNumbers) {
            if (ICONS.bNumbers[idx].image === undefined) {
                ICONS.bNumbers[idx].loadImage();
            }
        }
        for (var idx in ICONS.wNumbers) {
            if (ICONS.wNumbers[idx].image === undefined) {
                ICONS.wNumbers[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberAuroraStockInTradeBird) {
            if (ICONS.numberAuroraStockInTradeBird[idx].image === undefined) {
                ICONS.numberAuroraStockInTradeBird[idx].loadImage();
            }
        }
        // for (let idx in ICONS.iconsGnomeLabCookies) {
        //   if (ICONS.iconsGnomeLabCookies[idx].image === undefined) {
        //     ICONS.iconsGnomeLabCookies[idx].loadImage();
        //   }
        // }
    };
    CookieKingdom.prototype.initTaskStatus = function () {
        this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack] = {
            trials: 0,
        };
        // this.taskStatus[TASKS.towerOfSweetChaos] = {
        //   tryCount: 0,
        //   tryLimit: this.config.autoHandleTowerOfSweetChaos ? 4 : 0,
        // };
        this.taskStatus[tasks_1.TASKS.findAndTapCandy] = {
            searchHousePathIdx: 0,
            searchHouseIdx: 0,
            needGotoHead: true,
        };
        this.taskStatus[tasks_1.TASKS.production] = {
            lastProductionBuilding: '',
            productionBuildingChecked: 0,
            stocks: {},
        };
    };
    CookieKingdom.prototype.addTasks = function () {
        var _this = this;
        if (this.config.isMaintainanceMode) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.maintainanceMode,
                maxTaskDuring: 10 * CONSTANTS.minuteInMs,
                forceStop: false,
            });
            return;
        }
        // In dev:
        // return;
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.resolveGreenChecks,
            maxTaskDuring: 3 * CONSTANTS.minuteInMs,
            minRoundInterval: 30 * CONSTANTS.minuteInMs,
            forceStop: true,
        });
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.production,
            maxTaskDuring: 10 * CONSTANTS.minuteInMs,
            minRoundInterval: 360 * CONSTANTS.minuteInMs,
            forceStop: true,
        });
        if (this.config.autoCollectMailIntervalInMins > 0) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.collectMail,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
        }
        if (this.config.autoSendHotAirBallonIntervalInMins > 0) {
            (0, hotAirBallon_1.addHotAirBallonTask)();
        }
        if (this.config.autoCollectTrainIntervalInMins > 0) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.train,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: this.config.autoCollectTrainIntervalInMins * CONSTANTS.minuteInMs,
                forceStop: true,
            });
        }
        if (this.config.autoFulfillWishesIntervalInMins > 0) {
            (0, wishingTree_1.addWishingTreeTask)();
        }
        if (this.config.autoPvPPurchaseAncientCookie) {
            (0, pvpArena_1.addPvpPurchaseTask)();
        }
        if (this.config.autoPvPIntervalInMins > 0) {
            (0, pvpArena_1.addPvpArenaTask)();
        }
        // if (this.config.autoSuperMayhemIntervalInMins > 0) {
        //   addSuperMayhemTask();
        // }
        if (this.config.autoCollectTropicalIslandsIntervalInMins > 0) {
            (0, tropicalIsland_1.addTropicalIslandTasks)();
        }
        if (this.config.autoBountiesTarget !== 'disabled') {
            (0, bounties_1.addBountiesTask)();
        }
        if (this.config.autoLabResearch) {
            (0, gnomeLab_1.addGnomeLabTasks)();
        }
        if (this.config.autoHandleTradeHabor) {
            (0, tradeHabor_1.addSendHaborShipTask)();
        }
        if (this.config.autoBalanceAuroraStocks ||
            this.config.autoShopInSeasideMarket ||
            this.config.autoBuyCaramelStuff ||
            this.config.autoBuyRadiantShardsInHabor) {
            (0, tradeHabor_1.addSeasideMarketTask)();
        }
        if (this.config.autoBuySeaFairy || this.config.autoBuyEpicSoulEssence || this.config.autoBuyLegendSoulEssence || this.config.autoBuyGuildRelic) {
            (0, tradeHabor_1.addShellGalleryTask)();
        }
        // if (this.config.autoHandleTowerOfSweetChaos) {
        //   rerouter.addTask({
        //     name: TASKS.towerOfSweetChaos,
        //     maxTaskDuring: 7 * CONSTANTS.minuteInMs,
        //     minRoundInterval: 180 * CONSTANTS.minuteInMs,
        //     forceStop: true,
        //   });
        // }
        (0, guild_1.addGuildCheckinTask)();
        if (this.config.autoGuildBattleDragon) {
            (0, guild_1.addGuildBattleDragonTask)();
        }
        if (this.config.autoGuildAllianceBattle) {
            (0, guild_1.addGuildBattleAllianceTask)();
        }
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.findAndTapCandy,
            maxTaskDuring: 7 * CONSTANTS.minuteInMs,
            minRoundInterval: 60 * CONSTANTS.minuteInMs,
            forceStop: true,
        });
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.production,
            maxTaskDuring: 20 * CONSTANTS.minuteInMs,
            forceStop: true,
            beforeRoute: function () {
                (0, helper_1.assign)(_this.taskStatus[tasks_1.TASKS.production], {
                    productionBuildingChecked: 0,
                });
            },
        });
        if (this.config.autoCollectDailyReward) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.collectKingdomPass,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.sendFriendReward,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.getInShopFreeDailyPack,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.getGachaDailyFreePack,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
        }
        // Resolve green check before collect fountain to avoid going to the wrong one
        if (this.config.autoCollectFountainIntervalInMins > 0) {
            (0, fountain_1.addFountainTask)();
        }
    };
    CookieKingdom.prototype.addRoutes = function () {
        var _this = this;
        // Login pages
        (0, login_1.addLoginRoutes)();
        // Daily tasks
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageKingdomPassItemCollected.name),
            match: PAGES.rfpageKingdomPassItemCollected,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.collectKingdomPass) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, 'rfpageKingdomPassItemCollected, task finished');
                Rerouter_1.rerouter.goNext(PAGES.rfpageKingdomPassItemCollected);
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageMailsAllClaimed.name),
            match: PAGES.rfpageMailsAllClaimed,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.collectMail) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, 'rfpageMailsAllClaimed, task finished');
                Rerouter_1.rerouter.goNext(PAGES.rfpageKingdomPassItemCollected);
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInFriendsList.name),
            match: PAGES.rfpageInFriendsList,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.sendFriendReward) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                Rerouter_1.rerouter.goNext(PAGES.rfpageInFriendsList);
                Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                (0, utils_1.logs)(context.task.name, 'rfpageInFriendsList, task finished');
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInShop.name),
            match: PAGES.rfpageInShop,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.getInShopFreeDailyPack) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                var trial = _this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials'];
                var rfpageIsDailyFreePackageNotClaimed = new Rerouter_1.Page('rfpageIsDailyFreePackageNotClaimed', [
                    { x: 185, y: 189, r: 217, g: 61, b: 53 },
                    { x: 213, y: 181, r: 230, g: 100, b: 132 },
                    { x: 230, y: 170, r: 139, g: 211, b: 130 },
                    { x: 232, y: 143, r: 255, g: 248, b: 160 },
                    { x: 258, y: 152, r: 245, g: 255, b: 255 },
                    { x: 196, y: 149, r: 19, g: 128, b: 213 },
                    { x: 270, y: 87, r: 59, g: 50, b: 98 },
                    { x: 525, y: 20, r: 5, g: 137, b: 254 },
                    { x: 183, y: 83, r: 43, g: 42, b: 24 },
                ], { x: 206, y: 157 });
                var rfpageIsDailyFreePackageClaimed = new Rerouter_1.Page('rfpageIsDailyFreePackageClaimed', [
                    { x: 273, y: 210, r: 207, g: 22, b: 24 },
                    { x: 212, y: 235, r: 206, g: 206, b: 206 },
                    { x: 189, y: 185, r: 74, g: 47, b: 23 },
                    { x: 212, y: 182, r: 77, g: 33, b: 44 },
                    { x: 201, y: 136, r: 36, g: 79, b: 85 },
                    { x: 232, y: 144, r: 85, g: 83, b: 53 },
                    { x: 521, y: 20, r: 5, g: 133, b: 255 },
                ], { x: 616, y: 18 });
                // const rfpageNecessities = new Page('rfpageNecessities', [{ x: 114, y: 70, r: 255, g: 109, b: 107 }]);
                var rfpageNecessitiesPnt = { x: 114, y: 58 };
                var x = rfpageNecessitiesPnt.x;
                var y = rfpageNecessitiesPnt.y;
                for (var i = 0; i < 6; i++) {
                    y = rfpageNecessitiesPnt.y + i * 46;
                    Rerouter_1.rerouter.screen.tap({ x: x, y: y });
                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 2);
                    (0, utils_1.logs)(context.task.name, "rfpageInShop, scroll down to daily gift, trial: #".concat(trial, ", tapping (").concat(x, ", ").concat(y, ")"));
                    if (Rerouter_1.rerouter.isPageMatch(rfpageIsDailyFreePackageClaimed)) {
                        (0, utils_1.logs)(context.task.name, 'rfpageIsDailyFreePackageClaimed, task finished');
                        Rerouter_1.rerouter.goNext(rfpageIsDailyFreePackageClaimed);
                        (0, utils_1.sendEventRunning)();
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                    else if (Rerouter_1.rerouter.isPageMatch(rfpageIsDailyFreePackageNotClaimed)) {
                        (0, utils_1.logs)(context.task.name, 'rfpageIsDailyFreePackageNotClaimed, tap it');
                        Rerouter_1.rerouter.goNext(rfpageIsDailyFreePackageNotClaimed);
                        return;
                    }
                }
                if (trial < 7) {
                    (0, helper_1.scrollDownALot)({ x: 60, y: 300 });
                    if (trial > 3) {
                        (0, helper_1.swipeFromToPoint)({ x: 60, y: 71 }, { x: 60, y: 210 }, 5);
                    }
                    // Shop menu swipe up
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({
                        x: x,
                        y: y,
                    });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 2);
                    // items swipe to left most
                    (0, helper_1.scrollLeftALot)({ x: 137, y: 268 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    _this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials']++;
                }
                else {
                    _this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials'] = 0;
                    (0, utils_1.logs)(context.task.name, "Cannot find daily pack, max retry reached: ".concat(_this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials'], ", skipping this task"));
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(trial);
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInGacha.name),
            match: PAGES.rfpageInGacha,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.getGachaDailyFreePack) {
                    (0, utils_1.logs)(context.task.name, 'rfpageInGacha, but not TASKS.getInShopFreeDailyPack so send back');
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                var rfpageDailyGiftNotClaimed = new Rerouter_1.Page('rfpageDailyGiftNotClaimed', [
                    { x: 531, y: 311, r: 123, g: 207, b: 8 },
                    { x: 332, y: 231, r: 198, g: 191, b: 172 },
                    { x: 444, y: 234, r: 68, g: 94, b: 149 },
                    { x: 292, y: 260, r: 91, g: 109, b: 125 },
                    { x: 102, y: 321, r: 31, g: 202, b: 255 },
                    { x: 525, y: 21, r: 0, g: 138, b: 255 },
                ], { x: 531, y: 311 });
                var rfpageDailyGiftClaimed = new Rerouter_1.Page('rfpageDailyGiftClaimed', [
                    // OK
                    { x: 607, y: 307, r: 160, g: 160, b: 160 },
                    { x: 520, y: 302, r: 180, g: 180, b: 180 },
                    { x: 298, y: 161, r: 145, g: 143, b: 123 },
                    { x: 100, y: 327, r: 30, g: 230, b: 255 },
                ]);
                var rfpageDailyWatchAddGift = new Rerouter_1.Page('rfpageDailyWatchAddGift', [
                    { x: 525, y: 321, r: 0, g: 150, b: 214 },
                    { x: 104, y: 318, r: 17, g: 191, b: 255 },
                    { x: 326, y: 235, r: 206, g: 208, b: 192 },
                    { x: 338, y: 259, r: 33, g: 39, b: 52 },
                    { x: 464, y: 223, r: 123, g: 211, b: 247 },
                ]);
                var dailyGiftYs = [280, 225, 170];
                (0, utils_1.logs)(context.task.name, 'rfpageInGacha, collect gacha free daily gift');
                (0, helper_1.swipeFromToPoint)({ x: 30, y: 270 }, { x: 30, y: 50 }, 5);
                for (var i in dailyGiftYs) {
                    Rerouter_1.rerouter.screen.tap({ x: 30, y: dailyGiftYs[i] });
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageDailyGiftClaimed, 2000)) {
                        (0, utils_1.logs)(context.task.name, 'Daily gacha gift already claimed');
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                    if (Rerouter_1.rerouter.isPageMatch(rfpageDailyWatchAddGift)) {
                        (0, utils_1.logs)(context.task.name, 'Finish round for now as seems like will stuck in ads');
                        finishRound(true);
                        return;
                    }
                    else if (Rerouter_1.rerouter.isPageMatch(rfpageDailyGiftNotClaimed)) {
                        Rerouter_1.rerouter.goNext(rfpageDailyGiftNotClaimed);
                        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                    }
                }
                // finishRound(true);
            },
        });
        // Hot air ballon pages
        (0, hotAirBallon_1.addHotAirBallonRoutes)();
        // Train pages
        // TODO: NG！ 用鑽買東西的頁面會被判斷成 rfpageNewDataPackDownloadFailed ，會自動按下花鑽石買東西
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInTrainStation.name),
            match: PAGES.rfpageInTrainStation,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.train && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                    (0, utils_1.logs)(context.task.name, "rfpageInTrainStation, leave because current task is not train, but: ".concat(context.task.name));
                    Rerouter_1.rerouter.screen.tap({ x: 618, y: 28 }); // tap X
                    return;
                }
                (0, utils_1.logs)(context.task.name, 'rfpageInTrainStation, handle train');
                var rfpageFirstTrainOut = new Rerouter_1.Page('rfpageFirstTrainOut', [
                    { x: 430, y: 95, r: 121, g: 227, b: 0 },
                    { x: 454, y: 94, r: 231, g: 142, b: 83 },
                ]);
                var rfpageSecondTrainOut = new Rerouter_1.Page('rfpageSecondTrainOut', [
                    { x: 430, y: 198, r: 129, g: 227, b: 0 },
                    { x: 453, y: 199, r: 229, g: 148, b: 85 },
                ]);
                var rfpageThirdTrainOut = new Rerouter_1.Page('rfpageThirdTrainOut', [
                    { x: 430, y: 302, r: 121, g: 227, b: 0 },
                    { x: 455, y: 301, r: 231, g: 138, b: 82 },
                ]);
                if (!Rerouter_1.rerouter.isPageMatchImage(rfpageFirstTrainOut, image)) {
                    Rerouter_1.rerouter.screen.tap({ x: 255, y: 110 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 210, y: 110 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 170, y: 110 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    (0, helper_1.checkIfTrainRequirementMet)();
                }
                if (!Rerouter_1.rerouter.isPageMatchImage(rfpageSecondTrainOut, image)) {
                    Rerouter_1.rerouter.screen.tap({ x: 255, y: 208 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 210, y: 208 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 170, y: 208 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    (0, helper_1.checkIfTrainRequirementMet)();
                }
                if (!Rerouter_1.rerouter.isPageMatchImage(rfpageThirdTrainOut, image)) {
                    Rerouter_1.rerouter.screen.tap({ x: 255, y: 307 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 210, y: 307 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 170, y: 307 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    (0, helper_1.checkIfTrainRequirementMet)();
                }
                if (_this.config.autoCollectTrainIntervalInMins == 0) {
                    (0, utils_1.logs)(context.task.name, 'handleTrainStation skipped as autoCollectTrainIntervalInMins is set to 0');
                    finishRound(true);
                    return;
                }
                Rerouter_1.Utils.sleep(8000);
                var foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSendAll);
                for (var i in foundResults) {
                    var sendTrainBtn = foundResults[i];
                    sendTrainBtn.x += 30;
                    sendTrainBtn.y += 15;
                    Rerouter_1.rerouter.screen.tap(foundResults[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap(foundResults[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                }
                var foundResultsSmall = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSendAllSmall);
                for (var i in foundResultsSmall) {
                    var sendTrainBtn = foundResultsSmall[i];
                    sendTrainBtn.x += 30;
                    sendTrainBtn.y += 15;
                    Rerouter_1.rerouter.screen.tap(foundResultsSmall[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap(foundResultsSmall[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                }
                Rerouter_1.rerouter.goNext(PAGES.rfpageInTrainStation);
                Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                (0, utils_1.logs)(context.task.name, "Tried to sent ".concat(foundResults.length + foundResultsSmall.length, " trains"));
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        // Wishing trees
        (0, wishingTree_1.addWishingTreeRoutes)();
        // Fountain
        (0, fountain_1.addFountainRoutes)();
        // PVP
        (0, pvpArena_1.addPvpArenaRoutes)();
        // Super Mayhem
        (0, pvpArena_1.addSuperMayhemRoutes)();
        // Tropical Island
        (0, tropicalIsland_1.addTropicalIslandRoutes)();
        // Bounties
        (0, bounties_1.addBountiesRoutes)();
        // Gnome lab
        (0, gnomeLab_1.addGnomeLabRoutes)();
        // Trade habor
        (0, tradeHabor_1.addTradeHaborRoutes)();
        // Guild
        (0, guild_1.addGuildRoutes)();
        // Tower of Sweet Choas
        // rerouter.addRoute({
        //   path: `/${PAGES.rfpageInTowerOfSweetChaos.name}`,
        //   match: PAGES.rfpageInTowerOfSweetChaos,
        //   action: (context, image, matched, finishRound) => {
        //     if (context.task.name !== TASKS.towerOfSweetChaos) {
        //       logs(context.task.name, `${context.path}, but current task is ${context.task.name}, skipping`);
        //       sendKeyBack();
        //       return;
        //     }
        //     logs(context.task.name, `${context.path}, about to start handleTowerOfSweetChaos, send running`);
        //     sendEventRunning();
        //     const rfpageHasTrayJump = new Page(
        //       'rfpageHasTrayJump',
        //       [
        //         { x: 338, y: 15, r: 82, g: 0, b: 0 },
        //         { x: 409, y: 18, r: 0, g: 131, b: 255 },
        //         { x: 43, y: 323, r: 214, g: 89, b: 247 },
        //         { x: 32, y: 319, r: 95, g: 20, b: 27 },
        //         { x: 30, y: 330, r: 33, g: 8, b: 8 },
        //       ],
        //       { x: 30, y: 326 }
        //     );
        //     if (rerouter.isPageMatchImage(rfpageHasTrayJump, image)) {
        //       logs(context.task.name, `Found rfpageHasTrayJump so tap it`);
        //       rerouter.goNext(rfpageHasTrayJump);
        //       return;
        //     }
        //     var downArrow = findSpecificIconInScreen(ICONS.iconTowerOfSweetChoasDownArrow);
        //     if (Object.keys(downArrow).length > 0) {
        //       rerouter.screen.tap(downArrow[0]);
        //       Utils.sleep(5000);
        //     }
        //     rerouter.screen.tap({ x: 180, y: 30 }); // Tap up arrow
        //     Utils.sleep(config.sleepAnimate * 2);
        //     rerouter.screen.tap({ x: 180, y: 130 }); // Go to the top tray
        //     Utils.sleep(config.sleepAnimate);
        //     // 在甜點塔有可能會是戰鬥或要開寶箱
        //     const rfpageToSCTreasureChest = new Page(
        //       'rfpageToSCTreasureChest',
        //       [
        //         { x: 443, y: 328, r: 198, g: 44, b: 57 },
        //         { x: 388, y: 63, r: 84, g: 41, b: 114 },
        //         { x: 422, y: 125, r: 118, g: 78, b: 85 },
        //         { x: 407, y: 137, r: 255, g: 105, b: 156 },
        //         { x: 437, y: 149, r: 33, g: 0, b: 0 },
        //       ],
        //       { x: 443, y: 328 }
        //     );
        //     if (rerouter.isPageMatchImage(rfpageToSCTreasureChest, image)) {
        //       rerouter.goNext(rfpageToSCTreasureChest);
        //       Utils.sleep(2000);
        //       if (!tapThroughAnimate(PAGES.rfpageInTowerOfSweetChaos, PAGES.rfpageInTowerOfSweetChaos.next as XY, 7000)) {
        //         logs(context.task.name, `${context.path}, Cannot return from collect treasure chest, finish round`);
        //         sendKeyBack();
        //         finishRound(true);
        //         return;
        //       }
        //     }
        //     let toscState = this.taskStatus[TASKS.towerOfSweetChaos];
        //     if (toscState.tryCount > toscState.tryLimit) {
        //       logs(context.task.name, `${context.path}, maximum battle count reached ${toscState.tryLimit}, finish round`);
        //       sendKeyBack();
        //       sendEventRunning();
        //       sendCounter(context.task.name, context.path, {});
        //       finishRound(true);
        //       return;
        //     } else {
        //       rerouter.screen.tap({ x: 571, y: 327 });
        //       toscState.tryCount++;
        //     }
        //   },
        // });
        // rerouter.addRoute({
        //   path: `/${PAGES.rfpageReadyToBattleToSC.name}`,
        //   match: PAGES.rfpageReadyToBattleToSC,
        //   action: (context, image, matched, finishRound) => {
        //     if (context.task.name !== TASKS.towerOfSweetChaos) {
        //       logs(context.task.name, `${context.path}, but current task is ${context.task.name}, skipping`);
        //       sendKeyBack();
        //       return;
        //     }
        //     logs(context.task.name, `${context.path}, tap battle`);
        //     rerouter.goNext(PAGES.rfpageReadyToBattleToSC);
        //   },
        // });
        // rerouter.addRoute({
        //   path: `/${PAGES.rfpageToSCTrayJumpNeedMoreKey.name}`,
        //   match: PAGES.rfpageToSCTrayJumpNeedMoreKey,
        //   action: (context, image, matched, finishRound) => {
        //     if (context.task.name !== TASKS.towerOfSweetChaos) {
        //       logs(context.task.name, `${context.path}, but current task is ${context.task.name}, skipping`);
        //       sendKeyBack();
        //       return;
        //     }
        //     logs(context.task.name, `${context.path}, not enough key, skip and finish task`);
        //     sendKeyBack();
        //     Utils.sleep(1000);
        //     sendKeyBack();
        //     Utils.sleep(1000);
        //     finishRound(true);
        //   },
        // });
        // Battle handling
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageBattlePaused.name),
            match: PAGES.rfpageBattlePaused,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in rfpageBattlePaused, handle it");
                switch (context.task.name) {
                    case tasks_1.TASKS.pvp:
                    case tasks_1.TASKS.superMayhem:
                    case tasks_1.TASKS.tropicalIslandClearBubble:
                    case tasks_1.TASKS.bounties:
                    case tasks_1.TASKS.towerOfSweetChaos:
                    case tasks_1.TASKS.guildBattleDragon:
                    case tasks_1.TASKS.guildBattleAlliance:
                        Rerouter_1.rerouter.screen.tap({ x: 315, y: 159 });
                        _this.lastBattleChecked = Date.now();
                        Rerouter_1.Utils.sleep(5000);
                        break;
                    default:
                        (0, utils_1.logs)(context.task.name, "Not sure why in battle, tap continue again in 5 secs");
                        Rerouter_1.rerouter.screen.tap({ x: 315, y: 159 });
                        _this.lastBattleChecked = Date.now();
                        Rerouter_1.Utils.sleep(5000);
                    // TODO: will fail when resume battle
                    // console.log('I am rfpageBattlePaused, panic and donno what to do');
                    // ii++;
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageBattleFinished.name),
            match: PAGES.rfpageBattleFinished,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageBattleFinished, tap it and reset botStatus.battleStarted to 0');
                storage_1.globalStorage.botStatus.battleStarted = 0;
                Rerouter_1.rerouter.goNext(PAGES.rfpageBattleFinished);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageAddMoreCookies.name),
            match: PAGES.rfpageAddMoreCookies,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in rfpageAddMoreCookies, cannot start battle so finish current task");
                Rerouter_1.rerouter.goNext(PAGES.rfpageAddMoreCookies);
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            },
        });
        // Production
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInCookieActivityDashboard.name),
            match: PAGES.rfpageInCookieActivityDashboard,
            action: function (context, image, matched, finishRound) {
                var rfpageProductionDashboardDisabled = new Rerouter_1.Page('rfpageProductionDashboardDisabled', [
                    { x: 489, y: 333, r: 140, g: 136, b: 132 },
                    { x: 484, y: 333, r: 47, g: 51, b: 58 },
                    { x: 469, y: 331, r: 37, g: 50, b: 73 },
                    { x: 344, y: 340, r: 74, g: 90, b: 111 },
                    { x: 308, y: 338, r: 58, g: 72, b: 110 },
                ]);
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageProductionDashboardDisabled, image)) {
                    (0, utils_1.logs)(context.task.name, "in rfpageInCookieActivityDashboard, cannot move to production dashboard, send key back, running and skip production");
                    (0, utils_1.sendKeyBack)();
                    (0, utils_1.sendEventRunning)();
                    finishRound(true);
                    return;
                }
                (0, utils_1.logs)(context.task.name, "in rfpageInCookieActivityDashboard, go to production dashboard");
                Rerouter_1.rerouter.goNext(PAGES.rfpageInCookieActivityDashboard);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInProduction.name),
            match: PAGES.rfpageInProduction,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.production) {
                    (0, utils_1.logs)(context.task.name, "rfpageInProduction, leave because current task is not production, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                // 1. count empty slots
                (0, helper_1.collectFinishedGoods)();
                var emptySlots = (0, helper_1.countProductionSlotAvailable)();
                if (emptySlots === 0) {
                    (0, utils_1.logs)(context.task.name, 'No available production slot, skip this production');
                    (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                    return true;
                }
                (0, utils_1.logs)(context.task.name, "emptySlots: ".concat(emptySlots));
                // 2. handle material/good production
                var materialCount = (0, helper_1.ocrNumberInRect)({ x: 355, y: 10, w: 35, h: 18 }, ICONS.wNumbers);
                if (materialCount == -1) {
                    // 2.1 if it is good production (not material ones), build it
                    var newSlots = (0, helper_1.makeGoodsToTarget)(_this.config.goodsTarget, _this.config.productSafetyStock, _this.config.axeStockTo400);
                    (0, utils_1.logs)(context.task.name, "This is not a material production, makeGoodsToTarget return ".concat(newSlots));
                }
                else {
                    // 2.2 it is material production
                    var materialTypes = Rerouter_1.rerouter.getPagesMatchImage(PAGES.groupPageMaterialProdMenu, image);
                    if (materialTypes.length !== 1) {
                        (0, utils_1.logs)(context.task.name, "materialTypes.length is -1, cannot recognize this production, checkIfNeedCrash()");
                        (0, helper_1.checkIfNeedCrash)('materialTypes-unknown');
                        return;
                    }
                    var materialType = materialTypes[0];
                    if (_this.taskStatus[tasks_1.TASKS.production].lastProductionBuilding !== materialType.name) {
                        (0, utils_1.logs)(context.task.name, "material building changed, send running");
                        _this.taskStatus[tasks_1.TASKS.production].lastProductionBuilding = materialType.name;
                        (0, utils_1.sendEventRunning)();
                    }
                    if (materialCount >= _this.config.materialsTarget) {
                        (0, utils_1.logs)(context.task.name, "Skip as stock enough: ".concat(materialCount));
                    }
                    else {
                        (0, utils_1.logs)(context.task.name, "Material sock: ".concat(materialCount, ", target: ").concat(_this.config.materialsTarget));
                        _this.taskStatus[tasks_1.TASKS.production]['stocks'][materialType.name] = materialCount;
                        switch (materialType.name) {
                            case 'rfpageWoodFarm':
                            case 'rfpageBeanFarm':
                            case 'rfpageSugarFarm':
                                if (materialCount < Math.min(200, _this.config.materialsTarget)) {
                                    (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", set the productionBuildingChecked back to 0 as stock to few: ").concat(materialCount, " (< 200)"));
                                    _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked = 0;
                                }
                            case 'rfpagePowderFarm':
                            case 'rfpageBarryFarm':
                                if (Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[2])) {
                                    (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", order 2nd item"));
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[2]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[2]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                }
                                else {
                                    (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", order 1st item"));
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                }
                                break;
                            case 'rfpageMilkFarm':
                            case 'rfpageCottomFarm':
                                (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", order 1st item"));
                                Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                break;
                        }
                    }
                }
                if ((0, helper_1.countProductionSlotAvailable)() !== emptySlots) {
                    (0, utils_1.logs)(context.task.name, "slots count changed, send running");
                    (0, utils_1.sendEventRunning)();
                }
                _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                if (_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked > 100) {
                    (0, utils_1.logs)(context.task.name, "finish producing as productionBuildingChecked: ".concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                }
                (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInMagicLab.name),
            match: PAGES.rfpageInMagicLab,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.production) {
                    (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, leave because current task is not production, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                else if (_this.config.autoMagicLabTarget === 'disabled') {
                    (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, autoMagicLabTarget set to disable, skip this one");
                    (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                    _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                    (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, productionBuildingChecked: ".concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                    return;
                }
                if (_this.config.magicLabProductIndex === 0) {
                    _this.config.magicLabProductIndex = 1;
                }
                (0, utils_1.logs)(context.task.name, "Its magic lab, target: ".concat(_this.config.autoMagicLabTarget, ", build selected ").concat(_this.config.magicLabProductIndex, "th item"));
                if (_this.config.autoMagicLabTarget === 'resonant') {
                    Rerouter_1.rerouter.screen.tap({ x: 445, y: 60 });
                    sleep(2000);
                }
                else if (_this.config.autoMagicLabTarget === 'upgrade') {
                    Rerouter_1.rerouter.screen.tap({ x: 557, y: 60 });
                    sleep(2000);
                }
                (0, helper_1.swipeFromToPoint)({ x: 500, y: 140 }, { x: 500, y: 1000 }, 4); // pull to top
                var productIdx = _this.config.magicLabProductIndex;
                while (productIdx > 8) {
                    productIdx -= 8;
                    (0, utils_1.logs)(context.task.name, "Move down 2 rows, now productIdx: ".concat(productIdx));
                    (0, helper_1.swipeFromToPoint)({ x: 587, y: 172 }, { x: 590, y: 40 }, 12);
                    sleep(1500);
                }
                // workaround for items % 8 < 4 && rows are even numbers (23 candies, 9 upgrades in Feb 7, 2024)
                var rfpageLastCandySlotEmpty = new Rerouter_1.Page('rfpageLastCandySlotEmpty', [
                    { x: 568, y: 165, r: 40, g: 36, b: 48 },
                    { x: 569, y: 195, r: 40, g: 36, b: 48 },
                    { x: 600, y: 198, r: 40, g: 36, b: 48 },
                    { x: 597, y: 170, r: 40, g: 36, b: 48 },
                ]);
                if (Rerouter_1.rerouter.isPageMatch(rfpageLastCandySlotEmpty) &&
                    _this.config.autoMagicLabTarget === 'upgrade' &&
                    _this.config.magicLabProductIndex > 8 &&
                    productIdx < 4) {
                    productIdx += 4;
                    (0, utils_1.logs)('rfpageInMagicLab', "adding 4 more to: ".concat(productIdx));
                }
                if (PAGES.magicLabPointMapping[productIdx] === undefined) {
                    Rerouter_1.Utils.sendSlackMessage(Rerouter_1.rerouter.rerouterConfig.debugSlackUrl, "CRK-".concat(scriptConfig_1.config.deviceId, ": magic lab has unexpected productIdx ").concat(productIdx, ", skip task"), "rfpageInMagicLab will skip this page");
                    (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                    _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                    (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, skipped due to productIdx is ".concat(productIdx, ", productionBuildingChecked: ").concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                    return;
                }
                Rerouter_1.rerouter.screen.tap(PAGES.magicLabPointMapping[productIdx]);
                sleep(1000);
                (0, utils_1.logs)('rfpageInMagicLab', "productIdx is ".concat(productIdx, ", tapping: ").concat(JSON.stringify(PAGES.magicLabPointMapping[productIdx])));
                Rerouter_1.rerouter.screen.tap({ x: 583, y: 308 }); // produce all btn
                Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 3);
                if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageNotEnoughStockInProduction)) {
                    (0, utils_1.logs)('rfpageInMagicLab', "found PAGES.rfpageNotEnoughStockInProduction, tap it");
                    Rerouter_1.rerouter.screen.tap({ x: 428, y: 98 });
                    sleep(1000);
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Produce item: ".concat(_this.config.magicLabProductIndex));
                }
                (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, productionBuildingChecked: ".concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                return;
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageNotEnoughPurityCrystals.name),
            match: PAGES.rfpageNotEnoughPurityCrystals,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in rfpageNotEnoughPurityCrystals, tap back and goto next production building");
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                (0, helper_1.handleNextProductionBuilding)(scriptConfig_1.config.buildTowardsTheLeft);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageNeedUnlockItemInMagicLab.name),
            match: PAGES.rfpageNeedUnlockItemInMagicLab,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in rfpageNeedUnlockItemInMagicLab, tap back and goto next production building");
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                (0, helper_1.handleNextProductionBuilding)(scriptConfig_1.config.buildTowardsTheLeft);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInProductionDashboard.name),
            match: PAGES.rfpageInProductionDashboard,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.production) {
                    (0, utils_1.logs)(context.task.name, "rfpageInProductionDashboard, leave because current task is not production, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                if (!Rerouter_1.rerouter.isPageMatchImage(new Rerouter_1.Page('rfpageListIsAtTop', [
                    { x: 27, y: 47, r: 49, g: 158, b: 231 },
                    { x: 26, y: 114, r: 49, g: 158, b: 231 },
                ]), image)) {
                    (0, helper_1.swipeFromToPoint)({ x: 140, y: 80 }, { x: 149, y: 270 }, 5);
                    (0, utils_1.logs)(context.task.name, "rfpageInProductionDashboard, swipe to the top ");
                }
                Rerouter_1.rerouter.goNext(PAGES.rfpageInProductionDashboard);
                _this.config.buildTowardsTheLeft = !_this.config.buildTowardsTheLeft;
                _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked = 0;
                (0, utils_1.logs)(context.task.name, "reverse buildTowardsTheLeft, it is now ".concat(_this.config.buildTowardsTheLeft));
                sleep(_this.config.sleepAnimate * 2);
            },
        });
        // Upgrade candy house
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInCandyHouse.name),
            match: PAGES.rfpageInCandyHouse,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.findAndTapCandy) {
                    (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, leave because current task is not findAndTapCandy, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.sendEventRunning)();
                (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, send running");
                var rfpageCanUpgradeCandyMansion = new Rerouter_1.Page('rfpageCanUpgradeCandyMansion', [{ x: 303, y: 289, r: 123, g: 207, b: 8 }], { x: 303, y: 289 });
                var rfpageCanUpgradeCandyHouse = new Rerouter_1.Page('rfpageCanUpgradeCandyHouse', [{ x: 243, y: 287, r: 151, g: 218, b: 55 }], { x: 243, y: 287 });
                var groupPageCanUpgradeCandy = new Rerouter_1.GroupPage('groupPageCanUpgradeCandy', [rfpageCanUpgradeCandyHouse, rfpageCanUpgradeCandyMansion]);
                var rfpageCookieMansionUpgradeRequirement = new Rerouter_1.Page('rfpageCookieMansionUpgradeRequirement', [
                    { x: 351, y: 320, r: 123, g: 207, b: 8 },
                    { x: 282, y: 322, r: 148, g: 219, b: 57 },
                    { x: 199, y: 199, r: 118, g: 234, b: 231 },
                ], { x: 351, y: 320 });
                var rfpageCookieHouseUpgradeRequirement = new Rerouter_1.Page('rfpageCookieHouseUpgradeRequirement', [
                    { x: 356, y: 314, r: 123, g: 207, b: 8 },
                    { x: 330, y: 120, r: 68, g: 67, b: 66 },
                    { x: 425, y: 20, r: 0, g: 50, b: 92 },
                ], { x: 356, y: 314 });
                var groupPageUpgradeRequirements = new Rerouter_1.GroupPage('groupPageUpgradeRequirements', [
                    rfpageCookieMansionUpgradeRequirement,
                    rfpageCookieHouseUpgradeRequirement,
                ]);
                if (!_this.config.autoUpgradeCandyHouse) {
                    (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, findAndTapCandy successful so finish round");
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                    (0, utils_1.sendEventRunning)();
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                if (Rerouter_1.rerouter.isPageMatchImage(groupPageCanUpgradeCandy, image)) {
                    (0, utils_1.logs)(context.task.name, "Found upgradeable candyhouse and tap it");
                    Rerouter_1.rerouter.goNext(rfpageCanUpgradeCandyHouse);
                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 2);
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageNotEnoughGnomeBuilders, 2000)) {
                        (0, utils_1.logs)(context.task.name, "Not enough gnome builder, skipping upgrade cookie houses and finish task");
                        finishRound(true);
                        (0, utils_1.sendKeyBack)();
                        return;
                    }
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(groupPageUpgradeRequirements, 2000)) {
                        (0, utils_1.logs)(context.task.name, "groupPageUpgradeRequirements, tap: {x: 357, y:321}");
                        Rerouter_1.rerouter.screen.tap({ x: 357, y: 321 });
                        finishRound(true);
                        (0, utils_1.sendKeyBack)();
                        return;
                    }
                }
                else {
                    (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, this house is fully upgraded, send back");
                    (0, utils_1.sendKeyBack)();
                }
            },
        });
        // Tower of records collect diamond
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInTowerOfRecords.name),
            match: PAGES.rfpageInTowerOfRecords,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                    (0, utils_1.logs)(context.task.name, "rfpageInTowerOfRecords, leave because current task is not resolveGreenChecks, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                var foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconRedBubbleWhiteCheck);
                if (foundResults.length === 0) {
                    (0, utils_1.logs)(context.task.name, "rfpageInTowerOfRecords cannot find any iconRedBubbleWhiteCheck, skipping");
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, "rfpageInTowerOfRecords, found ".concat(foundResults.length, " iconRedBubbleWhiteCheck"));
                for (var i = 0; i < Object.keys(foundResults).length; i++) {
                    (0, utils_1.logs)(context.task.name, "checking iconRedBubbleWhiteCheck at ".concat(JSON.stringify(foundResults[i])));
                    Rerouter_1.rerouter.screen.tap({ x: foundResults[i].x - 40, y: foundResults[i].y + 15 });
                    Rerouter_1.Utils.sleep(2000);
                    for (var j = 0; j < 6; j++) {
                        var foundBlueGems = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenBubbleBlueGem);
                        if (foundBlueGems.length > 0) {
                            for (var gemIdx = 0; gemIdx < foundBlueGems.length; gemIdx++) {
                                (0, utils_1.logs)(context.task.name, "In ".concat(j, "th turn, found ").concat(gemIdx, "th gem and tap it at ").concat(JSON.stringify(foundBlueGems[gemIdx])));
                                Rerouter_1.rerouter.screen.tap({ x: foundBlueGems[gemIdx].x + 10, y: foundBlueGems[gemIdx].y + 10 });
                                Rerouter_1.Utils.sleep(2000);
                            }
                        }
                        (0, helper_1.swipeDown3Items)(); // scroll the page down a bit
                    }
                }
                (0, utils_1.logs)(context.task.name, "rfpageInTowerOfRecords, finished handeling");
            },
        });
        // Routing related pages
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageSelectAdvanture.name),
            match: PAGES.rfpageSelectAdvanture,
            action: function (context, image, matched, finishRound) {
                var rfpageSelectAdvantureFirstIsKingdom = new Rerouter_1.Page('rfpageSelectAdvantureFirstIsKingdom', [
                    { x: 628, y: 20, r: 55, g: 166, b: 231 },
                    { x: 422, y: 19, r: 5, g: 130, b: 254 },
                    { x: 308, y: 19, r: 254, g: 210, b: 0 },
                    { x: 56, y: 8, r: 27, g: 57, b: 90 },
                    { x: 24, y: 13, r: 255, g: 255, b: 255 },
                    { x: 35, y: 54, r: 49, g: 96, b: 66 },
                    { x: 44, y: 335, r: 0, g: 73, b: 41 },
                ], { x: 86, y: 198 });
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageSelectAdvantureFirstIsKingdom, image)) {
                    (0, utils_1.logs)(context.task.name, "rfpageSelectAdvantureFirstIsKingdom, go back to \"My Kingdom\"");
                    Rerouter_1.rerouter.goNext(rfpageSelectAdvantureFirstIsKingdom);
                    return;
                }
                var advantureSetting = helper_1.AdvanturesBountiesAt3rd;
                // if (rerouter.isPageMatchImage(PAGES.rfpageBountiesAt2ndSlot, image)) {
                //   advantureSetting = AdvanturesBountiesAt2nd;
                // }
                if (advantureSetting[context.task.name] === undefined) {
                    (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture but this task does not need advanture, send back");
                    (0, utils_1.sendKeyBack)();
                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                    return;
                }
                if (advantureSetting[context.task.name].backward) {
                    (0, helper_1.scrollRightALot)({ x: 600, y: 180 });
                    (0, helper_1.scrollRightALot)({ x: 600, y: 180 });
                }
                else {
                    (0, helper_1.scrollLeftALot)({ x: 105, y: 17 });
                }
                switch (context.task.name) {
                    case tasks_1.TASKS.superMayhem:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture goto superMayhem");
                        Rerouter_1.rerouter.screen.tap(advantureSetting[context.task.name].pnt);
                        break;
                    case tasks_1.TASKS.bounties:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture goto bounties");
                        Rerouter_1.rerouter.screen.tap(advantureSetting[context.task.name].pnt);
                        break;
                    case tasks_1.TASKS.towerOfSweetChaos:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture, send back");
                        (0, utils_1.sendKeyBack)();
                        return;
                    default:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture don't know what to do, try scroll left a lot to get to the head of the list");
                        (0, helper_1.scrollLeftALot)({ x: 50, y: 180 });
                        (0, utils_1.sendKeyBack)();
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageUncollapsedAffairs.name),
            match: PAGES.rfpageUncollapsedAffairs,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "rfpageUncollapsedAffairs, going to task related affair: ".concat(context.task.name));
                switch (context.task.name) {
                    case tasks_1.TASKS.hotAirBallon:
                        (0, utils_1.logs)(context.task.name, "about to goto hot air ballon");
                        Rerouter_1.rerouter.screen.tap({ x: 320, y: 154 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.train:
                        (0, utils_1.logs)(context.task.name, "about to goto train station");
                        Rerouter_1.rerouter.screen.tap({ x: 369, y: 234 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.wishingTree:
                        (0, utils_1.logs)(context.task.name, "about to send wishing tree");
                        Rerouter_1.rerouter.screen.tap({ x: 235, y: 161 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.gnomeLab:
                        (0, utils_1.logs)(context.task.name, "about to goto gnome lab");
                        Rerouter_1.rerouter.screen.tap({ x: 406, y: 158 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.haborSendShip:
                    case tasks_1.TASKS.haborShopInSeaMarket:
                    case tasks_1.TASKS.haborShopInShellGallery:
                        (0, utils_1.logs)(context.task.name, "about to goto trade habor");
                        Rerouter_1.rerouter.screen.tap({ x: 282, y: 228 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    default:
                        (0, utils_1.logs)(context.task.name, "nothing matched, closing the list");
                        Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 });
                        Rerouter_1.Utils.sleep(2000);
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageUncollapsedAffairsNoHabor.name),
            match: PAGES.rfpageUncollapsedAffairsNoHabor,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "rfpageUncollapsedAffairsNoHabor, going to task related affair: ".concat(context.task.name));
                switch (context.task.name) {
                    case tasks_1.TASKS.hotAirBallon:
                        (0, utils_1.logs)(context.task.name, "about to goto hot air ballon");
                        Rerouter_1.rerouter.screen.tap({ x: 320, y: 154 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.train:
                        (0, utils_1.logs)(context.task.name, "about to goto train station");
                        Rerouter_1.rerouter.screen.tap({ x: 324, y: 235 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.wishingTree:
                        (0, utils_1.logs)(context.task.name, "about to send wishing tree");
                        Rerouter_1.rerouter.screen.tap({ x: 230, y: 161 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.gnomeLab:
                        (0, utils_1.logs)(context.task.name, "about to goto gnome lab");
                        Rerouter_1.rerouter.screen.tap({ x: 410, y: 157 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.haborSendShip:
                    case tasks_1.TASKS.haborShopInSeaMarket:
                    case tasks_1.TASKS.haborShopInShellGallery:
                        (0, utils_1.logs)(context.task.name, "NO trade habor, skip this task");
                        finishRound(true);
                        return;
                    default:
                        (0, utils_1.logs)(context.task.name, "nothing matched, closing the list");
                        Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 });
                        Rerouter_1.Utils.sleep(2000);
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInCookieHead.name),
            match: PAGES.rfpageInCookieHead,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageInCookieHead, in head');
                var rfpageStartOfList = new Rerouter_1.Page('rfpageStartOfList', [
                    { x: 114, y: 151, r: 255, g: 218, b: 0 },
                    { x: 115, y: 160, r: 224, g: 0, b: 50 },
                    { x: 253, y: 156, r: 247, g: 207, b: 123 },
                    { x: 255, y: 160, r: 189, g: 20, b: 24 },
                ]);
                var rfpageEndOfList = new Rerouter_1.Page('rfpageEndOfList', [
                    { x: 570, y: 160, r: 252, g: 0, b: 60 },
                    { x: 479, y: 161, r: 68, g: 144, b: 18 },
                    { x: 393, y: 158, r: 194, g: 226, b: 238 },
                ]);
                switch (context.task.name) {
                    case tasks_1.TASKS.fountain:
                        fountain_1.fountainStatus.justWentToCookieHead = true;
                    case tasks_1.TASKS.findAndTapCandy:
                        if (!Rerouter_1.rerouter.isPageMatchImage(rfpageStartOfList, image)) {
                            (0, helper_1.scrollLeftALot)({ x: 116, y: 180 });
                        }
                        if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageStartOfList, 3000)) {
                            (0, utils_1.logs)(context.task.name, 'tap goto castle');
                            Rerouter_1.rerouter.screen.tap({ x: 260, y: 224 });
                            return;
                        }
                        return;
                    case tasks_1.TASKS.pvp:
                    case tasks_1.TASKS.pvpPurchaseAncientCookie:
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name.substring(0, 3)].pnt);
                        Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                        return;
                    case tasks_1.TASKS.tropicalIslandShip:
                    case tasks_1.TASKS.tropicalIslandSunbed:
                    case tasks_1.TASKS.tropicalIslandClearBubble:
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name.substring(0, 14)].pnt);
                        return;
                    case tasks_1.TASKS.guildBattleAlliance:
                        (0, utils_1.logs)(context.task.name, "".concat(context.path, " goto Cookie Alliance"));
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name].pnt);
                        return;
                    case tasks_1.TASKS.towerOfSweetChaos:
                        (0, utils_1.logs)(context.task.name, "".concat(context.path, " goto tower of sweet choas"));
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name].pnt);
                        return;
                    default:
                        (0, utils_1.sendKeyBack)();
                        return;
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInKingdomVillage.name),
            match: PAGES.rfpageInKingdomVillage,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in ".concat(context.path));
                // In case game crashed during battle
                storage_1.globalStorage.botStatus.battleStarted = 0;
                switch (context.task.name) {
                    case tasks_1.TASKS.production:
                        Rerouter_1.rerouter.screen.tap({ x: 38, y: 221 }); // Tap production dashboard
                        Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 2);
                        break;
                    case tasks_1.TASKS.collectMail:
                        // TODO: check for unread mails
                        // export const rfpageHasUnreadMails = new Page(
                        //   'rfpageHasUnreadMails',
                        //   [
                        //     { x: 584, y: 316, r: 123, g: 207, b: 8 },
                        //     { x: 591, y: 133, r: 126, g: 209, b: 14 },
                        //     { x: 607, y: 10, r: 57, g: 166, b: 231 },
                        //     { x: 54, y: 131, r: 255, g: 239, b: 214 },
                        //   ],
                        //   { x: 577, y: 317 }
                        // );
                        Rerouter_1.rerouter.screen.tap({ x: 550, y: 20 });
                        break;
                    case tasks_1.TASKS.collectKingdomPass:
                        Rerouter_1.rerouter.screen.tap({ x: 600, y: 85 });
                        break;
                    case tasks_1.TASKS.sendFriendReward:
                        Rerouter_1.rerouter.screen.tap({ x: 512, y: 20 });
                        break;
                    case tasks_1.TASKS.getInShopFreeDailyPack:
                        Rerouter_1.rerouter.screen.tap({ x: 26, y: 86 });
                        break;
                    case tasks_1.TASKS.getGachaDailyFreePack:
                        Rerouter_1.rerouter.screen.tap({ x: 370, y: 330 });
                        break;
                    case tasks_1.TASKS.resolveGreenChecks:
                        var foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedWithGiftBox);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckedWithGiftBox, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 12, y: foundResults[0].y + 12 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedGreenBackground);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckedGreenBackground, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 12, y: foundResults[0].y + 12 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSunbedGreenCheck);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconSunbedGreenCheck, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 7, y: foundResults[0].y + 7 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckGoldCoinInVillage);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckGoldCoinInVillage, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 12, y: foundResults[0].y + 12 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        // TODO：原版會直接過去把這個事件解決，現在只會按掉（如熱氣球新版只會收不會送，要等下次去熱氣球才會送）
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedWhiteBackground);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckedWhiteBackground, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 7, y: foundResults[0].y + 7 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        (0, utils_1.logs)(context.task.name, "Did not find any green check to resolve, finish round");
                        finishRound(true);
                        break;
                    case tasks_1.TASKS.hotAirBallon:
                    case tasks_1.TASKS.train:
                    case tasks_1.TASKS.wishingTree:
                    case tasks_1.TASKS.gnomeLab:
                    case tasks_1.TASKS.haborSendShip:
                    case tasks_1.TASKS.haborShopInSeaMarket:
                    case tasks_1.TASKS.haborShopInShellGallery:
                        Rerouter_1.rerouter.screen.tap({ x: 105, y: 330 });
                        break;
                    case tasks_1.TASKS.fountain:
                        if (!fountain_1.fountainStatus.justWentToCookieHead) {
                            (0, utils_1.logs)(context.task.name, "try goto head as justWentToCookieHead: ".concat(fountain_1.fountainStatus.justWentToCookieHead));
                            Rerouter_1.rerouter.screen.tap({ x: 25, y: 25 }); // goto head
                            return;
                        }
                        else {
                            (0, utils_1.logs)(context.task.name, "try goto fountain as justWentToCookieHead: ".concat(fountain_1.fountainStatus.justWentToCookieHead));
                            Rerouter_1.rerouter.screen.tap({ x: 490, y: 359 });
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                            Rerouter_1.rerouter.screen.tap({ x: 490, y: 295 });
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                            Rerouter_1.rerouter.screen.tap({ x: 540, y: 295 });
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                        }
                        break;
                    case tasks_1.TASKS.pvp:
                    case tasks_1.TASKS.pvpPurchaseAncientCookie:
                    case tasks_1.TASKS.tropicalIslandShip:
                    case tasks_1.TASKS.tropicalIslandSunbed:
                    case tasks_1.TASKS.tropicalIslandClearBubble:
                    case tasks_1.TASKS.towerOfSweetChaos:
                    case tasks_1.TASKS.guildBattleAlliance:
                        Rerouter_1.rerouter.screen.tap({ x: 25, y: 25 }); // goto head
                        break;
                    case tasks_1.TASKS.superMayhem:
                    case tasks_1.TASKS.bounties:
                        Rerouter_1.rerouter.screen.tap({ x: 560, y: 325 }); // goto PLAY!
                        break;
                    case tasks_1.TASKS.guildCheckin:
                    case tasks_1.TASKS.guildExpandLand:
                    case tasks_1.TASKS.guildBattleDragon:
                        Rerouter_1.rerouter.screen.tap({ x: 317, y: 325 }); // goto Guild
                        break;
                    case tasks_1.TASKS.findAndTapCandy:
                        var searchHouseState = _this.taskStatus[tasks_1.TASKS.findAndTapCandy];
                        if (searchHouseState.searchHouseIdx >= types_1.searchHosePaths[searchHouseState.searchHousePathIdx].length) {
                            searchHouseState.searchHousePathIdx++;
                            searchHouseState.searchHouseIdx = 0;
                        }
                        if (searchHouseState.searchHousePathIdx >= Object.keys(types_1.searchHosePaths).length) {
                            (0, utils_1.logs)(context.task.name, 'Searched all paths but still cannot end the task, skip it');
                            finishRound(true);
                            searchHouseState.searchHousePathIdx = 0;
                            searchHouseState.searchHouseIdx = 0;
                            searchHouseState.needGotoHead = true;
                            return;
                        }
                        // 要去頭以前先原地掃一次
                        if (searchHouseState.needGotoHead) {
                            if ((0, helper_1.searchForCandyHouse)()) {
                                (0, utils_1.logs)(context.task.name, 'Found rfpageInCandyHouse, return and let rfpageInCandyHouse handle it');
                                return;
                            }
                            Rerouter_1.rerouter.screen.tap({ x: 25, y: 25 }); // goto head
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                            searchHouseState.needGotoHead = false;
                            return;
                        }
                        console.log("".concat(searchHouseState.searchHousePathIdx, ", ").concat(searchHouseState.searchHouseIdx, ", ").concat(JSON.stringify(types_1.searchHosePaths[searchHouseState.searchHousePathIdx][searchHouseState.searchHouseIdx])));
                        (0, helper_1.swipeDirection)(types_1.searchHosePaths[searchHouseState.searchHousePathIdx][searchHouseState.searchHouseIdx], null, PAGES.rfpageInKingdomVillage);
                        searchHouseState.searchHouseIdx++;
                        if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupPageDecoration', [PAGES.rfpageMovingStructures, PAGES.rfpageKingdomDecoratingExpand]), 2000)) {
                            Rerouter_1.rerouter.goNext(PAGES.rfpageMovingStructures);
                            (0, utils_1.logs)(context.task.name, 'groupPageDecoration, return to try again');
                            return;
                        }
                        if ((0, helper_1.searchForCandyHouse)()) {
                            (0, utils_1.logs)(context.task.name, 'Found rfpageInCandyHouse, return and let rfpageInCandyHouse handle it');
                            return;
                        }
                        break;
                    default:
                        (0, utils_1.logs)(context.task.name, 'Unknown task in rfpageInKingdomVillage');
                        break;
                }
            },
        });
        // Send running when found rfpageStockIsFull
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageStockIsFull.name),
            match: PAGES.rfpageStockIsFull,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageStockIsFull, stock is full so send running');
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            },
        });
        // Materpiece custome intro in Feb 7, 2024
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageMasterpieceIntroInKingdomVillage.name),
            match: PAGES.rfpageMasterpieceIntroInKingdomVillage,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageMasterpieceIntroInKingdomVillage, tap it');
                Rerouter_1.rerouter.goNext(PAGES.rfpageMasterpieceIntroInKingdomVillage);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageMasterpieceIntroInCookiePage.name),
            match: PAGES.rfpageMasterpieceIntroInCookiePage,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageMasterpieceIntroInCookiePage, tap it');
                Rerouter_1.rerouter.goNext(PAGES.rfpageMasterpieceIntroInCookiePage);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageMasterpieceIntroInCostumes.name),
            match: PAGES.rfpageMasterpieceIntroInCostumes,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageMasterpieceIntroInCostumes, tap it');
                for (var i = 0; i < 5; i++) {
                    Rerouter_1.rerouter.goNext(PAGES.rfpageMasterpieceIntroInCostumes);
                    sleep(2000);
                }
            },
        });
        // rerouter.addRoute({
        //   path: `/${PAGES.AAAAAAAAA.name}`,
        //   match: PAGES.AAAAAAAAA,
        //   action: (context, image, matched, finishRound) => {
        //     logs(context.task.name, 'rfpageIsDailyFreePackage, daily gift collected correctly');
        //     finishRound(true);
        //   },
        // });
        var allPages = PAGES;
        var _loop_1 = function (pageIdx) {
            var page = allPages[pageIdx];
            if (!(page instanceof Rerouter_1.Page)) {
                return "continue";
            }
            if (Rerouter_1.rerouter.getPageByName(page.name) !== null) {
                return "continue";
            }
            Rerouter_1.rerouter.addRoute({
                path: "/".concat(page.name),
                match: page,
                action: function (context, image, matched, finishRound) {
                    if (page.next === undefined) {
                        console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path, " but does not have next page to go"));
                        return;
                    }
                    console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path));
                    Rerouter_1.rerouter.goNext(page);
                },
            });
        };
        for (var pageIdx in allPages) {
            _loop_1(pageIdx);
        }
    };
    CookieKingdom.prototype.addStartAppAction = function () {
        Rerouter_1.rerouter.addStartAppAction(function (context, finishRound) {
            var checkInterval = 3;
            var startTime = Date.now();
            for (var i = 0; i < 120 * 1000; i += checkInterval * 1000) {
                var matches = Rerouter_1.rerouter.getCurrentMatchNames();
                if (matches.length > 0) {
                    (0, utils_1.logs)('addStartAppAction', "waiting finished, found ".concat(JSON.stringify(matches)));
                    break;
                }
                Rerouter_1.Utils.sleep(checkInterval * 1000);
                (0, utils_1.logs)('addStartAppAction', "Start app wait ".concat((Date.now() - startTime) / 1000, " secs until the game started, count is now ").concat(matches.length, ", fist match is ").concat(matches[0]));
            }
        });
    };
    CookieKingdom.prototype.handleUnknown = function () {
        var _this = this;
        Rerouter_1.rerouter.addUnknownAction(function (context, image, finishRound) {
            Rerouter_1.Utils.log("unknown count ".concat(context.matchTimes, ", task: ").concat(context.task.name, ", during ").concat(context.matchDuring, ", last matched: ").concat(context.lastMatchedPath));
            if (Rerouter_1.rerouter.checkAndStartApp()) {
                (0, utils_1.logs)('handleUnknown', 'checkAndStartApp()');
                return;
            }
            if (_this.config.needToSendPlaying) {
                var crossFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconWhiteCircleWhiteCross);
                if (crossFound.length > 0) {
                    (0, utils_1.logs)(context.task.name, "Found ".concat(crossFound.length, " cross and tap 1st one at ").concat(JSON.stringify(crossFound[0])));
                    Rerouter_1.rerouter.screen.tap(crossFound[0]);
                    Rerouter_1.Utils.sleep(2000);
                    return;
                }
            }
            if ((0, helper_1.handleGeneralMessageWindow)(context.task.name, image, finishRound)) {
                (0, utils_1.logs)('handleUnknown', 'handleGeneralMessageWindow() return true, return');
                return;
            }
            if ((0, helper_1.checkIfInBattle)(context.task.name)) {
                (0, utils_1.logs)('handleUnknown', 'In battle so continue monitor');
                context.matchTimes = 0;
                return;
            }
            if (context.matchTimes > 1) {
                Rerouter_1.Utils.log('unknownCheckMissingPage');
                (0, helper_1.unknownCheckMissingPage)(context, finishRound);
            }
            if (context.matchTimes % 3 === 0) {
                keycode('KEYCODE_BACK', 100);
                Rerouter_1.Utils.log('keycode back for unknown');
            }
            if (context.matchTimes % 7 === 0) {
                Rerouter_1.rerouter.screen.tap({ x: 575, y: 22 });
                Rerouter_1.Utils.log('Unknown count 7, could be in tap to login, tapping (575, 22) until the game start');
            }
            if (context.matchTimes > 50) {
                (0, utils_1.logs)('handleUnknown', "Save screenshots and restart game as unknown max reached: ".concat(context.matchTimes));
                (0, helper_1.saveImageToDisk)('unknown-page-reached', image);
                context.matchTimes = 0;
                var rtn = execute('am force-stop com.devsisters.ck');
                if (rtn == 'signal: aborted') {
                    // MEmu
                    execute('ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am force-stop com.devsisters.ck');
                }
                sleep(15000);
            }
        });
    };
    return CookieKingdom;
}());
exports.CookieKingdom = CookieKingdom;
function start(jsonConfig) {
    console.log('typed inputConfig: ', jsonConfig);
    (0, helper_1.configSharePref)();
    if (typeof jsonConfig === 'string') {
        jsonConfig = JSON.parse(jsonConfig);
    }
    (0, helper_1.assign)(scriptConfig_1.config, (0, helper_1.mergeObject)(scriptConfig_1.defaultConfig, jsonConfig));
    exports.cookieKingdom = new CookieKingdom(scriptConfig_1.config);
    exports.cookieKingdom.start();
}
exports.start = start;
function stop() {
    console.log('stopppping');
    if (exports.cookieKingdom === undefined) {
        return;
    }
    exports.cookieKingdom.stop();
    exports.cookieKingdom = undefined;
}
exports.stop = stop;
if (window === undefined) {
    window = {};
}
window.start = start;
window.stop = stop;
window.rerouter = Rerouter_1.rerouter;
// // ! following is only for dev
// config.licenseId = 'testing_license_id';
// function run() {
//   cookieKingdom = new CookieKingdom(defaultConfig);
//   cookieKingdom.start();
// }
// sendEventRunning();
// run();
// console.log('jobs done');


/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dayInMs = exports.hourInMs = exports.minuteInMs = exports.sleepAnimate = exports.sleep = void 0;
exports.sleep = 240;
exports.sleepAnimate = 800;
exports.minuteInMs = 60 * 1000;
exports.hourInMs = exports.minuteInMs * 60;
exports.dayInMs = exports.hourInMs * 24;


/***/ }),

/***/ "./src/helper.ts":
/*!***********************!*\
  !*** ./src/helper.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unknownCheckMissingPage = exports.sendCounter = exports.assign = exports.passiveAddRoute = exports.checkIfInBattle = exports.handleGeneralMessageWindow = exports.mergeObject = exports.configSharePref = exports.checkIfNeedCrash = exports.saveImageToDisk = exports.searchForCandyHouse = exports.swipeDirection = exports.makeGoodsToTarget = exports.collectProductItemInfo = exports.countProductionSlotAvailable = exports.collectFinishedGoods = exports.swipeToToolShop456 = exports.swipeDown3Items = exports.swipeDownOneItem = exports.SwipeProductionMenuToTop = exports.handleNextProductionBuilding = exports.tapThroughAnimate = exports.ocrTextInRect = exports.ocrStockAndReqInRect = exports.ocrNumberInRect = exports.ocrStocksInRect = exports.dynamicSort = exports.findSpecificImageInScreen = exports.findSpecificIconInScreen = exports.getMayhemScores = exports.AdvanturesBountiesAt3rd = exports.GenAdvanture = exports.recognizeWishingTreeRequirements = exports.checkIfTrainRequirementMet = exports.isSameColorAtPnt = exports.isSameColor = exports.checkScreenMessage = exports.swipeFromToPoint = exports.scrollRightALot = exports.scrollLeftALot = exports.scrollDownALot = exports.findUnmatchInPage = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var PAGES = __importStar(__webpack_require__(/*! ./pages */ "./src/pages.ts"));
var ICONS = __importStar(__webpack_require__(/*! ./icons */ "./src/icons.ts"));
var CONSTANTS = __importStar(__webpack_require__(/*! ./constants */ "./src/constants.ts"));
var MessageWindows = __importStar(__webpack_require__(/*! ./messageWindow */ "./src/messageWindow.ts"));
var utils_1 = __webpack_require__(/*! ./utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ./tasks */ "./src/tasks.ts");
var storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");
var tradeHabor_1 = __webpack_require__(/*! ./tasks/tradeHabor */ "./src/tasks/tradeHabor.ts");
var scriptConfig_1 = __webpack_require__(/*! ./scriptConfig */ "./src/scriptConfig.ts");
var bounties_1 = __webpack_require__(/*! ./tasks/bounties */ "./src/tasks/bounties.ts");
var gnomeLab_1 = __webpack_require__(/*! ./tasks/gnomeLab */ "./src/tasks/gnomeLab.ts");
var guild_1 = __webpack_require__(/*! ./tasks/guild */ "./src/tasks/guild.ts");
function findUnmatchInPage(page) {
    var img = getScreenshot();
    var errorMessages = [];
    for (var i = 0; i < page.points.length; i++) {
        var point = page.points[i];
        var color = getImageColor(img, point.x, point.y);
        var score = Rerouter_1.Utils.identityColor(point, color);
        var isPointColorMatch = score >= 0.9;
        if (!isPointColorMatch) {
            var errorMessage = "point[".concat(i, "] match false: score: ").concat(score, ", thres: ").concat(0.9, "\nexpect: ").concat(Rerouter_1.Utils.formatXYRGB(point), "\nget: ").concat(Rerouter_1.Utils.formatXYRGB(__assign(__assign({}, color), { x: point.x, y: point.y })), "\n");
            errorMessages.push(errorMessage);
            // console.log(errorMessage);
        }
    }
    console.log('matching finished: ', page.name);
    releaseImage(img);
    return errorMessages;
}
exports.findUnmatchInPage = findUnmatchInPage;
function scrollDownALot(startPnt) {
    Rerouter_1.rerouter.screen.tapDown({ x: startPnt.x, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: startPnt.y / 2 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: -500 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: -1000 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.tapUp({ x: startPnt.x, y: -1000 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 3);
}
exports.scrollDownALot = scrollDownALot;
function scrollLeftALot(startPnt) {
    Rerouter_1.rerouter.screen.tapDown({ x: startPnt.x, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x * 2, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: 1000, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: 1500, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: 2000, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.tapUp({ x: 2000, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 3);
}
exports.scrollLeftALot = scrollLeftALot;
function scrollRightALot(startPnt) {
    return swipeFromToPoint({ x: startPnt.x, y: startPnt.y }, { x: -2000, y: startPnt.y }, 5);
}
exports.scrollRightALot = scrollRightALot;
function swipeFromToPoint(fromPnt, toPnt, steps, stopIfFoundPage, swipingPage) {
    if (swipingPage !== undefined && !Rerouter_1.rerouter.isPageMatch(swipingPage)) {
        // console.log('swipe from this point will get to another page, try again: ', fromPnt.x, fromPnt.y);
        keycode('BACK', 100);
        return false;
    }
    steps = steps == undefined ? 4 : steps;
    var step_x = (toPnt.x - fromPnt.x) / steps;
    var step_y = (toPnt.y - fromPnt.y) / steps;
    tapDown(fromPnt.x, fromPnt.y, 40, 0);
    sleep(10);
    moveTo(fromPnt.x, fromPnt.y, 40, 0);
    sleep(10);
    for (var i = 0; i < steps; i++) {
        moveTo(fromPnt.x + step_x * i, fromPnt.y + step_y * i, 40, 0);
        // console.log('in pnt: ', fromPnt.x + step_x * i, fromPnt.y + step_y * i);
        sleep(100);
    }
    moveTo(toPnt.x, toPnt.y, 40, 0);
    sleep(500);
    tapUp(toPnt.x, toPnt.y, 40, 0);
    sleep(500);
    if (swipingPage !== undefined && !Rerouter_1.rerouter.isPageMatch(swipingPage)) {
        console.log('swipe but page changed, failed x, y: ', fromPnt.x, fromPnt.y);
        keycode('BACK', 100);
        return false;
    }
    return true;
}
exports.swipeFromToPoint = swipeFromToPoint;
function checkScreenMessage(message, pageMessageWindow, img) {
    var needReleaseImg = false;
    if (img === undefined) {
        needReleaseImg = true;
        img = getScreenshot();
    }
    if (pageMessageWindow === undefined) {
        pageMessageWindow = new Rerouter_1.Page('rfpageGeneralMessageWindow', [
            { x: 424, y: 101, r: 57, g: 69, b: 107 },
            { x: 294, y: 101, r: 60, g: 70, b: 105 },
            { x: 431, y: 128, r: 243, g: 233, b: 223 },
            { x: 429, y: 244, r: 219, g: 207, b: 199 },
            { x: 380, y: 100, r: 57, g: 69, b: 107 },
            { x: 319, y: 102, r: 57, g: 69, b: 107 },
            { x: 292, y: 108, r: 57, g: 69, b: 107 },
        ]);
    }
    if (!Rerouter_1.rerouter.isPageMatchImage(pageMessageWindow, img)) {
        if (needReleaseImg) {
            releaseImage(img);
        }
        return false;
    }
    var croppedImage = cropImage(img, message.x, message.y, message.width, message.height);
    var whSize = getImageSize(croppedImage);
    var cnt = 0;
    for (var i = 0; i < whSize.width; i++) {
        if (isSameColor(getImageColor(croppedImage, i, message.targetY), message.lookingForColor)) {
            cnt++;
        }
    }
    (0, utils_1.logs)('checkScreenMessage', "Checking ".concat(message.name, ", expecting ").concat(message.targetColorCount, " points and got ").concat(cnt, " points"));
    if (needReleaseImg) {
        releaseImage(img);
    }
    releaseImage(croppedImage);
    return Math.abs(message.targetColorCount - cnt) < message.targetColorThreashold ? true : false;
}
exports.checkScreenMessage = checkScreenMessage;
function isSameColor(c1, c2, diff) {
    if (diff === undefined) {
        diff = 35;
    }
    // console.log(JSON.stringify(c1), JSON.stringify(c2), diff);
    if (Math.abs(c1.r - c2.r) < diff && Math.abs(c1.g - c2.g) < diff && Math.abs(c1.b - c2.b) < diff) {
        return true;
    }
    return false;
}
exports.isSameColor = isSameColor;
function isSameColorAtPnt(point, c2, diff) {
    if (point.x === undefined || point.y === undefined) {
        console.log('Error isSameColorAtPnt as x y cannot be undefined:', JSON.stringify(point));
        return false;
    }
    var img = getScreenshot();
    var color = getImageColor(img, point.x, point.y);
    releaseImage(img);
    if (!isSameColor(color, c2, diff)) {
        return false;
    }
    return true;
}
exports.isSameColorAtPnt = isSameColorAtPnt;
function checkIfTrainRequirementMet() {
    // TODO: or isMessageWindowWithDiamond()
    if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageTrainNotEnoughGoods, 2000)) {
        (0, utils_1.sendKeyBack)();
        return false;
    }
}
exports.checkIfTrainRequirementMet = checkIfTrainRequirementMet;
function recognizeWishingTreeRequirements(words, devImg, maxLength, thres, overlapRatio) {
    var maxWordWidth = 0;
    var allResults = [];
    for (var w = 0; w < words.length; w++) {
        var icon = words[w];
        var wh = getImageSize(icon.image);
        maxWordWidth = Math.max(maxWordWidth, wh.width);
        var results = findImages(devImg, icon.image, thres, maxLength, true);
        for (var idx in results) {
            var result = results[idx];
            allResults.push({ char: icon.name, x: result.x, y: result.y, score: result.score, w: wh.width });
        }
    }
    allResults.sort(function (a, b) {
        return a.x - b.x;
    });
    var str = '';
    var rBound = 0;
    var maxScore = 0;
    for (var i = 0; i < allResults.length; i++) {
        var word = allResults[i];
        // console.log('word', word.char, rBound, 'x', word.x, word.score);
        if (word.x > rBound) {
            maxScore = word.score;
            str += word.char;
            rBound = Math.floor(word.x + word.w * overlapRatio);
        }
        else if (word.x <= rBound && word.score > maxScore && word.char !== ' ') {
            // overlap
            maxScore = word.score;
            str = str.substr(0, str.length - 1) + word.char;
            rBound = Math.floor(word.x + word.w * overlapRatio);
        }
    }
    return str;
}
exports.recognizeWishingTreeRequirements = recognizeWishingTreeRequirements;
function GenAdvanture(pnt, fromHead, backward) {
    return {
        pnt: pnt,
        fromHead: fromHead,
        backward: backward,
    };
}
exports.GenAdvanture = GenAdvanture;
// When there are NO timed event
// export const AdvanturesBountiesAt2nd: { [key: string]: Advanture } = {
//   pvp: GenAdvanture({ x: 123, y: 230 }, true, false),
//   towerOfSweetChaos: GenAdvanture({ x: 214, y: 230 }, true, false),
//   tropicalIsland: GenAdvanture({ x: 300, y: 230 }, true, false),
//   cookieAlliance: GenAdvanture({ x: 392, y: 230 }, true, false),
//   superMayhem: GenAdvanture({ x: 500, y: 150 }, false, false),
//   bounties: GenAdvanture({ x: 300, y: 100 }, false, false),
//   guild: GenAdvanture({ x: 10, y: 100 }, false, true),
// };
// CRK released Aug 9, 2023
exports.AdvanturesBountiesAt3rd = {
    pvp: GenAdvanture({ x: 212, y: 230 }, true, false),
    towerOfSweetChaos: GenAdvanture({ x: 214, y: 230 }, true, false),
    tropicalIsland: GenAdvanture({ x: 300, y: 230 }, true, false),
    guildBattleAlliance: GenAdvanture({ x: 392, y: 230 }, true, false),
    superMayhem: GenAdvanture({ x: 400, y: 150 }, false, false),
    bounties: GenAdvanture({ x: 24, y: 155 }, false, true),
    guild: GenAdvanture({ x: 527, y: 115 }, false, true),
};
// export const AdvanturesBountiesAt4th: { [key: string]: Advanture } = {
//   pvp: GenAdvanture({ x: 123, y: 230 }, true, false),
//   towerOfSweetChaos: GenAdvanture({ x: 214, y: 230 }, true, false),
//   tropicalIsland: GenAdvanture({ x: 300, y: 230 }, true, false),
//   cookieAlliance: GenAdvanture({ x: 392, y: 230 }, true, false),
//   superMayhem: GenAdvanture({ x: 500, y: 150 }, false, false),
//   bounties: GenAdvanture({ x: 100, y: 100 }, false, true),
//   guild: GenAdvanture({ x: 320, y: 100 }, false, true),
// };
function getMayhemScores() {
    var img = getScreenshot();
    var scores = [0, 0, 0];
    var imagesLocation = [
        [
            { x: 495, y: 56, w: 47, h: 12 },
            { x: 495, y: 84, w: 47, h: 12 },
            { x: 495, y: 110, w: 47, h: 12 },
        ],
        [
            { x: 495, y: 145, w: 47, h: 12 },
            { x: 495, y: 172, w: 47, h: 12 },
            { x: 495, y: 198, w: 47, h: 12 },
        ],
        [
            { x: 495, y: 232, w: 47, h: 12 },
            { x: 495, y: 260, w: 47, h: 12 },
            { x: 495, y: 288, w: 47, h: 12 },
        ],
    ];
    for (var mayhemIdx = 0; mayhemIdx < imagesLocation.length; mayhemIdx++) {
        for (var teamIdx = 0; teamIdx < imagesLocation[mayhemIdx].length; teamIdx++) {
            var tImage = imagesLocation[mayhemIdx][teamIdx];
            var croppedImage = cropImage(img, tImage.x, tImage.y, tImage.w, tImage.h);
            var value = +recognizeWishingTreeRequirements(ICONS.numberImagesSuperMayhem, croppedImage, 7, 0.7, 0.7) || 0;
            releaseImage(croppedImage);
            if (value > scores[mayhemIdx]) {
                scores[mayhemIdx] = value;
            }
        }
    }
    releaseImage(img);
    // console.log('>> ', JSON.stringify(scores));
    return scores;
}
exports.getMayhemScores = getMayhemScores;
function findSpecificIconInScreen(target, targetArea, isDev) {
    if (target.image === undefined) {
        target.loadImage();
    }
    return findSpecificImageInScreen(target.image, target.thres, targetArea, isDev);
}
exports.findSpecificIconInScreen = findSpecificIconInScreen;
function findSpecificImageInScreen(target, threashold, targetArea, isDev) {
    if (threashold === undefined) {
        threashold = 0.95;
    }
    var img = getScreenshot();
    var croppedImage;
    var foundResults;
    if (targetArea !== undefined) {
        croppedImage = cropImage(img, targetArea.x, targetArea.y, targetArea.w, targetArea.h);
        foundResults = findImages(croppedImage, target, threashold, 10, true);
        releaseImage(croppedImage);
    }
    else {
        foundResults = findImages(img, target, threashold, 10, true);
    }
    releaseImage(img);
    if (isDev) {
        console.log('findSpecificImageInScreen, found target icon at: ', JSON.stringify(foundResults));
    }
    var rtn = [];
    for (var key in foundResults) {
        rtn.push(foundResults[key]);
    }
    return rtn;
}
exports.findSpecificImageInScreen = findSpecificImageInScreen;
function dynamicSort(property) {
    var sortOrder = 1;
    if (property[0] === '-') {
        sortOrder = -1;
        property = property.substr(1);
    }
    return function (a, b) {
        /* next line works with strings and numbers,
         * and you may want to customize it to your needs
         */
        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;
        return result * sortOrder;
    };
}
exports.dynamicSort = dynamicSort;
// Stocks like 220/2, means need 2 while we have 200, and will return 218
function ocrStocksInRect(rect, icons) {
    var img = getScreenshot();
    var croppedImage = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    releaseImage(img);
    var txt = recognizeWishingTreeRequirements(icons, croppedImage, 10, 0.8, 0.5);
    console.log('>> ocrStocksInRect got txt', txt);
    releaseImage(croppedImage);
    if (txt.length === 0) {
        return -1;
    }
    else if (txt.indexOf('/') === -1) {
        return -1;
    }
    else {
        var stock = txt.split('/');
        return +stock[0] - +stock[1];
    }
}
exports.ocrStocksInRect = ocrStocksInRect;
function ocrNumberInRect(rect, icons) {
    var text = ocrTextInRect(rect, icons);
    if (text === '') {
        return -1;
    }
    return +text;
    // var img = getScreenshot();
    // var croppedImage = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    // releaseImage(img);
    // var txt = recognizeWishingTreeRequirements(icons, croppedImage, 10, 0.8, 0.5);
    // releaseImage(croppedImage);
    // if (txt.length === 0) {
    //   return -1;
    // } else {
    //   return +txt;
    // }
}
exports.ocrNumberInRect = ocrNumberInRect;
function ocrStockAndReqInRect(rect, icons) {
    var text = ocrTextInRect(rect, icons, 0.78, 8);
    // console.log(`ocrStockAndReqInRect: ${JSON.stringify(rect)}, ${text}`);
    var values = text.split('/');
    if (values.length < 2) {
        return [+text, -1];
    }
    return [+values[0], +values[1]];
}
exports.ocrStockAndReqInRect = ocrStockAndReqInRect;
// 在市集中能正確讀出1,876
function ocrTextInRect(rect, icons, overrideThre, overrideOverlap) {
    var img = getScreenshot();
    var croppedImage = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    releaseImage(img);
    var results = [];
    for (var i in icons) {
        // numbers[i] = bgrToGray(numbers[i], 40)
        var thres = overrideThre === undefined ? icons[i].thres : overrideThre;
        var overlap = overrideOverlap === undefined ? 10 : overrideOverlap;
        var foundResults = findImages(croppedImage, icons[i].image, thres, overlap, true);
        for (var j in foundResults) {
            results.push({
                x: foundResults[j].x,
                y: foundResults[j].y,
                score: foundResults[j].score,
                target: icons[i].name,
            });
        }
    }
    results.sort(dynamicSort('x'));
    // console.log(`=> ocrTextInRect ${JSON.stringify(rect)}, ${icons.length},  ${JSON.stringify(results)}`);
    releaseImage(croppedImage);
    if (results.length == 0) {
        return '';
    }
    var digit_width = 4;
    var output = '';
    var idx = 1;
    while (idx < results.length) {
        if (results[idx].x - results[idx - 1].x < digit_width) {
            // results[i].score > results[i - 1].score ? results.splice(i - 1, 1) : results.splice(i, 1);
            if (results[idx].score > results[idx - 1].score) {
                results.splice(idx - 1, 1);
            }
            else {
                results.splice(idx, 1);
            }
        }
        else {
            idx++;
        }
        // console.log('>>', idx, JSON.stringify(results))
    }
    for (var i in results) {
        output += results[i].target;
    }
    // console.log('ocrTextInRect has output: ', output);
    return output;
}
exports.ocrTextInRect = ocrTextInRect;
function tapThroughAnimate(targetPage, tappingPoint, timeInMs, interval) {
    if (interval === undefined) {
        interval = 500;
    }
    for (var i = 0; i < timeInMs; i += interval) {
        if (Rerouter_1.rerouter.isPageMatch(targetPage)) {
            return true;
        }
        Rerouter_1.rerouter.screen.tap(tappingPoint);
    }
    return false;
}
exports.tapThroughAnimate = tapThroughAnimate;
function handleNextProductionBuilding(buildTowardsTheLeft) {
    if (buildTowardsTheLeft) {
        Rerouter_1.rerouter.screen.tap({ x: 110, y: 174 }); // to left
    }
    else {
        Rerouter_1.rerouter.screen.tap({ x: 349, y: 174 }); // to right
    }
}
exports.handleNextProductionBuilding = handleNextProductionBuilding;
function SwipeProductionMenuToTop() {
    return swipeFromToPoint({ x: 430, y: 80 }, { x: 430, y: 1500 }, 4);
}
exports.SwipeProductionMenuToTop = SwipeProductionMenuToTop;
function swipeDownOneItem() {
    tapDown(430, 319, 40, 0);
    sleep(500);
    moveTo(430, 319, 40, 0);
    sleep(500);
    moveTo(430, 280, 40, 0);
    sleep(500);
    moveTo(430, 230, 40, 0);
    sleep(500);
    moveTo(430, 200, 40, 0);
    sleep(500);
    moveTo(430, 176, 40, 0);
    sleep(1600);
    tapUp(430, 176, 40, 0);
    sleep(2000);
    // return swipeFromToPoint({ x: 430, y: 319 }, { x: 430, y: 176 }, 5);
}
exports.swipeDownOneItem = swipeDownOneItem;
function swipeDown3Items() {
    // console.log('swipe down to 3 item as currently in:', this.config.currentProductionBuilding);
    tapDown(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 250, 40, 0);
    sleep(500);
    moveTo(430, 150, 40, 0);
    sleep(500);
    moveTo(430, 50, 40, 0);
    sleep(500);
    moveTo(430, -70, 40, 0);
    sleep(1600);
    tapUp(430, -70, 40, 0);
    sleep(1600);
    // return swipeFromToPoint({ x: 430, y: 350 }, { x: 430, y: -70 }, 7);
}
exports.swipeDown3Items = swipeDown3Items;
function swipeToToolShop456() {
    SwipeProductionMenuToTop();
    tapDown(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 250, 40, 0);
    sleep(500);
    moveTo(430, 150, 40, 0);
    sleep(500);
    moveTo(430, 50, 40, 0);
    sleep(500);
    moveTo(430, -80, 40, 0);
    sleep(500);
    moveTo(430, -170, 40, 0);
    sleep(1600);
    tapUp(430, -170, 40, 0);
    sleep(1600);
    // return swipeFromToPoint({ x: 430, y: 350 }, { x: 430, y: -170 }, 7);
}
exports.swipeToToolShop456 = swipeToToolShop456;
function findProductRequirements(rects) {
    var imgOri = getScreenshot();
    var omin = 150;
    var omax = 255;
    var img = inRange(imgOri, omin, omin, omin, omin, omax, omax, omax, omax);
    var part = [];
    for (var i = 0; i < rects.length; i++) {
        var rect = rects[i];
        var line1 = '';
        var cImg1 = cropImage(img, rect.x, rect.y, rect.w, rect.h);
        line1 = recognizeWishingTreeRequirements(ICONS.numberImagesProdutRequirements, cImg1, 12, 0.7, 0.5);
        releaseImage(cImg1);
        line1 = line1.trim();
        // console.log(line1);
        if (line1.length === 0) {
            // do nothing
        }
        else if (line1.indexOf('/') === -1) {
            part.push([line1.substr(0, line1.length - 1), line1.substr(line1.length - 1, 1)]);
        }
        else {
            part.push(line1.split('/'));
        }
    }
    for (var productIdx in part) {
        for (var reqIdx in part[productIdx]) {
            part[productIdx][reqIdx] = Number(part[productIdx][reqIdx]);
        }
    }
    // console.log('part:', JSON.stringify(part));
    releaseImage(imgOri);
    releaseImage(img);
    return part;
}
function collectFinishedGoods() {
    var rfpageProducing = new Rerouter_1.Page('rfpageProducing', [
        { x: 76, y: 86, r: 134, g: 231, b: 0 },
        { x: 61, y: 89, r: 123, g: 228, b: 0 },
        { x: 38, y: 32, r: 203, g: 235, b: 236 },
    ]);
    var rfpageCancelMultipleProduction = new Rerouter_1.Page('rfpageCancelMultipleProduction', [
        { x: 442, y: 94, r: 34, g: 85, b: 115 },
        { x: 404, y: 244, r: 8, g: 166, b: 222 },
        { x: 303, y: 246, r: 8, g: 166, b: 222 },
        { x: 430, y: 238, r: 222, g: 207, b: 198 },
        { x: 20, y: 45, r: 166, g: 104, b: 63 },
        { x: 22, y: 108, r: 166, g: 104, b: 63 },
        { x: 73, y: 34, r: 124, g: 69, b: 44 },
    ], { x: 442, y: 94 });
    // Try to collect finished goods
    if (!Rerouter_1.rerouter.isPageMatch(rfpageProducing)) {
        Rerouter_1.rerouter.screen.tap({ x: 51, y: 66 });
        if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupPageCancel', [PAGES.rfpageCancelProduction, rfpageCancelMultipleProduction]), 3000)) {
            (0, utils_1.logs)('collectFinishedGoods', 'Found ask to cancel dialog in production, close it and wait 2secs for rfpageInProduction');
            Rerouter_1.rerouter.goNext(PAGES.rfpageCancelProduction);
            Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInProduction, 2000);
        }
        else if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageCancelProductionLongItemName)) {
            (0, utils_1.logs)('collectFinishedGoods', 'Found ask to cancel dialog in production (item with long name), close it and wait 2secs for rfpageInProduction');
            Rerouter_1.rerouter.goNext(PAGES.rfpageCancelProductionLongItemName);
            Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInProduction, 2000);
        }
    }
}
exports.collectFinishedGoods = collectFinishedGoods;
function countMagicLabSlotAvailable() {
    var groupPageMagicLabSlot = new Rerouter_1.GroupPage('groupPageMagicLabSlot', [
        new Rerouter_1.Page('firstSlot', [{ x: 55, y: 69, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('secondSlot', [{ x: 53, y: 120, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('thirdSlot', [{ x: 49, y: 168, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('fourthSlot', [{ x: 52, y: 223, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('fifthSlot', [{ x: 50, y: 264, r: 77, g: 55, b: 110 }]),
        new Rerouter_1.Page('sixSlot', [{ x: 48, y: 314, r: 82, g: 60, b: 115 }]),
    ]);
    var matchedPages = Rerouter_1.rerouter.getPagesMatch(groupPageMagicLabSlot);
    (0, utils_1.logs)('countMagicLabSlotAvailable', "countMagicLabSlotAvailable: ".concat(matchedPages.length));
    return matchedPages.length;
}
function countProductionSlotAvailable() {
    if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageInMagicLab)) {
        return countMagicLabSlotAvailable();
    }
    var groupPageProductionSlot = new Rerouter_1.GroupPage('groupPageProductionSlot', [
        new Rerouter_1.Page('firstSlot', [
            { x: 50, y: 69, r: 146, g: 88, b: 52 },
            { x: 49, y: 68, r: 146, g: 88, b: 52 },
            { x: 70, y: 90, r: 166, g: 104, b: 65 },
            { x: 42, y: 86, r: 173, g: 105, b: 66 },
        ]),
        new Rerouter_1.Page('secondSlot', [
            { x: 50, y: 120, r: 146, g: 88, b: 52 },
            { x: 49, y: 111, r: 146, g: 88, b: 52 },
            { x: 46, y: 137, r: 173, g: 105, b: 66 },
        ]),
        new Rerouter_1.Page('thirdSlot', [
            { x: 50, y: 170, r: 146, g: 88, b: 52 },
            { x: 49, y: 169, r: 146, g: 88, b: 52 },
            { x: 46, y: 179, r: 142, g: 78, b: 44 },
        ]),
        new Rerouter_1.Page('fourthSlot', [
            { x: 50, y: 219, r: 146, g: 88, b: 52 },
            { x: 50, y: 218, r: 146, g: 88, b: 52 },
            { x: 48, y: 229, r: 144, g: 88, b: 52 },
            { x: 42, y: 236, r: 173, g: 105, b: 66 },
        ]),
        new Rerouter_1.Page('fifthSlot', [
            { x: 50, y: 269, r: 146, g: 88, b: 52 },
            { x: 50, y: 268, r: 146, g: 88, b: 52 },
            { x: 46, y: 286, r: 157, g: 95, b: 55 },
        ]),
    ]);
    var matchedPages = Rerouter_1.rerouter.getPagesMatch(groupPageProductionSlot);
    // logs('countProductionSlotAvailable', `countProductionSlotAvailable: ${matchedPages.length}, ${JSON.stringify(matchedPages)}`);
    return matchedPages.length;
}
exports.countProductionSlotAvailable = countProductionSlotAvailable;
function collectProductItemInfo(id, stockRect, needRect1, needRect2, productionTarget, safetyStock) {
    var minimumTarget = id <= 3 ? Math.max(10, productionTarget * Math.pow(0.85, id)) : Math.max(10, productionTarget * Math.pow(0.6, id));
    var canProduce = false;
    var need1 = {
        stock: -1,
        consume: -1,
    };
    var need2 = {
        stock: -1,
        consume: -1,
    };
    var stock = ocrNumberInRect(stockRect, ICONS.bNumbers);
    if (stock === -1) {
        return {
            id: id,
            minimumTarget: minimumTarget,
            productionTarget: productionTarget,
            stockTargetFullfilledPercent: -1,
            canProduce: canProduce,
            notEnoughStock: false,
            stock: stock,
            need: [need1, need2],
        };
    }
    var requirements = findProductRequirements([needRect1, needRect2]);
    // console.log(`requirements: "${requirements}"`); // TODO: to remove
    if (requirements.length === 0) {
        return {
            id: id,
            minimumTarget: minimumTarget,
            productionTarget: productionTarget,
            stockTargetFullfilledPercent: stock / productionTarget,
            canProduce: canProduce,
            notEnoughStock: false,
            stock: stock,
            need: [need1, need2],
        };
    }
    need1 = {
        stock: +requirements[0][0],
        consume: +requirements[0][1],
    };
    if (requirements.length > 1) {
        need2 = {
            stock: +requirements[1][0],
            consume: +requirements[1][1],
        };
        canProduce = need1['stock'] - need1['consume'] > safetyStock && need2['stock'] - need2['consume'] > safetyStock;
    }
    else {
        canProduce = need1['stock'] - need1['consume'] > safetyStock;
    }
    return {
        id: id,
        minimumTarget: minimumTarget,
        productionTarget: productionTarget,
        stockTargetFullfilledPercent: stock / productionTarget,
        canProduce: canProduce,
        notEnoughStock: false,
        stock: stock,
        need: requirements.length > 1 ? [need1, need2] : [need1], // Pinecone birdy toy (etc,) only need 1 material
    };
}
exports.collectProductItemInfo = collectProductItemInfo;
function makeGoodsToTarget(goodsTarget, safetyStock, axeStockTo400) {
    var goodsLocation = {
        1: { x: 431, y: 101, w: 22, h: 12 },
        2: { x: 431, y: 209, w: 22, h: 12 },
        3: { x: 431, y: 315, w: 22, h: 12 },
        shovel: { x: 432, y: 317, w: 22, h: 16 },
        5: { x: 431, y: 106, w: 22, h: 12 },
        6: { x: 431, y: 213, w: 22, h: 12 },
        7: { x: 431, y: 319, w: 22, h: 12 },
    };
    var productsReqY = {
        1: 92,
        2: 199,
        3: 306,
        4: 308,
        5: 96,
        6: 203,
        7: 310,
    };
    // TODO: recognize building to reduce drop order time
    var goodsOneStock = ocrNumberInRect(goodsLocation[1], ICONS.bNumbers);
    if (goodsOneStock === -1) {
        (0, utils_1.logs)('makeGoodsToTarget', "OCR count failed, swipe to top");
        SwipeProductionMenuToTop();
        goodsOneStock = ocrNumberInRect(goodsLocation[1], ICONS.bNumbers);
        if (goodsOneStock === -1) {
            console.log('OCR count failed twice, skip this round');
            return -1;
        }
    }
    var productionState = {
        1: collectProductItemInfo(1, goodsLocation[1], { x: 463, y: productsReqY[1], w: 50, h: 14 }, { x: 520, y: productsReqY[1], w: 50, h: 14 }, goodsTarget, safetyStock),
    };
    for (var _i = 0, _a = [2, 3]; _i < _a.length; _i++) {
        var i = _a[_i];
        if (!Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[i])) {
            break;
        }
        productionState[i] = collectProductItemInfo(i, goodsLocation[i], { x: 463, y: productsReqY[i], w: 50, h: 14 }, { x: 520, y: productsReqY[i], w: 50, h: 14 }, goodsTarget, safetyStock);
    }
    var availableSlots = countProductionSlotAvailable();
    var productionPage = Rerouter_1.rerouter.getPagesMatch(PAGES.groupPageGoodsProdMenu);
    var productionName = productionPage.length > 0 ? productionPage[0].name : 'otherGoodShop';
    (0, utils_1.logs)('makeGoodsToTarget', "> ".concat(productionName, " has ").concat(availableSlots, " available slots, productionState: ").concat(JSON.stringify(productionState)));
    if (productionName !== 'otherGoodShop') {
        (0, utils_1.logs)('makeGoodsToTarget', "Special handle building: ".concat(productionName));
        swipeDownOneItem();
        if (Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[4])) {
            productionState[4] = collectProductItemInfo(4, goodsLocation['shovel'], { x: 463, y: 308, w: 50, h: 14 }, { x: 520, y: 308, w: 50, h: 14 }, goodsTarget, safetyStock);
        }
    }
    console.log('swipping down =========');
    if (productionName === 'rfpageToolShop' || productionName === 'rfpageIsBakery') {
        swipeToToolShop456();
    }
    else {
        swipeFromToPoint({ x: 464, y: 340 }, { x: 464, y: -1500 }, 5); // SwipeProductionMenuToBottom()
        Rerouter_1.Utils.sleep(800);
    }
    console.log('before OCR 567, productionState:', JSON.stringify(productionState));
    for (var _b = 0, _c = [5, 6, 7]; _b < _c.length; _b++) {
        var i = _c[_b];
        if (!Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[i])) {
            break;
        }
        productionState[i] = collectProductItemInfo(i, goodsLocation[i], { x: 463, y: productsReqY[i], w: 50, h: 14 }, { x: 520, y: productsReqY[i], w: 50, h: 14 }, goodsTarget, safetyStock);
    }
    (0, utils_1.logs)('makeGoodsToTarget', "> ".concat(productionName, " has ").concat(availableSlots, " available slots, productionState: ").concat(JSON.stringify(productionState)));
    if (productionName === 'rfpageToolShop' && axeStockTo400) {
        productionState[1].productionTarget = 400;
        productionState[1].stockTargetFullfilledPercent = goodsOneStock / 400;
    }
    var itemToProduce = {};
    var itemToProduceLater = {};
    // check minimum req
    for (var key in productionState) {
        if (productionState[key].stock < productionState[key].minimumTarget) {
            itemToProduce[key] = productionState[key];
        }
    }
    // check user defined production target
    for (var key in productionState) {
        if (productionState[key].stock < goodsTarget) {
            itemToProduceLater[key] = productionState[key];
        }
    }
    var itemsToProduce = Object.keys(itemToProduce).map(function (key) { return itemToProduce[+key]; });
    var itemsToProduceLater = Object.keys(itemToProduceLater).map(function (key) { return itemToProduceLater[+key]; });
    itemsToProduce.sort(dynamicSort('stockTargetFullfilledPercent'));
    itemsToProduceLater.sort(dynamicSort('stockTargetFullfilledPercent'));
    var _loop_1 = function (obj) {
        var keyExists = itemsToProduce.some(function (element) { return element['id'] === obj['id']; });
        if (!keyExists) {
            itemsToProduce.push(obj);
        }
    };
    for (var _d = 0, itemsToProduceLater_1 = itemsToProduceLater; _d < itemsToProduceLater_1.length; _d++) {
        var obj = itemsToProduceLater_1[_d];
        _loop_1(obj);
    }
    (0, utils_1.logs)('makeGoodsToTarget', ">> ".concat(productionName, " has ").concat(availableSlots, " available slots, stocks to produce: ").concat(JSON.stringify(itemsToProduce)));
    var rfpageLockedGood = new Rerouter_1.Page('rfpageLockedGood', [
        { x: 351, y: 244, r: 121, g: 207, b: 12 },
        { x: 305, y: 244, r: 121, g: 207, b: 12 },
        { x: 425, y: 244, r: 219, g: 207, b: 199 },
        { x: 425, y: 105, r: 60, g: 70, b: 105 },
        { x: 417, y: 297, r: 235, g: 219, b: 207 },
        { x: 381, y: 316, r: 237, g: 237, b: 229 },
    ], { x: 351, y: 244 });
    for (var id in itemsToProduce) {
        var item = itemsToProduce[id];
        if (item['stock'] === -1) {
            continue;
        }
        if (item['stockTargetFullfilledPercent'] > 1) {
            // logs(makeGoodsToTarget, `stockTargetFullfilledPercent > 1 should should be stock OCR error `);
            continue;
        }
        if (item['notEnoughStock']) {
            (0, utils_1.logs)('makeGoodsToTarget', "should panic as found notEnoughStock ");
            // ii++;
        }
        if (!item['canProduce']) {
            (0, utils_1.logs)('makeGoodsToTarget', "skip as not having enough raw materials for #".concat(id));
            continue;
        }
        (0, utils_1.logs)('makeGoodsToTarget', "adding item ".concat(item['id'], " from ").concat(item['stock'], " to ").concat(item['productionTarget'], ", ").concat(JSON.stringify(item)));
        switch (item['id']) {
            case 1:
            case 2:
            case 3:
                SwipeProductionMenuToTop();
                SwipeProductionMenuToTop();
                Rerouter_1.rerouter.goNext(PAGES.productMapping[item['id']]);
                break;
            case 4:
                SwipeProductionMenuToTop();
                SwipeProductionMenuToTop();
                swipeDownOneItem();
                Rerouter_1.rerouter.goNext(PAGES.productMapping[item['id']]);
                break;
            case 5:
            case 6:
            case 7:
                SwipeProductionMenuToTop();
                SwipeProductionMenuToTop();
                swipeToToolShop456();
                Rerouter_1.rerouter.goNext(PAGES.productMapping[item['id']]);
                break;
        }
        for (var timer = 0; timer < 4; timer++) {
            var latestCount = countProductionSlotAvailable();
            if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageNotEnoughStockInProduction)) {
                (0, utils_1.logs)('makeGoodsToTarget', "PAGES.rfpageNotEnoughStockInProduction");
                Rerouter_1.rerouter.screen.tap({ x: 428, y: 98 });
                itemsToProduce[id]['notEnoughStock'] = true;
                sleep(800);
                break;
            }
            else if (Rerouter_1.rerouter.isPageMatch(rfpageLockedGood)) {
                (0, utils_1.logs)('makeGoodsToTarget', "rfpageLockedGood");
                Rerouter_1.rerouter.goNext(rfpageLockedGood);
                break;
            }
            if (latestCount === 0) {
                (0, utils_1.logs)('makeGoodsToTarget', "No more slots, stop at: ".concat(item['id']));
                return latestCount;
            }
            sleep(1000);
        }
        // Add check if there are no worker cookie
    }
    return countProductionSlotAvailable();
}
exports.makeGoodsToTarget = makeGoodsToTarget;
function swipeDirection(direction, targetPage, swippingPage) {
    var tapableArea = {
        fromPnt: { x: 165, y: 90 },
        endPnt: { x: 566, y: 285 },
    };
    if (targetPage !== null && Rerouter_1.rerouter.isPageMatch(targetPage)) {
        (0, utils_1.logs)('swipeDirection', "Already in page ".concat(targetPage.name, ", skip swipping"));
        return true;
    }
    var x = tapableArea.fromPnt.x + Math.random() * (tapableArea.endPnt.x - tapableArea.fromPnt.x);
    var y = tapableArea.fromPnt.y + Math.random() * (tapableArea.endPnt.y - tapableArea.fromPnt.y);
    var fromPnt = { x: x, y: y };
    var toPnt = { x: x + direction.x, y: y + direction.y };
    var steps = 4;
    if (swipeFromToPoint(fromPnt, toPnt, steps, targetPage, swippingPage)) {
        // console.log('swipe successfully');
        return true;
    }
    else if (Rerouter_1.rerouter.isPageMatch(tradeHabor_1.rfpageInTradeHabor)) {
        console.log('swipeDirection skip to go to head and start over');
        return false;
    }
    else {
        console.log('pickup house, try again');
    }
    return false;
}
exports.swipeDirection = swipeDirection;
function filterOverlapFindIconResults(points, minDistance, debug) {
    var result = [];
    points.sort(function (a, b) { return b.score - a.score; });
    var _loop_2 = function (point) {
        var isTooClose = result.some(function (p) {
            var distance = Math.sqrt(Math.pow(point.x - p.x, 2) + Math.pow(point.y - p.y, 2));
            var tooClose = distance < minDistance;
            if (tooClose && debug) {
                console.log("Point ".concat(JSON.stringify(point), " is too close to ").concat(JSON.stringify(p)));
            }
            return tooClose;
        });
        if (!isTooClose) {
            result.push(point);
        }
    };
    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
        var point = points_1[_i];
        _loop_2(point);
    }
    return result;
}
function difference(array1, array2) {
    var onlyInArray1 = array1.filter(function (a) { return !array2.some(function (b) { return a.x === b.x && a.y === b.y; }); });
    var onlyInArray2 = array2.filter(function (a) { return !array1.some(function (b) { return a.x === b.x && a.y === b.y; }); });
    return __spreadArray(__spreadArray([], onlyInArray1, true), onlyInArray2, true);
}
// 1. searchForCandyHouse
// 2. if !1, swipe directinos
function searchForCandyHouse() {
    if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageInProduction)) {
        (0, utils_1.logs)('searchForCandyHouse', 'Found in production so hit back then search for it');
        (0, utils_1.sendKeyBack)();
        Rerouter_1.Utils.sleep(1500);
    }
    // 1. find and tap candy
    var foundResults = findSpecificIconInScreen(ICONS.iconCandy);
    var filteredResults = filterOverlapFindIconResults(foundResults, 15);
    // console.log(filteredResults.length, JSON.stringify(filteredResults), filteredResults.length, JSON.stringify(filteredResults));
    if (Object.keys(filteredResults).length === 0) {
        (0, utils_1.logs)('searchForCandyHouse', 'findAndTapCandy did not see any candy > 0.95, skipping');
    }
    else {
        // Tap at most 5 possible candies
        var i_1 = 0;
        while (i_1 < Math.min(5, Object.keys(filteredResults).length)) {
            if (filteredResults[i_1].x < 93 || filteredResults[i_1].x > 575 || filteredResults[i_1].y < 37 || filteredResults[i_1].y > 300) {
                (0, utils_1.logs)('searchForCandyHouse', "Skipped as this point exceed feasible area: (".concat(filteredResults[i_1].x, ", ").concat(filteredResults[i_1].y, ") (93<x<575, 37<y<300)"));
                i_1++;
                continue;
            }
            (0, utils_1.logs)('searchForCandyHouse', "tapping: (".concat(filteredResults[i_1].x, ", ").concat(filteredResults[i_1].y, ") of ").concat(JSON.stringify(filteredResults)));
            Rerouter_1.rerouter.screen.tap({ x: filteredResults[i_1].x + 5, y: filteredResults[i_1].y + 5 });
            if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInCandyHouse, 2000)) {
                (0, utils_1.logs)('searchForCandyHouse', "rfpageInCandyHouse, return and let rfpageInCandyHouse page handle it");
                return true;
            }
            filteredResults = findSpecificIconInScreen(ICONS.iconCandy);
            (0, utils_1.logs)('searchForCandyHouse', "candies left > ".concat(i_1, ", ").concat(JSON.stringify(filteredResults)));
            i_1++;
        }
    }
    // 2. find and tap house, the arrow will move, so check multiple times
    for (var i_2 = 0; i_2 < 3; i_2++) {
        filteredResults = filterOverlapFindIconResults(findSpecificIconInScreen(ICONS.iconCandyHouseUpgradeArrow), 15);
        if (Object.keys(filteredResults).length > 0) {
            console.log('Found it via candyHouseUpgradeArrow:', JSON.stringify(filteredResults));
            break;
        }
        filteredResults = filterOverlapFindIconResults(findSpecificIconInScreen(ICONS.iconCandyHouseUpgradeArrow2), 15);
        if (Object.keys(filteredResults).length > 0) {
            console.log('Found it via candyHouseUpgradeArrow2:', JSON.stringify(filteredResults));
            break;
        }
        sleep(500);
    }
    if (Object.keys(filteredResults).length === 0) {
        (0, utils_1.logs)('searchForCandyHouse', 'findAndTapCandy did not see any candy house upgrade arrow > 0.95, skipping');
        return false;
    }
    var i = 0;
    while (i < Object.keys(filteredResults).length) {
        if (filteredResults[i].x < 93 || filteredResults[i].x > 575 || filteredResults[i].y < 37 || filteredResults[i].y > 300) {
            (0, utils_1.logs)('searchForCandyHouse', "Skipped upgrade house as this point exceed feasible area: (".concat(filteredResults[i].x, ", ").concat(filteredResults[i].y, ") (93<x<575, 37<y<300)"));
            i++;
            continue;
        }
        (0, utils_1.logs)('searchForCandyHouse', "Tap candy house green upgrade at: (".concat(filteredResults[i].x, ", ").concat(filteredResults[i].y + 25, ") of ").concat(JSON.stringify(filteredResults)));
        Rerouter_1.rerouter.screen.tap({ x: filteredResults[i].x, y: filteredResults[i].y + 25 });
        if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInCandyHouse, 2000)) {
            (0, utils_1.logs)('searchForCandyHouse', "Found upgradeable candyhouse at ".concat(filteredResults[i].x, ", ").concat(filteredResults[i].y + 25, ", return and let candy house handle this"));
            return true;
        }
        i++;
    }
    (0, utils_1.logs)('searchForCandyHouse', "Finish searching for upgradable candy house");
    return false;
}
exports.searchForCandyHouse = searchForCandyHouse;
function saveImageToDisk(crashType, img) {
    crashType = crashType === undefined ? 'crash-img' : crashType;
    var date = new Date(Rerouter_1.Utils.getTaiwanTime());
    var filename = "".concat((0, utils_1.padZero)(date.getMonth() + 1), "-").concat((0, utils_1.padZero)(date.getDate()), "T").concat((0, utils_1.padZero)(date.getHours()), ".").concat((0, utils_1.padZero)(date.getMinutes()), ".").concat((0, utils_1.padZero)(date.getSeconds()), "-").concat(crashType, ".jpg");
    if (img === undefined) {
        (0, utils_1.logs)('saveImageToDisk', "image not provided, get new one and save to: ".concat(filename));
        var img = getScreenshot();
        // TODO: write to images,
        // For nox/memu: /sdcard/Pictures/Screenshots/robotmon/
        // For redroid: /data/media/0/Download/
        saveImage(img, '/sdcard/Pictures/Screenshots/robotmon/' + filename);
        saveImage(img, '/data/media/0/Downloads/' + filename);
        releaseImage(img);
    }
    else {
        (0, utils_1.logs)('saveImageToDisk', "save given image to: ".concat(filename));
        saveImage(img, '/sdcard/Pictures/Screenshots/robotmon/' + filename);
        saveImage(img, '/data/media/0/Downloads/' + filename);
    }
}
exports.saveImageToDisk = saveImageToDisk;
function checkIfNeedCrash(reason) {
    saveImageToDisk(reason);
    if (scriptConfig_1.config.account === 'default_xrobotmon_account@gmail.com') {
        (0, utils_1.logs)('checkIfNeedCrash', 'rfpageGeneralMessageWindow, saved the problematic screen and crash the script');
        throw new Error('Intentional crash');
    }
    else {
        (0, utils_1.logs)('checkIfNeedCrash', 'rfpageGeneralMessageWindow, saved the problematic screen and hit back to see if it resolved');
        (0, utils_1.sendKeyBack)();
    }
}
exports.checkIfNeedCrash = checkIfNeedCrash;
function configSharePref() {
    var rtn = execute('ls /data/data/com.devsisters.ck/shared_prefs');
    if (rtn === 'exit status 1') {
        console.log('Did not find shared_pref, removing all related dirs');
        execute('rm -r /data/data/com.devsisters.ck/app_payload_lib');
        execute('rm -r /data/data/com.devsisters.ck/cache');
        execute('rm -r /data/data/com.devsisters.ck/code_cache');
        execute('rm -r /data/data/com.devsisters.ck/.sealing_reports');
        execute('rm -r /data/data/com.devsisters.ck/files');
        execute('mkdir /data/data/com.devsisters.ck/shared_prefs');
    }
    var content = readFile('/data/data/com.devsisters.ck/shared_prefs/com.devsisters.ck.v2.playerprefs.xml');
    if (content !== undefined) {
        var lines = content.split('\n');
        lines.splice(4, 0, '<string name="TITLE_FIRST_TIME_ANIMATION_TAG_KEY">time</string>');
        for (var idx in lines) {
            if (lines[idx].indexOf('OPTION_MUTE_BGM') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_MUTE_BGM" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_MUTE_SE') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_MUTE_SE" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_MUTE_VOICE') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_MUTE_VOICE" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_USE_LIGHT_SAFE_FILTER') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_USE_LIGHT_SAFE_FILTER" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_HIDE_SKILL_EFFECT') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_HIDE_SKILL_EFFECT" value="1" />';
            }
        }
        console.log('Write file return: ', writeFile('/data/data/com.devsisters.ck/shared_prefs/com.devsisters.ck.v2.playerprefs.xml', lines.join('\n')));
    }
    else {
        // no com.devsisters.ck.v2.playerprefs.xml file create one
        var playerprefsXML = "<?xml version='1.0' encoding='utf-8' standalone='yes' ?>\n<map>\n    <string name=\"TITLE_FIRST_TIME_ANIMATION_TAG_KEY\">time</string>\n    <int name=\"OPTION_MUTE_BGM\" value=\"1\" />\n    <int name=\"OPTION_MUTE_SE\" value=\"1\" />\n    <int name=\"OPTION_MUTE_VOICE\" value=\"1\" />\n    <int name=\"OPTION_USE_LIGHT_SAFE_FILTER\" value=\"1\" />\n    <int name=\"OPTION_HIDE_SKILL_EFFECT\" value=\"1\" />\n</map>";
        console.log('Write new file return: ', writeFile('/data/data/com.devsisters.ck/shared_prefs/com.devsisters.ck.v2.playerprefs.xml', playerprefsXML));
    }
    execute('chmod -R 777 /data/data/com.devsisters.ck/shared_prefs');
}
exports.configSharePref = configSharePref;
function mergeObject(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {
        var source = sources_1[_a];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== undefined) {
                target[key] = source[key];
            }
        }
    }
    return target;
}
exports.mergeObject = mergeObject;
function handleGeneralMessageWindow(taskName, image, finishRound) {
    var rfpageCanEquipToppingOrBeascuit = new Rerouter_1.Page('rfpageCanEquipToppingOrBeascuit', [
        { x: 262, y: 82, r: 60, g: 70, b: 105 },
        { x: 273, y: 101, r: 243, g: 233, b: 223 },
        { x: 257, y: 153, r: 199, g: 181, b: 170 },
        { x: 291, y: 241, r: 219, g: 207, b: 199 },
        { x: 300, y: 273, r: 12, g: 167, b: 223 },
        { x: 370, y: 272, r: 52, g: 82, b: 12 },
        { x: 383, y: 271, r: 121, g: 207, b: 12 },
        { x: 280, y: 156, r: 233, g: 233, b: 233 },
    ], { x: 371, y: 270 }, { x: 265, y: 270 });
    if (Rerouter_1.rerouter.isPageMatchImage(rfpageCanEquipToppingOrBeascuit, image)) {
        if (checkScreenMessage(MessageWindows.canEquipBeascuitOrToppingMessageScreen, rfpageCanEquipToppingOrBeascuit, image)) {
            (0, utils_1.logs)(taskName, 'rfpageCanEquipToppingOrBeascuit confirm canEquipBeascuitOrToppingMessageScreen, tap OK');
            Rerouter_1.rerouter.goNext(rfpageCanEquipToppingOrBeascuit);
            return true;
        }
        else if (checkScreenMessage(MessageWindows.canEquipToppingMessageScreen, rfpageCanEquipToppingOrBeascuit, image)) {
            (0, utils_1.logs)(taskName, 'rfpageCanEquipToppingOrBeascuit confirm canEquipToppingMessageScreen, tap OK');
            Rerouter_1.rerouter.goNext(rfpageCanEquipToppingOrBeascuit);
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageCanEquipToppingOrBeascuit checked but did not find any matching message window');
        Rerouter_1.Utils.sendSlackMessage(Rerouter_1.rerouter.rerouterConfig.debugSlackUrl, "CRK-".concat(scriptConfig_1.config.deviceId, ": in handleUnknown, rfpageCanEquipToppingOrBeascuit found an unknown message window"), "please check if this window is expected, send back and skip this task");
        (0, utils_1.sendKeyBack)();
        finishRound(true);
    }
    var rfpageGeneralMessageWindow = new Rerouter_1.Page('rfpageGeneralMessageWindow', [
        { x: 424, y: 101, r: 57, g: 69, b: 107 },
        { x: 294, y: 101, r: 60, g: 70, b: 105 },
        { x: 431, y: 128, r: 243, g: 233, b: 223 },
        { x: 429, y: 244, r: 219, g: 207, b: 199 },
        { x: 380, y: 100, r: 57, g: 69, b: 107 },
        { x: 319, y: 102, r: 57, g: 69, b: 107 },
        { x: 292, y: 108, r: 57, g: 69, b: 107 },
    ]);
    if (!Rerouter_1.rerouter.isPageMatchImage(rfpageGeneralMessageWindow, image)) {
        return false;
    }
    if (checkScreenMessage(MessageWindows.theNetworkIsUnstableMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm theNetworkIsUnstableMessageScreen, tap OK');
        Rerouter_1.rerouter.screen.tap({ x: 316, y: 250 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.theReloginIntoAnotherDeviceMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm theReloginIntoAnotherDeviceMessageScreen, stay here and wait for it');
        for (var i = 0; i < scriptConfig_1.config.sleepWhenDoubleLoginInMinutes; i++) {
            sleep(60000);
            (0, utils_1.sendEventRunning)();
            (0, utils_1.logs)('handleUnexpectedMessageBox', "Detect relogin, wait: ".concat(i, "/").concat(scriptConfig_1.config.sleepWhenDoubleLoginInMinutes, " mins to restart..."));
        }
        keycode('BACK', 1000);
        return true;
    }
    if (checkScreenMessage(MessageWindows.messageTeamDontMatchToSCRow1, rfpageGeneralMessageWindow, image) &&
        checkScreenMessage(MessageWindows.messageTeamDontMatchToSCRow2, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm PAGES.messageTeamDontMatchToSCRow1 && messageTeamDontMatchToSCRow2, send back and finish round');
        if (taskName === tasks_1.TASKS.towerOfSweetChaos) {
            finishRound(true);
        }
        (0, utils_1.sendKeyBack)();
        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
        (0, utils_1.sendKeyBack)();
        return true;
    }
    else if (checkScreenMessage(MessageWindows.skipTutorialMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm skipTutorialMessageScreen, skip this one');
        Rerouter_1.rerouter.screen.tap({ x: 390, y: 250 });
        sleep(2000);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.unfinishedPVPBattleMessageScreen, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.pvp) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedPVPBattleMessageScreen, skip current task');
            finishRound(true);
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedPVPBattleMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 394, y: 253 });
        sleep(2000);
        if (Rerouter_1.rerouter.isPageMatch(rfpageGeneralMessageWindow)) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow still not resolved, could be battleNotFinishGetAllianceBackMessageScreen, tap it');
            Rerouter_1.rerouter.screen.tap({ x: 317, y: 248 });
        }
        return true;
    }
    else if (checkScreenMessage(MessageWindows.messageCookieDryingOnSunbed, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.tropicalIslandClearBubble) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm messageCookieDryingOnSunbed, end current task');
            Rerouter_1.rerouter.screen.tap({ x: 320, y: 253 });
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm messageCookieDryingOnSunbed, tap to close and skip current task');
        Rerouter_1.rerouter.screen.tap({ x: 320, y: 253 });
        finishRound(true);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.bountyAddMoreCookiesMessageScreen, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.bounties) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyAddMoreCookiesMessageScreen, tap cancel and skip');
            Rerouter_1.rerouter.screen.tap({ x: 263, y: 252 });
            finishRound(true);
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyAddMoreCookiesMessageScreen, tap start and force run');
        Rerouter_1.rerouter.screen.tap({ x: 375, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.bountyHasExpired, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.bounties) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyHasExpired, tap OK and skip');
            Rerouter_1.rerouter.screen.tap({ x: 316, y: 252 });
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyHasExpired, tap OK and finish this task');
        Rerouter_1.rerouter.screen.tap({ x: 316, y: 252 });
        finishRound(true);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.unfinishedSuperMayhemBattleMessageScreen, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.superMayhem) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedSuperMayhemBattleMessageScreen, skip current task');
            finishRound(true);
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedSuperMayhemBattleMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 394, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.downloadDataNoLanguageTitle, rfpageGeneralMessageWindow, image) &&
        checkScreenMessage(MessageWindows.downloadDataNoLanguage, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm downloadDataNoLanguage, tap download');
        Rerouter_1.rerouter.screen.tap({ x: 320, y: 255 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.battleAbnormalButLastWasSavedMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm battleAbnormalButLastWasSavedMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 318, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.guildBattleAttemptNotUsedMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm guildBattleAttemptNotUsedMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 317, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.battleCompletedNotInflictDamageMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm battleCompletedNotInflictDamageMessageScreen, tap cancel');
        Rerouter_1.rerouter.screen.tap({ x: 264, y: 250 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.battleNotFinishGetAllianceBackMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm battleNotFinishGetAllianceBackMessageScreen, tap OK');
        Rerouter_1.rerouter.screen.tap({ x: 318, y: 251 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.newAreaAvailableMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm newAreaAvailableMessageScreen, tap OK to send the ballon');
        Rerouter_1.rerouter.screen.tap({ x: 375, y: 250 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.anErrorHasOccuredMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm anErrorHasOccuredMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 317, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.anUnknownErrorHasOccurProcessingRequest, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm anUnknownErrorHasOccurProcessingRequest, wait 5 secs and tap it');
        Rerouter_1.Utils.sleep(5 * 1000);
        Rerouter_1.rerouter.screen.tap({ x: 317, y: 253 });
        // var rtn = execute('am force-stop com.devsisters.ck');
        // logs(context.task.name, `rfpageGeneralMessageWindow confirm anUnknownErrorHasOccurProcessingRequest, ${rtn}`);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.messageNotifyQuit, rfpageGeneralMessageWindow, image) ||
        checkScreenMessage(MessageWindows.messageNotifyQuit2, rfpageGeneralMessageWindow, image) ||
        checkScreenMessage(MessageWindows.messageNotifyQuit3, rfpageGeneralMessageWindow, image) ||
        checkScreenMessage(MessageWindows.messageNotifyQuitRedroid, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm messageNotifyQuit/messageNotifyQuit2/messageNotifyQuit3/messageNotifyQuitRedroid, send back');
        (0, utils_1.sendKeyBack)();
        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
        return true;
    }
    saveImageToDisk('unknown-message-window', image);
    if (scriptConfig_1.config.account === 'default_xrobotmon_account@gmail.com') {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow, saved the problematic screen and crash the script');
        throw new Error('Intentional crash');
    }
    else {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow, saved the problematic screen and hit back to see if it resolved');
        (0, utils_1.sendKeyBack)();
    }
    return false;
}
exports.handleGeneralMessageWindow = handleGeneralMessageWindow;
function checkIfInBattle(task) {
    // read the life bar of both players
    var rfpagePvPBattling = new Rerouter_1.Page('rfpageBattling', [
        // From PVP
        // { x: 284, y: 17, r: 145, g: 219, b: 143 },
        // { x: 351, y: 16, r: 77, g: 32, b: 12 },
        // From Super mayhem
        { x: 354, y: 14, r: 125, g: 12, b: 251 },
        { x: 285, y: 15, r: 65, g: 205, b: 12 },
    ]);
    var rfpageBountyBattle = new Rerouter_1.Page('rfpageBountyBattle', [
        { x: 454, y: 21, r: 82, g: 209, b: 0 },
        { x: 591, y: 10, r: 255, g: 255, b: 255 },
    ]);
    var rfpageTOSCBattle = new Rerouter_1.Page('rfpageTOSCBattle', [
        { x: 608, y: 41, r: 47, g: 35, b: 38 },
        { x: 616, y: 17, r: 205, g: 205, b: 203 },
    ]);
    var rfpageInIslandBattle = new Rerouter_1.Page('rfpageInIslandBattle', [
        { x: 594, y: 12, r: 249, g: 37, b: 38 },
        { x: 590, y: 20, r: 24, g: 24, b: 24 },
        { x: 453, y: 21, r: 85, g: 211, b: 2 },
    ]);
    var rfpageCookieAllianceBattle = new Rerouter_1.Page('rfpageCookieAlliance', [
        { x: 442, y: 20, r: 85, g: 215, b: 2 },
        { x: 36, y: 21, r: 51, g: 227, b: 255 },
    ]);
    var rfpageGuildDragonBattle = new Rerouter_1.Page('rfpageGuildDragonBattle', [
        { x: 556, y: 12, r: 90, g: 27, b: 175 },
        { x: 158, y: 338, r: 126, g: 247, b: 51 },
    ]);
    var rfpageGuildAllianceBattleAutoEnabled = new Rerouter_1.Page('rfpageGuildAllianceBattleAutoEnabled', [
        { x: 20, y: 254, r: 173, g: 171, b: 4 },
        { x: 29, y: 254, r: 163, g: 157, b: 7 },
    ]);
    var rfpageGuildAllianceBattleAutoNotEnabled = new Rerouter_1.Page('rfpageGuildAllianceBattleAutoNotEnabled', [
        { x: 19, y: 253, r: 163, g: 161, b: 163 },
        { x: 28, y: 252, r: 171, g: 171, b: 171 },
    ], { x: 19, y: 253 });
    var rfpageAutoUseSkillEnabled = new Rerouter_1.Page('rfpageAutoUseSkillEnabled', [{ x: 28, y: 291, r: 223, g: 221, b: 1 }], { x: 41, y: 289 });
    var rfpageAutoUseSkillNotEnabled = new Rerouter_1.Page('rfpageAutoUseSkillNotEnabled', [{ x: 41, y: 289, r: 203, g: 203, b: 203 }], { x: 41, y: 289 });
    var rfpageAutoUseSkillNotEnabled2 = new Rerouter_1.Page('rfpageAutoUseSkillNotEnabled2', [{ x: 41, y: 289, r: 197, g: 193, b: 195 }], { x: 41, y: 289 });
    var rfpageSpeedBoostEnabled = new Rerouter_1.Page('rfpageSpeedBoostEnabled', [{ x: 32, y: 331, r: 161, g: 159, b: 8 }]);
    var rfpageSpeedBoost25Enabled = new Rerouter_1.Page('rfpageSpeedBoost25Enabled', [{ x: 36, y: 334, r: 153, g: 151, b: 8 }]);
    var rfpageSpeedBoostNotEnabled = new Rerouter_1.Page('rfpageSpeedBoostNotEnabled', [{ x: 33, y: 319, r: 203, g: 203, b: 203 }], { x: 33, y: 319 });
    var rfpageSpeed1_2x = new Rerouter_1.Page('rfpageSpeed1_2x', [
        { x: 20, y: 333, r: 211, g: 209, b: 2 },
        { x: 32, y: 334, r: 161, g: 159, b: 8 },
    ], { x: 20, y: 333 });
    var gpInBattle = new Rerouter_1.GroupPage('gpInBattle', [
        rfpagePvPBattling,
        rfpageBountyBattle,
        rfpageTOSCBattle,
        rfpageInIslandBattle,
        rfpageCookieAllianceBattle,
        rfpageGuildDragonBattle,
        rfpageGuildAllianceBattleAutoEnabled,
        rfpageGuildAllianceBattleAutoNotEnabled,
        rfpageAutoUseSkillEnabled,
        rfpageAutoUseSkillNotEnabled,
        rfpageAutoUseSkillNotEnabled2,
        rfpageSpeedBoostEnabled,
        rfpageSpeedBoost25Enabled,
        rfpageSpeedBoostNotEnabled,
        rfpageSpeed1_2x,
    ]);
    var matchedBattlePages = Rerouter_1.rerouter.getPagesMatch(gpInBattle);
    if (matchedBattlePages.length === 0) {
        return false;
    }
    (0, utils_1.logs)('checkIfInBattle', "Found matched battle page: ".concat(JSON.stringify(matchedBattlePages)));
    if (matchedBattlePages.some(function (element) { return element.name === 'rfpageGuildAllianceBattleAutoEnabled'; })) {
        (0, utils_1.logs)('checkIfInBattle', "Auto skill in Guild Battle correctly enabled");
    }
    else if (matchedBattlePages.some(function (element) { return element.name === 'rfpageGuildAllianceBattleAutoNotEnabled'; })) {
        Rerouter_1.rerouter.goNext(rfpageGuildAllianceBattleAutoNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        (0, utils_1.logs)('checkIfInBattle', "Tap guild alliance auto skill enable 1 time for rfpageGuildAllianceBattleAutoNotEnabled");
    }
    if (matchedBattlePages.some(function (element) { return element.name === 'rfpageAutoUseSkillEnabled'; })) {
        (0, utils_1.logs)('checkIfInBattle', "Auto skill correctly enabled");
    }
    else if (matchedBattlePages.some(function (element) { return element.name === 'rfpageAutoUseSkillNotEnabled' || element.name === 'rfpageAutoUseSkillNotEnabled2'; })) {
        Rerouter_1.rerouter.goNext(rfpageAutoUseSkillNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        (0, utils_1.logs)('checkIfInBattle', "Tap auto skill enable 1 time for rfpageAutoUseSkillNotEnabled");
    }
    if (matchedBattlePages.some(function (element) { return element.name === 'rfpageSpeedBoostEnabled' || element.name === 'rfpageSpeedBoost25Enabled'; })) {
        (0, utils_1.logs)('checkIfInBattle', "Speed boost correctly enabled");
    }
    else if (matchedBattlePages.some(function (element) { return element.name === 'rfpageSpeedBoostNotEnabled'; })) {
        Rerouter_1.rerouter.goNext(rfpageSpeedBoostNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        Rerouter_1.rerouter.goNext(rfpageSpeedBoostNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        (0, utils_1.logs)('checkIfInBattle', "Tap speed boost 2 times for rfpageSpeedBoostNotEnabled");
    }
    else if (matchedBattlePages.some(function (element) { return element.name === 'rfpageSpeed1_2x'; })) {
        Rerouter_1.rerouter.goNext(rfpageSpeedBoostNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        (0, utils_1.logs)('checkIfInBattle', "Tap speed boost 1 time for rfpageSpeed1_2x");
    }
    // 如果打太久要停
    var maxBattleTimeInMins;
    switch (task) {
        case tasks_1.TASKS.tropicalIslandClearBubble:
            maxBattleTimeInMins = 15;
            break;
        case tasks_1.TASKS.guildBattleAlliance:
            maxBattleTimeInMins = 40;
            break;
        case tasks_1.TASKS.pvp:
            maxBattleTimeInMins = 10; // PVP 常會閃退重開
        default:
            maxBattleTimeInMins = 6; // 能容許一次重開
    }
    if (storage_1.globalStorage.botStatus.battleStarted === 0) {
        (0, utils_1.logs)('checkIfInBattle', "battle started");
        storage_1.globalStorage.botStatus.battleStarted = Date.now();
    }
    else if (Date.now() - storage_1.globalStorage.botStatus.battleStarted > maxBattleTimeInMins * CONSTANTS.minuteInMs) {
        (0, utils_1.logs)('checkIfInBattle', "Max battle time reached (".concat(Date.now() - storage_1.globalStorage.botStatus.battleStarted > maxBattleTimeInMins * CONSTANTS.minuteInMs, "), force stop"));
        Rerouter_1.rerouter.screen.tap({ x: 615, y: 19 });
        Rerouter_1.Utils.sleep(1500);
        Rerouter_1.rerouter.screen.tap({ x: 321, y: 198 });
        return true;
    }
    else if (Date.now() - storage_1.globalStorage.botStatus.battleStarted < 10 * CONSTANTS.minuteInMs) {
        (0, utils_1.logs)('checkIfInBattle', "battle last: ".concat((Date.now() - storage_1.globalStorage.botStatus.battleStarted) / CONSTANTS.minuteInMs, " mins"));
    }
    (0, utils_1.sendEventRunning)();
    return true;
}
exports.checkIfInBattle = checkIfInBattle;
function passiveAddRoute(pages) {
    var _loop_3 = function (pageIdx) {
        var page = pages[pageIdx];
        if (!(page instanceof Rerouter_1.Page)) {
            return "continue";
        }
        if (Rerouter_1.rerouter.getPageByName(page.name) !== null) {
            return "continue";
        }
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(page.name),
            match: page,
            action: function (context, image, matched, finishRound) {
                if (page.next === undefined) {
                    console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path, " but does not have next page to go"));
                    return;
                }
                console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path));
                Rerouter_1.rerouter.goNext(page);
            },
        });
    };
    for (var pageIdx in pages) {
        _loop_3(pageIdx);
    }
}
exports.passiveAddRoute = passiveAddRoute;
function assign(target, source) {
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
    return target;
}
exports.assign = assign;
// https://ga-dev-tools.google/ga4/event-builder/, https://developers.google.com/analytics/devguides/collection/protocol/ga4/sending-events?client_type=gtag#send_an_event
function sendCounter(taskName, finishedPageName, furthurInfo) {
    var eventHour = new Date().getHours();
    var stringHour = (eventHour < 10 ? '0' : '') + eventHour;
    var body = {
        client_id: scriptConfig_1.config.licenseId,
        user_id: scriptConfig_1.config.userId,
        non_personalized_ads: false,
        events: [
            {
                name: "".concat(taskName, "_done"),
                params: assign({
                    rerouter_page: "".concat(finishedPageName),
                    rerouter_task: "".concat(taskName),
                    engagement_time_msec: 100,
                    license_id: scriptConfig_1.config.licenseId,
                    user_id: scriptConfig_1.config.userId,
                    device_id: scriptConfig_1.config.deviceId,
                    event_hour: stringHour,
                }, furthurInfo),
            },
        ],
    };
    httpClient('POST', 'https://www.google-analytics.com/mp/collect?measurement_id=G-1J3WHD2SDV&api_secret=bE8-LEC6REuSDW_G3Mt87Q', JSON.stringify(body), {
        'Content-Type': 'application/json',
    });
    (0, utils_1.logs)(taskName, "Sending counter with ".concat(scriptConfig_1.config.deviceId, ", ").concat(scriptConfig_1.config.licenseId, ", ").concat(JSON.stringify(body)));
    (0, utils_1.logs)(taskName, "Sending counter for task '".concat(taskName, "' at page '").concat(finishedPageName, "'"));
}
exports.sendCounter = sendCounter;
// 往Slack報告上一頁是 context.lastMatchedPath，下一頁應該是 targetPage，印出不符合的顏色點
function quickReportWrongPointToSlack(context, targetPage) {
    Rerouter_1.Utils.sendSlackMessage(Rerouter_1.rerouter.rerouterConfig.debugSlackUrl, "CRK-".concat(scriptConfig_1.config.deviceId, ": Target page seems like missing: ").concat(targetPage.name, ", skip task"), "".concat(context.task.name, " task were in ").concat(context.lastMatchedPath, " but is now unknown, perhaps *").concat(targetPage.name, "* screen is updated, Point check: ").concat(findUnmatchInPage(targetPage)));
}
function unknownCheckMissingPage(context, finishRound) {
    Rerouter_1.Utils.log("unknown count ".concat(context.matchTimes, ", task: ").concat(context.task.name, ", during ").concat(context.matchDuring, ", last matched: ").concat(context.lastMatchedPath));
    switch (context.task.name) {
        case tasks_1.TASKS.bounties:
            if (context.lastMatchedPath === "/rfpageSelectAdvanture") {
                quickReportWrongPointToSlack(context, bounties_1.rfpageInBounties);
                finishRound(true);
            }
            else if (context.lastMatchedPath === "/rfpageInBounties") {
                quickReportWrongPointToSlack(context, bounties_1.rfpageInOneOfTheBounties);
                finishRound(true);
            }
            else if (context.lastMatchedPath === "/rfpageInOneOfTheBounties") {
                quickReportWrongPointToSlack(context, bounties_1.rfpageReadyToBattleBounty);
                finishRound(true);
            }
            break;
        case tasks_1.TASKS.gnomeLab:
            if (context.lastMatchedPath === "/rfpageUncollapsedAffairs") {
                quickReportWrongPointToSlack(context, gnomeLab_1.rfpageInGnomeLab);
            }
            break;
        case tasks_1.TASKS.haborShopInSeaMarket:
            if (context.lastMatchedPath === "/rfpageInSeasideMarket") {
                quickReportWrongPointToSlack(context, tradeHabor_1.rfpageMarketItemDetail);
            }
            break;
        case tasks_1.TASKS.guildBattleDragon:
            if (context.lastMatchedPath === "/rfpageBattleDragon") {
                quickReportWrongPointToSlack(context, guild_1.rfpageReadyToFightDragon);
            }
            break;
    }
}
exports.unknownCheckMissingPage = unknownCheckMissingPage;


/***/ }),

/***/ "./src/icons.ts":
/*!**********************!*\
  !*** ./src/icons.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.iconGreenBubbleBlueGem = exports.iconRedBubbleWhiteCheck = exports.iconSeasideMarketItems = exports.wNumbers = exports.bNumbers = exports.numberImagesProdutRequirements = exports.iconSeasideMarketDetailAuroraBrick = exports.iconSeasideMarketDetailAuroraColumn = exports.iconSeasideMarketDetailAuroraCompass = exports.iconSeasideMarketDetailBeans = exports.numberAuroraStockInTradeBird = exports.numberImagesWishingTree = exports.numberImagesPvP = exports.numberImagesSuperMayhem = exports.iconsGnomeLabCookies = exports.iconsGnomeLabKingdom = exports.iconsAuroraItems = exports.iconSunbedGreenCheck = exports.iconGreenCheckedWithGiftBox = exports.iconTowerOfSweetChoasDownArrow = exports.iconBountiesGreenEnter = exports.iconWhiteSword = exports.iconRedSword = exports.iconIslandHammer = exports.iconRedExclamation = exports.iconGreenCheckGoldCoinInVillage = exports.iconGreenCheckedGreenBackground = exports.iconGreenCheckedWhiteBackground = exports.iconCandyHouseUpgradeArrow2 = exports.iconCandyHouseUpgradeArrow = exports.iconCandy = exports.iconSendAllSmall = exports.iconSendAll = exports.iconWhiteCircleWhiteCross = void 0;
var types_1 = __webpack_require__(/*! ./types */ "./src/types.ts");
// In login page
exports.iconWhiteCircleWhiteCross = new types_1.Icon('iconWhiteCircleWhiteCross', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAASABIDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4L/Zd/ZxPxYkW4FjBfX9yJf7J0ueYJ9qaPrGgPEkrEEJH1YjaoZmVT1HxU/Zbgj+Htv4xHh+20ee+Mv8AY0SYiluljyHk8kc+VvBjEhABdWClijgUP2Svij8P9BaDTPHmnG9bSzJLYaabryI7yQktGsjjDCMOSXVCHZRhWUnevpX7T37Tlh4+07/hP/HxD+OXBhuru3dVj1OMIBCzQqMRSRgBCy4RkCnaHDNJ9xJ1lWstv6/r+tPkI+xdG73/AK/r+tfjTyAeSooqxs/2f0ors0OXmJMD0owOuKKKCAooooA//9k=', 0.95);
// In train page
exports.iconSendAll = new types_1.Icon('iconSendAll', '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', 0.9);
exports.iconSendAllSmall = new types_1.Icon('iconSendAll', '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', 0.9);
exports.iconCandy = new types_1.Icon('iconCandy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TPAfi86p4R1Pwj4p8FjW765tJbzVLjVr9JFvLAR7XidZGzINgIK8kqDxxXyh8ev29Pi58DPitqfwp+HP/BQTwV4D0TSEtk07wj4p8N6vql9pqPbxSbJLltIuzICXLoPPk2o6J8u3YpRX3+T8P5dmGd1VUTXu30t3S6po/laOaZllmFp0KdaXLFzimm4StFreVPklK923zN3dm9Vc/9k=', 0.95);
exports.iconCandyHouseUpgradeArrow = new types_1.Icon('iconCandy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAQAAsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7O8IfBr4c+H9T8c6fqXjCz1OTQtZn0/wrP44tn1e0knitYMpLZ6fJa/akhvJLhJvtEgDrbLCn7zzpU9b8N/8ABQv4H6TolvpXxu/Z98b6Z4ptUMOq2XhL4M+IPEuloVJVDaanp+myQXUDRhGRspIqsEmht5lkt4/zg/YM/a0+BP7JvgLxB+zX+17+1xY6Jd+Ddbs9O8CQ+N9SQSP4dTRtNEH2dkgjDwLcC8RRtYxlGjMkrIXPiv7UvxF/4Lk/tN/HvxF8Zv8Aglg/xC8RfAfUZ4bXwPrfhm0tP7PvGs4I7K/kgMwDtGb+3vMMRhvvD5SK/l3Jc68R8fx7jssw2Eo0sNSh7spqrCnK0lZqpyPmnJT1jypWhpZxblw1s64nq57iMLWgv3eiu5aWdnrrv6K+5//Z', 0.86);
exports.iconCandyHouseUpgradeArrow2 = new types_1.Icon('iconCandy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9BvEP7IP7PPwt+Kll5+q6haaXqqi91jRbDxAq2MEPyxi4fzI3uo1McRiigtmG5o0VESOO4mh2L/wB+xD8SdAk/wCE+8LaP4Jn8J2ph0XxBp+rC2nbS55oi2bl8faN0+0zRzqzxyyqx5ljlk/LiL9rz4bfsV+P9J/a6+JNz8QdY8M+KPDjeCLnQ7LW3vXtnhuJL+waK3u7hYkhg8vVFVUkQJ9vO1MM2Pur/gkF8WPgT+3p4y8Y/wDBQvwb4S8QQWPhOyT4ceGrbxLc7bizkZodU1WZLSKaS2QXAuNHTzSzSn+zyv7teJP5/WZ8QT8RVltPDU44B0nOU9OeTaVk/euuWasklblbbu+Xl9HMsbn+X8VfUJyTpximpJu+qv8A8Da3qf/Z', 0.86);
exports.iconGreenCheckedWhiteBackground = new types_1.Icon('iconGreenCheckedWhiteBackground', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAVABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9hfHH7cngXwTe6hql/wCDPFN74N0HUZdP8U/EfTrCB9F0W6iz50cuZ1uZliOVmntoJoLZklE8kX2e48rsfi/8e/BfwR+HV78TPGlxcPZWnlR29rptqbi61C5mkWK3tLaJfmmnmleOKONeWd1HfNfnd+2X4A+IX7OHj6XxFbXMl98NfEuvXd5pF4u8t4d1nUb2S6ubO56jyLq8uJpYLjgLLM1u+Abbd5roX7REHgL4axWWoeM9Re18KxXI8MR6nPGmneDNOaLZMbIIokMsivJbo0hc21uxtbQRx3Dxn8Pz7xbxnDObYzL8fgJKcUnQcZcyq3dl9lct9NuZq0lva/wWZ8dYLJMzq4LH05QaV6b39ptpHTdt2++7R7l+0l+0j8TLrwVc/FW1+IXijTvireL5XhDSPCfjG+bTNO1WXK6dolrp0Eq2WsNvwJ7i8gnM7yTunk20UCQ/ofHrzmNTMFVyo3KpyAe4BwM/kK+Hf2Df2Zr/AE68sv2qPjx4cuLfxZPZungzw9qi/vPCthMuHd4+iajcIcTPy0UWLdSB55m+qv8AhID/AM9j+dfU+HeC4tw+W1MbxHiHPEYhqXs7JQoxSsoRS6tazfV97Xf02TrMZ4b22M0lPXl/lXb17nkfxGs9C+JHhjV/ht458PWup6JqltLZanp92m6O5hddrK3pkHqMEHkHIBrwH4S/8E+/hp8MviDpfjrWfHniTxZH4euVuvD+l+JTaPHb3S4MV1M8UCSXc0RGYnlZtjYkIaVUlUor6zFZZl2OrUq2IoxnOm7wbSbi+6b2Z0YnL8Di61OrWpRlKm7xbSbi+6b2PpTT/FWoyXSQShWDuASeozxWodUuAcYoorsb1O+KTWp//9k=', 0.91);
exports.iconGreenCheckedGreenBackground = new types_1.Icon('iconGreenCheckedGreenBackground', '/9j/4AAQSkZJRgABAQEAYABgAAD/4QA6RXhpZgAATU0AKgAAAAgAA1EQAAEAAAABAQAAAFERAAQAAAABAAAAAFESAAQAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9KvH/APwUBs78XC6hceILPw/Dff2Zcazb+G9RXw/Dcib7O0UmpiE2oInzC26basqmNtsg21c1zx3Z+GdFvNS1G8t7HT9Pge5urm4lEcNvEilnd2JwqqoJJPAANfEup/EfXPh1ZQ/B/wARtJJoGi6c9r4fgc77DXtJChHYofka5VWxdIRlmfzduyTg8HeOLqPQ7G11rxFHrGi+E7qKXw3obRzT3V3cKwaGTUJX+SeG02gwoSzyyGJpgzW++f8AhXPs+p4vFyniKlRuMU+ao1L2i700l7qb0UW3bdtNSS+Br8eYHDYqrhcW3TcFdX+0v7vm+i6+R7dq3iCb4kRah4i8aX3ibw3YsM+H9AttbvNCbTbILv8A7S1B7aWGY3Uw+ZbWZjFBCE8yMyvIqd9+yN+0H4i+Iv7P+i6xearqUy3U16tldSI1q+pWKXk8dneNGFRQ1xbLDOSqIjGUsqIpCj5U8H6fc/theL5v7VZrr4b6Zds+rTTnevi++R8m2U/8tLWKQZmf7ssimMblSQn6lHiZVGAy/nXlwzbHpc+Iapt25YRVvZxV9JP4pTndSld6WX+GPflOaYjEw+tVvdjL4Y9Uujfmz5/+N2k2fxh8Jvpc0k1jdWsy3em6lCAbjTLtM+XPHnuMkEdGRnU/KxFeFaf8KvH3ibUI9J1aHSdBsZCE1XWNN1BpHuYSDvSziKB4Xk+6Wdj5as2zcQpBRXyFHOa1OPK1GVtVdX5X3Wtvk7q+tj5TMMswmNqwrYumpSpu8W+n+a8ndH0j4X8S2nhHRLPS7Czgs9M0+FLe3t4IxGkEajCqoHGABjFdhavdXkCyRoWjbkHcBmiirwNadaUvaO/U9qjVlLRs/9k=', 0.92);
exports.iconGreenCheckGoldCoinInVillage = new types_1.Icon('iconGreenCheckGoldCoinInVillage', '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', 0.95);
// In tropical island
exports.iconRedExclamation = new types_1.Icon('iconRedExclamation', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAbABcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9yPj58YIfgj8DPGnxnTQJtXPhDwnqOtDS4JAj3ptbWSfyVY8KX8vaCehNflr4x/4KbX//AAgekfETwH8X/if/AMLmNuLrXNZ1LWgvhJJ/K3Gzi0NXe3ksGf8AdhjFHepFh/tLzAuf0u+Iy2Hjr4e694I1Aebb6zo11Yzxk/fSWJo2HTuGNfzh6fruo2nwUttcYTCMeEEuVuF/hH2YNuLLwpByD6EEHkV8PxhmOZ4KNFYSfLztpu3+Fq10/P7z9+8COCuF+Mp5m84g5fV6anG0uVfbTTs9ej7aa32P6V/gB8aNP+PHwH8E/HG00SfTIvGfhHTddi024kDyWi3drHcCJmGAzKJNpIABIorjv2fbdfh58BPBHgB0aE6H4Q03TzCylShhtY49pGOMbcY7UV9opOyufz/J+87PT5GTP46tYZGi+0FivBwa/B3x38R/gvqmjT/EXWPgH4f034mPrE2va5rNzrEy/Z/EokknNj/Yhf7GFhvf3f2WS3ea4SHLFpJDKf2YN/eI5RbhsDpXG3XwF+BN98SV+M178EfB03jBZUlXxXL4XtG1ISIoRXF0Y/N3BQFB3ZAAHQV89m2W18zhTUKrhyu+nU+y4N4vy3haripYrBrEe1puEbycOVv7Xu/Eu8Xps9Gj3Dwx8R7jVdCsb3XbM6fezWUcl5Z+aJBbylAXj3D721iRnviiuBa/vGRgZz0/rRXrrn6nyELVFdfkj//Z', 0.935);
exports.iconIslandHammer = new types_1.Icon('iconIslandHammer', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAWABkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9H4/i7oP7OvxV8S/Dv9nPwLY+PPH2nXEen/EL4sfF7xpJYie9aCK9TS4ZrSxupW8uO6jnNnbW1tYW5uhs2ySSJW7o/wC0d/wU+8RnUPH2g/s8/BW80HQZ3tZPC1h8RdQk1HxK8aP5s1hfz2MFvbDzPLiSK5iG9klLSxJsdsX/AIKGfsA/Cf4z+BPHPx7+DngNdO+ND6CJtN17R9fuNLbWJrVQ0dteBJUt7kSRobcNco4VXAJVV48W/ZQ/bk8PSeCdM1/wv4geXw/NbxrZX4jJt5I9gaOKeEcwTeXsO372CDwpBPBBylVcKk+Xta2q+a3XVa/id6jQjh4yowTS0d09HZdnaz6aL71c+u9D/aw/Yt/at8L+IfhH8Z7bStKvtIiim8bfC/4v6bb2d7pirLG0U09rdFopoRKYWjuoWlgLmMpKWxUf/DEP7JH/AEVL4of+JN+Mv/lzXmd1oXwA/bY8XaPrnx4+EHhHxJofg1bpNGPiHR7fUba4vriOISuhmQhIkjABX5keRgWw9shrW/4YC/4Jl/8ARpnwa/8ACN03/wCN1u44rZJS+9foznnTwFTWSa+Sf3O6If2+P2qtX/Zr/Z8uPEvhvRorzXPEGpweH9A+3RCS0t7u6Dqs9wmQZIo1V3MY5kKqmUDl1/OD4O+Ifin8XPHng79jP4exaEup/wDCNpp/g74ja8pTUNF0rTY1KxXMUEZj1RIk2eTaSeXASqiXftDkor4PiTCUcyzTDUcRdxhKM42lKLUk3qnFp3tpvqm09Gz7jh2lTpZDiK8UubVX30SWlnpbXY674T/tl+KvBv7LnjL4t+GLeeO48DT3+keJNL81Uhu9Ws7aJrp7diH2xM7jy5mUSYGWj42n0L/h2V/wUf8A+j9vBv8A4auz/wDiKKK+ldSrWjDmk/hWza6vs12PDq06WGqTVOK+JrVJ6JLa6dt3sf/Z', 0.935);
exports.iconRedSword = new types_1.Icon('iconRedSword', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAaABMDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9J/2kf+CnngbwiqeE9AXUtJF7ZS3E+sPpVxcPaWcckMU1zKbdJEsrdXuIEN1O6opmUZViCPkXSvHnwB+OXxR8Sal8adSu7vwrpUdpafDzxJo/ivUNP0uG5EP2i+uvtmm3cDSzkvDEDJugh+yhVlMs80K7P7Neh/Hzxb+0b8SPiX8G9QsrzQtM8PaNpOv2XiOOSKK81QPNcW9hY3USfuTHbzSXM5cTANdWq7F83zIpvFPhP4G/HyK60r4fxy+CPFcsst5c2FxZ+Ut1JuDSyG3R/IulZ5Q0txbsX8x08yQlfLP8ueLPF3GGAwTvhqtHCzty4unaUYO/vRlFRk6WqSUpJqWtvL+gMvjwrl+cV+H6clFwa5lGT9o7LRybfvJPdR+Ha2pFqX7Mv7RdtfzR/DP9ubXtE0EyFtM0nWPCljrNxaRt83lm9uf31woJO1pSzhNoZ3ILkr5C134R/s1fDXVJPA/7Rn7MWoan4309UTxHqun+MrY299OVDfaYQ+owMkUissiIYYyiuF2LtxRXzuCyrjmrg6c6XFsHFxi0/q9GV00rPmc7y06vV7s+iVCnbSvFLs6k016rl0Z+in/BLXwpB8Sv2BPFWm+A5Ld9c134zeJLfxPqUzB3smN1HD5mM5LLp0VqqKCOPL5AryH/AIKHfHX4b6neQ/sN/B1YLq28M6vb3HjDxlpOohW0KW1nEsVjZXED749SeaNTcOCDDE0qN+9mGz5A+M/xa+Kvwt/4J3eLrD4Y/EzxB4cg1b9oe4tdUh0HWp7NLyCXw5pfmxSiJ1EiPk7lbIbPINXfBul6ZoPhex0nQ9OgsrWK1Tyra0hWONMjJwqgAZJJ+pr+ic0z6thuG6ODhBWqQs29dGrNWt1PnOBfCfJ+KvF7Msdj6rlHC1ZNQt8TUmld32T1atrs3Y6RfhV8EdTL6l8QNDTxfrNxK8l/4i8VxR3d/eMzEgyy7VztBCKAAFRFUABRRWWZJMn5z+dFfBU63soKEEkloktEktkl0R/X8OD8ihFRjRjZf3V/kf/Z', 0.88);
exports.iconWhiteSword = new types_1.Icon('iconWhiteSword', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAdABcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9t/i/+0J8G/gF4bg8W/GD4hab4c0y6v0soL/VrgRRNMyO+3J6ARxyyMxwqRxSSMVRGYfKn7Z/7T3hfx/8evD3wX/4XB4g0TwPaeCIvFE/iLwB43m0satd30lzb2KTahYsHt7WKK1up8FhHcvLB8w8jElX9rK/+KPiD9tbwEfg5q9vrV74a+Hev6lrPhnUENvBpdvMY4YL2O+Ri1veXVyqWcatFKGt11AqYwsok8U1j4W/A34qy6vpPgnQ7n4ceM7i6uZNd0D7FDAZ54vLWa4ntI38m82+fEGubd8lpFR5sgoPwPxh4/4i4Zy+rQw+Eq06M1FLGQUZwpyum1ONpON1onKKTvZdbfd8G5TkmNzOlHF1lzNN+zXxW1Skk7XS3drvt0Z9Efsp/tIfGL4WfHvw1+zL8SviDrPxB8O+M7G9/wCEX17WhbyatolzZW6zPFcywpGbuykiVttzIjTRz7I5ZZvtMZjK88/4JZeDfht8HfFmr+DviHHqcfxkOmXkzC7vJbnTF8Om/Hl/2O3+qit9xtRcJtine4TzJIwjQMSvuvDGvmdXgjCVMwxscZUkr+1jazi37qbTacorST7pni8VQwdHPKtPDU3CMdLNWvb7SXRPdHb/ALNM154o+Ov7VPiXTon1nxHY614Z0bStKluwEhtINDS6tQNzKEQ3WoXzscjOWHJBzxP7V3gbQND8OWH7HPhbUrfUfij4uYX9trps/PuPDlq8q/a/EkhDxvb+UFaO2JYeddLDHh0Sdkq+NPgB8XPDn7QnjPxn8IP2odZ8Caf4u0uy0nxraeGfD9kb7U5dPe7S3uY7y6Sb7K3l3JQ7I9+I0IcEDHQfCf4R+A/gtY3sHgfS5/tmrXX2rXtc1S/lvdS1e5Ocz3d3OzzXEnJwXY7QcKFGBX2qqTlgJ4SUE4ycua+qak3pbzTtrt5nyuJwGFq5vTzBzd4RhypXVpRSWr7XV7K99ro6z9mT4G6X8CNR8Q+Itc+Kuq+M/EWvzRQP4j1+0toLqLS7febSx220ccRWNpriQuqK0kk7sRjaqlWtGN1qupR2H2ny/M3fPtzjCk9OPSiuPA4HB5XhIYXCU406cFaMYpKKXZJaJHfXxFfGVnWrScpPdvc//9k=', 0.88);
exports.iconBountiesGreenEnter = new types_1.Icon('iconBountiesGreenEnter', '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', 0.97);
exports.iconTowerOfSweetChoasDownArrow = new types_1.Icon('iconTowerOfSweetChoasDownArrow', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAeAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD85vAPiXxH+0J8R/C3wb8KaRZyeKPGfibS9B0qW6xAlzf3c8dnbedMCwSMPMoZ1jB2jcVdlFfon8Qv+DXzw94jVdQ13/goubSG0LbLj/hSKrtQno7Nr+D27DnPTJFfnt/wT6tPBVj/AMFFPgfYWHjq2a90z49+CHS2iu42ivEk1+xK+UsjecpVSSy5kC7T83Ir+hDxffa14v1CS71CSTyN+be1Dny48ZwcAYLcnLdTnrgADzqOV/Vqko11eadj6vNc3r88Y4eVo21Vlvf9D8sz/wAG1/hiz1uPTPhV/wAFD7zVvEMx8rRIrr4PnT7Ge8YlIoZ7tNYmkghZ9oeaOCcojFljlI2H804NXtruxt9WvbpYTdwpKPtEoB5UHGSeTX9PPwu8NQR/FHw3c+SAya/ZsRtJBxOh9K/m0+E6fAS08HaZLe3vhe71GbS4Gvf7b1y3Z0bYuVCEtswTjGAR0PIqcThI6OCsyspzWveaqyvtbb/gH3Z/wTK/4K7+Mf2IdFf9mX9o/wAUXtj8JEub278C+KdCt3ij8OT3N1Ndy2N7DbAM0E1xPL5dx8xjkdEfEL5tf1Q8OeIvCuu+HrLxP4f1Ww1LT9Rs4rvTtQ0+7jnt7u3kUPHNFIhZZEZSGVlJDAggkGv57WuILrTZbW8tUmhlVklilUMrqQQVIPBBGeK9B/ZL/bv/AGgP+Cf1pr2veDdRbxT8LNEsIH1D4Y63qsiR2st1PIqT6bcFJTZsLht8kW0xSCaYld/lun2uc5XHCJ4ik/db1T3V+3l+K8zxsZhVF+0j1P3J8b+O/AXw98I3nj34jeLNA8OaFp4Q3+s+IdSitLW2DusaGSaYqiBnZVG4jJYDqa/Gr/grH/wUi8X/APBT24f4DeB7l7b4Q+FvEkep+H/FGrx3Zv8AxDfRQz25u0gklVYbQpcSGIPGJipVmKGR4IuF+Mv7WPx7/b/+N3g2/wD2jNTs/wDhA73VRr/g/wCGenHfp2mwbPLQXTtGj39wERsvLlVM04jWOOYxDy5r1JdTvJkgAje7laNDztBc4FY5LgKGPxFsQrxtey0vrbVrX7jLB04yqrm9T//Z', 0.95);
exports.iconGreenCheckedWithGiftBox = new types_1.Icon('iconGreenCheckedWithGiftBox', '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', 0.94);
exports.iconSunbedGreenCheck = new types_1.Icon('iconSunbedGreenCheck', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAPABIDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2X9jfxl+zT/wT5/Zusvg78WfEPhD4gfCzxMIta8Y+ItG8F3lza2WsvDamJ3jmubo6naZggtknhtbZo3tbeVoZBPNcQ8B4U+B/wK+D+v8AiLxL4r/Z6j+IPxB+I/iW+tvhz8JfEeh2twPDdjLcyXFloNvbyGW3smt7ZYjd3LkR2SQSxxmNRO13paD+xz+078APDfh/xb4BOq+I31xzqfiTw3YSWNjfeFdZmdrh3sjJeiBrYuwSSJbljHOpmhZkmdI+++F2veDf+Ccvwx1j9t/9t/VpbTXtVQabp+gaVbm/fRoJFkuINGt5I12S3k5ty8907RwNJEiB1iijZ/wmtlHiFxBmP9jY6XscLCbk61FuEqlJ/DSi7uUXupyTvZb7OXw9GvxZmOZywmLpKEIvn9qnq4vaEVraW6k72S2vdM+4/wBnvQvHvw1+AXgf4dfELxh/amv6B4P0zTdc1OO5edbu8gtY4pphLKokkDyKzb3AZs5IBJor8Qtd/wCC4f8AwU/8Xa3eeLPBH7UPgnw1ouqXUl3pHhyX4f6fdtpVrIxeK0M8mkM8xiRlj8xmZn27iSSTRX7dHDV4pJH2y5ErXP/Z', 0.985);
// Numbers in wishing tree:
var b64N0_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2e0ntLDTtT0e28PaebjQ/2TrP4p6d8QBYsNT1DxKVs7kSteZ+eG6lnms/s3TbHtUcGivfLf8AZ28E20EGgjW/ED+G7S7S5tfB0msyHSoZEm89AIP+eazHzFhLGJX+YIDRXDOtB20O2FOa6n//2Q==';
var b64N1_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsv2xbK68I/slaVqfhiCy8PeLdA+LmoeF9X8WeHBNFda7DDpdncGa5aWR2Z3lnZyN20EAKABiivqnxd+y58J/Hd/dz+LLTUL2yvdTk1KXRpdRf7Et9JFFC90sXRZWjgjUt6L7miuB1U7HYqUu5/9k=';
var b64N2_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1H4teG7vSP2WfG9t4V0/SJdc1STTtE+CPi3R/Do0rUtV1CAynWrlphIxuLY2wCmaQ7ZJ5CsYAKklfRF7+zR4e1bwtZfDrXfiP4zv/AAnpsMMOneErvXi1hbQxMjxRIoQOqK0aEDf/AAjOaK4pVVodkab1uf/Z';
var b64N3_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2j4bweGJPg9471LTNd8L3/iPwR4i8NWOlXGneFpLDVtFSTXI7GTVLu+VfLvluosM0as2fNbO3OAV7zov7O/hbSLex0S58XeJtR0LS5raXTPDOoayz6fbtbkG3zGoUyiIqpQSs4QqCACAaK8+rUUmjupwcUz//2Q==';
var b64N4_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6n+GnwP8AF/xK/Zi8UeJNc8E614u1H/hSHiSz+Et5EQ0dldaZarBHqLjI/wBPvbw7rcfwQ2ucqZGBu/8ADfv7MP8A0Ulf/AST/Cuw139m34S6td3OoaR4cXw/cahYXdhrFx4Y26fJqdncgC4trloQDNFJtGVbPsRk1f8A+FBfAr/oi/hP/wAJ22/+IrzpzpyitDvhGcW3c//Z';
var b64N5_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDvvHdvovi/9ny0uPhhPoJ1PwB8LvDUPxe01PCItdd/tx7gW11ex6jcQlJ1kuDEjKjjIEjAsGIor6Y/4ZX+Hl1oEngXXdc8Rap4Vdw//CIX+sudOyHLoGjUK0oRyWRZGcK2CACAQVxyrQ7M640p9z//2Q==';
var b64N6_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6M0rRtU0jw/8AD34hfDvxBZeI/Hr/AAtsfiP4v0XUEnguL2x1dks7S3iv2BgS2tVlRfIADSOplJLcUV6defsxeAtR8Ot4A1DxD4ml8I+WI4/Bh8QzLpkUayeakSxqQ4iST50i3+WjAFVGBgrhlOg3qjsjCstmf//Z';
var b64N7_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6Bt/iX8Av2Ofh14p+IXx3+B2gfEnRrLxvYeDPCSweEraHUZ54NOkudRuZHiXM6Iz2kLSH/lrvzgmivbrX4FfD6DxA2v3Vpd3oWW/ltNO1C+ee0s5L2aOe7eCFyViaWWKN2x1K9smiuL6zZJWOv2F3e5//2Q==';
var b64N8_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6K0jwh8J9V+G1pdXOhprniOX9nvwx4suvBejaY9r4lfU73UbeO61j+2zhWjlScgwbvuNwo5AK9RvP2ZfBWoaCfA974s8WSeFvs6W8fhL/AISWdbCKFHEkcKhSJBEjgMkW/wAtCq7VGBgrl9vT00On2FTuf//Z';
var b64N9_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3Xw5ofwXv/wBmHVPi54y1rStJ8OeG/hr4ZtvEerJYXNv4utPG9xdw/bXa6ZQ00UsDSYWNmXyXVgqrySvbda/Zo+EfiPUJ7rxBolzeWk+oNf8A9j3GozNYxXjQxwNcpBu2LIYokTcBwu4DG5slcf1iHY6/YT7n/9k=';
var b64Nd_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1e4+EHxE/ag+DHgPTtR8SS6D8QPG+lP498QeIYFIn07RiItO0ixQ9ortYLu9K8fOtFfUXw8+E/hn4bfaJNHvNSvJri0tLRrrVtQe5lS1tYvKtrdWflY40JCr23E8kk0V506rv7ux3xpq3vbn/2Q==';
var b64Nd_2_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDf0f8A4Ji/GDVPgh8Of2cv2XPhz4Pfxz4W8Jp4q+MniHxloMN1eT6h4glkubTT5ZCAfOtLe12umdo89CoAfkr9VP2JfANp4a+Gmp+P7/XtQ1nxF4412TWPFGu6sYjcX1yIYrZMiGONFRIbeKNUVQAE9SSSvg8VnuJpYiUKKSitEmu2h6ao+19+o7yerfqf/9k=';
var b64Nd_3_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0PXfiz8GP2cPg94Nv/CnwO8aeK9D8Tvfy+AvDfgbxJqGmR6J4VtHistPvJoreZN8mpzQX+otNJukke4kZ2ZsmivvD/gnD8FfC2j+Dda8V61d3Gu6gsen+GLWfV7a1xaaVpEUkFlaxRwQxxxoolmY4X5nlY+gBXxdfOqWEqujCimo2V3u9FuegqEqq55Sd2f/Z';
var b64_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzuD/gm/8AsJa/Zx2fxe+Flv8ADrQ7CG0TwP4vh8S3lu3juzksLWebUHa5neOYrPK67oFRBv2YytFfkhD/AKfNLbX376O2bZbRy/MsSnkhQfujPOBRX5rDg3PJRus2qx8le3rrNvXd62u9ElZLreIp/wDPtH//2Q==';
var b64_0_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxP4O/DL/glpfeCtMl8X2/wYbw4dJhbQNY13xyltrV9dGWb7YL6IXazRsmLcIskaDa2UzljRRRX4NXwmJniKn+11laUlpUa2k1f1drvzb2PUjKKivdX3H/2Q==';
var b64_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD488I/AT9mXxV+yT4A8XeK/wBnL/hHPFUOv69ofiaSHVr5p7+ezNkfNnSeT9zIDO6mJFVVwRjOaK+Fjqmp6nM11qOoz3EsqrNLJPMzs8jjLuSTyzHknqe9FfEQyHGtyksZNKTk7Xk7c0m7azbsr2Xkjo9rH+VH/9k=';
var b64_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5N/aE/Z3+FXw4+CXwo8TfHX9gjWfCHinxVolzqH2T4X2WsSWdxph+z/Y5bmW9uJ0e7YGV3EUnyrJHvVCQKK+AIte1zUZHg1DWbueO2Oy3Sa5ZhEvPyqCflHA4HpRXxOCyXFU8OlPFTbvJ6SmlrJtJJzk7JaK7ex0SqRb+H+vuP//Z';
var b64_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDiv+CX37Bf7LH7RP7Lum+Nf2j/ANjrT47tXaPStT/sDxPpTapDuYG5a8lvTb6lkgDdapGkWNpGWGCvyFk1XU7q7m0651GeS3tXxawPMxSENy2xScLk8nHWivyLHcDZ3jsbUr082q04yk2orntHXZfvV+R3wxNKMUnTT/r0P//Z';
var b64_4 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwnxX/AMErvgRof7OHwzvvh+PB3irXLqPUP+Ev8WwfFPSmttRuttpIscAS+2pHCJWi2kCTcGZgAyUV+YTu8czWyOVjTBWMHCgnqQPfA/Kivz+lw9n1NNPMHJ3k7uEusm/+fttL2SVkkrJJaHU6tJ/Y/r7j/9k=';
var b64_4_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDw7xd/wS5+CGjfs5/DTUfh8/g7xRrl2mof8Jf4st/inpTW2oXW20kWO3CX21I4RK0W0gSbgzMAGSivzPlVVu5LZVAjQKyxgfKCepA98D8qK+ApcO59TTTzByd5O7hLrJv/AJ+20vZJJJLRJLQ6fa0n9j+vuP/Z';
var b64_5 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5n/aG/Y00LxN4G+H/AMRf2fP2d/hr4W8O6z4diMcHxF8L+JdD1a8nS1tDNcu1xe+XewvJIzRzwIkZDHg8Givzjt/GPi6B5Fh8VakgQ+UgW+kG2NfuoOeFGTgdBk0V+eUMszTCUlSWLcrX1cW3Zu6u+fW21+p1ucJO/L/X3H//2Q==';
var b64_6 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5s/ad/wCCNWhWvh/wDf8AwK+IXh7QrG48J2x1bVfGMV9Ztr988EFxLeW08rPBdW/+kLGpt0RU8vDF2OQV+b6SSapNJZ6k5uIbNvLtIpzvWBDyVQHhRnnAor4zA5RxJQwyh/aPNa+rpJvd7vmOiVSi3fk/E//Z';
var b64_6_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5w/aa/wCCOOhWXh/wDf8AwM+IXh/Q7G48KWzarqvjFL6zbXr54IbiW8tppWeC6t/9IWNTboip5eGLscgr85rQnVJprTUybmKzfy7SKf51gQ8lUB4UZ5wKK+KwWT8SUcMof2jzWvq6Sb3e75jolUot35PxP//Z';
var b64_7 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD51/YqX/gnro/7LHh/4gft4/sufDyCbWNSvLHwnqWnyata3mqw2awie5ut+oOkjGSdVDRJEvyN8voV+dUaq91LE6gqu0qpHAJ6n8cCivzvEcDfXMTOvLHV480m7RqSjFK+iS5nsvvetlsdaxPKkuVfcf/Z';
var b64_7_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4h+Pevfs7fDr4FfCHWvFX7EvgOLxj4q8PXmravaeFr7V7KNNPM6w2MsyT307GWTyblyQyqQRhRRXx9agP5isMhJSqg9h1wPQcn86K+XwmQ0aNHlnVnJ3k789RbybStz7JOy8kbSqtvRfgv8j/2Q==';
var b64_8 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnPH//AATY/YOtvBvha6l/Z1ubPztMgaO4TUdQ0Y3Qexspmc3d7eNDqx8yaU/aLRUiXds25Aor8erRm1WWaz1Qm5hs38uziuPnWBDyVQHhRnnAor8yw/Budqkl/atR7/z9/KqjseJp3+Bf18j/2Q==';
var b64_8_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwf/gnt8PP+CZviL9lHQ9U/aR0r4btrzarqCaxP4g8W6faXAkWRPs6yNLeR3cRMW8rEsJt2ALmXeApKKK/AM2w+Knm2IaxVaK55aKpJLft/Wh6lOUVTj7q27H/2Q==';
var b64_9 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxD4jfBH/gjpp/wT+G3xH8YtY+G7PxTpMsuhjT5NbstTvIYY7aOeXUVvJCssv2s3IWW3VYGUELnbwV+ZCf6+Zu/mlc+w5x9Mk/maK+Ew/CGKp0+V5liHq/t9G20uuy0v1302Ol4iL+wj//2Q==';
// The material requirement numbers in production
var b64N0_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnH8V/s6/Aea8+J/8AwWDvfB/iP4F/EnUP7V/Ym0u78HHVItJ8JLa2zOlrbQWJfS4Psk2iwm2lEZM9rcy+WWkeecoooA//2Q==';
var b64N0_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5g+HX/BSv/gmL8NNU8Vap+0wLj9oPwZ4l8Tzap8Ivhpd/DOK4f4R6ZLFEz6UG1Zo4YUw1vZrb2Ek1qiaOrqyiZVooooA//9k=';
var b64N0_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDk/wDgobc/sl/s8Wiy/wDBaT9mHxp4y8L+I/jJ40uf2T9M8B6xb20GhfDqK30OHTYIoLPULZLKyMC24gsmVZInjuXeKN52aUoooA//2Q==';
var b64N0_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0/wAT/tZfGjxf8ZdJ03wR43vrCXxHfaynhXS4rS3OnRR2L3UcC3m8GWQ3LWU5LIR5YKjrzRXlf7RGrR/DL9ovXvC/hbSLVJPDOvzQ+GtWkDm60tNZO66ERDBDta5nMRdH8vzWHI4or53lxM5P2bWnf+u1j9RjDhqhhKUsZQk3KKa5HbTlinza6vn5nfs16L//2Q==';
var b64N1_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8gvjJ8XPFPj3/AIJpfAj4eeJfERu4PA3xN+IOn6BZm2RPsNhcW/hq98sMqgybrq4vJMsWYb8ZChACiigD/9k=';
var b64N1_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8z/26/wBpiD9oX/glR+xx4d1Lxu2sa98O7jx34Y1iFtPMH9nwwzaM9jbAiNElC2T2x3oWzn52L76KKKAP/9k=';
var b64N2_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD83/8Agqf4b+PHg79kX9le1+M3xR8UfEOPxV4O1HxtZ+OvFfiaS+ljn1W30ppNCginLTwW9jBb2T7mYxyzahcNGFAYUUUUAf/Z';
var b64N2_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5o/4Jd/8ABVP4f/8ABPL9mbTbRv23PDvxC8T+LIIjrfgn4i6j4wg07wFa2imOysdP8jQ7yOSR0lkNw8bpEBFbRoHERkcoooA//9k=';
var b64N2_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDoP2Ef2Y/+Ci3gj9g34Ra98Wf+CZHhv9uux8YeCtO1/wAFWPxJ8WeFLTRvhfoUun2cFhpmljVopLo3FxaW9vNeKiR2ymO12GWdruQlFFAH/9k=';
var b64N3_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6I/4N9fBH7Tfg79hXQNR/bn0/Xbax1rw9ot78L5/ibf6V4r0O50A2CCzbQ7TT2S60MCzFitzbXbSCV1inj2SSXKKUUUAf/9k=';
var b64N3_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDhP+CB/wDwV7/Yf/Yg/Zt1PwB+2Z+2lBbaxdrpp0aTTbDxZ4ikhs44HC2M9pfWD2WnyWodYA+nt5c6KiuD9mjllKKKAP/Z';
var b64N4_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5h/bQ8N/8Egvj3+w5+z78KPhF/wAFCIPAHg34Zaz4t03TLvVPhPr2pXus3lzHolzeTXLJEm2XeySHaPKxchIwqxbQUUUAf//Z';
var b64N4_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzb/gif/wWB/4JufsKeDPEnwR1j9rP4raV4ETw/oN1o+n/ABP8LNcFPEjvqX9uPpsWjpdi1sJANNkSGaQuJHm5c75HKKKBJWR//9k=';
var b64N5_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4d+Cfxb/4Jlfty/s9+AvDH/BVn9qW9+Hmp/Cvwxb+GvAVj8Ml1+aWfTIlEROo20+l31lFc/uI5BPZSL5yzhZUUwIKKKKAP//Z';
var b64N5_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDyr4VePPglrP7O/wAK/ih/wUw/bm/aF/ZH0y++FnhvQPhXZfC74salrOn+NLHSdItLSXVf7OsbCddGJjNkxiaUGV5pGMasjyTFFFAH/9k=';
var b64N6_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4j/bp+Lv/AARA+NfiDQdZHi34iXFloOm23h7whZfCNL95NP8AD9lpWmxW0Oop4l2RRz/a/wC0mH9nkxuHaSbMrmSQoooA/9k=';
var b64N6_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4K/4L2/Cn4O6TrPw0+PXwV0jWtI8J+LLa60f4WaPceLJNT0tvAOl6VoQ0G/so7i1hutPe5+2X73NrctLKLlJZSzed5kpRRQB//9k=';
var b64N7_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5J/Z4/wCC4f7YH/BLD/gnf8GfBnwN+M1j418S/EG417xBq+lfECx1G/j8L6Ba3EGiaPp1m7XKIsfmaVqkvlx/KiyxLsXGXKKKAP/Z';
var b64N7_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5u/YO/wCC1H7Wf/BJD/gnz8OfFfjDXde+LGnfFfVtYTwZ4Z1/x3Mlr4P0bRTa2EUdt5ltK0Qmne6UwLJ5McdpAyIjSybiiigD/9k=';
var b64N7_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD85/8Ags7+1F44+J/hL9n/APZr8WfGfxH4+Hgb4fXXi0+IvHWsXep+IF/4Sy7/ALY0+0vr24wtxJFoB8PBxCvlR3D3SI7qFClFFAH/2Q==';
var b64N7_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7B/Ze/Zd/Zl1rxr8TG/aM+GNp4Y17SfFUOjXni3Rf2i/GEyeK7i3s4Wmmd5ZoH3QGZISmGCEFVO0Ciuu+J3/BHPxb8amTwz46/aRbT/Dui6zquo+Go/Delyw3k02pXTXN3NfvJM6zSkiFA0YRcRk7RnAK8SlxHg6dKMZTd0lsmlsjZ4abbsj/2Q==';
var b64N8_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDR/wCCRv8AwWv/AOCVP7LFlc6n8cP2gNA0O4vfgb8LfDXnx6F4u1PUJr/RNEnt9QgnhNg9lZQw3E5SJbLKzMZ7iSR3mwhRRQB//9k=';
var b64N9_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5b+Lf/BWz9lPS/wBlr4N+I/in+xX4f+J/iXxXZanq1x4D8T3ER0T4fWdubXRILbQUmsZVtbG5bRp5/sisTAwwzybg5KKKAP/Z';
var b64N9_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDH/wCCbX/Bcn9kf/gnt+x94K+Nn7UXw4+M+tS/Efw3pfhTQPBWmXum6voWjQ+EtPttLl1PToLie3+wDUZZjNPH8zvc28zt8nlSSlFFAH//2Q==';
var b64NS_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8fv2xLrwN8Pvgz8FP2Zvh/qVtfnRvBQ8a+Mr9bK4hlbxB4jhtbp4CZXZGjh0u20WFTEFQvHM5+aRgpRRQB//Z';
var b64NS_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8i/8AgqV4k0KD9qy4/Z38C6kLrwt8C9Asvhn4emXQYNNW5fSVaPU74QxFiBe6w+qajmV3l/08h2yNqlFFAH//2Q==';
var b64NS_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5S/ai+K/7EP7Ud34R+F//AAUm/aL8ReGNf0nwZpvxG1DxB4d0C48zX/EPjW1i1y7QyeTqMkltYaP/AMIxpcHmmJlWwkVQ0YQIUUU00uhm4Nu/M193+R//2Q==';
var b64NS_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8pfjX8df2a/jD8GPhJ8BPHHxw8ZyQfDvwZHcX/iXR/h3FqNxqeuX6RC5tZHvNVtX8jTrCy0XSoGwwZdOk8sLAsGSiinddiHBt6Sa+7/I//9k=';
exports.iconsAuroraItems = [
    new types_1.Icon('column', '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', 0.92),
    new types_1.Icon('brick', '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', 0.92),
    new types_1.Icon('compas', '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', 0.92),
];
exports.iconsGnomeLabKingdom = [
    new types_1.Icon('craftsmanship', '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', 0.94),
    new types_1.Icon('smithy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAZAB0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6u8bfF/xH4iklFtfPp9gucRQy7SV5yXcYJ4PI4X2714Kf2u/g5e6feah4dm1fVF0u+t7fWoo9FmtZNNWaJ5kmlS7EJKGONyoTfJIUZYkkZWUdBqz2Hj3TvFvheXxzrGi694WvYLybSl0+xfTtY8OzwIryMLiKaV2S481JZF8qNU+XlgWHkU+kaV4Pln8FaTqfg9dO8TQz32naJqyW2j2c8sBjeS7F3bW6hGtrQzyGWTznaBSPLm8pUbatQq4SgsXUs6Ss5K9pWbW2nLs3uzfDwp4mToRT9rL4P5dnfm69rW8z6S8I+NbmG1tfEvgrxJutruFLi1urK4Dw3EbKGRxjKyKQQR1BBzXqHg743aY2kra+IxFb3EPBkO8rKCScgKrYx0IP4eg+av2abnRr74bPqHhO6jk0KfWb06II2hbbEszJIS0TsGL3CzyfNtcCQK6RspRfQKybpt3pu8Xs/LoZShOnJwmrNaP1W5wfxj+F3ifxLqmhfFL4U+IotJ8c+Drtrvw7cXzyGwvdylZLO8jQ5MMqFk81B5sO9mTcrSxS48vwXsPjh4f8Xat8W/AtzoVz4ztxbx6NcaiL2XQgsfMsDNNcW6Tfa2muI5oVi/di0DxK8O0eqUVs8RUlhnQesX/VvTqTG8Kimt1sfP37Pvw/+KP7POs/8I0mqaVqXg7XpIbltaljuFaDVPJihaKdAZGskmATZJ++iMlttLiW+Cw+56Lr0Grr9nms57K+jt4pbrTLzaJrcSA7c7GZHUlXUSRs8bGN9jsFJrz74x/8kNtf+xr8Hf8AqS6TR8Jf+Tifiv8A9dtB/wDTYlfd8T8MZRk2Xc+Ei48rirXbVpXdte1tNdtz+c/CjxL414y4idHOK8KsZQm2/ZqMuan7NXvFpXn7S87xteKcVG7v/9k=', 0.94),
    new types_1.Icon('bakery', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7U/ac/av0X4E2N266Be+K/FDaVc6u2i2d0qNHbR7t13dzvkQQtJ8gbDyOxby45PLk2fI0X/BU79qrWDP470nw18MrXwfDc/vZrtbmWW3X5cQySreKfOO5QB5AYl1GzJAPP/tz6VfeIf2nPHVzqd9fzWsOsWdjMwRnWyjXTLCZYo9xAKYlExQEKJJnJwXJPH678dviLqtxa+B7Ux23w0sLEabZ/DkMjWX2DDBt/wC7CveuXkle+2CXz5WeMRKEjT+b8Xm9eGJnCLsou3+d7p/LY/ozL+GaSwNGq6XtHOPM220lfZJL+tN1sfav7JH/AAUK+H37TmtyeBdW8PN4Y8SYd7Cykv8A7Ta6ki72It5zHGWlWNDI0Txo2zcyeYsUrR/RMd7dxII4rqRVHQK5AFflP+zf4d8PeH/H/gzV4fEGo298fiFoaTz2u5I0hfUYI1jd1xkyyPHEVHylJGDbtxA/VOvVyvGTxmHcpbp2/BP9T5viLKoZRjIwp6KSvbtrb7jxz9pb9mK5+K2pJ8QPAp0v/hIYrAWV3p+uGRbPVbZGd4ozNGrSWcqPI+2eNZAUlkWSKU+S0Pklp+y94At1tk8a/sTfF681VMf2jdeEfEnhcaY75+byPtmqRzyIOzyRROw5MSE7QUUsTk2X4uu6s4+9tdNq+29nZ+trmOE4gzfBYdUKVVqK2Xb9beR5jeWvw9t/i74f8OeGLOKLx9e+GYdSNjDC8Vl/YiahbSXN5MqbEW5WWOMQ3EDLdLcGB23Rxlo/Wfh3+0p+2R408E6d4x+DfwZ1jxh4U1a3+2eHvEt/p+j+ZfWkpLxuPN1yyl2BWCp5tvHLsVfN3ybnYor+oPFTHYXLsHQksJRm5VJr3oPSyTduWUfibbl3eu5/DHgDkmLzatiX/aOJp8tGg7QqKz5nUVmpxmrQjTjGFknGN0nZ2P/Z', 0.94),
    new types_1.Icon('candyHouseFaster', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9RfiF8SvEXxE1RrvVLhorVWH2XT43PlRAZAOP4m5OWPJyegwB5/49+IGleCE0zTWmtJta8QatBpXhnRp9ShtpNTvpnCJEhkIyFBMjlQzJHHI4VtuD5n+2z+1t4E/ZZ+FGreKvE/jP+yjZWkUl5NYrDPqKCYyrbwWdvLlZLy5aCdIWlVoIhBcXMqyR2skMnmV3+2r8HNd8K6b47+H/AMNtQl8GfFHQrS40jShNK8viS0HnJd2ur38gee/NtfXOoWcmnyTT2iRLCFgWOaNj+QzTjReMxHNJX2Su3+KSXnfQ/S8JhZV6scPRstOui0/N9bddbtHuPwt+POr+JfEE/wAN/i14Ag8I+MNNuILHWdKtvFNjq1pbapJp8WoNpq3Fu4c3MdvKSyyRRCQ212YDPHbSSj16Dx740toVt4vFF8ERQqg3DHAHQcnpXxF8KPEfxi+Jvxoh0HwlcS6RpFxFb2tv4F8L2qfbEt3k324s4pB5cLQPaJPGZ2htQLVhKPsYuY6+r/AXiO48W+EbHxDdf2az3MZJuNF1RL6wugGKi5tLlABcWsoAlhlKoZIpI2ZI2JRc4VHUw0cTRTgm7NXej3VnpfT1s7rte8dg1hMR7Go1J2T/AM9Lu2v3r52+P/8Agt9+zhqf7QHwG8IWHgLw7pUvipPG3l2l9chYbh7b+yNUZ7ZJ8ZUM4RtpZULKCSMA18Tf8E9f2n3/AGJ5/E37Pnxv+HGtajNZXM+oeG49C1OzivtM11o0tpUe7kWVWtriExCUMtwqyWltIsRZS4KK9rLZKvhHh6iThZuz9T6HhvC0sdjI0Kt+Wzejs73T0a1W1vS66n1N8TPBcdx8M/HOtXWi3fhzw/4pSfV/ih4CfUE1GR4bWyutlnZ3TgxGS3leKRTKjq72NvteCMNHJ7r8Nvi/8XvhT8N/Dvwv8GfDnwhrel+G9AstLstV1bxpeadc3KW9ukW6S3i0u5SI5QjCzODjPy52gor+pYeH/COaZbRjWwqXuwl7rcdZR1+FrTRad7tbs/yyzTxo8TeH87xX1bMpyXtatNKoo1EowneNueMndXa5r3cbRbajBR//2Q==', 0.94),
    new types_1.Icon('fountainFaster', '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', 0.94),
    new types_1.Icon('flower', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6x+IXxSutXhfRNJuvs2lW4Ks4O0zqP4mJ5C4HTj1PbFTS/h95ZuX+JviKbwVHHbPJZR6x4fuZb3UWSSNJFtrIbJp1j82MyOgbYZYhg7yV4fxh8VtD+Cun2/xJ1zUFg/svUbe4tENvLMZ545VkSPy4Q0jglPm2jhA7HAUke2fGb4S/GCP4raj8bPFepzxeFdb0rRteTVfDniGW40S20nTUsrua2l1OO2ZJrQXcdxL5dzb28c1tqck0LiSK4WP4bjjiTH8P5ZOrg6XtJJK6V243vq0tVHT1d9NmfQcNYLLMzx7oV6iUoq/LdXd9l11erV1b3Wcnrnwf8Wada63rXh/y9e0fw+sb6lq+mYIgjeFJwZocmS3dYpEeWNxmFWDOQhDnEtPFPiewt1s7DxJqEEKD5Iobx1Ve/ABwK9Uuta+PP7Kn7HeveO57+XRb7w74J0DwjqniPxppNze31+++1tjKLqeCG41S5tTdX8qTtZx29xLdElOJa8U0i/0vVdKtdU0O/hu7K5t0ls7q2mEkc0TKCjq4JDKVIIYEgg5r0eEs5x2c5TCtjKfs6jWsf+3pJNX1tLl5l5PdnNnODwuCxbp0ZX8r3a0T10XV2+Wtjzb9p34M+Ivino+nap4KkRtY0wzQW9vdX8lvBJFceWHZmTOCjxxSZKv8iSKEYuMfCXxq+NX7ZGpa/q/7FPjn9qrxBaeEdGv5NO1HwzPqF/NpN7aRbZ4S1sLuQbGVYZVhB2gvhwG3YKK6M1y/CwcsXGNqjsm/RGvB+R5Xic+q16sG5ThZ2lNXS01UZJPR9U7WTVme5fs9eE/i5+1b8Irfw9q/7WnjnULTwV41ttN0TTPEOuzXmkJYw6daK8VvFKjSWEyLPIsMyB9oCo6yDc5+n/hFFBYfD+y0mbxxerLYS3FncQa9pfn3ttLDPJE8E8sM5ilkjZGjaSL925TcgCkAFFfvXCnB3DeKyHB4iph17SdKLlJXTbVt2rd9el9T+EfFLxA43yDxRzfC5dj504U6soRuoVOWCbtBe1hU91bq+q2TSuj/2Q==', 0.94),
    new types_1.Icon('diner', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6c8aeNdR8UXjvc3bpYwuxtbZmwsSc4J9TjqT/AC4rzhPjj8Pb1Wk0C/utViCho73TbCWSzmGcfJdlRbuQQQQJCQQQeQa86/a71681HxToXwat3tbmbxJ4R8RXmgaBeSrHFrOtWf2D7HbSs4MZj2z3L+XKVjZ0iyykA18S+I/hb8dviXLceNfHGs6rcXFnPMviGSfUfstzbCO78hlWF1DLieXy1TLlQxby41DKvgY/Na1PFSw9CycUm3LW9+yTX3330sfp/A/h5PizDTxMp2jHonbrZa2e78l016H6X6L4ti8ZtdjRvENhoVvpGnDUdd1HxFbkQ2lsS20kiRFKssczGZXdE8rDDLri94Q1W41/wnpeu3gbzr3ToJ5d+ny2h3PGrHME37yE5P8Aq3+dfutyDXyPqH7Mf7TP7Png/wAB/sK6t4Y1vTT401G28Q/EAxzrI8um3F35S6ezQO0tuVghMlxny2RI40y6TzKPpX9nzxkvjr4WWusR+IYdYjtdT1LTINXgn81b+Oyv7izS48wEiQyLAHLr8rFiy4BArlyXGZjiMyrRxcui5YpWSS0be7Tk9Um9vw8zi3h/D5Jg6PsY+7JtqTd3JO9n0VtGlp0T1vd+cf8ABQL9lvxF+0f8MbDVfhsLceMfCd497oS3EgjF5EygT2YdjtjMmyJ1ZvlLwIrMiszj5p+GP7R3if4rQPpGs6u8us6XeTWt2+vWcGrXFhcLJmVYpL2KaNVDIwDKG46Ciitc/wAJQqKNWS95BwbmOLpOdGErJK6aumr9mj234N2GhfGH4X+PW8X/ABE1htG8L+LpJv7RaBILZo7fStNuZI73TbRYre9tBIrMbcRq5G7y5EeR3f1rwR8Iv7C8M2+meAPEniXwdpKtI9r4f8PXmly2UBeRneSJr3T57giV2aY+ZIWBlIwuAilFf0Hwrk2T1eHcJKeHg26VNt8qu3Zq7a3dl/nsrf52+LnGHF2WeIOaPD5hXiliKsVH2tTlS92Tsua2rk35O7jZynzf/9k=', 0.94),
    new types_1.Icon('materials', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9JviV8R7Ux3vxA+JHiez0+ztYd91f39ylvbWkIPdnIWNBnqT1JJJJJPzP4x/aQ+JWiWnhj4geG/GcN9d6rZzT+IfBV/of2bTdHRWLpbi92m4lumjUx+aB5W9lbyesa7H7cOr+G/C114T8XeMNWguLG2TUoIdAuF+U3cscXl6kzrloUgRJrZpQAqpqjbmVWIb5Z1P9uL4orZm00f4feFdGWxhzHF4jtLi58naAA0ixTRj5WG0Kskm47ckcrX5N4L8MeGK4Wq53xRKGKq4nmh7KUXKVJJyi2tebmleM1UXLy8qjGV+dP4rxezP6QOZ8b4fIuAculSw1CCnPEzmqdGo5pcqT0UnT5ZRdN+0UufmlBJQkv0D8KfEz4feOYbOXwl4z02/Oo6XFqNrBb3iGWS0kVWSby87ghDryR/EK7jwf8Q/EXgiJ7PS5t9rIS32V3YIrnHzDaRg4GK8w8M/tw/Duy/Ym8C+Hfh34F0rVUuNFs4fD/hq7sBd2WjWunmGIW87b0aSS3ngmjRkUYe1VjtK7mu/By81a/wDhrpV/rrvJLPC8kTtfrd7oTIxiZZlz5iGPYVZizlSu95H3O35H4j+Flbw5wFDOcBjXKFSfJG65Zu6cuZJaOFlaV7WbW99P6K4e4kXEFepgcXh7SgrvqtGlbyd9vRlH4keE/HE3xY+HfxX8F6fYX6eEdbnl1jTLjU5LG4ns5odkhtp0SRfNUqpEMiqkvQywkLIPjH4yfCfxT/wUl/bd1S58JatrHh/w2NI0+78cavrMFlHqNtahIoLWGBbZ5Fa4nn0++m5LW8SyuzqzYimKK8fh7ibNcBw1iqVFpKkouOmznOzfZ2vdX2flofSQpxneq/iS5V6N3/P+tjd+J3w/0X4K6Kmi/DXU9X0TSPCOrXlrovhbTNYnhtNbnm8+ztbaV0YS2shuLkulzC6BJ55LiRXdjKv0J+zP8dR488XeJPg095Fe3Pgqz043cyWYt5LNbiANDDMEVYZWcRySrJAqIFPltFGY1eYor+vfHnJsoxHgjTzCrQjKvShhnCbvzRc+SM2mmviWjTvF725rM/gnwCzziHEeMlbCzxtV0ZPFc0HLmjJU53hFqSlZRlOUouLjJaR5uS8H/9k=', 0.94),
    new types_1.Icon('goods', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7w/bA/ae+LGkXun+F/hB8JdV8ba9qMN3faf4a0q2mnlstMhmtrea9SGJCLqSOfULEGAyQl0lkYSxpExHzr8If2nf+CiFxeXHxY/am/ZX1HwD8PPDWnWj67Zw+CNSOq39zdSLF/o0U/wC+njgVpbqZYYWaKCzld2yyRt0v7UPiS68CftmfDLxn4y+JOq6P4ds9Jub7S/7A8PR3F5HNa3EY1K2E7TQ+St9aXUMXnbnaAWjvHGxdni5LxD4y8QfHX4hX3g3x34EvL7wpLplnc2mneEdD1CJtUiWe3KJdXsl4/wBtFq9spjZMoySW00bwCUxR/g3B3BXDmd8HQxuYQU62I505+82nzSiuW9knFW2Wj11Vj+jciy2hiqNTDxcYta3tO8IqzeiajJytJpt2d7NqWh0nxB/4KQ+BxqGneAvh9PpWj+Iru4n/ALbvPGOqWUtt4XtIVd3ubq3s7xpZ96LH5SRsqyG4Uearo6D2r9jr9qPWPjH8GdK+K3hyRtD1HUrSMa9o8Dzf6HcFFkCETxRSFWjeOWN2jXfFNHIuUdWPwz8QNC/Zu+FPi7w74J0L4WWkkt1rd/datpfi/wAQ6doWkaEy4MguL+QMtuUmnKZikbcscqRMS8L1S+B/7EX7XvxE+CXhy++BnxC8L/DO603ThZR/Em38OSRat4jha6u7u4WJHRXTS2muo1gL7HlFiswj8qWEj4rirw/yDh/A0Z0ccqdVvWTUlyuzvqm207pJJOSSvbWZ7vEeTZPk+Ag6VaVWrO16UowWlrt2Um0r25eeMVJSupO1l95/tF+AYfiF8HtcsLT4a6J4q1yw025vvCWl69GPJ/tdLeQWrrLuVrd97bRMjo6B2KuvWvkH9hj9pf8AZN+BPgvwv8H/ABd8ZfEPjq58aSQTeEbvXLK7W4tEkaOOO3Esca+XE0mWZjl0Euxd0YIoor0fB3mxuExuEnJqP7t6Saab5tmnp8PS17u99LZ8IYKjjo4hVLrSGqbi1eaT1Vn1/BdNHF8RLPSfE3xO+Lnj/VvFFzpr+EvFOn6hpniuC386e1tbXQtG1NFMbfPJaM29mhQxTNHc3EYeP7ROj+iy/tgfGL4XRWHgrwp8N2+IniPU7Q3dj4SfxEtpJa2FuI4bi7TUrpP38QlktQIpx9pLXTvvZAY4Siv6o44yPhvMvBr+08bgKVWrGhRqJuLT5npfnhKNTbTSauviuf514HiHiup9JjEYGnmVeFGWKxUORT5ockY8/KoTU4JOTv8AD7ru4crlJv8A/9k=', 0.94),
    new types_1.Icon('dairyFactory', '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', 0.94),
    new types_1.Icon('latte', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAWABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7Q8S/Ef4h+P8A9pbwv+yr8INU0/TNT8Q300cut38XmpaJZw2t9f8AmR9SfsdzAkKLjzZLl3aa3FmIr3ET9lf4ga34d8LeIPD/AO3l8WNG1DxFb20cV1qPhuPULGK7mc+Ulw0VoLa2nbdBG1pJIvlSSugmnMQEnzH+1p/wVN0v9m/9otdb8NfC241q7t9amsLSDTdaax1PTntrqW0uLqK5W0n8ma/k082ot1WWN7eyt5ZtrvGlv9b/ALL3x4179uDwPqfxq+CH7WdikV1qMVl4xltvhxBperQoI4p2t5LsRwTM4ikQLOu+IsG2ljGyj8yWUOdCMuRttLZrqlv7y632vo12s/1CGY/VKV3KMI9XKPNd3ez5J6Wto7ap2ve6x/2evit8YbT4seIf2YfjrqOn694j8IWNvPqHizR7Zbe1u/tO6SBPLO1hNtWeOSMRhY3s3+dzJsi9syfWvBvifF8C/wBnzxRY+Hvg62meItN8TzWumx+KtQt3/tddf/tS10/7dZ6kEiinjsn1GKGewt2CDZdxTRFri7Ne81x5hgK2AcI1FZtdn0duv3PzTOKnmGDzKc6uFacLra3ZO9k3a97pdmj4+/bk/wCCWuj/ALROsy+PfhXd2NlqVyJmv/D+oX8tlY3lxNIhecTRQz/Z8nzZpFW3ZpZiHWSBpLhp+G+Anjj4N/sx+A/Ff7Gn7O/7NOoXmrf2Rq9x4p/4Sz4v3o0nU5JIpBI8tvDZNbz7EEcUatZodkKFmMheRiivWynFYh07OW2i/AWIo061LknqtdLv9BPid4q0G++OMnwk/s0t4gs/ADa7qus3Vsk0E3h5tQ8u4014mbbeGb7JJFsmULEsgdHPzxP3nw00f9vb42/DzQ/jL8G/jxbeHfCfizSbfWPDmj6jqNvdXNvZXMYmi857nSbmRZWRw7xefKkTMY43aNENFFfvviniZUsNSahB/vJL3oQlsltzRdvNrV9dj+Ifo75Ng8Ri8ReVSNqNJ+5Vq09ZSle/s5xuvdVk7qN5OKTlK/8A/9k=', 0.94),
    new types_1.Icon('milkWell', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAZAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9DPj/APHPW9AsLfxBeaHqHiDV9Quo9N0HRrFG2vKUZlVnwy28CIjyPKwOAp2iSVkjf59+Nv7Yniv4PeENT1Lxvq2m2fidJEk8MeDNCaKa6vHlH7iG5VhK8tuSsm6aMWxPAXD7Y5PSP2qPgbov7RGi+E/hle+FbPxFqV14wjbQPDGoapNY2+q3X2K8VkluYGEtvHFbtcXTSRiRlW0JEF1zbTe9fs4f8Ekv2T/2ZdZ07xj4K+H32rXbDeYvEuv3bXl2uXVlCRH/AEe2ddoHnwqs3XbIgZgfyzDZPi8ygq6qJRu+Zu9/y1+/1Pv55zl+WQlQnR5p2Vu1u2+nndN9jkbebUBdXul6zodzpt/p1/LaXtjdlC8ciNjIaNmRlZSrqQx+VxnByo2/DPjfxV4OeR/DetS2vnACVFwVb0JU5GffGeT61tftf3nwa8J+AH1jwwulabrPh/R9X1WE2MMdvNcR6bFNNcxMH2O8ckkTREKZcmR5RGxiE0PIV1Z5lMsmrwqUpNRnfl3TVnqu+l9+vY87KsfLMaUqVeHvQtfs79fvTuuhk+J9O15rnSPF/gue3h8Q+GdXj1TQprptqeaqPFNCz7X8tZ7aa5tmlCO0a3DSKpZFFek67/wUI/Zt0TRz4U+Lvxq0zwFqmqwGO1s/GOvwafeWxZBlz5jGJ1Utt81Wkt2ZHVZHKSBOMoqMnz6rlcfZuCnG97Xs0/Wz08rfrd5lk0MfUVWM3CS02umvNd/M+Jv2hvHngDxZHcnXfig6aZ4h8fXMHhxpDBdJ4lvBeLZwI1oGMOowultaAyQlM2kS7ZorTelewfsc/Gnxl8QJrnwdrEN5fQ6PpMMOqTiU3kGhapBtgn0xtSdgb+bcrllIknheCVriUfabeMfG37cH/Je/jT/2Sfw5/wCrHvK+3f8AgnP/AMo/Pgb/ANkh8N/+my3r9H4z4nw2YcNUqM8HDnkoJT+0n7OnNyVktXzWte1lqnpb8S4B4IzLBcd4vMv7UrOHPWm6V/3bUsRXgoNNyXLFxclZJqT9xwTnz//Z', 0.94),
    new types_1.Icon('ballonFaster', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAdACMDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9pvHHx607wPbDw3odmt7qNuWhm80kRQFSV+bHLtwOAR15IPFfMvjj/go18DrDVptP8aftqeBtKu9OvJbO5tJvHdhZPb3EcpikhdFlTbIkmY2VhuVhtPPFXvidr2j6X4E8Q+J/Gnia60zT7bSLu61XWLeRhNaQrE7yzqyhm3qoZwQCcjoTXyt8I77x7oXgzQvDvip9H0rVNL8HWen3el+FZpY7SwVonimtrZSQY7LClI4sABAynIr5nhrJcRxhUrc1d0lT5bJK61vvqu3Xv0P2jg/gijnjqxjJRcEm243u3+W23/BPqfwb+3L8N9a0abx34J/a18OarpdnepY3Op23jW1vLSG5kHyQOxleMSNn5UPzHsK+hfhd8fIvEOr/ANl+L4Yra6nhSG3mhB2TOGOAR/Cx3euCR24FfnFf2FkmsR+IbLQrGbWoNOnt7C+nVUlSJ2jd4POCs8cTyRwswUEExoSpKrXtn7Ies6L4i/ZP+GHiLw3bQwadqHw90W60+C3077HHFBJYwvGiQebL5ChSAI/Nk2ABd743GuJMhr8HqlOGJdXnbVnGyVkuvM9dfI24x4Gw2R06alUU3U5rNR5WrW83ffY+/Pt0/bR5yOxzFz78vmivG/DP7T13oug2uk6t4WvNQuLeII94t0g80DoTu5zjAJPUgnvRXFHNcC4pudv69D8sllOOUmlG/wA1/meUXNtbXttJZ3luk0MyFJYpUDK6kYKkHggjjFfJXirwb4e/Y4ttP0X4hTeM/Efh2CGK08L33hbw7eazrF1CJJF+wXFtChE0kMf2bZcNKJJw8p2KY5Wl+uKwfH/w08GfE2ws7Dxlo4uf7Ovhe6ZcJI0c1lciOSLzoZEIaN/LllTcpB2yMOhNfL4HMcbgLqjUlFStflk4N2d0nKNmk9m1rZuzT1Pu8Ni8Xhrxo150lK3M4ScZNJ3tdNb7bp66NPU+MfEnxQ+HnxKfV9U8Gar468J6VpNjeWfijWvF3hOTStU8OQpBa3cojsZh5kVxPDMpiurj/RoPs6yyBtyw3P1t8GfiD8K9d0O38C/Duwg0VdCsYbe38MC3jgNlaJHGsXkJGTFJbqpSMSQM8SsrRbg8bovxX8aPE8/wf/aM8T/CT4dW7W194h8aXaWOv391JdPp66d4L03VHYq7bp5JI4HgRmkAhLxuVlWPyX9R/YC8B2nxVv8AUPi/e6hLZ6Z4E+JXibSvD3hyNFl3ajBd3ljdalPO+eZVklMMECQR26Tyxnz1EXlfqOeZZkFTg2jjMTjKzr8kZRjJuolOom+Tmlq4tL4pSbikvivY/B8D4h+K+deJVTJqsIV8upVK0YzqTaqxpRnFc1+abcoyfKouLdTTmlDl9pP6+jWQoCucUVYtNImurdZ0vQgbPy+XnHOPWivylYOrJXV9fQ/aHiKUXZn/2Q==', 0.94),
    new types_1.Icon('materialStorage', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAZABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7e/a0+Jnif4X/AAV1Dxf4V1RbbUn1PT7c3RhE88VtLewpez28RDefcRWhuZ449km54lzHIMo3xw3xs+Cfxe8LW3wc0jxn8QNJg8S+K5mXW4rPcmi6nq1xJFJqj29zcxtA8ckqv5ikPGDGYyoQFOq/4Kjf8FCo/wBlT46fD3wDN8P7bU5NMns/F+nTy65HbGe6jku7ZLdkaCRtg+/vjaOTcVCsAGDfHH7QP/BRHw7+0d8Yj8ZvGXwg1DTrt76wurnStA8WW9tZXDWylWWRfsDSMJ8s03z5Yu20oDivmuEM9zbh7CyWEo071HrOUbz5HZOKd9E+1nq7nqcXeEGTeIeNwmOzPHYiEaCcoUqdb2dKU03yynBQbk9bX50re7bV3/Y7xh4s0XwD8TNN+Fn/AAsLSPFd/qMpWZtDsmtW00fZ2mUypJNIsikRlT5chlRpYt0IjEkydIuraqihE1KcADAAlOAPzr83/wBkn9vLx78XfixafGyb9mK/i8If8JnY+Gte8VR6obu307UNYuPJgEa+XF5k3n3FqJJSZmt4Jwp8sXamT9GK+V4gq5LLNJxytpxhaM9VpUspNNJ+47Si+V62als0fVYKjjcLR9niakZTT+y72XRN9z4l/wCCiPieS0/bf+Aum3/iay8P2en69p12niG+vxbRWLSarbiSeSUn91HEsCSGQ4CjJzwa7H4i678FYNGjPxGX4NfG/wCLNr4S1C2i+Oa/FzwXpaRajJpYi08tY3t5LFrX2abZF9s1K1EirCJBbzFVR8X/AIKff8jP4R/68Lr/ANDjr4k+PP8AyKFt/wBhJP8A0XJW+WqKorzt+Hk7rpvuujR9xDO51Mqw+DULezjOPMpOMnzyk/ijyzS96zjzOErLmi7JL7iuPjf+zj4h+APi6y1b4JfEvW7DUvidpFnq2lyfGxPEGtal4geXRV0+S11uDxJdLEUkk0sLt1KEQmE5VOd/SWXjz9oHSbOHStD/AGMfj/DZW0SxWcV38RvCd1KkSjCK81xrM00rBQAXllkkY5LO7Esfj3/gm19zxX/2UP4df+na6r9Wq/HMq4HwOXZlmNOOKxMv3+reJre85UaE+aXv+9P3uVzfvSUYp6JJfkuV5VUp4rFwdedo1GlblWnLFpP3dXrvp6H/2Q==', 0.94),
    new types_1.Icon('goodStorage', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3v9qf4sft0+NPG3iL4Y/shjwb4e0/w3e29hqfjHW/F2jQXUV/JaWt8Ixa6jKMx/Z5yCBC27IZJgUkjHmviO48Nfs/fCG8/ZH8RftK2/hq78OeHodJ1bUptDVIopLrTBNPNaEPBN5KiWVYxFGuFt4SnkJhh4/+2V+1V+0d+zp+3t4/+Gfwd1fxzPe6nBCuif2PdXFxcfZZ7L7W4hU20mTFcXF0Y2Ut5McaxqVVXQ+F+I/2vv2hPGXiy28U+KfDXj7VNRt9Ll062fUYJbhlhlkhcgmSyZpW/cgBpC5Akk5y+a+SwmHoRwFNUHySly3ly36XfVXfbXS/yP6R4ZxGV4NUvbrlTV5uMbyd77802mt0rcqd22m0j9Wf2RP2kbn4p32tfCDxH4c0uy1Hwjp9hLp2p6HMVsdb02ZGWG5itpMTWMq+V++sn8w2plijM0jFtpXwj+xj4d/aX1n41+G/iVL8KNe8IaH8Tb7UvDGieKJPE8NrFp2oW1pJc3Ma6fGFugzLoLwyNKiJuVAJP3axEr4iKwtWc4wxEJ8kpQbi01zRdpJqLlyyTTUoN3jJNbWPg8zjl9LGyjgJupS0s2knsrppSkrp9pNbanqn7UHxI8JWn/BWPSdB8dftH6J8KRa+FZbOw8a6nrYtDpAl0m+aK6DLIrqwnmKoQVJbaNy5zXXfEn9vf9luC8uNT8M6R4B8QeNIrLT7a/8AjrB8cPCGheJtaRLpJNRkjtrO4VLKea3a5t4p4rmO6KeSsl3GWaWMor6LC4OFbAOnzSjzLVxdnrFLR7xavdSjaSe0kffYiMMxyXDUKy932HIrNxaTlK75otN36xk5U3ZNwbVzqrf9pb4J/Ev4N/DrW/DX7PHxA8SQeJfHerDwTp+i+M7STWP7ZUay17dDUxriwSb47fVWMqahJ5iSlQDuKqUUV/P2RcAZQ3jEsRiFbE4haYmsr8tWS5pWmrydryk9ZO7ep/PWQ5bLFQxKlXqLkrVIKzS0jKyv7u/mf//Z', 0.94),
    new types_1.Icon('fountainStarJellies', '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', 0.94),
    new types_1.Icon('fasterTrainTrading1', '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', 0.94),
    new types_1.Icon('fountainFasterProduction2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6GuJ5Z5XurqZnd2LSSSNksTySSev1rwSx+MP7QnxBgk8b/DfWPDv/AAjmr3V6PBy6V4Nk183Nra389gZ57mPVrVQ00luZ440jP7m4gO5t24+teIvhR4z/AGkf7Z+EXhLSruTQdM0lNQ+JV7FpTzq2ky+ai6ZDtdSbi8MciMyB/Ito7mV9j/ZxLwniv4pa14/u9C+IGv634c8Jt4p05rm0tbrTJ51mjgvJbcx2n2S28uzYNZNGUuGRVVVfzQmPL+jyLL8DXo1MZi5Q9lCUINSk4LmnKKXvR1Ts7pWfM1Z2vzL5HijOMzwVell+Xxl7apGU7xgqjUYRm7KElyvmcfed4uEfeXN8L7H4S/EMfELQ9STULnRm1nw74k1Lw/4jg0LVlvbaG/sbuS2kMcgCkxyCNZ49yqxiniYj5hXU151498X+KLLTPEf7WGt3XhXQbLwD4p/4Qnx5p1xeWobW7SIXNzENPuw8Ud3e2PmSyfZo1kkureS4aNDKIlf0RHWRBIjAqwyCO4ry80wP9mZhPC83Ny219YqXRtaXs7Nq63PbyXM1nWVU8cocnPze7e9uWTjvaLs7cy0Xutdbnn+tfFjwn+zf8cLzxP8AE3UvF1h4C+JngWTw14w1rQdQMFto93DqNk9hPMzvHbxxypcXsErXMiKYiUjkjaR0uOk0DxZ/wTq8S+EfFd/oH7QSS2GiaW72sOneJNHltlWUXk0kMn2K5vIbVPllbzbyWzhcskIcbzLCUV8rmHF3EfC3NRyzEOnCo1KSUYO8tFe7i3slpez6n2WE8PuFeNfZYrNqLnUpxnGL5pL3Um0uW/L1ava6WzT1PnU/tkfs1w+DvBvwo0D9oXQH8W3Xh7Sbizv/AO1ImtrLyreWNYLxozJFcuYp72NNMy80n2hljNt9oW6HZXkqX93LfaJ+yd8Y7qymkaS0udO+Ib6VbzRE5R4rKTxFbPZoVwVga3gaIEIYoipRSiv1DGcV4+VOPNSpvXrBPZLXW6u+r66dEj+bcm8I+Ho4mpOlicTT5kpfu68qfxym2r01F8qavGLbSbk/ik2//9k=', 0.94),
    new types_1.Icon('materialsFaster2', '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', 0.94),
    new types_1.Icon('goodsFaster2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAaACADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7d8YfHCWxhTSvCqRyTiJfPvXG5VbbyEXuQccnjjoetfOniX9rhvG/xB03wV4A+KPhHWxd6BqeuahqOqeNhb2FnDaTWsJVngjmWHebiQq+3aDaupCoZJoMb9sbxX8GfD3wdfSv2gLIzeFNbv0ttVBkVAIoY5L1wrujoszJaOkHmI0TXLwLKBGzstfxf+0t/wAE0vgb4U8Sz/sffGX4UaJ8RIIvKn8T6x4/udaS4s7qaa9FukzJF9qkgx5IKIXIa1Sa6IFykvPiKsqdNtdFfpfTsurPuOE+HcBmlOWJxknyp25bJJ6K8pS54ySV18MZXejaV2egfDP47/E1vH2p/D/WJYdO1HS/D+natPBYatc3KQC8udQhS3mjuraBo50SwV3R4wyNMYyoMe9/dPh18YV1i6bSPEFuFvLh1EMkRCpM+NuMMQFYgDvgnOMcA/mH8RP20dD+JdvpviLR/i58INC1XVLuzk07xP4e8QxaZqWlzXV9bSSPeLJve7iWMXCyx3O2DN008lsz26ivsX4T/EFPib8P9J+IVrpUunf2jB5q2rXkFwYmDFflmt5HilXKkq6MQylSOuBx4DH1K9SVCvTcKiSdm07xfVOLa0ejV7p76NN68ecJS4ZzBTpcvsanw8s4ztotG1KW+rV3rrbYpfFLxTrfgK98HePtG0XRNS/snx/o/nWGu2Rmjc3FwLKGVCCGjlhuLmC5VlIJ+zlcgOa97/4ah+Pf/PHwr/4A3X/x+vnj9oD/AJEjS/8AsfvCv/p/0+vU6/POP8RWoZjS5Ha8PLuzXg/D0q+CqOa2l+iK3xR/4KE/tF/DCx1DULrwJ4XvILWdFjvoBefZrWIm2DXF+wcvZwIJppXmCSxJFaOWdZHjhfzr4Laz4nuNAuNI+I/9n2niZtSvdRvNE00/6Np9rd3k1xa29sdoWW2hhkS2SSPMebZ4wd0bBewmAXxsJVGGE8WGHX7iV4H8E9a1k/8ADP8Aop1a6+x3Pwuvbq5tPPbypZ0tdKVZWXOGcLJIAxGQJGAPzHP7tlXAmT4Lg3D5xRclWqUKVSV3dXlGHMkuibfN5O62sl/I0PGfinHeK+J4YxUKcsNTxVWjFqLjNJTrcjbu03GNPlenvLlfuyjJz//Z', 0.94),
    new types_1.Icon('toyStore', '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', 0.94),
    new types_1.Icon('cottom', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9K/GXjO91KS58V+MNYeTy42eaeUkiNBlsKB0A5woHfgV09p8BfifeaJp+pFtAt7rVtrafp11qkokZTGZMOyQMquFByAWQY++eMy/BDwJ4p1NNT+KBvVg0p9I1Sw0q5sLnE0DpiOW4OcFJhNHJHGVB2rFIxY+coX228u9KsknsdYvoTdo8RM1zOI2mRipMiFiNoU+ZhQcDbznIz8/kvDGDlgo18bHnnPW12uVdNmtXu76ray1Z9/isTHDpUaMU5J672W3u2XLtf3nfR6aWbPlbStWtNXt2ntWw0UzwXERYFoZUYq8bbSRlWBHBIOMgkEGuo034o/EDSLGPTdO8VXUcEK7YowwO0enIrZ+OdmfFejXXxutLW5ksPD3w8v8AUE8RQpbpaXqW05lFq8e8XDO8EcjIxAjgL5G8ySR1w9fNcQ5LWyDFJ05Pknfl11VrXjLzV10V97HXONCvRjWhZxleyupWt0vbs1rZPytvb+G/xAi+DfxJh8W+JvE3ib/hFr3empafYl7m1srsxhI7t4VDSCEhRG4jDBXMUzLGi3Eta03/AAUE+BsuuR6GmpaVrvh3yrm5OvWixzaVpPllfLt7q8i329rIY3bYHwMRkFgXiEhRX2HCmPxGIylqq+b2cowV/wCV/wCV7LysfVZNkeAzjCzxOJTco2irO2i2emt/ete+yXz+D9O+IPxQvvB/gfwFf/HHxVJax6Zc3dl4Y1nxLdX8t3N51lOmoh5/tHnPZTYkQXaT26zXkI3RhLeOtu9/4KJfFOG5eDwP8B4vHOmx4SLxR4e0rxZLaXjgYlVG03w/qVrmOQPEyx3kxV42V/LcPEhRX6j4hZVkqwFGtUwsJS5+W75k7OCk9YSi3q9ndLolqf59+Due8ZZzn+Kw1XN8QoKnzJN06iTVaVNW9tTqW92OrVpPaTcYwUf/2Q==', 0.94),
    new types_1.Icon('researchSpeed', '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', 0.94),
    new types_1.Icon('moreStorageSpace1', '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', 0.94),
    new types_1.Icon('moreStorageSpace2', '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', 0.94),
    new types_1.Icon('fasterBallonExploration2', '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', 0.94),
    new types_1.Icon('barrelInn', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9M/D+mR+IXkvLnVI4oxq0WmxB5UEl5fuizfZlLuqoTCS/mMerIqLK7bBa8E3Hwn8W/ESw8F/2vJcRaxZ3sFvLoer/AGp7S4jRJfOcyW0Hl4TcqZjlSRmYHbsOPiDx/wDtxftSfsaf8FO/+FPeBPHlp4i8LfEux0LVLPwNrNu6eRdXFzFpTw21xlxDuWxZw2I4w15I0gk2KR6F+0V/wUJ/ae8BePfipo3hu/8AAugCw1XUrTR9V03QZbm9njsjMsP2pknZHbZGBiZUTLMi7TjH479XmqlKcalldOUXC/Mt7JuS10aenVb2979IlRqzUrLpo+a1r6aq3dpr/g6fQn2XU7Bm0/W1hF7bOYbwWzFoxKh2vsJwSu4HBPOMUV8Af8Ehv2oNa8Z+K774MJ4s1PXxcR6hrevzaxY4eG5aS3EctvNsjZ4nRt0okRyZbmMrJw3mlZVIOFRxaNKlN05WvfqZv/BVD9mP4wS/tL2P7V1smu6j4TtfCtvaLq/hm1E2oeEbm0nln8zyY/LL2rrLJMZmctHIjFpYUWOOXye9+Nnw++JGi+K9N8JeJ5PGl7LYy3Gq29mUvJHgZnE93OYGuXESq4eR5ECZJDugPmAor0MvUp4+jPmatKK/H+trfea4uUZcN4u8U7Ql+R674Yu/gB8GfiNr3iL4a6lpeg3WjTacPGjaMyRWWlStcTC3hjeORPsV3cXBjR7SISpOPKjltQLkNKUUV/S3EeIy6jXhz4ChO/P8VO9rVJLTVb2u/wC82+p/A/AvD+ZZphqz/tjHUuV0laniZQT5sPSnro7uPNyRfSEYR2ij/9k=', 0.94),
    new types_1.Icon('maisonDuCake', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9APip8Xfh78FfC6+LviP4gFhaS3cdpZxx28k895cyZ2QQQRK0s8pwxCRqzbVZsbVYj8h/jT+1j+0j8YbfUvHGra/4qsNW1LWlOk3Oj+M7y0t/DOZI9trHDbMsYKIVTztokcSb2LllNfrP4p/Zj8WfFe/vP2iLa+0q9ttL0mXSPA+jXEgjuGu47ib+0pUk8twolaK3tgr7AHtt5ZVI8zkP+CbH7Jvwu+H37Gfj79m34r+M/CPi/wAT/EfWX1Hx7L4UnhkutHUQW8NtZecdxmltpLdp1Z4/KjmndVSVQZJfy/DZdNwp1FNJzT0a+5K/V73V7LU/p7hTO+EOFciqY3EU/rOInOFOcbK9ODcudx0dmla7dlKX7vSzk/i74f8A7b37ZXhnQ9A+K3jv9onR/Exk8Q2Wk2Hw71HSY7W/1i6u4J7GCaH+zrQ+ZCtwzXEkMrK7NBGsW0uoBX1P8ZPhP+y/4V8Cx+Ovhv8Asz6CLDULSx8HeFvFV3NHdRGLW9QtbGDVLQs8puZVlvllF24jkaPKwyiGRRRWOMhRpOPKl9zSdu10r+q0Pg+LJZPnubPE5SpYSm0rwtF697Rk+XS103e9361/2u/iL4p8AXfiH4e/2n4R03TtdTS9Z0jxF4+1ULYeH4l+122s6gLR5I7e5+zSLoBiSdXH2jVWLExFlT5j8d/BZPjG3iT4mfHfxX4o+KGqeEvDX2n4e+IPBfhV9J0GS0S3lleR5obNtKmghkEcyraXSSy/vQwkbZGpRXJlNWdXOowjaPK4apK8tVpJtO+/k+zOrG5zisDwZiKdJJOVOp71nzJcrTUZXvFNKzSsnd31Og1TU/2d7X4n3+q2sGl3N7Z65YS+KpUtGmtP7UtWuYNNgslixINZW6imSKPT90m+K4jkjE8se8oor+keJuII4SvC+DoVObn+OnzWtUktNVa9rvvJt9T+DOAPDiGd4OrJ5vj6PIqCtSxMoJ82HpTXMknfkUlTh/LThCC0ij//2Q==', 0.94),
    new types_1.Icon('jewelry', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD79+IWmz3fwyh8TP438PPZ+INQvtJm0xdRjlKmC4aERDjzPtBMTsUiXzQ26Nd5QFtS9+GviPwN8U9H+G3wn0LTJ/DbeBGWXXb3UvsNgurWc8QeEpHAfLmnF1MzSeWqs1qVPzBwvnfiX9nb4ay+MdY+IU/xW1nwTonhPR73xn4kl0yWG4g0yVJFmfUILOWCYpI/lXMz+UjRO6zs8LT3XnVa0fS9aHhe++NH7TN7JDFaaZNdxeDwqS6f4ZsE3T+S0VspS+u0XJkuSrkyGX7OIo5CjfNZ3xZkmYcIUsoyuH76OkrwsoyfLZ3TvOVtnf8Ax9E88p4b4gwvGmIzPMKq9itYe823FqV4tWSSu+ZrpZcr1udbofxA06+8VyeANZa2tdbSyN7bwW96J4NQtVZY5J7WXC+csUrLFKCqvE7Rl0CTQPKV8ifBjxHonir9vjX/AI23+h3llpPijXYNO8H/AGjTo4xCbS0exN9eBgTaztNaahY26u0c+3U5ojEH+0JEV+efVsVhYRhX1l3ty3to7LXZpxdnuntsv0v2+DxDvh5xkrK/K1KzcVJJ2b3i1JX6NPZo+gP2qPhN4m8aeDtcv/A8Oq3k2teFb3w/4i0DSZIRNq1jPbzpEIjPc20ccsM0+/LzKjwvcRsGdoXi8U8R+Df2idD+Cnje4/ar8MeLfiRbJ4O1O48PxXuqaXa6d4elS0kK3N3DYOsuoTRD95DG8N5i5t4GV4W/0lSiujL60sPjKc4JXUov5pr5/wCa0ehjmEVistrYee0otX6pNNaP5nHXfiXWvFXjW0ttD+AninUv7U0YWml/bPDpjuvGOlN9pW5tktLuSBFtLeVYd11qeyFBdJHGNmpQTTFFFfsGZ+LHE1CquWFLXmesH/PJfzdkvz3Z/OGTfRw8PZU5pzr6cq0qJf8ALuDe0FvKTfZX0stD/9k=', 0.94),
    new types_1.Icon('trainFaster', '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', 0.94),
];
exports.iconsGnomeLabCookies = [
    new types_1.Icon('tastierStarJellies', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYAB8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6E8Y+MrPR4JNf8S6gXklYJChIM11LtOyCJeskjbdqRryeABXuPw1/YX1jxzb6SbL42tc6i+mwXXiq2ttBWa1s5iP3lta5aGQhWwBLI0mRzs7V474A1C70v45+H7rS4WkkfStSi1AHG2OxPkM7jkZf7Qlmg6/LI5xxlfr/AMDfEjxP4AuZfH/hmys20/Wpli8m+mBMZ3HC8EMADn1OACa+uwmUf8I8cRGHNKonZu1laTSSuvJu6326a/G8Q4TimeOoYqjCSwUG+eUHJSbtfZNJpbW10bas0eA/tFfs4+IvgVrhutLtNb1fwzJZtOdYfSmkFg0Y/fJcyQp5cagbZBI4jBVyOfLZjwega9faHerqelTpkoR8yh0dSO4PDDofqAe1fYvxu8Q/GnSdL1jwN4E1G1vfEd94fuLzT7qwlV7awlMbiO4mMuFCIxQ5IYtuVVVyQp+ItBWKzs28Otplzp9zo7ixvtKv1AuLGVFX91IASM7SjBlLI6OkiM6OrH4p4ijDFfVak4+1tzKN1zOF7c3Lvy3sr6q/bS+/DeZ4rHSq05RkoQ0vO/NzXd1e75ku+ltFq72XVdB03V3hubpZYri2Zja3tndSW9xblhhvLliZZEyODtYZHByOK6eT9oD4p3Xh3RNAm8EQ3dzo2n21pqN3f695MWqyQRJCLsGOOV/MkVC771UhnIDP94lFfRZZxBj8rpunTtKPRSu1Hu4q6tfr30e6TX3mAzTGZbzewaXMrapNa21s7q+ltjzf9nP43fFvWP2kfin8L/2nPiT4UitLGx0fXvA0Z1cQyQ6df3WrRm0kacxrM1ubKOMSJGuUKF/masLRPFXxL+J/7ZPxG14ePfD0/gTwMbfwrothpFus1xqVxLpulam1xcXauVZLdrqeKKJcgG5nJ2n7xRX8t5LlmEq/SSzXGSTclQU0rtqMpRoJtXbeqlJWbaXM7dLfBYWhT/1sr1OvL6K75W9F6vTZdEf/2Q==', 0.9),
    new types_1.Icon('charge', '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', 0.9),
    new types_1.Icon('defense', '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', 0.9),
    new types_1.Icon('magic', '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', 0.9),
    new types_1.Icon('support', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAcAB0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9BvGXxB0vwjd2Hh610y+1vxHrTNH4b8I6FEs2p6xKrIpSCJmVQitLH5lxK0dvbo/mzywxK0i3/iR4P/aT+C+g2/jbx18NdO1ixNpLda5oXgu5nvtU0WBZiqPFGYl/tYmENNLFAsc0bIYbePUHZGbxS7/aX/bj/Zs+MvjH4M/swfse+GfF/jn4sapbX3hb4nf239suLXQ7S3hiktLrSHljmb7FNLMIT9os9JEurxyz3NtPdT/aOW+Jf7C//BT79h37Z+2ZoP7bdt408dzWEmqfE3TPFeq3k+kX0Dl5rj7V9quI7Rra0kRRDLptpo8lpYifZDeuq2c/xuU5FltbBqdS83JatfZ9O7XXd+R72ZZrjaNZxg1Cz2f2vXsn029T6S8KeLvC/jrQLfxX4L8Q2eqabdb/ALPfWFwssblHKOAykjKurKw6qykHBBFerfDr44WHhvRzpHjXRrjVVhwLGVVR3jTnKEyMOBxjHuOgFfA/7M37bmrfGT4z+Ifjr8ZP2b5Pghovi/TYLGJNR1Ga5h1rWNMjuGvdQupjFBDamO0FtAss0Uc8sVvAk7IqWMNfWdeRmmW5lwxmPJUhKKavFyi480X1V97PRtdV8juy7MMv4hwTlCcZOLtJRkpcsl0bWza116M8isvGH/BQD4SeIfib4C/Zu+HHwr0eT4h6zBe2Hx41vWbm71PRbNbS0txby6IbUR3txbkXjWoF3Fa4kV5Y2kacXHl/xf8A2IPAvwr0fxb8e9I+K3xF1fxn4mtnm+Ims+JPGc16njeWC2lFk+pWzj7MDaNsa2NrDb/ZhGscW2LdG3wl8Hv+DgX9tz4sfs9fEL40ar4Q+HWn6h4Iso7iwsdM0K7FreFnVStwJbuSQrgn/VvGfetr4nf8FT/2gPjP+y54lvvip4E8Ba7YQeCNG8Qy6DqPh6SSyubma5VxG6mbfsjeNHjKusisoJc4Fe/keYZtlma4LFzalToThLkTceZQkm4t8r3StqmvI8vOsBgM0yrF4SN4yrQnHmavyucWk0rrZu+6fmfof4y+OA0Dwv8AFfwPp3jj4NN8HtZ8I6zffDnSLO8hkv4bq9Z5dPNtaJai7FzFem1NxBMqpZAI24LCleq/DLTNO0T4beHtG0fToLO0tNDtIbW0tYVjigjSFFVERQAqgAAAAAAYFfg3+2x+11oP7JHinw34c8G/sc/BvXY9e8OQ6pcTeJfD9+0kMj9Y4/st7AoQdtwZvVjTfCH/AAc/ftxeAvDOn+C/CH7PXwN0/SNIsIbHStMtPC+qxwWdtCgjihjRdTARFRVUKOAFAFfRcb5/T4rwtLDUaHs5Qm5Sk5X5rxSu0oq83a853952dlbX5/gzhupwxiqtarX9pGUVGKULcqUm+VPmf7uN7U4W9xXV3c//2Q==', 0.9),
    new types_1.Icon('bombard', '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', 0.9),
    new types_1.Icon('range', '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', 0.9),
    new types_1.Icon('heal', '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', 0.9),
    new types_1.Icon('ambush', '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', 0.9),
    new types_1.Icon('allCookies', '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', 0.9),
    new types_1.Icon('arenaTicketRechargeRate', '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', 0.9),
];
// Save for super mayhem from Aug 9, 2023
exports.numberImagesSuperMayhem = [
    new types_1.Icon('0', b64_0, 0.9),
    new types_1.Icon('0', b64_0_1, 0.9),
    new types_1.Icon('1', b64_1, 0.9),
    new types_1.Icon('2', b64_2, 0.9),
    new types_1.Icon('3', b64_3, 0.9),
    new types_1.Icon('4', b64_4, 0.9),
    new types_1.Icon('4', b64_4_1, 0.9),
    new types_1.Icon('5', b64_5, 0.9),
    new types_1.Icon('6', b64_6, 0.9),
    new types_1.Icon('6', b64_6_1, 0.9),
    new types_1.Icon('7', b64_7, 0.9),
    new types_1.Icon('7', b64_7_1, 0.9),
    new types_1.Icon('8', b64_8, 0.9),
    new types_1.Icon('8', b64_8_1, 0.9),
    new types_1.Icon('9', b64_9, 0.9),
];
exports.numberImagesPvP = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCn4h8DfBWC+1j9j20/Z88C2sOjfs6W/ju0+J0eiAeJ/wC3Dax3TahJqGd8lvI7NEIiNuBtJZflBXA+LPiT+0NefAa9/Z+m+Ol2fBiaE2nx2P8AYVkL9tPTLx6fJqAj+0yWisBiIv0AUsVGKK9bIfCzxe4WVan9bdPnld+zq86nJJKVWXtHFxlUerir26s+Lq8T8I5moylTUuVW96FrLflVk9Fsf//Z', 0.9),
    // new Icon('0', ,0.9),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDx39siD4cL/wAE0PAPxC8Cfs8eEPAnifT/AIrXvhvV9Z8IQO17q8UOmQzGW5vZwbicvJIXKuxCkKB93JKj8deFNb+IXgIfCDxP4xnl8HweI5Nes9CjsoUMGoyW8dvJN54XzGBjiUbCdoJJFFfrPD3hLxbklPE0KVblpOvWnTTq1JP2c6jlC7d3flte7bvu2fl9fjHJcRGnOpC8+SKk+RfEkr/K/wAj/9k=', 0.9),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDR+GVp8KbbxR4u0z4nfDL4N+MfhlpOi6lrHxC+Id94KEut6e0ylrCCHWvtDZuzIyJbwwoGVQGyuU3Fee+Gf2kfjP4J+GVj8LvDvibTE8N+PR/wkGs6JeeENJu7eK9vSWlaET2rmNV3EIMnYMAGivy3H8OZvm+c4nGwm8PGpJNRpYmpFaq7lO9OV5tt7WSVklpq6OJo0KEKb95rS7ivw12P/9k=', 0.9),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnv2O4Pg38S/hx8Rvhv498B/s8eK4PDPhbWLzTvC+ieEVi+I2sXKwfao9Qj1CSQJ+6MuzzEfdttyNqnmivEfg9+1b8dtI0RP2dPDHijTdG0bXdJlOp6ppHhLS7fVpYLsmee2+3rbeesTNI44YOqkAMABgrPLfCzjbiHOMyzHL8VDDUqlaTVNV8RpfV/BGmnvu05d29D5bE8SZPlmHoYfE05VJKC97khrbTq3bbZaH/2Q==', 0.9),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC5rv7F0fgr9gLx14/8c/s867rHxX1DRdL8SWerHwjLcp4b0prlTDY2dwI2/wBJ8nfNc+UcruCvgKMleXWvi3456T4U1T4d6D+0p4/h8Na9Yx2et6NfeLL2+WWBGBCQyXMryWgIGxhCyhk+U0V+n8HeHfjPkGKzGrjMZh6s8TW9rzOVV3vGK91JLkircqj0SPyzMOI+DsXRoRhSqJQjypJRVtet3q+t/wBT/9k=', 0.9),
    // new Icon('4', ,0.9),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDj/ijB8PPit+ydYS/siWX7Nuoab4N+FOkT/Fqzsvh/FH460a6CpHd6gl2YUB2zFdzLJ5gO4gkkAlYem6/8WtP+D6/s+J8QtPtfBZgigv8AT9F8G6dYXmrQRvvSC9vYYhNcxhsEgkFsYYsMglfrPhZ4UcUcLZfi8PmKppSquUP3k5TcbLWcoezi23e3u3S0bZ+VcRcXZVj8RTnh3J2jZ+7FK/kpJv8AQ//Z', 0.9),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDJ+NH7I3hfwR8EfCUnw28Q+ANX+JGi+BIfiV8U7Cc3I8T3mn3cYWKKzkMRhWzgSTAtt4MjpvyDnJXM3XxO/aG1L4VD4Faj8cbmTwgNITSGt00CxTU5dKRgyabJqaxC5e1XAATcGwACxAor9b8OODPHDhjL8Vh8bisPJzrTqKU3OpKTlZyleKjZN/DF3cVpex+S57nPA+ZVqc406nuwUbRtFJLZWfVd1of/2Q==', 0.9),
    // new Icon('6', ,0.9),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDlH1fQdV/YR8WXHjr9nb4L2+pS+LdI8GfDnxL4U+FVppWpvdRxLPf3TXKtI7SQwBCXUqWcvnGKK5HwS+v+NvElt8LvEviu8n8PeFLy9v8AQNLWC2jS1uL757iQskQeVicgNIzMqsVBxgAr988MeBMFwzhsxlVil7fFVZwhCU3GFOLUIRTlZ3tHml/eb1aPxfiPPMVj6tBU3fkpxTckryk1dvTS2uh//9k=', 0.9),
    // new Icon('7', ,0.9),
    // new Icon('8', ,0.9),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDb8cfBj9l2w/Zg1mz0bwL8M49R079nPTfFdj4PsfC0KfELT9akCPJrNxqW/dJC2SxTexKHBjx8oK+d1/am/aD8R3Vz+ytrHxHEvhtPD0ei3F+PD+mrq91o8WDHpkuoLbC5e2UAKF37sADdRXq+GPhX4g4XC41PM1H9817tSq7tJKUn7sNW+rvJ/ak2fF59xRkMKlLnwzleKavGOiey3f8Akf/Z', 0.9),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC9H8If2ZvE/wCxD4t8cfDzwz8DZvB3hP4MWF1Dr+mRKfiFp3jzK+ct/L/rkDyB1WNz84O0AoQKK8Ji1bxTqAu/hBd+Lrw+E4tdTxA3h6OGCOCfUTEiLNM6RCWfYEBRZHZUblQCBgr9Q8NvBzP8kp5gqub1FGWInyckm24xtHmqcyX7yTV5W082flufcZYGtKg1hIyfJFvmS0b1srdF0/I//9k=', 0.9),
];
exports.numberImagesWishingTree = [
    new types_1.Icon('0', b64N0_1_tree, 0.9),
    new types_1.Icon('1', b64N1_1_tree, 0.9),
    new types_1.Icon('2', b64N2_1_tree, 0.9),
    new types_1.Icon('3', b64N3_1_tree, 0.9),
    new types_1.Icon('4', b64N4_1_tree, 0.9),
    new types_1.Icon('5', b64N5_1_tree, 0.9),
    new types_1.Icon('6', b64N6_1_tree, 0.9),
    new types_1.Icon('7', b64N7_1_tree, 0.9),
    new types_1.Icon('8', b64N8_1_tree, 0.9),
    new types_1.Icon('9', b64N9_1_tree, 0.9),
    new types_1.Icon('/', b64Nd_1_tree, 0.9),
    new types_1.Icon('/', b64Nd_2_tree, 0.9),
    new types_1.Icon('/', b64Nd_3_tree, 0.9),
];
exports.numberAuroraStockInTradeBird = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDC0HwVpN/oun+CLr40/Euf463/AOz9d/F2Dxh/wkCR+HY0tx5x0k6YE2NE0Hy78htxzkY5K+c9R/bz+M3hj4N3f7OllofhmWewum+GFn8RJ9JY+JIvDEsm97IXIkEXI+TcYc7eD60V+dZpkvAfLReJy6nK8Vy2pw0j0XQ8ithsrtFzop6aaLY//9k=', 0.7),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDL8KQaJonwb+E/x68MeO/irJ411L4qat4J+KWn+PNatntJr220Ce+mFta2uYYYo7hUEbKdxVDnrRXnul/F7xNqf7Xn/DI1xaWI8LaV8Z9d8XW0yRMLs39x4cWORWk3bTFiVyF2gg4+Y9KK/iXxSeWVcywFenh40/aYWjNqEVGN5Ob0S+S9Ej85zr2Eq1KSgleEXorLW5//2Q==', 0.7),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnPh3oXh3x34x+JvgH41618UtA8ceDfBGteLrn4oaP8SrZtC0RYWZtOtX05E8tFmXavlzfvHIbAOQa+eP+HjX7a3/QvR/+CJ69O+Pn7T/iX4D+D/ih+xb/AMKq8B+IvD/j/wAQ6nruqavq+j3aagZ5/MeESSwXcYnFvlREHG0CNPlOK+RN/gP/AKFrWf8AwrbqvxbLeH+F+K+H8DP2NCc4U48zdJxXvJaJK21n1ffS585RwuCx2EpPli2kr+60f//Z', 0.7),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDlf2dfA3h343fsQ+Jv2sdV8Q/GPwhL4dWzhg+KS/E211SPWr179LS4j/sNIybaHaxKMyLgkHJxyV8ueFf22/F/wR/ZItPDPwd+Dnw/8N6z42ePTfFvjfT9GuDrGqQ2kxuUMjy3DwhmljUsViUEZwBRXy2IyLhROKq4GlJ2Vv3UHp21RxSw2BVualF/9uo//9k=', 0.7),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDTs/hf4u/ar+FPxT/aW1LW/GOmaJoPhXV4vgto3hq4ubY6te6eV+1arctDjdGX/dQxv8rhGbBzwVW+I/gPX/gXZRad8Bfjp8SvBeneIku9N1bRNF8eXr6e0NyymUxWty8sNq+d2HgWMjc3NFfgvC3EPh0uGsLGjgG4KNlzU6bk2naTb5nduV3f8FsfL4LF5T9Thy0tLdUr+fXuf//Z', 0.7),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDz39s7wDrP7P37L/hH46/An4f/ABS8Sx6v4J8O6j4h+K1n8aTe2tjql7ArXFrLpUccjwgsSiswVQXGOVor560z9pfV9F/Zv8Ofs1fCz4W+DvA1n8Q5V/4TPxP4V06dNY1Q6eJJ4C81xPLGuZI1L7YlDc9KK+FzTL+FaVeKrYSN+VbU6bVvmjzK9LAxmuaC27I//9k=', 0.7),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCPx58O/wBqL9lX4afDH9qH4lS+MvGg1rRF134oW/h/WLCaz0Oz1CDbpdlFpakXRYSNEz3Jwu4lcHrRXyR8W/8Agqx+0Xbfs3WGlWHhDwRba9qENv4P1fx1Bokw1jUNJ0mQvZwzSGcxEgxpuZYlLYor8mzzwl4EzzEwr1KLp2gopU7QjZXs2ktXrq+tkeFishyvEzUpRa0S00R//9k=', 0.7),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgPDWgeGIv2VfiX498UaF8TvD3xU+Hd94d0HS9dX4vz6lp+ueJdQeGT7L9lMSRqBA29kOdoYjqKK574S/F/wAS+Pv2xrv9kfWbCwj8KeGPi94j8YRtbwuLrUdTMcflNdOzFZEhErCJVVSoAyTiiv5I8QuMsHk1XAUv7PoVJzw9OpJunFK8+kUr2Wnc+DzbMKeHlSj7KLbgm9O/Y//Z', 0.7),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCez/Zvj8QfsJR/tnap8Z/iFFe3nwUfx1c/Emz+IkEVvb6sZdo0ePQDCT9mIIQT4O0kEkkclfFun/8ABTb41x/sZLocPw48BJrkPhpvhrb+N00W4GrQ+HXbLWqt9o8jOBt3mEnHvzRXytfh3hSKgp4Gk7JJfuoOy6LY4ZYTAKydKP8A4Cj/2Q==', 0.7),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwB/hT9nvWvFf7Fn/DWumfEr4l6j4gj+DbePrj4sw+LYV8N22qxy86A+lhNoUoCnzESZOSR3+WP+HwP7VX/Rql//AOAM3+Fcb4+/aB8bfDfwX48/ZB8CWOmaV4T8WTRa54rezt3S71drfSLe6W0mk37fszTZd0RVZySS2Tmvdv8Ah7X8bP8Aohvwp/8ACYuP/kqvzafBnA3FWEw9avgIK0ItKKUbKSul7tr2t126bnj/ANn5ZjqcJSpLZeW/of/Z', 0.7),
    new types_1.Icon('/', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxz9oF/wBofxJ8F/AXxN+EXjHxsfiT8Vr3V/FFj4c0zXo7W00vwdBNHa2m+GWNgs0krK+7gsGOOBRWb4F+KPij9qfwrrHxo8dvDpmq6TH4a8K6RD4dVra3sdKs9MmaOCJWZyoZpSzksdxVD/DRX825/mGEynNqmXYDA4b2dDlgvaUVKTtCLu2pK+/r1Z8fiqtOhXdKlShaNlrG72Xmf//Z', 0.7),
];
// These are very small icons in seaside market detail page
exports.iconSeasideMarketDetailBeans = new types_1.Icon('iconSeasideMarketDetailBeans', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAAwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2vS/Eeha/40n8E2uqXxksLaV9WfSdMW6e3ka3ZoIMvIiRyM7Quc79kRBZP3sRZnhO/wBevtPdPElmY7uGXbI62whjfciyYRfNkbCFzCWfaXeF3VQjJmHXtC+IV/PcNofxSu9Ph+yznTrdbUFba5ZI1jLFGQy26skjmJv3jNM2J0UIi7JtIDqV9rC2sCXOpXInvpo4VRp3WNIlZyoG8rFFFGC2TsiQZO0V/FnFGK8G6HhBl+AyaMqucSlGdabhKLpvlftIObjGMoXdqag56RUpNPf+Usohx/U41xVXMFThl6i1SjGXNKTTXLLo02uZyutG+VcySkv/2Q==', 0.955);
exports.iconSeasideMarketDetailAuroraCompass = new types_1.Icon('iconSeasideMarketDetailAuroraCompass', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDvvEvw9/aU+HXxo0bwL8NdRh8aeKfi6kM2m+FdV0O+a28N6TuujDqjXguYre3kLII/ssUMxuLa3dyy3O3fteFv7Y+I/wCzX4c+LvhvxtoPiC+vtRmtdfh02wWKDTLlQSIBme4Ey/eVZ1cCTynJSJsxJjftefEnwL4e8BeGfAvjf4dv4007xDquneGdAj8Za9qF22l6jqN1cm6WKSG5gltbQqItrRSb1hkNkI/s8R+0ad34T8X+LvizffEzxhfaXptuuni00rw94WtTBYp5vlTXEnlvnyVWZGWKFCVXfcSlv9JWC1+B8QMo8Ea/gHh86w+HhDMJYeiqdSNF886kFDmjL3VT5VB8rdo2UXyTneNvj8Y8leUSlyXquMXGVkrJLVNfabdrO8Uo3jZtpr//2Q==', 0.94);
exports.iconSeasideMarketDetailAuroraColumn = new types_1.Icon('iconSeasideMarketDetailAuroraColumn', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6F1W38EXPgM6VfaX4jvfHuveHNUufCmhWcLWFlZQQTXmmC5urqO6IuDLJdx3EkiyRC0tIbeQR215Cj3uH4r1CHVDdReFIbKWWDVbiF9Lvi6XNvHHLJEJHt5lSdI2dHEczxqkwjkMZYK2NdPHOl/CuKb4m6r4cGojw9A2oRGG4aG6t/KG+R7WYf6i4aISxLKVbZ5xYDcFYcV8IPjfYftM/DvSfit4Z0ow6Lq5vpze6hB9k1KSVL2a2igENrJ9nt4I4LdXbb5hnnuJHAtwhE/8AM+LreH/GngB9deEjgsVlk6dPmhFT9vUnBLVxjBpVOTmfO5cujc5ybcfzSvXw2Oy2M+VRlSSjot9tXbdvXfba+x//2Q==', 0.96);
exports.iconSeasideMarketDetailAuroraBrick = new types_1.Icon('iconSeasideMarketDetailAuroraBrick', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3rw14u8N+J/hLqnxm8F+DNa8RW3h7xHf6DeWWly2l20t9ZybJ55rVbmG8itRK62wRVMkr2s7LJEkto8/Mf8FIPiTq37Ffwo0zWvB/w4/4T3XfFPiKzuU8Hafp8817b6b/AGaV+2W/lRSGwt1u4rqOa3nkvXkmni8u6C20kVM034Z654H8dzeP/g98Qb7wtPdzNc6jaWttBJbXNwyyh3MOxYyGLq581ZXErTSbzvRIr/gLw3rFpA/jH4l65qmr+MNR0nTLXU7278QSXsUX2eGQPGjyxq8o3yALIRGfKijQphV2fkUM2+jVw54Q4fG4fBwxmKlCMJU6lOrCs67pxdSE8RGEVGEFJpToO07pcsXecfhY4zIaOT8saSlVaSu73Ttd6pLdaX776an/2Q==', 0.958);
exports.numberImagesProdutRequirements = [
    new types_1.Icon('0', b64N0_0, 0.95),
    new types_1.Icon('0', b64N0_1, 0.95),
    new types_1.Icon('0', b64N0_2, 0.95),
    new types_1.Icon('0', b64N0_3, 0.95),
    new types_1.Icon('1', b64N1_0, 0.95),
    new types_1.Icon('1', b64N1_1, 0.95),
    new types_1.Icon('2', b64N2_0, 0.95),
    new types_1.Icon('2', b64N2_1, 0.95),
    new types_1.Icon('2', b64N2_2, 0.95),
    new types_1.Icon('3', b64N3_0, 0.95),
    new types_1.Icon('3', b64N3_1, 0.95),
    new types_1.Icon('4', b64N4_0, 0.95),
    new types_1.Icon('4', b64N4_1, 0.95),
    new types_1.Icon('5', b64N5_0, 0.95),
    new types_1.Icon('5', b64N5_1, 0.95),
    new types_1.Icon('6', b64N6_0, 0.95),
    new types_1.Icon('6', b64N6_1, 0.95),
    new types_1.Icon('7', b64N7_0, 0.95),
    new types_1.Icon('7', b64N7_1, 0.95),
    new types_1.Icon('7', b64N7_2, 0.95),
    new types_1.Icon('7', b64N7_3, 0.95),
    new types_1.Icon('8', b64N8_0, 0.95),
    new types_1.Icon('9', b64N9_0, 0.95),
    new types_1.Icon('9', b64N9_1, 0.95),
    new types_1.Icon('/', b64NS_0, 0.95),
    new types_1.Icon('/', b64NS_1, 0.95),
    new types_1.Icon('/', b64NS_2, 0.95),
    new types_1.Icon('/', b64NS_3, 0.95),
];
exports.bNumbers = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7F/ZY/aM/aE1r4+y2fgn4seJPFfjK80vxPL8V/BmpztPbeGbu31yCDTUjgKgWu62acBQf3iIH9yUUVlC7RpKyZ//Z', 0.9),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD68svhv8cvhf8AHD4veCvC998R7/R7X4kO+kXuqX9/dvPFJpenSMyzOTvXzXlxg4ByBjGKKKKwsbJ6H//Z', 0.9),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3P9oHw34g8X/ta/EOy/Zu/aN+K/wX0XRb2PT9Uub218Rai3inVFmumubyPYGWOBN6RRkHDhSQAAKKKK5d2b3sf//Z', 0.9),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7g+Adh4lk/wCCo3xK8JfDf4s+MdQ8JJ4Vvbi/TSPFuravFFqo1WNCl2moBYrSdFMqRx25dPKUnNFFFZQ2NJbn/9k=', 0.9),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7Z+Cbf8FA9P8A+CrnjL4y/G79lXxld2OtfDS8tdD0e28R6a2mWNnHq9utqIpxceSJWijZ3jdhMWldtmwZoooqIxt1Kb8j/9k=', 0.9),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD379k74keDvCPjHx/8JPhZ8H/B3xjk8Oa0/wDbvi24tbzSb5bqe/1Bza3Ju5iLkxABEkiVU2AA5IzRRRWENYm0tJH/2Q==', 0.9),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAJAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7j/ZZttY8J/t4fFL4f69feI/Hmo3Vxrmrtr/hLx9rU0Oj28msL5GlXNndBLS3mWN12mDcdsLjO05JX354U/5Dut/9fa/yNFRGNkU5XZ//2Q==', 0.9),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD63/YW/bO/4KKeD08ar4//AGWdf+IfiDVtffUteYRajYSaFdPPcw/2cRdgwMiQwQMgtQECOCxZm3EoorGN+Xc1klfY/9k=', 0.9),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7f8IfsO+Lfjb+1n8ZtP8Ag/8AGj4k+D/BnhHU9M0e1m1Dxpql0NT1YwzXV/JF9omYpGn2m2iATCfJkd6KKKzUItFuTTP/2Q==', 0.9),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCj+258W/26vDHxW1u9+FXxn+JkOqXXjrxJFrsXhnxFrbXyQQ6gyWQvLMsLayQQkiAWxIeMMWwQuSiiuGV+Y61ax//Z', 0.9),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAJAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDpI/23f22xfzt4E/aX8TQ6o9xeHxMdMupdeneddTvo4vtFiUUaK4hSNRbgsJFUPxRX7FfDP/koXjr/ALDif+gGisVTbW5r7Rdj/9k=', 0.9),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD37TPg1/wVft/jd498A/Bb4neIZtW0DUEXxt4p/wCExvr2x1m8uJ7q4gNvHdIqWrRWklujxQAoMoCSQQCiisVBPqauR//Z', 0.9),
];
exports.wNumbers = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDK/Zt+AXwN1H4KfCb9mHUv2d/DeoeEviZ8C/Enizxf8SbjSA99a6rbLO0MiXn/ACxETRJHsyM7vU0V+e2kfteftN+Bv2WdY/Z+8I/G7xBYeDLhzHJ4ft74iDy5TmWMfxKjkfMoIU9xRWDSWljRNvW5/9k=', 0.8),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzf9kHTPgJ8cv+CacMt9+zJ4M0zV/CXxEtNLudftLAvd6v5tleStLO8hJJyiDAwBt6UV8IfDb9oH40/D34c3ngDwT8SdU0zRrvWIb+4060n2xSXKRSRrKRj7wR2H0NFeeq0bK6NXGV9D//2Q==', 0.8),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzX9hjWfhnrX7CniHxv+25+yb4GsfhHottZaZ4T16x8J7NY13WjexmSVJVy8yrD5gkb7vAHXNFdD+yz8TfiTF/wTO8N+FoviDri6Zawv8AZtOXVphBF/xMGPyx7tq888CisIq8UaJn/9k=', 0.8),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzbX7H4RfGH/gjrr/xS8QfDT4ea34i8OX3h+3tNK8IeCJNE1Dw0sk4id57t1C3ZnVQxKE/for4r+NP7aH7U3xO+BWg/A/x18btbv8AwlaRQJDoTSqkBEChYdwRQZNgA27icYorhnOLex1wpNrc/9k=', 0.8),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDH+Kf/AASJufgz/wAEX/Fuj6P+zvc698YtS1Dw3r1/4lgtY2EEN3cgmws2LZCxREeb6mTHOKK/P74e/F74sQ/sP/FTQYvih4iWxm1rQjNZLrc4icrM20lN+DjAxkcUVztRdtDN2lqf/9k=', 0.8),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDz79rDTPCPx0/YQ03xn+xUfhhc+HvCXgvwpaePNHl+HZtNZt9UdY45Z1v5owJlebAZVPTceQaK+Ifin+2H+0540/Z50H4C+JfjNrNx4PtREItAEixwEQ5MW/YoMmzHy7icUVxTnFsapSmro//Z', 0.8),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzb9sn/glR4E0/9jTwR4B/Zr8R+GG8WeEPBuj+L/iF9t0GaPUdUfWCkcbLqDHyjDGZFUQqO26ivNfj/wDGX4v3n/BIzwJpV38VfEktrJcW9tJbSa7cNG0MUhMUZUvgohAKr0XHGKK5pxhfYbqzi7I//9k=', 0.8),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDifhP+1F8K/Cf/AATf8PftB/tY/szfDe6uPEPjtdF8GQ6Z4RtrSeWxsrKQXFxIVUGQNI8Q3H+JWor8xfiP8Xvid488B+Efhn4x8cajqOgeEra6j8N6TczlodOSWRXkEa9gzEk0Vye10Q4U3OKdz//Z', 0.8),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDr/jP+zJ+yM37JOoeENO+EHhrU7jRPhd4O1i28B6T4VFprmkXV3NAtxfTaqcLcLMHIMYYkbs4or8vPGv7dX7X/AIu/Z60z4MeJP2hfEt34Zg8q2j0qS9+XyYDmGNmADsiFQVUsQMDFFcUq1NvY6FSl3P/Z', 0.8),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwBfGPw2/YD8S/8ABNS++Mmn6N8NU+GOjeHvDFjo11YaE8HiC28TvLGuopczsoM24GQkKWAGDwKK/I3xL8Zvirr3wd0X4Lax491O48J6TqVze6d4fkuT9lguHCB5QnTcRxk59qKr2dzH2tj/2Q==', 0.8),
];
exports.iconSeasideMarketItems = [
    new types_1.Icon('white_powder_heal', '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', 0.96),
    new types_1.Icon('white_powder_support', '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', 0.96),
    new types_1.Icon('white_powder_charge', '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', 0.96),
    new types_1.Icon('blue_powder_heal', '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', 0.96),
    new types_1.Icon('blue_powder_support', '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', 0.96),
    new types_1.Icon('blue_powder_bombard', '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', 0.96),
    new types_1.Icon('blue_powder_defence', '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', 0.96),
    new types_1.Icon('blue_powder_ambush', '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', 0.96),
    new types_1.Icon('purple_powder_bombard', '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', 0.96),
    new types_1.Icon('purple_powder_defence', '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', 0.96),
    new types_1.Icon('purity_crystals', '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', 0.96),
    new types_1.Icon('swiftness_crystal', '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', 0.96),
    new types_1.Icon('strength_crystal', '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', 0.99),
    new types_1.Icon('arcane_crystal', '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', 0.96),
    new types_1.Icon('power_crystal', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAgADADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9xLW0t7KBbe2j2qBye7H1NeXfti/tofs9fsIfBW/+Ov7RvjePStKtQY7CxhAkvtXuiMpaWkOQZpm9MhEXc8jRxo7ryH/BS/8A4KHfDf8A4Jqfs3T/AB28eeGNS129vb9dK8KaDp8LganqkkckkUEk4Rkt02xyOztk7I32LIwCH4N/4J7fsw+Cv2yP2rtd/bB/4LOXmr6h8WLG/sZvCngPX7JrLwxodj5b3VvaRo7EOsYZJBFIVjcTK7NdvcyufwXC4ahJKpiaip027Xk7Xfa7/wCDrokz9MyPhrFZpha2PnGToUVefJHmm1dK0Y+r1baS3b0Z6T+yP/wcwfs2/Gz4t3Pw4/aX+EmqfBbTtTnUeCPFPiTUjcWOooZdmLxxBGNPfa8L7iZIFVnLzRhUaX0b4r/8Fi/hJ8QfiNP8F/8Agn1+z5rn7R/jW0n8u+vvDN+umeH9M2SBJPN1mVSgxuRg0KPDIHA80HIrE/4KXfs9fsx/tc/E1vHH7Sf9heFfCfhbVbfTtZ8RarqQsYmsoZwuZZ3lWKFgxuAko2tsn8t96qoHdfA/9pP9gzwN440D9n79irxf4C8Q+DNGhj1HxXbfDcveWtijuIEe5u7RZIDKxCyCJ5WuLlbaT5SiOT5OLznK51ZvBQcoQnySnK6pxXMo87XxuK3dnpvdXR9RieH+HYewq4eE3Uq0+b2PN8EkrtSqJe9fRwSs5Xs3BrXmf+CZ/wDwU7j+OHxq179in9svwd4b8AftC+Fb28EOmeHL6RtG8U2UZfc+mtLLKfNgVHElsXZgIpJYzgXMdv8Ad1fhp/wWo/Ys1X/gn18StI+OXwm8dJ4JtdO8QDWfg34vRTcf2XqEJWU6ZMJFkZ+F27XEiyxBXYSlJYx+oH/BK39vzwp/wUk/Yu8MftHaQILfXvLGlePtItrdoo9M1+COP7XDGjSSFYWLpNDudn8ieHfh9yr7mNy+vh6fPONmnyySva/eN/sy3Wrt9x5fHWQZRldfD43KMQq2ExMFOD05ov7UJxUpOEou6s2/JuzS9T/aW+G/wF+LnwE8WeAP2odJ0W8+H17osz+LF8Q3KwWcFnEvnPcSTMy/Z/J8sTCcMrQtGJFZSgYfkz/wTx/af8M+N/F3j39j+L4g+Ifir8PPhqWm+CPxkvdOlXUV05rmNF0O/eVEFxbKZpWhmfy3hNvMIVeF47eL1T/g5Y+Ff7QWsfD3wn8Tpfi9rA+BcM8OlfEDwTp0xtbe11F5y9jqt7JHGTcWjS+TAyTSIkEy2siAmSQjlf2Mv2qvgHH+wTpnwF+FHgjRPCHiTRvEVtaeL9I0q2bOo26iWZL55HBYs8iRDljt2siYRdieXm1WWEyCa9n7WNX3Wn8Mf7z68ydrNWs7O+x9J4fcOYrF0IYzDzcm6iXLB2dP+aUrpu3Lo0laSdm7ar5O/b8u/jR8Zv2gPEfxv+Lv7LPjIfCrwSV8PeCtY8UeA9Si0aK189YpNQzdxiBXvbpkCyMkcjRpaxn5gVr6I/4Jx/tzR6/c6F+yN8Lf2H71tLFu0+r+L/C/iq3u/IwY0e/vreW2tVtoAgACpLMyKkUKec5XPeftJ/s7fGP/AIKafEz4X/swXfis+GPgr4fvjr/jDUoNQt5L7XNQEUohtrSDy2eI28ccmZJXWItfrJ5Uxttp/QP9lr9j/wCFP7K/wqsvhF8BPAkWjaLbZlnuJWL3F/OR89zcTN880jYA3HhVVUQKiKi/M4nF0MZlNLA06HtKlvdhFyaglonLlavJ7tba3lZn1mf8XYDKeG1lOLoONeE3KLi+S+/v1W4vnbfNaKWi2cVY/Lz/AILR/tn6F8ef2d9P/Ygisor1dBuYb2TWmMcdtYPatKvmEkbpJI7bdAI0AQi4aR5GKbVyP+DUr9nT9orwv8VviV+0n4Yjm0z4IeI9FTSN2rRDf4m1q1ucw3VmAgPk2yPexSS7ghe52BZXSQ23I/8ABfXT/wBlf4ofG2Gb4CeMY77xFNI9v8QrWwbfYsyqjQ3sRAysh+ZWPCzjypIwwEsrfZ3/AAQX/wCCpvgz9p3wHb/sNeK/CllpHj74ZeF0+zSeGdGW30nV9Ft2ht0uVihGyyuEaSJJYMCJmdZISFkaGD7LKsRiv9X+SUpSk0lJSd+VKy06W91WtpvPVybPn+Lsox+H4Ho4qjlypUqk3Kc5K01J3dlF2aW7ctW9IvlSSP/Z', 0.96),
    new types_1.Icon('milk', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXACUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9yK+WP2gv+CnHgLwb4/1P4LfA/wAEjx14h0LUEtfEOoSXf2fR9JugW3W/nqkjXV5E6pvt4k2oSUkmhkXbX1PX44eMvCn/AAUf+Fgl0n9mzwfeeM/Amh+L/EvhzTNV8M6JHrGqM9lqV1ZLHrEUEZkiu1SCO5EyxpFMtzE7s7yNGv4JhcFWxVKc4RcuW17a79bH3GUf2Y8YljHp0V+W/wA/03fQ+m9b/an/AGhtL0DUviT8Tvjdd+CtN0zRj9ps/C2g6VY2kTqSUdE1O2vJndgwQRCY72wEClsH1b/gnJ+3xp/7Vnwt0i38d6Z4i0rxHeXWrRaNfeJNDWzi8TWtnePF9otJYv8AR7iWOIwi4WLaFmE2xAiZHxT4S/4JY/8ABQ79qTXNK8S/tmeMZPCHhUXMAT7fJFcXl0HimYC00+z/AHaTEokbNcGAgTBh5pQxn9Mvh5+xf4J+H3hzwBoXgXTbPStP+GGm6hB4Qt/swkn8+7gjSW6uGjaJHldzdvKoAWR7jeGUqCfpsn4Wr46hVliIOHuvkvZNz6XX8vR+TujHinNcvUqdPARjzKS5uVacmqeq3fVavVa7noVFePap+1v4N+ElydG/aH1eDSJZi50vVbLSrswXwWRlkiaILI1tcQ4j82FnfHmxsrMrjBXlV+F+IaNVw+qzlbrGMpRfo0mn+mzs9D5+GcZZOCk60V5NpNeqb/rdaHsNeJfslfCjTvib8YviV+1rrPhmy0z+2fEuoeE9G02xuXaCe10e6uNMn1K7t+IpdRnuIruNZ3V2iso7eFCPMufMKK9ngiKWLrVOqil971/IMx95Ri9tX9x9Cw+AfDUDR3L2Jmkig8lHmlZsRg8IBnaFHZQAB6Vh+PPE1h4QAgtfDtnLZxJHc63K15Jbm1tjMqeaqxxN5zAGRgmV/wBWRkbhRRX6RTV8VFNuzXd90v1/BdDz4QhyvQ8C8fxfCz4z3yX3xQ8GaXr2nwrHdaW9payo1tNdW1vPJGzTPum/0drE+dtj3ZIMcZUqCiivXxU6lGs4Qk0kl+SPNlhcPOTbij//2Q==', 0.96),
    new types_1.Icon('cotton', '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', 0.96),
];
// Tower of records
exports.iconRedBubbleWhiteCheck = new types_1.Icon('iconRedBubbleWhiteCheck', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAPABADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5B/Yx/Yy8GfGTwFcTp+zv4m+M/i280zVvEE+j+H/EV3pP9g6HpmqvpTvBBaTLLfzSThZJF/euFmhWKIeXM76n7Wv7NHwY/Zq+1w/DnwppfhrxV4SOmxfEfQbT4hXutwQC8vPsclk892GRtSsriewEy2srQIst1GzSS27+V4b4a+Jf7Rv7POq/8Jt+zz43a0uLG7m1DTXbVr2z1DR5JFl+1Lp95azI8C3AllDRsSgMsuNomlDL4V8SWfx+8Q2GuLpjW3g3SZEvtGsNSs4GudRulV41uJ9pkEMce9wkKOdzgO7HaijwJ5VxFHPkrv2cpNt83uKCtZKNk+Z3trdaN9dP3V5/4UVvDSdN0oRxcKMIxiqTWIniZX56k67lKHsIcrmlBQk/aRptWi3P/9k=', 0.96);
exports.iconGreenBubbleBlueGem = new types_1.Icon('iconRedBubbleWhiteCheck', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAVABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9afglcfsr/slfAnQv2cP2K/g/a2FhZWCWWieHtP0/ylMpAG+5kkIa4mdmZ3lZmaRtzPINxevEPiP8WNO+Bl3ceFfjZe6xaeJbeebdo/hsJfp5BJa2fzppbbDPEYy67dqSMyo8yp5p8S8T/twXH7NX7TejeMfFPhGTUdG1zQrXTvBUlzqDQW2la8k91JeI5CNG81zA1ksDSgsBaXKRmMzyrN5H+0n+0t4n8ffGrWvHmqeHZrg61Ml5FJPduAiMg/coWT5khIMAI4Pk14vgR4FZP4+8PYbiHjCnTxNBwmqVKjOVKNGSmlKMuWoqjqStzVOd9uRWvKX8xeLPirmuSqngMmX+13UnzR9x0nF3cXKyk+blWkna0lZWPfPgJ+3VoPxo+Imp/Da/tLvw/qkNw7aDb3+pB21S3RcsdpC7J1KuXgXzAqAMHbLBPWrjR/CN7cSXl/8AD/w/cTzOXmnm0eJnkcnJZjjkk5JPqa/Lfxn8ZtPtfiQJfEHwfa7sGtrFTqdpez2+ojU5JpBb2emH7OHmvn2QyJJbviEhGaSNozt/Qr4X/EvVNN+Gnh3Tvirqo1DxRb6FaR+JL+wtwsFzfrCguJYwAmEaUOyjavBHyr0H88fTB8B+CPBvinCVuGqns8Pi4y/2aU3KdKUOVScZNuUqUm/dc25KSaTkrW9/w34xz/PsqlLNqXs6keVqacXGakr6crdpR05k1HSUXbU+ddf8e+Dfjh8SfEX7J3xC+GdtqGizaSzX8t1elluFypACBAY2DEMrq+5GVWUggEfNb/H/AF79nn4x+J/gX4gsP+EvPw9L3GleI9ReOG+u7U2C3sUVw4jbzJkAEfnDAbl/LDM24or7T6IOdZrw94qwybL60oYXE4SlUq073jKo50oudpXtJxlJXjbR26K2vGvDeSZ3kdWONoqfs6fPHVpxk7JtNNOzT1V7PS60Vo/2KfiZba/oHi79sn4meHj4i8WadG8+kCe5WKDTorh2E4gjWMqk8rBjJPjLIRGqxoGDewWv/BQqS4tY52+EgBeMMQNe6ZGf+eFFFfE+IWX4fjfjvNsyzzmr1lXUFKU5+7BU4tQilJRjFNtpJJK7sfcYfJ8twdJ0KFJRhCyilokrJ2S9T//Z', 0.96);


/***/ }),

/***/ "./src/messageWindow.ts":
/*!******************************!*\
  !*** ./src/messageWindow.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.canEquipToppingMessageScreen = exports.canEquipBeascuitOrToppingMessageScreen = exports.newAreaAvailableMessageScreen = exports.battleNotFinishGetAllianceBackMessageScreen = exports.battleCompletedNotInflictDamageMessageScreen = exports.guildBattleAttemptNotUsedMessageScreen = exports.battleAbnormalButLastWasSavedMessageScreen = exports.unfinishedSuperMayhemBattleMessageScreen = exports.bountyHasExpired = exports.bountyAddMoreCookiesMessageScreen = exports.unfinishedPVPBattleMessageScreen = exports.messageTeamDontMatchToSCRow2 = exports.messageTeamDontMatchToSCRow1 = exports.messageCookieDryingOnSunbed = exports.messageNotifyQuitRedroid = exports.messageNotifyQuit3 = exports.messageNotifyQuit2 = exports.messageNotifyQuit = exports.theReloginIntoAnotherDeviceMessageScreen = exports.theNetworkIsUnstableMessageScreen = exports.anUnknownErrorHasOccurProcessingRequest = exports.skipTutorialMessageScreen = exports.anErrorHasOccuredMessageScreen = exports.downloadDataNoLanguage = exports.downloadDataNoLanguageTitle = void 0;
exports.downloadDataNoLanguageTitle = {
    name: 'downloadDataNoLanguageTitle',
    x: 260,
    y: 88,
    width: 110,
    height: 20,
    targetY: 10,
    lookingForColor: { r: 249, g: 249, b: 250 },
    targetColorCount: 45,
    targetColorThreashold: 5,
};
exports.downloadDataNoLanguage = {
    name: 'downloadDataNoLanguage',
    x: 226,
    y: 127,
    width: 180,
    height: 12,
    targetY: 4,
    lookingForColor: { r: 202, g: 193, b: 183 },
    targetColorCount: 40,
    targetColorThreashold: 5,
};
// export const termOfServiceMessage: MessageWindow = {
//   name: 'termOfServiceMessage',
//   x: 168,
//   y: 127,
//   width: 140,
//   height: 6,
//   targetY: 4,
//   lookingForColor: { r: 37, g: 37, b: 37 },
//   targetColorCount: 32,
//   targetColorThreashold: 5,
// };
// export const facebookRefreshTokenExpiredLogout: MessageWindow = {
//   name: 'facebookRefreshTokenExpiredLogout',
//   x: 220,
//   y: 135,
//   width: 196,
//   height: 14,
//   targetY: 4,
//   lookingForColor: { r: 140, g: 135, b: 128 },
//   targetColorCount: 16,
//   targetColorThreashold: 5,
// };
exports.anErrorHasOccuredMessageScreen = {
    name: 'anErrorHasOccuredMessageScreen',
    x: 194,
    y: 176,
    width: 236,
    height: 7,
    targetY: 4,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 28,
    targetColorThreashold: 5,
};
exports.skipTutorialMessageScreen = {
    name: 'skipTutorialMessageScreen',
    x: 194,
    y: 166,
    width: 238,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 48,
    targetColorThreashold: 5,
};
// "An unknown error has occured while processing this request" 先用等的，可能會需要重開遊戲
exports.anUnknownErrorHasOccurProcessingRequest = {
    name: 'anUnknownErrorHasOccurProcessingRequest',
    x: 190,
    y: 160,
    width: 254,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 67,
    targetColorThreashold: 5,
};
// export const anUnknownErrorHasOccurMessageScreen: MessageWindow = {
//   name: 'anUnknownErrorHasOccurMessageScreen',
//   x: 222,
//   y: 160,
//   width: 198,
//   height: 25,
//   targetY: 4,
//   lookingForColor: { r: 80, g: 80, b: 80 },
//   targetColorCount: 79,
//   targetColorThreashold: 3,
// };
exports.theNetworkIsUnstableMessageScreen = {
    name: 'theNetworkIsUnstableMessageScreen',
    x: 222,
    y: 160,
    width: 198,
    height: 25,
    targetY: 4,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 51,
    targetColorThreashold: 5,
};
exports.theReloginIntoAnotherDeviceMessageScreen = {
    name: 'theReloginIntoAnotherDeviceMessageScreen',
    x: 190,
    y: 160,
    width: 246,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 68,
    targetColorThreashold: 1,
};
exports.messageNotifyQuit = {
    name: 'messageNotifyQuit',
    x: 220,
    y: 162,
    width: 196,
    height: 12,
    targetY: 4,
    lookingForColor: { r: 95, g: 95, b: 95 },
    targetColorCount: 42,
    targetColorThreashold: 8,
};
exports.messageNotifyQuit2 = {
    name: 'messageNotifyQuit2',
    x: 234,
    y: 184,
    width: 180,
    height: 12,
    targetY: 4,
    lookingForColor: { r: 168, g: 162, b: 155 },
    targetColorCount: 36,
    targetColorThreashold: 8,
};
exports.messageNotifyQuit3 = {
    name: 'messageNotifyQuit3',
    x: 200,
    y: 184,
    width: 240,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 131, g: 128, b: 125 },
    targetColorCount: 67,
    targetColorThreashold: 4,
};
exports.messageNotifyQuitRedroid = {
    name: 'messageNotifyQuitRedroid',
    x: 208,
    y: 184,
    width: 240,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 171, g: 166, b: 160 },
    targetColorCount: 47,
    targetColorThreashold: 4,
};
exports.messageCookieDryingOnSunbed = {
    name: 'messageCookieDryingOnSunbed',
    x: 201,
    y: 172,
    width: 226,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 172, g: 165, b: 158 },
    targetColorCount: 68,
    targetColorThreashold: 8,
};
exports.messageTeamDontMatchToSCRow1 = {
    name: 'messageTeamDontMatchToSCRow1',
    x: 234,
    y: 160,
    width: 140,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 155, g: 150, b: 144 },
    targetColorCount: 47,
    targetColorThreashold: 7,
};
exports.messageTeamDontMatchToSCRow2 = {
    name: 'messageTeamDontMatchToSCRow2',
    x: 240,
    y: 173,
    width: 160,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 95, g: 95, b: 95 },
    targetColorCount: 38,
    targetColorThreashold: 8,
};
exports.unfinishedPVPBattleMessageScreen = {
    name: 'unfinishedPVPBattleMessageScreen',
    x: 240,
    y: 160,
    width: 160,
    height: 6,
    targetY: 4,
    lookingForColor: { r: 247, g: 235, b: 222 },
    targetColorCount: 128,
    targetColorThreashold: 5,
};
// There're empty spots on the team!
exports.bountyAddMoreCookiesMessageScreen = {
    name: 'bountyAddMoreCookiesMessageScreen',
    x: 191,
    y: 177,
    width: 247,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 54,
    targetColorThreashold: 5,
};
exports.bountyHasExpired = {
    name: 'bountyHasExpired',
    x: 224,
    y: 166,
    width: 186,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 89, g: 80, b: 73 },
    targetColorCount: 37,
    targetColorThreashold: 5,
};
exports.unfinishedSuperMayhemBattleMessageScreen = {
    name: 'unfinishedSuperMayhemBattleMessageScreen',
    x: 240,
    y: 166,
    width: 160,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 227, g: 218, b: 209 },
    targetColorCount: 84,
    targetColorThreashold: 5,
};
// Your most recent battle was not finished due to an abnormal exit. However, the previous level's battle record was saved
exports.battleAbnormalButLastWasSavedMessageScreen = {
    name: 'battleAbnormalButLastWasSavedMessageScreen',
    x: 197,
    y: 173,
    width: 242,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 227, g: 218, b: 209 },
    targetColorCount: 86,
    targetColorThreashold: 5,
};
// Your last battle was not finished properly, and the Guild Battle attempt was not used!
exports.guildBattleAttemptNotUsedMessageScreen = {
    name: 'guildBattleAttemptNotUsedMessageScreen',
    x: 205,
    y: 180,
    width: 220,
    height: 10,
    targetY: 5,
    lookingForColor: { r: 227, g: 218, b: 209 },
    targetColorCount: 152,
    targetColorThreashold: 5,
};
// Guild dragon: Battle Completed! If you didn't inflict any damage to the Guild battle boss monsters, you won't be able to claim the individual reward when the battle ends.
exports.battleCompletedNotInflictDamageMessageScreen = {
    name: 'battleCompletedNotInflictDamageMessageScreen',
    x: 192,
    y: 192,
    width: 252,
    height: 8,
    targetY: 4,
    lookingForColor: { r: 131, g: 128, b: 124 },
    targetColorCount: 46,
    targetColorThreashold: 4,
};
// Guild battle alliance: Your last battle was not finished properly. Receieve your Cookie Alliance Tickets back!
exports.battleNotFinishGetAllianceBackMessageScreen = {
    name: 'battleNotFinishGetAllianceBackMessageScreen',
    x: 194,
    y: 173,
    width: 242,
    height: 12,
    targetY: 5,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 131,
    targetColorThreashold: 5,
};
// Hot air ballon: a new area is available for exploring! Do you still want to explore this area?
exports.newAreaAvailableMessageScreen = {
    name: 'newAreaAvailableMessageScreen',
    x: 192,
    y: 171,
    width: 247,
    height: 14,
    targetY: 7,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 57,
    targetColorThreashold: 4,
};
// You can still equip Toppings or Beascuits to your team!
// Do you wish to continue anyway?
exports.canEquipBeascuitOrToppingMessageScreen = {
    name: 'canEquipBeascuitOrToppingMessageScreen',
    x: 162,
    y: 109,
    width: 306,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 83,
    targetColorThreashold: 5,
};
// You can still equip Toppings to your team!
// Do you wish to continue anyway?
exports.canEquipToppingMessageScreen = {
    name: 'canEquipToppingMessageScreen',
    x: 162,
    y: 109,
    width: 306,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 61,
    targetColorThreashold: 5,
};


/***/ }),

/***/ "./src/pages.ts":
/*!**********************!*\
  !*** ./src/pages.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rfpageNotEnoughStockInProduction = exports.rfpageInMagicLab = exports.rfpageInProduction = exports.rfpageNotEnoughGnomeBuilders = exports.rfpageInCandyHouse = exports.rfpageInTowerOfRecords = exports.rfpageInGacha = exports.rfpageBattlePaused = exports.rfpageAddMoreCookies = exports.rfpageNotSelectTeamLeader = exports.rfpageCanEquipTopping3 = exports.rfpageCanEquipTopping2 = exports.rfpageCanEquipTopping = exports.rfpageReadyToBattleToSCTimeJump = exports.rfpageReadyToBattleToSC = exports.rfpageToSCTrayJumpNeedMoreKey = exports.rfpageToSCConfirmTrayJump = exports.rfpageInTowerOfSweetChaos = exports.rfpageBattleFinishedWithMVPCookieWithExit = exports.rfpageBattleFinishedWithNextLv = exports.rfpageGuildDecorShop = exports.rfpageKingdomDecorating = exports.rfpageInKingdomConstructionShop = exports.rfpageFoundOctopus = exports.pageBattleTowerOfSweetChaosVictory = exports.pageBattleFinishedWithMVPCookieWithExit = exports.pageBattleFinishedWithMVPCookie = exports.pageBattleFinishedWithoutNextLv = exports.pageWinBountyAndFinish = exports.pageBattleFinishedWithNextLv = exports.pageBattleFinishedWithSunbeds = exports.rfpageArenaBattleDefeat = exports.rfpageBattleFinished = exports.rfpageBattleVictoryButNeedTap = exports.rfpageTrainNotEnoughGoods = exports.rfpageInTrainStation = exports.rfpageUncollapsedAffairs = exports.rfpageUncollapsedAffairsNoHabor = exports.rfpageMailsAllClaimed = exports.rfpageMailsCanClaimAll = exports.rfpageKingdomHaveNoCookieIcon = exports.rfpageKindomHasOnlySorageAndBuildIcon = exports.rfpageStoryBuildCookieHouses1 = exports.pageStoryBuildCookieHouses1 = exports.rfpageNameYourKingdom = exports.pageInCookieGacha = exports.pageLoginFacebook = exports.rfpageKingdomDecoratingExpand = exports.rfpageMovingStructures = exports.rfpageInKingdomVillage = void 0;
exports.rfpageMasterpieceIntroInCostumes = exports.rfpageMasterpieceIntroInCookiePage = exports.rfpageMasterpieceIntroInKingdomVillage = exports.groupPageGoodsProdMenu = exports.groupPageMaterialProdMenu = exports.magicLabPointMapping = exports.productMapping = exports.rfpageErrorBusterIntro = exports.rfpageTrialGroundIntro = exports.rfpageGameSettings = exports.rfpageInShop = exports.rfpageInFriendsList = exports.rfpageWorldChat = exports.rfpageKingdomPassItemCollected = exports.rfpageInKingdomPass = exports.rfpageDownloadNewDataPakIsAvailable = exports.rfpageGooglePlaystoreHasStopped = exports.rfpageInCookieHead = exports.rfpageCookieKingdomHasStopped = exports.rfpageCookieKingdomIsNotResponding2 = exports.rfpageCookieKingdomIsNotResponding = exports.rfpageHallOfAncientHeros = exports.pageToSCTeamsNotMeetRequirement = exports.rfpageDragonHasExtraTime = exports.rfpageRedValvetDragonWon = exports.rfpageDragonTotalDamage = exports.rfpageSelectAdvanture = exports.rfpageBountiesAt3rdSlot = exports.rfpageBountiesAt2ndSlot = exports.rfpageStockIsFull = exports.rfpageInProductionDashboard = exports.rfpageInCookieActivityDashboard = exports.rfpageNeedUnlockItemInMagicLab = exports.rfpageNotEnoughPurityCrystals = exports.rfpageCancelProductionLongItemName = exports.rfpageCancelProduction = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var rfpageWoodFarm = new Rerouter_1.Page('rfpageWoodFarm', [
    { x: 596, y: 118, r: 123, g: 207, b: 8 },
    { x: 527, y: 86, r: 140, g: 81, b: 57 },
    // { x: 520, y: 91, r: 249, g: 192, b: 139 },  // Memu
    { x: 520, y: 91, r: 222, g: 163, b: 121 },
    { x: 427, y: 79, r: 140, g: 81, b: 57 },
], { x: 596, y: 118 });
var rfpageBeanFarm = new Rerouter_1.Page('rfpageBeanFarm', [
    { x: 602, y: 122, r: 123, g: 207, b: 8 },
    { x: 527, y: 83, r: 0, g: 204, b: 223 },
    { x: 525, y: 88, r: 1, g: 252, b: 248 },
    { x: 414, y: 82, r: 0, g: 207, b: 220 },
], { x: 602, y: 122 });
var rfpageSugarFarm = new Rerouter_1.Page('rfpageSugarFarm', [
    { x: 600, y: 118, r: 123, g: 207, b: 8 },
    { x: 531, y: 92, r: 135, g: 151, b: 200 },
    { x: 419, y: 71, r: 244, g: 250, b: 253 },
    { x: 411, y: 89, r: 239, g: 240, b: 249 },
], { x: 600, y: 118 });
var rfpagePowderFarm = new Rerouter_1.Page('rfpagePowderFarm', [
    { x: 596, y: 120, r: 123, g: 207, b: 8 },
    { x: 523, y: 87, r: 231, g: 157, b: 74 },
    { x: 435, y: 90, r: 156, g: 117, b: 49 },
    { x: 423, y: 83, r: 239, g: 162, b: 82 },
], { x: 596, y: 120 });
var rfpageBarryFarm = new Rerouter_1.Page('rfpageBarryFarm', [
    { x: 597, y: 118, r: 123, g: 207, b: 8 },
    { x: 527, y: 90, r: 198, g: 36, b: 41 },
    { x: 428, y: 76, r: 28, g: 117, b: 16 },
    { x: 413, y: 82, r: 200, g: 26, b: 31 },
], { x: 597, y: 118 });
var rfpageMilkFarm = new Rerouter_1.Page('rfpageMilkFarm', [
    { x: 597, y: 118, r: 123, g: 207, b: 8 },
    { x: 521, y: 79, r: 214, g: 138, b: 99 },
    { x: 526, y: 90, r: 255, g: 255, b: 239 },
    { x: 425, y: 85, r: 255, g: 255, b: 242 },
], { x: 597, y: 118 });
var rfpageCottomFarm = new Rerouter_1.Page('rfpageCottomFarm', [
    { x: 596, y: 120, r: 123, g: 207, b: 8 },
    { x: 528, y: 87, r: 254, g: 231, b: 251 },
    { x: 428, y: 92, r: 255, g: 241, b: 255 },
    { x: 423, y: 96, r: 202, g: 49, b: 136 },
], { x: 596, y: 120 });
exports.rfpageInKingdomVillage = new Rerouter_1.Page('rfpageInKingdomVillage', [
    { x: 39, y: 313, r: 255, g: 101, b: 156 },
    { x: 24, y: 321, r: 255, g: 255, b: 255 },
    { x: 55, y: 327, r: 255, g: 227, b: 247 },
    { x: 377, y: 321, r: 121, g: 52, b: 52 },
    { x: 418, y: 321, r: 132, g: 16, b: 8 },
    { x: 466, y: 318, r: 231, g: 167, b: 85 },
    { x: 96, y: 327, r: 254, g: 244, b: 158 },
]);
exports.rfpageMovingStructures = new Rerouter_1.Page('rfpageMovingStructures', [
    { x: 615, y: 21, r: 255, g: 255, b: 255 },
    { x: 518, y: 16, r: 241, g: 255, b: 255 },
    { x: 406, y: 20, r: 255, g: 211, b: 0 },
    { x: 39, y: 21, r: 99, g: 174, b: 49 },
    { x: 23, y: 20, r: 134, g: 220, b: 80 },
    { x: 32, y: 81, r: 255, g: 255, b: 255 },
    { x: 16, y: 187, r: 132, g: 211, b: 33 },
    { x: 42, y: 343, r: 74, g: 85, b: 123 },
    { x: 36, y: 347, r: 207, g: 207, b: 208 },
], { x: 615, y: 21 });
exports.rfpageKingdomDecoratingExpand = new Rerouter_1.Page('rfpageKingdomDecoratingExpand', [
    { x: 622, y: 18, r: 255, g: 255, b: 255 },
    { x: 517, y: 22, r: 0, g: 182, b: 255 },
    { x: 405, y: 19, r: 255, g: 211, b: 0 },
    { x: 39, y: 27, r: 92, g: 166, b: 43 },
    { x: 48, y: 181, r: 140, g: 211, b: 33 },
    { x: 25, y: 238, r: 57, g: 69, b: 107 },
    { x: 5, y: 348, r: 47, g: 52, b: 75 },
    { x: 565, y: 336, r: 255, g: 255, b: 255 },
    { x: 42, y: 26, r: 97, g: 173, b: 48 },
], { x: 622, y: 18 });
exports.pageLoginFacebook = [
    { x: 186, y: 72, r: 59, g: 89, b: 152 },
    { x: 484, y: 71, r: 59, g: 89, b: 152 },
    { x: 376, y: 123, r: 255, g: 235, b: 232 },
    { x: 602, y: 167, r: 255, g: 255, b: 255 },
    { x: 506, y: 24, r: 21, g: 21, b: 21 },
];
exports.pageInCookieGacha = [
    { x: 36, y: 233, r: 205, g: 204, b: 205 },
    { x: 35, y: 75, r: 206, g: 215, b: 231 },
    { x: 30, y: 12, r: 148, g: 81, b: 66 },
    { x: 268, y: 17, r: 218, g: 173, b: 234 },
    { x: 342, y: 16, r: 99, g: 117, b: 132 },
    { x: 418, y: 21, r: 239, g: 195, b: 2 },
    { x: 524, y: 20, r: 0, g: 139, b: 255 },
];
exports.rfpageNameYourKingdom = new Rerouter_1.Page('rfpageNameYourKingdom', [
    { x: 362, y: 247, r: 160, g: 160, b: 160 },
    { x: 269, y: 242, r: 180, g: 180, b: 180 },
    { x: 410, y: 154, r: 255, g: 255, b: 255 },
    { x: 286, y: 155, r: 171, g: 161, b: 159 },
    { x: 230, y: 153, r: 130, g: 127, b: 124 },
    { x: 233, y: 100, r: 60, g: 70, b: 105 },
    { x: 267, y: 103, r: 173, g: 173, b: 173 },
    { x: 295, y: 104, r: 60, g: 70, b: 105 },
    { x: 356, y: 104, r: 2, g: 2, b: 2 },
], { x: 362, y: 247 });
exports.pageStoryBuildCookieHouses1 = [
    { x: 563, y: 86, r: 59, g: 127, b: 161 },
    { x: 477, y: 83, r: 211, g: 131, b: 56 },
    { x: 492, y: 104, r: 178, g: 50, b: 32 },
    { x: 25, y: 320, r: 75, g: 75, b: 75 },
    { x: 22, y: 330, r: 28, g: 12, b: 12 },
    { x: 94, y: 333, r: 26, g: 54, b: 33 },
    { x: 523, y: 270, r: 48, g: 68, b: 109 },
    { x: 468, y: 268, r: 255, g: 189, b: 8 },
];
exports.rfpageStoryBuildCookieHouses1 = new Rerouter_1.Page('rfpageStoryBuildCookieHouses1', exports.pageStoryBuildCookieHouses1, exports.pageStoryBuildCookieHouses1[0]);
exports.rfpageKindomHasOnlySorageAndBuildIcon = new Rerouter_1.Page('rfpageKindomHasOnlySorageAndBuildIcon', [
    { x: 613, y: 331, r: 148, g: 40, b: 33 },
    { x: 601, y: 320, r: 66, g: 0, b: 16 },
    { x: 44, y: 331, r: 255, g: 224, b: 247 },
    { x: 248, y: 18, r: 231, g: 165, b: 182 },
    { x: 339, y: 20, r: 255, g: 215, b: 0 },
    { x: 454, y: 21, r: 0, g: 139, b: 255 },
]);
exports.rfpageKingdomHaveNoCookieIcon = new Rerouter_1.Page('rfpageKingdomHaveNoCookieIcon', [
    { x: 418, y: 319, r: 146, g: 80, b: 69 },
    { x: 468, y: 319, r: 136, g: 17, b: 17 },
    { x: 505, y: 322, r: 0, g: 0, b: 0 },
    { x: 582, y: 310, r: 56, g: 92, b: 134 },
    { x: 37, y: 312, r: 159, g: 6, b: 40 },
    { x: 253, y: 16, r: 241, g: 51, b: 92 },
], { x: 418, y: 319 });
exports.rfpageMailsCanClaimAll = new Rerouter_1.Page('rfpageMailsCanClaimAll', [
    { x: 590, y: 320, r: 113, g: 194, b: 11 },
    { x: 455, y: 323, r: 51, g: 57, b: 89 },
    { x: 57, y: 131, r: 234, g: 224, b: 201 },
    { x: 31, y: 136, r: 203, g: 194, b: 186 },
    { x: 594, y: 132, r: 113, g: 194, b: 13 },
    { x: 361, y: 32, r: 57, g: 66, b: 98 },
    { x: 295, y: 30, r: 173, g: 173, b: 173 },
    { x: 282, y: 30, r: 57, g: 66, b: 98 },
], { x: 548, y: 316 });
exports.rfpageMailsAllClaimed = new Rerouter_1.Page('rfpageMailsAllClaimed', [
    { x: 615, y: 19, r: 41, g: 89, b: 123 },
    { x: 373, y: 30, r: 57, g: 69, b: 107 },
    { x: 296, y: 30, r: 255, g: 255, b: 255 },
    { x: 606, y: 301, r: 49, g: 60, b: 90 },
    { x: 591, y: 322, r: 160, g: 160, b: 160 },
    { x: 486, y: 317, r: 180, g: 180, b: 180 },
    { x: 44, y: 327, r: 41, g: 44, b: 63 },
    { x: 30, y: 328, r: 49, g: 60, b: 90 },
    { x: 622, y: 322, r: 9, g: 14, b: 20 },
    { x: 18, y: 280, r: 54, g: 43, b: 26 },
], { x: 615, y: 19 });
// This player don't have seaside market
exports.rfpageUncollapsedAffairsNoHabor = new Rerouter_1.Page('rfpageUncollapsedAffairsNoHabor', [
    { x: 319, y: 56, r: 182, g: 153, b: 85 },
    { x: 423, y: 18, r: 1, g: 23, b: 45 },
    { x: 221, y: 17, r: 43, g: 9, b: 16 },
    { x: 227, y: 160, r: 134, g: 183, b: 249 },
    { x: 325, y: 154, r: 255, g: 109, b: 200 },
    { x: 411, y: 163, r: 255, g: 223, b: 243 },
    { x: 230, y: 236, r: 255, g: 255, b: 205 },
    { x: 326, y: 234, r: 255, g: 223, b: 142 },
    { x: 338, y: 234, r: 220, g: 47, b: 72 },
    { x: 413, y: 233, r: 247, g: 209, b: 85 },
]);
exports.rfpageUncollapsedAffairs = new Rerouter_1.Page('rfpageUncollapsedAffairs', [
    { x: 228, y: 163, r: 134, g: 183, b: 249 },
    { x: 320, y: 155, r: 255, g: 109, b: 200 },
    { x: 396, y: 139, r: 207, g: 12, b: 36 },
    { x: 410, y: 159, r: 254, g: 223, b: 241 },
    { x: 190, y: 234, r: 163, g: 218, b: 254 },
    { x: 287, y: 227, r: 244, g: 57, b: 159 },
    { x: 275, y: 233, r: 255, g: 249, b: 109 },
    { x: 364, y: 233, r: 255, g: 223, b: 142 },
    { x: 453, y: 234, r: 247, g: 209, b: 85 },
    { x: 41, y: 319, r: 26, g: 1, b: 5 },
    { x: 320, y: 57, r: 158, g: 133, b: 73 },
    { x: 427, y: 18, r: 1, g: 23, b: 45 },
]);
exports.rfpageInTrainStation = new Rerouter_1.Page('rfpageInTrainStation', [
    { x: 407, y: 19, r: 239, g: 196, b: 0 },
    { x: 334, y: 19, r: 103, g: 49, b: 28 },
    { x: 336, y: 27, r: 238, g: 238, b: 238 },
    { x: 315, y: 32, r: 87, g: 45, b: 29 },
    { x: 143, y: 14, r: 167, g: 49, b: 56 },
    { x: 27, y: 19, r: 122, g: 122, b: 122 },
    { x: 21, y: 25, r: 160, g: 43, b: 52 },
    { x: 4, y: 30, r: 87, g: 45, b: 29 },
    { x: 588, y: 326, r: 239, g: 208, b: 132 },
    { x: 606, y: 324, r: 223, g: 157, b: 71 },
    { x: 604, y: 315, r: 76, g: 88, b: 139 },
], { x: 617, y: 13 });
exports.rfpageTrainNotEnoughGoods = new Rerouter_1.Page('rfpageTrainNotEnoughGoods', [
    { x: 160, y: 51, r: 60, g: 70, b: 105 },
    { x: 486, y: 153, r: 52, g: 158, b: 228 },
    { x: 30, y: 35, r: 88, g: 24, b: 29 },
    { x: 10, y: 44, r: 66, g: 37, b: 25 },
    { x: 6, y: 72, r: 86, g: 96, b: 78 },
    { x: 234, y: 300, r: 12, g: 167, b: 223 },
], { x: 220, y: 300 });
exports.rfpageBattleVictoryButNeedTap = new Rerouter_1.Page('rfpageBattleVictoryButNeedTap', [
    { x: 230, y: 49, r: 49, g: 134, b: 214 },
    { x: 224, y: 58, r: 231, g: 182, b: 41 },
    { x: 254, y: 59, r: 123, g: 190, b: 255 },
    { x: 329, y: 27, r: 214, g: 44, b: 66 },
    { x: 371, y: 56, r: 198, g: 223, b: 222 },
    { x: 410, y: 68, r: 49, g: 138, b: 214 },
    { x: 26, y: 332, r: 11, g: 1, b: 1 },
    { x: 10, y: 338, r: 40, g: 30, b: 22 },
    { x: 48, y: 336, r: 14, g: 2, b: 2 },
    { x: 304, y: 324, r: 181, g: 181, b: 181 }, // for rerouter v2, "Tap to continue"
], { x: 230, y: 49 });
exports.rfpageBattleFinished = new Rerouter_1.Page('rfpageBattleFinished', [
    { x: 56, y: 331, r: 247, g: 89, b: 24 },
    { x: 584, y: 332, r: 8, g: 166, b: 222 },
    { x: 606, y: 24, r: 57, g: 169, b: 231 },
], { x: 605, y: 322 });
exports.rfpageArenaBattleDefeat = new Rerouter_1.Page('rfpageArenaBattleDefeat', [
    { x: 618, y: 24, r: 56, g: 165, b: 231 },
    { x: 611, y: 28, r: 255, g: 255, b: 255 },
    { x: 550, y: 70, r: 12, g: 167, b: 223 },
    { x: 563, y: 67, r: 231, g: 246, b: 252 },
    { x: 243, y: 34, r: 168, g: 191, b: 228 },
    { x: 249, y: 46, r: 150, g: 167, b: 167 },
    { x: 385, y: 58, r: 46, g: 46, b: 46 },
    { x: 360, y: 56, r: 198, g: 198, b: 198 },
    { x: 593, y: 276, r: 56, g: 47, b: 49 },
    { x: 610, y: 323, r: 12, g: 167, b: 223 },
    { x: 518, y: 314, r: 243, g: 90, b: 28 },
], { x: 600, y: 320 });
// export const rfpageBattling = new Page('rfpageBattling', [
//   { x: 284, y: 17, r: 145, g: 219, b: 143 },
//   { x: 351, y: 16, r: 77, g: 32, b: 12 },
// ]);
// Hide as: 983700920016 just logged a route conflict when in Task: "towerOfSweetChaos", names: ["rfpageBattleFinished","rfpageDefeatWithGotoKingdom"]
// export const rfpageDefeatWithGotoKingdom = new Page(
//   'rfpageDefeatWithGotoKingdom',
//   [
//     { x: 81, y: 314, r: 247, g: 89, b: 24 },
//     { x: 85, y: 175, r: 231, g: 231, b: 231 },
//     { x: 92, y: 232, r: 222, g: 146, b: 74 },
//     { x: 243, y: 58, r: 70, g: 93, b: 107 },
//     { x: 294, y: 58, r: 41, g: 44, b: 41 },
//   ],
//   { x: 81, y: 314 }
// );
// export const rfpageTropicalRaids = new Page(
//   'rfpageTropicalRaids',
//   [
//     { x: 612, y: 18, r: 56, g: 167, b: 231 },
//     { x: 521, y: 16, r: 0, g: 193, b: 255 },
//     { x: 425, y: 10, r: 136, g: 204, b: 170 },
//     { x: 431, y: 17, r: 246, g: 243, b: 226 },
//     { x: 433, y: 28, r: 139, g: 207, b: 173 },
//     { x: 341, y: 20, r: 199, g: 166, b: 93 },
//     { x: 53, y: 111, r: 62, g: 38, b: 21 },
//     { x: 41, y: 115, r: 214, g: 198, b: 190 },
//   ],
//   { x: 612, y: 18 }
// );
exports.pageBattleFinishedWithSunbeds = [
    { x: 491, y: 322, r: 12, g: 167, b: 223 },
    { x: 537, y: 324, r: 239, g: 74, b: 117 },
    { x: 553, y: 331, r: 60, g: 180, b: 6 },
    { x: 310, y: 26, r: 222, g: 48, b: 70 },
    { x: 330, y: 28, r: 204, g: 37, b: 60 },
];
exports.pageBattleFinishedWithNextLv = [
    { x: 589, y: 333, r: 121, g: 207, b: 12 },
    { x: 388, y: 334, r: 12, g: 167, b: 223 },
    { x: 490, y: 333, r: 12, g: 167, b: 223 },
    { x: 58, y: 334, r: 243, g: 90, b: 28 },
];
exports.pageWinBountyAndFinish = [
    { x: 607, y: 332, r: 12, g: 167, b: 223 },
    { x: 488, y: 320, r: 25, g: 2, b: 6 },
    { x: 417, y: 319, r: 25, g: 5, b: 6 },
    { x: 74, y: 332, r: 243, g: 90, b: 28 },
];
exports.pageBattleFinishedWithoutNextLv = [
    { x: 466, y: 324, r: 252, g: 252, b: 252 },
    { x: 464, y: 331, r: 8, g: 166, b: 222 },
    { x: 309, y: 25, r: 228, g: 52, b: 71 },
    { x: 320, y: 25, r: 255, g: 255, b: 132 },
    { x: 330, y: 25, r: 228, g: 52, b: 74 },
    { x: 401, y: 323, r: 26, g: 4, b: 12 },
];
exports.pageBattleFinishedWithMVPCookie = [
    { x: 328, y: 29, r: 201, g: 33, b: 52 },
    { x: 375, y: 53, r: 198, g: 223, b: 222 },
    { x: 413, y: 69, r: 49, g: 138, b: 214 },
    { x: 624, y: 334, r: 40, g: 30, b: 22 },
    { x: 544, y: 333, r: 17, g: 3, b: 3 },
];
exports.pageBattleFinishedWithMVPCookieWithExit = [
    { x: 609, y: 320, r: 8, g: 166, b: 222 },
    { x: 509, y: 334, r: 247, g: 89, b: 24 },
    { x: 374, y: 55, r: 203, g: 223, b: 222 },
    { x: 409, y: 67, r: 54, g: 139, b: 214 },
];
exports.pageBattleTowerOfSweetChaosVictory = [
    { x: 549, y: 322, r: 148, g: 219, b: 57 },
    { x: 222, y: 60, r: 231, g: 182, b: 41 },
    { x: 209, y: 59, r: 38, g: 121, b: 198 },
    { x: 256, y: 59, r: 123, g: 190, b: 255 },
];
// export const rfpageBattleFinishedWithSunbeds = new Page('rfpageBattleFinishedWithSunbeds', pageBattleFinishedWithSunbeds, {
//   x: 491,
//   y: 322,
// });
exports.rfpageFoundOctopus = new Rerouter_1.Page('rfpageFoundOctopus', [
    { x: 500, y: 330, r: 8, g: 166, b: 222 },
    { x: 360, y: 243, r: 229, g: 18, b: 50 },
], { x: 500, y: 330 });
exports.rfpageInKingdomConstructionShop = new Rerouter_1.Page('rfpageInKingdomConstructionShop', [
    { x: 624, y: 19, r: 33, g: 85, b: 123 },
    { x: 20, y: 12, r: 181, g: 8, b: 33 },
    { x: 11, y: 24, r: 99, g: 40, b: 41 },
    { x: 28, y: 27, r: 255, g: 223, b: 247 },
    { x: 330, y: 15, r: 178, g: 8, b: 33 },
    { x: 179, y: 340, r: 156, g: 101, b: 74 },
    { x: 194, y: 335, r: 255, g: 255, b: 255 },
], {
    x: 624,
    y: 19,
});
exports.rfpageKingdomDecorating = new Rerouter_1.Page('rfpageKingdomDecorating', [
    { x: 619, y: 12, r: 57, g: 169, b: 231 },
    { x: 42, y: 23, r: 99, g: 174, b: 49 },
    { x: 33, y: 25, r: 48, g: 100, b: 14 },
    { x: 33, y: 81, r: 255, g: 255, b: 255 },
    { x: 20, y: 222, r: 57, g: 69, b: 107 },
    { x: 33, y: 212, r: 255, g: 255, b: 255 },
], { x: 619, y: 12 });
exports.rfpageGuildDecorShop = new Rerouter_1.Page('rfpageGuildDecorShop', [
    { x: 30, y: 25, r: 162, g: 101, b: 59 },
    { x: 93, y: 22, r: 255, g: 255, b: 255 },
    { x: 5, y: 50, r: 170, g: 163, b: 194 },
    { x: 586, y: 334, r: 144, g: 131, b: 153 },
    { x: 572, y: 347, r: 104, g: 83, b: 125 },
    { x: 553, y: 327, r: 76, g: 60, b: 95 },
    { x: 71, y: 339, r: 135, g: 124, b: 160 },
    { x: 554, y: 338, r: 74, g: 63, b: 87 },
    { x: 553, y: 329, r: 78, g: 62, b: 98 },
], { x: 619, y: 12 });
exports.rfpageBattleFinishedWithNextLv = new Rerouter_1.Page('rfpageBattleFinishedWithNextLv', exports.pageBattleFinishedWithNextLv, {
    x: 589,
    y: 333,
});
// export const rfpageWinBountyAndFinish = new Page('rfpageWinBountyAndFinish', pageWinBountyAndFinish, pageWinBountyAndFinish[0]);
// export const rfpageBattleFinishedWithoutNextLv = new Page('rfpageBattleFinishedWithoutNextLv', pageBattleFinishedWithoutNextLv, { x: 466, y: 324 });
// export const rfpageBattleFinishedWithMVPCookie = new Page('rfpageBattleFinishedWithMVPCookie', pageBattleFinishedWithMVPCookie, { x: 333, y: 298 });
exports.rfpageBattleFinishedWithMVPCookieWithExit = new Rerouter_1.Page('rfpageBattleFinishedWithMVPCookieWithExit', exports.pageBattleFinishedWithMVPCookieWithExit, exports.pageBattleFinishedWithMVPCookieWithExit[0]);
exports.rfpageInTowerOfSweetChaos = new Rerouter_1.Page('rfpageInTowerOfSweetChaos', [
    { x: 611, y: 21, r: 57, g: 166, b: 231 },
    { x: 497, y: 17, r: 255, g: 207, b: 0 },
    { x: 407, y: 15, r: 0, g: 195, b: 255 },
    { x: 340, y: 18, r: 253, g: 63, b: 115 },
    { x: 19, y: 59, r: 255, g: 255, b: 255 },
], { x: 611, y: 21 });
exports.rfpageToSCConfirmTrayJump = new Rerouter_1.Page('rfpageToSCConfirmTrayJump', [
    { x: 44, y: 325, r: 109, g: 64, b: 122 },
    { x: 36, y: 318, r: 110, g: 23, b: 36 },
    { x: 32, y: 323, r: 110, g: 9, b: 25 },
    { x: 359, y: 313, r: 121, g: 207, b: 12 },
    { x: 386, y: 317, r: 231, g: 185, b: 190 },
    { x: 463, y: 11, r: 55, g: 166, b: 231 },
    { x: 463, y: 16, r: 255, g: 255, b: 255 },
    { x: 436, y: 25, r: 134, g: 35, b: 51 },
    { x: 349, y: 31, r: 255, g: 255, b: 255 },
    { x: 435, y: 216, r: 219, g: 163, b: 170 },
    { x: 318, y: 98, r: 255, g: 153, b: 170 },
], { x: 351, y: 314 });
exports.rfpageToSCTrayJumpNeedMoreKey = new Rerouter_1.Page('rfpageToSCTrayJumpNeedMoreKey', [
    { x: 443, y: 97, r: 55, g: 166, b: 231 },
    { x: 437, y: 97, r: 255, g: 255, b: 255 },
    { x: 344, y: 159, r: 52, g: 158, b: 228 },
    { x: 326, y: 178, r: 255, g: 41, b: 66 },
    { x: 322, y: 179, r: 160, g: 58, b: 254 },
    { x: 317, y: 187, r: 197, g: 42, b: 61 },
    { x: 352, y: 237, r: 191, g: 84, b: 241 },
    { x: 355, y: 311, r: 60, g: 103, b: 6 },
    { x: 33, y: 330, r: 34, g: 8, b: 8 },
]);
exports.rfpageReadyToBattleToSC = new Rerouter_1.Page('rfpageReadyToBattleToSC', [
    { x: 491, y: 330, r: 165, g: 4, b: 41 },
    { x: 518, y: 334, r: 123, g: 207, b: 8 },
    { x: 606, y: 321, r: 123, g: 207, b: 8 },
    { x: 338, y: 17, r: 175, g: 32, b: 66 },
    { x: 423, y: 127, r: 151, g: 47, b: 79 },
    { x: 426, y: 191, r: 89, g: 51, b: 56 },
], { x: 590, y: 327 });
exports.rfpageReadyToBattleToSCTimeJump = new Rerouter_1.Page('rfpageReadyToBattleToSCTimeJump', [
    { x: 614, y: 325, r: 123, g: 207, b: 8 },
    { x: 489, y: 325, r: 247, g: 219, b: 49 },
    { x: 624, y: 307, r: 57, g: 69, b: 107 },
    { x: 338, y: 12, r: 88, g: 0, b: 8 },
    { x: 432, y: 221, r: 82, g: 48, b: 57 },
    { x: 421, y: 116, r: 84, g: 27, b: 42 },
], { x: 590, y: 327 });
// export const rfpageBattleTowerOfSweetChaosVictory = new Page(
//   'rfpageBattleTowerOfSweetChaosVictory',
//   pageBattleTowerOfSweetChaosVictory,
//   pageBattleTowerOfSweetChaosVictory[0]
// );
exports.rfpageCanEquipTopping = new Rerouter_1.Page('rfpageCanEquipTopping', [
    { x: 400, y: 266, r: 121, g: 207, b: 12 },
    { x: 267, y: 160, r: 233, g: 182, b: 131 },
    { x: 294, y: 264, r: 12, g: 167, b: 223 },
    { x: 389, y: 162, r: 199, g: 181, b: 170 },
], { x: 400, y: 266 });
exports.rfpageCanEquipTopping2 = new Rerouter_1.Page('rfpageCanEquipTopping2', [
    { x: 397, y: 267, r: 123, g: 207, b: 8 },
    { x: 277, y: 163, r: 255, g: 255, b: 186 },
    { x: 265, y: 165, r: 198, g: 182, b: 173 },
    { x: 265, y: 165, r: 198, g: 182, b: 173 },
    { x: 252, y: 77, r: 57, g: 69, b: 107 },
], { x: 397, y: 267 });
// Mainly in guild alliance
exports.rfpageCanEquipTopping3 = new Rerouter_1.Page('rfpageCanEquipTopping3', [
    { x: 407, y: 275, r: 123, g: 207, b: 8 },
    { x: 299, y: 275, r: 8, g: 166, b: 222 },
    { x: 276, y: 154, r: 255, g: 251, b: 164 },
    { x: 276, y: 159, r: 232, g: 165, b: 96 },
    { x: 288, y: 156, r: 226, g: 226, b: 226 },
    { x: 262, y: 155, r: 198, g: 182, b: 173 },
], { x: 407, y: 275 });
exports.rfpageNotSelectTeamLeader = new Rerouter_1.Page('rfpageNotSelectTeamLeader', [
    { x: 318, y: 49, r: 255, g: 212, b: 0 },
    { x: 306, y: 64, r: 255, g: 209, b: 0 },
    { x: 329, y: 63, r: 239, g: 165, b: 4 },
    { x: 306, y: 85, r: 223, g: 145, b: 69 },
    { x: 327, y: 85, r: 223, g: 144, b: 70 },
    { x: 344, y: 86, r: 36, g: 46, b: 64 },
    { x: 370, y: 86, r: 60, g: 70, b: 105 },
    { x: 407, y: 234, r: 219, g: 207, b: 199 },
    { x: 403, y: 274, r: 121, g: 207, b: 12 },
    { x: 294, y: 273, r: 12, g: 167, b: 223 },
], { x: 369, y: 275 });
exports.rfpageAddMoreCookies = new Rerouter_1.Page('rfpageAddMoreCookies', [
    { x: 304, y: 253, r: 12, g: 167, b: 223 },
    { x: 168, y: 331, r: 60, g: 103, b: 6 },
    { x: 152, y: 180, r: 65, g: 65, b: 53 },
    { x: 131, y: 203, r: 65, g: 66, b: 52 },
    { x: 101, y: 235, r: 65, g: 68, b: 53 },
    { x: 176, y: 242, r: 97, g: 75, b: 33 },
], { x: 304, y: 253 });
exports.rfpageBattlePaused = new Rerouter_1.Page('rfpageBattlePaused', [
    { x: 307, y: 200, r: 253, g: 253, b: 251 },
    { x: 621, y: 26, r: 56, g: 165, b: 227 },
    { x: 613, y: 23, r: 35, g: 85, b: 114 },
    { x: 278, y: 160, r: 12, g: 165, b: 219 },
    { x: 288, y: 157, r: 241, g: 241, b: 239 },
    { x: 293, y: 201, r: 241, g: 90, b: 28 },
]);
exports.rfpageInGacha = new Rerouter_1.Page('rfpageInGacha', [
    { x: 619, y: 18, r: 255, g: 255, b: 255 },
    { x: 626, y: 18, r: 62, g: 164, b: 232 },
    { x: 521, y: 14, r: 0, g: 192, b: 255 },
    { x: 407, y: 19, r: 255, g: 209, b: 0 },
    { x: 21, y: 14, r: 117, g: 54, b: 40 },
    { x: 37, y: 24, r: 74, g: 58, b: 58 },
    { x: 59, y: 266, r: 17, g: 21, b: 29 },
    { x: 58, y: 218, r: 17, g: 21, b: 29 },
], { x: 619, y: 18 });
exports.rfpageInTowerOfRecords = new Rerouter_1.Page('rfpageInTowerOfRecords', [
    { x: 618, y: 23, r: 255, g: 255, b: 255 },
    { x: 106, y: 23, r: 39, g: 36, b: 32 },
    { x: 92, y: 20, r: 114, g: 112, b: 110 },
    { x: 16, y: 14, r: 179, g: 179, b: 179 },
    { x: 4, y: 18, r: 35, g: 34, b: 33 },
    { x: 152, y: 5, r: 237, g: 199, b: 138 },
    { x: 70, y: 288, r: 41, g: 22, b: 34 },
    { x: 47, y: 344, r: 53, g: 30, b: 40 },
    { x: 15, y: 344, r: 41, g: 37, b: 39 },
]);
exports.rfpageInCandyHouse = new Rerouter_1.Page('rfpageInCandyHouse', [
    { x: 268, y: 240, r: 127, g: 241, b: 205 },
    { x: 316, y: 236, r: 212, g: 212, b: 212 },
    { x: 316, y: 239, r: 58, g: 58, b: 58 },
]);
exports.rfpageNotEnoughGnomeBuilders = new Rerouter_1.Page('rfpageNotEnoughGnomeBuilders', [
    { x: 381, y: 319, r: 190, g: 1, b: 36 },
    { x: 381, y: 325, r: 254, g: 254, b: 253 },
    { x: 386, y: 327, r: 255, g: 221, b: 240 },
    { x: 465, y: 79, r: 58, g: 165, b: 231 },
]);
//rgb(166,104,65)
exports.rfpageInProduction = new Rerouter_1.Page('rfpageInProduction', [
    { x: 17, y: 44, r: 165, g: 105, b: 66 },
    { x: 84, y: 42, r: 178, g: 103, b: 66 },
    { x: 26, y: 30, r: 126, g: 73, b: 41 },
]);
exports.rfpageInMagicLab = new Rerouter_1.Page('rfpageInMagicLab', [
    { x: 409, y: 16, r: 255, g: 203, b: 0 },
    { x: 527, y: 19, r: 0, g: 134, b: 255 },
    { x: 18, y: 46, r: 123, g: 89, b: 140 },
    { x: 81, y: 47, r: 123, g: 89, b: 140 },
    { x: 27, y: 30, r: 115, g: 85, b: 140 },
]);
exports.rfpageNotEnoughStockInProduction = new Rerouter_1.Page('rfpageNotEnoughStockInProduction', [
    { x: 428, y: 98, r: 56, g: 167, b: 231 },
    { x: 345, y: 104, r: 60, g: 70, b: 105 },
    { x: 370, y: 176, r: 243, g: 233, b: 223 },
    { x: 349, y: 247, r: 121, g: 207, b: 12 },
    { x: 73, y: 31, r: 59, g: 33, b: 21 },
    { x: 23, y: 48, r: 83, g: 52, b: 31 },
]
// rfpageNotEnoughStockInProduction cannot simply tap off, as need to go next production building
// { x: 428, y: 98 }
);
exports.rfpageCancelProduction = new Rerouter_1.Page('rfpageCancelProduction', [
    { x: 443, y: 97, r: 57, g: 166, b: 231 },
    { x: 436, y: 97, r: 255, g: 255, b: 255 },
    { x: 390, y: 105, r: 57, g: 69, b: 107 },
    { x: 408, y: 241, r: 8, g: 166, b: 222 },
    { x: 296, y: 243, r: 8, g: 166, b: 222 },
    { x: 20, y: 45, r: 166, g: 104, b: 63 },
    { x: 22, y: 108, r: 166, g: 104, b: 63 },
    { x: 73, y: 34, r: 124, g: 69, b: 44 },
], { x: 443, y: 97 });
// Items like "Homemade Cheese" has too long name causing timer change to new line
exports.rfpageCancelProductionLongItemName = new Rerouter_1.Page('rfpageCancelProductionLongItemName', [
    { x: 74, y: 31, r: 64, g: 36, b: 23 },
    { x: 207, y: 50, r: 60, g: 70, b: 105 },
    { x: 200, y: 159, r: 5, g: 133, b: 255 },
    { x: 387, y: 204, r: 12, g: 167, b: 223 },
    { x: 204, y: 188, r: 241, g: 231, b: 224 },
    { x: 202, y: 199, r: 44, g: 78, b: 107 },
    { x: 202, y: 244, r: 34, g: 38, b: 71 },
    { x: 453, y: 32, r: 52, g: 159, b: 228 },
], { x: 453, y: 32 });
exports.rfpageNotEnoughPurityCrystals = new Rerouter_1.Page('rfpageNotEnoughPurityCrystals', [
    { x: 435, y: 96, r: 255, g: 255, b: 255 },
    { x: 344, y: 104, r: 60, g: 70, b: 105 },
    { x: 343, y: 160, r: 52, g: 158, b: 228 },
    { x: 325, y: 174, r: 255, g: 254, b: 255 },
    { x: 311, y: 184, r: 254, g: 254, b: 255 },
    { x: 300, y: 177, r: 207, g: 193, b: 182 },
    { x: 342, y: 254, r: 191, g: 84, b: 241 },
    { x: 402, y: 256, r: 219, g: 207, b: 199 },
    { x: 71, y: 35, r: 50, g: 36, b: 66 },
]);
exports.rfpageNeedUnlockItemInMagicLab = new Rerouter_1.Page('rfpageNeedUnlockItemInMagicLab', [
    { x: 422, y: 111, r: 60, g: 70, b: 105 },
    { x: 425, y: 128, r: 243, g: 233, b: 223 },
    { x: 368, y: 252, r: 219, g: 207, b: 199 },
    { x: 335, y: 244, r: 121, g: 207, b: 12 },
    { x: 314, y: 249, r: 85, g: 85, b: 85 },
    { x: 286, y: 243, r: 150, g: 217, b: 60 },
    { x: 244, y: 249, r: 219, g: 207, b: 199 },
    { x: 414, y: 23, r: 121, g: 88, b: 4 },
    { x: 524, y: 17, r: 0, g: 87, b: 127 },
    { x: 24, y: 32, r: 50, g: 36, b: 66 },
]);
exports.rfpageInCookieActivityDashboard = new Rerouter_1.Page('rfpageInCookieActivityDashboard', [
    { x: 247, y: 331, r: 56, g: 74, b: 107 },
    { x: 28, y: 18, r: 229, g: 158, b: 76 },
    { x: 558, y: 339, r: 239, g: 190, b: 41 },
], { x: 400, y: 337 });
exports.rfpageInProductionDashboard = new Rerouter_1.Page('rfpageInProductionDashboard', [
    { x: 408, y: 330, r: 56, g: 74, b: 107 },
    { x: 540, y: 341, r: 123, g: 207, b: 8 },
    { x: 27, y: 16, r: 206, g: 32, b: 49 },
], { x: 14, y: 48 });
// In kingdom villiage, stock is full could be 1) has expand and blue cross on upper right or 2) only OK, no cross
exports.rfpageStockIsFull = new Rerouter_1.Page('rfpageStockIsFull', [
    { x: 374, y: 103, r: 60, g: 70, b: 105 },
    { x: 320, y: 83, r: 107, g: 48, b: 49 },
    { x: 320, y: 93, r: 132, g: 16, b: 8 },
    { x: 321, y: 108, r: 241, g: 229, b: 216 },
    { x: 344, y: 244, r: 121, g: 207, b: 12 },
    { x: 344, y: 210, r: 243, g: 233, b: 223 },
]);
// Case not exist for now
exports.rfpageBountiesAt2ndSlot = new Rerouter_1.Page('rfpageBountiesAt2ndSlot', [
    { x: 242, y: 68, r: 255, g: 255, b: 255 },
    { x: 347, y: 102, r: 198, g: 65, b: 0 },
    { x: 328, y: 112, r: 206, g: 150, b: 66 },
    { x: 294, y: 130, r: 222, g: 147, b: 96 },
    { x: 231, y: 138, r: 253, g: 234, b: 74 },
]);
// Most general case, 1. world exploration/PVP 2. super mayhem
exports.rfpageBountiesAt3rdSlot = new Rerouter_1.Page('rfpageBountiesAt3rdSlot', [
    { x: 595, y: 86, r: 148, g: 73, b: 33 },
    { x: 588, y: 152, r: 173, g: 122, b: 66 },
    { x: 585, y: 177, r: 24, g: 12, b: 8 },
]);
// Perhaps with Cooklie Odysses and super mayhem not finished
// export const pageBountiesAt4rdSlot = new Page('pageBountiesAt4rdSlot', [
//   // TODO
// ]);
exports.rfpageSelectAdvanture = new Rerouter_1.Page('rfpageSelectAdvanture', [
    { x: 620, y: 11, r: 57, g: 166, b: 231 },
    { x: 585, y: 21, r: 222, g: 174, b: 74 },
    { x: 514, y: 16, r: 239, g: 174, b: 99 },
    { x: 425, y: 21, r: 0, g: 138, b: 255 },
    { x: 26, y: 28, r: 159, g: 85, b: 28 },
    { x: 25, y: 12, r: 255, g: 255, b: 255 },
    { x: 17, y: 26, r: 80, g: 115, b: 187 },
    { x: 160, y: 311, r: 29, g: 36, b: 48 },
]);
exports.rfpageDragonTotalDamage = new Rerouter_1.Page('rfpageDragonTotalDamage', [
    { x: 427, y: 243, r: 231, g: 215, b: 222 },
    { x: 410, y: 247, r: 156, g: 0, b: 49 },
    { x: 260, y: 268, r: 255, g: 255, b: 255 },
    { x: 555, y: 311, r: 89, g: 22, b: 45 },
], { x: 427, y: 243 });
exports.rfpageRedValvetDragonWon = new Rerouter_1.Page('rfpageRedValvetDragonWon', [
    { x: 289, y: 238, r: 239, g: 28, b: 57 },
    { x: 358, y: 233, r: 222, g: 16, b: 41 },
    { x: 426, y: 236, r: 231, g: 216, b: 223 },
], { x: 289, y: 238 });
exports.rfpageDragonHasExtraTime = new Rerouter_1.Page('rfpageDragonHasExtraTime', [
    { x: 405, y: 281, r: 121, g: 207, b: 12 },
    { x: 304, y: 280, r: 12, g: 167, b: 223 },
    { x: 608, y: 333, r: 60, g: 103, b: 6 },
    { x: 516, y: 330, r: 6, g: 83, b: 111 },
    { x: 128, y: 333, r: 6, g: 83, b: 111 },
], { x: 405, y: 281 });
exports.pageToSCTeamsNotMeetRequirement = [
    { x: 343, y: 244, r: 123, g: 207, b: 8 },
    { x: 337, y: 22, r: 77, g: 15, b: 25 },
    { x: 287, y: 21, r: 21, g: 3, b: 5 },
    { x: 496, y: 318, r: 33, g: 6, b: 10 },
];
exports.rfpageHallOfAncientHeros = new Rerouter_1.Page('rfpageHallOfAncientHeros', [
    { x: 611, y: 18, r: 255, g: 255, b: 255 },
    { x: 524, y: 14, r: 255, g: 255, b: 243 },
    { x: 522, y: 27, r: 238, g: 132, b: 228 },
    { x: 514, y: 6, r: 107, g: 139, b: 108 },
    { x: 478, y: 22, r: 239, g: 106, b: 213 },
    { x: 314, y: 45, r: 170, g: 205, b: 250 },
    { x: 167, y: 38, r: 240, g: 240, b: 220 },
    { x: 6, y: 124, r: 239, g: 70, b: 89 },
    { x: 7, y: 17, r: 255, g: 255, b: 255 },
    { x: 43, y: 19, r: 80, g: 77, b: 77 },
    { x: 66, y: 19, r: 201, g: 200, b: 200 },
], { x: 611, y: 18 });
exports.rfpageCookieKingdomIsNotResponding = new Rerouter_1.Page('rfpageCookieKingdomIsNotResponding', [
    { x: 399, y: 209, r: 238, g: 238, b: 238 },
    { x: 182, y: 167, r: 238, g: 238, b: 238 },
    { x: 359, y: 184, r: 238, g: 238, b: 238 },
    { x: 281, y: 211, r: 238, g: 238, b: 238 },
    { x: 280, y: 186, r: 162, g: 162, b: 162 },
    { x: 214, y: 157, r: 227, g: 227, b: 227 },
    { x: 242, y: 157, r: 31, g: 31, b: 31 },
    { x: 393, y: 217, r: 142, g: 202, b: 197 },
], { x: 399, y: 209 });
exports.rfpageCookieKingdomIsNotResponding2 = new Rerouter_1.Page('rfpageCookieKingdomIsNotResponding2', [
    { x: 478, y: 221, r: 238, g: 238, b: 238 },
    { x: 252, y: 190, r: 238, g: 238, b: 238 },
    { x: 146, y: 189, r: 238, g: 238, b: 238 },
    { x: 155, y: 157, r: 238, g: 238, b: 238 },
    { x: 220, y: 156, r: 87, g: 87, b: 87 },
    { x: 325, y: 160, r: 100, g: 100, b: 100 },
], { x: 478, y: 221 });
exports.rfpageCookieKingdomHasStopped = new Rerouter_1.Page('rfpageCookieKingdomHasStopped', [
    { x: 484, y: 205, r: 0, g: 150, b: 136 },
    { x: 478, y: 205, r: 238, g: 238, b: 238 },
    { x: 440, y: 172, r: 238, g: 238, b: 238 },
    { x: 402, y: 169, r: 57, g: 57, b: 57 },
], { x: 484, y: 205 });
exports.rfpageInCookieHead = new Rerouter_1.Page('rfpageInCookieHead', [
    { x: 610, y: 21, r: 57, g: 166, b: 231 },
    { x: 300, y: 93, r: 235, g: 235, b: 235 },
    { x: 38, y: 52, r: 130, g: 131, b: 132 },
    { x: 12, y: 20, r: 141, g: 150, b: 167 },
    { x: 12, y: 27, r: 21, g: 32, b: 47 },
]);
// export const rfpagePurchaseDiamond = new Page('rfpagePurchaseDiamond', [
//   { x: 435, y: 105, r: 56, g: 167, b: 231 },
//   { x: 310, y: 87, r: 21, g: 206, b: 232 },
//   { x: 317, y: 109, r: 154, g: 83, b: 55 },
//   { x: 344, y: 174, r: 121, g: 207, b: 12 },
//   { x: 288, y: 114, r: 112, g: 228, b: 233 },
// ]);
exports.rfpageGooglePlaystoreHasStopped = new Rerouter_1.Page('rfpageGooglePlaystoreHasStopped', [
    { x: 485, y: 207, r: 10, g: 153, b: 140 },
    { x: 147, y: 170, r: 238, g: 238, b: 238 },
    { x: 263, y: 172, r: 238, g: 238, b: 238 },
    { x: 327, y: 172, r: 238, g: 238, b: 238 },
    { x: 418, y: 171, r: 238, g: 238, b: 238 },
], { x: 485, y: 207 });
// This window can change language
// Marked as confused with rfpageNotEnoughItemToBuyThis and we have rfpageDownloadDataAndVoiceOverUnchecked
// export const pageNewDataPackAvailable = [
//   { x: 358, y: 265, r: 123, g: 205, b: 8 },
//   { x: 373, y: 219, r: 8, g: 165, b: 219 },
//   { x: 210, y: 190, r: 255, g: 255, b: 255 },
//   { x: 258, y: 83, r: 57, g: 69, b: 106 },
//   { x: 246, y: 125, r: 153, g: 147, b: 139 },
// ];
// export const rfpageNewDataPackAvailable = new Page('rfpageNewDataPackAvailable', pageNewDataPackAvailable, pageNewDataPackAvailable[0]);
// Marked as confused with rfpageNotEnoughItemToBuyThis
// export const pageNewDataPackDownloadFailed = [
//   { x: 350, y: 245, r: 123, g: 205, b: 8 },
//   { x: 342, y: 107, r: 57, g: 69, b: 106 },
//   { x: 264, y: 245, r: 221, g: 205, b: 195 },
// ];
// export const rfpageNewDataPackDownloadFailed = new Page('rfpageNewDataPackDownloadFailed', pageNewDataPackDownloadFailed, pageNewDataPackDownloadFailed[0]);
// If already choose language in pageNewDataPackAvailable (don't use as looks like purchase stuff with diamond, read the text instead)
// export const pageNewDataPackAvaiableNoLanguage = [
//   { x: 366, y: 252, r: 123, g: 205, b: 8 },
//   { x: 398, y: 254, r: 221, g: 205, b: 195 },
//   { x: 263, y: 254, r: 147, g: 217, b: 57 },
//   { x: 246, y: 254, r: 221, g: 205, b: 195 },
//   { x: 341, y: 96, r: 255, g: 255, b: 255 },
//   { x: 284, y: 99, r: 253, g: 253, b: 251 },
// ];
// export const rfpageNewDataPackAvaiableNoLanguage = new Page(
//   'rfpageNewDataPackAvaiableNoLanguage',
//   pageNewDataPackAvaiableNoLanguage,
//   pageNewDataPackAvaiableNoLanguage[0]
// );
exports.rfpageDownloadNewDataPakIsAvailable = new Rerouter_1.Page('rfpageDownloadNewDataPakIsAvailable', [
    { x: 368, y: 254, r: 123, g: 207, b: 8 },
    { x: 441, y: 99, r: 57, g: 69, b: 107 },
    { x: 346, y: 251, r: 255, g: 255, b: 255 },
], { x: 368, y: 254 });
// Replaced by rfpageGeneralMessageWindow check
// export const rfpageNotifyQuitWindow = new Page(
//   'rfpageNotifyQuitWindow',
//   [
//     { x: 301, y: 250, r: 8, g: 166, b: 222 },
//     { x: 374, y: 98, r: 57, g: 69, b: 107 },
//     { x: 404, y: 250, r: 123, g: 207, b: 8 },
//     { x: 425, y: 250, r: 222, g: 207, b: 198 },
//   ],
//   { x: 301, y: 250 }
// );
// Seems outdated, and confused with timejump in tosc
// export const rfpageKingdomPassAds = new Page(
//   'rfpageKingdomPassAds',
//   [
//     { x: 349, y: 286, r: 123, g: 207, b: 8 },
//     { x: 250, y: 15, r: 42, g: 8, b: 15 },
//     { x: 323, y: 18, r: 45, g: 33, b: 1 },
//     { x: 427, y: 19, r: 0, g: 23, b: 45 },
//   ],
//   { x: 349, y: 286 }
// );
exports.rfpageInKingdomPass = new Rerouter_1.Page('rfpageInKingdomPass', [
    { x: 618, y: 341, r: 82, g: 211, b: 0 },
    { x: 193, y: 19, r: 255, g: 223, b: 0 },
    { x: 393, y: 16, r: 0, g: 195, b: 255 },
    { x: 484, y: 16, r: 255, g: 255, b: 255 },
], { x: 618, y: 341 });
exports.rfpageKingdomPassItemCollected = new Rerouter_1.Page('rfpageKingdomPassItemCollected', [
    { x: 616, y: 343, r: 149, g: 149, b: 149 },
    { x: 193, y: 19, r: 255, g: 223, b: 0 },
    { x: 393, y: 16, r: 0, g: 195, b: 255 },
    { x: 484, y: 16, r: 255, g: 255, b: 255 },
], { x: 616, y: 17 });
exports.rfpageWorldChat = new Rerouter_1.Page('rfpageWorldChat', [
    { x: 22, y: 22, r: 41, g: 97, b: 148 },
    { x: 31, y: 10, r: 135, g: 152, b: 192 },
    { x: 137, y: 12, r: 41, g: 69, b: 115 },
    { x: 58, y: 336, r: 255, g: 255, b: 255 },
    { x: 18, y: 343, r: 52, g: 64, b: 89 },
], { x: 22, y: 81 });
exports.rfpageInFriendsList = new Rerouter_1.Page('rfpageInFriendsList', [
    { x: 23, y: 90, r: 255, g: 227, b: 0 },
    { x: 14, y: 70, r: 135, g: 152, b: 192 },
    { x: 13, y: 47, r: 52, g: 64, b: 89 },
    { x: 187, y: 351, r: 57, g: 69, b: 107 },
    { x: 234, y: 350, r: 57, g: 69, b: 107 },
], { x: 390, y: 340 });
exports.rfpageInShop = new Rerouter_1.Page('rfpageInShop', [
    { x: 521, y: 18, r: 8, g: 125, b: 255 },
    { x: 405, y: 20, r: 255, g: 224, b: 0 },
    { x: 61, y: 18, r: 19, g: 19, b: 26 },
    { x: 9, y: 18, r: 19, g: 19, b: 26 },
    { x: 13, y: 19, r: 91, g: 91, b: 95 },
    { x: 41, y: 24, r: 147, g: 147, b: 149 },
]);
exports.rfpageGameSettings = new Rerouter_1.Page('rfpageGameSettings', [
    { x: 494, y: 267, r: 255, g: 255, b: 255 },
    { x: 494, y: 269, r: 35, g: 48, b: 63 },
    { x: 581, y: 18, r: 0, g: 0, b: 0 },
    { x: 549, y: 16, r: 244, g: 233, b: 211 },
    { x: 515, y: 21, r: 233, g: 163, b: 90 },
    { x: 610, y: 11, r: 163, g: 198, b: 235 },
    { x: 495, y: 131, r: 40, g: 55, b: 73 },
    { x: 494, y: 142, r: 255, g: 255, b: 255 },
], { x: 612, y: 19 });
// Introduced in Aug 9 2023 update
exports.rfpageTrialGroundIntro = new Rerouter_1.Page('rfpageTrialGroundIntro', [
    { x: 613, y: 22, r: 2, g: 6, b: 8 },
    { x: 549, y: 159, r: 121, g: 207, b: 12 },
    { x: 549, y: 249, r: 121, g: 207, b: 12 },
    { x: 18, y: 337, r: 16, g: 48, b: 59 },
    { x: 53, y: 323, r: 67, g: 65, b: 63 },
    { x: 88, y: 331, r: 3, g: 44, b: 59 },
    { x: 599, y: 288, r: 19, g: 33, b: 62 },
], { x: 615, y: 22 });
// Introduced in Sep 26 2023 update
exports.rfpageErrorBusterIntro = new Rerouter_1.Page('rfpageErrorBusterIntro', [
    { x: 610, y: 22, r: 4, g: 11, b: 15 },
    { x: 521, y: 20, r: 1, g: 35, b: 67 },
    { x: 341, y: 21, r: 66, g: 56, b: 10 },
    { x: 327, y: 19, r: 63, g: 37, b: 10 },
    { x: 247, y: 24, r: 24, g: 64, b: 43 },
    { x: 351, y: 233, r: 255, g: 243, b: 238 },
    { x: 504, y: 336, r: 32, g: 54, b: 4 },
    { x: 71, y: 50, r: 52, g: 37, b: 8 },
    { x: 31, y: 325, r: 66, g: 62, b: 50 },
], { x: 610, y: 22 });
var rfpageFirstItemEnabled = new Rerouter_1.Page('rfpageFirstItemEnabled', [{ x: 596, y: 120, r: 121, g: 207, b: 12 }], { x: 596, y: 120 });
var rfpageSecondItemEnabled = new Rerouter_1.Page('rfpageSecondItemEnabled', [{ x: 596, y: 228, r: 121, g: 207, b: 12 }], { x: 596, y: 228 });
var rfpageThirdItemEnabled = new Rerouter_1.Page('rfpageThirdItemEnabled', [{ x: 596, y: 333, r: 121, g: 207, b: 12 }], { x: 596, y: 333 });
var rfpageFourthItemEnabled = new Rerouter_1.Page('rfpageFourthItemEnabled', [{ x: 599, y: 128, r: 121, g: 207, b: 12 }], { x: 599, y: 128 });
var rfpageFifthItemEnabled = new Rerouter_1.Page('rfpageFifthItemEnabled', [{ x: 596, y: 232, r: 121, g: 207, b: 12 }], { x: 596, y: 232 });
var rfpageSixItemEnabled = new Rerouter_1.Page('rfpageSixItemEnabled', [{ x: 597, y: 339, r: 121, g: 207, b: 12 }], { x: 597, y: 339 });
exports.productMapping = {
    1: rfpageFirstItemEnabled,
    2: rfpageSecondItemEnabled,
    3: rfpageThirdItemEnabled,
    4: rfpageThirdItemEnabled,
    5: rfpageFourthItemEnabled,
    6: rfpageFifthItemEnabled,
    7: rfpageSixItemEnabled,
};
exports.magicLabPointMapping = {
    1: { x: 418, y: 112 },
    2: { x: 471, y: 113 },
    3: { x: 532, y: 114 },
    4: { x: 584, y: 114 },
    5: { x: 418, y: 173 },
    6: { x: 471, y: 172 },
    7: { x: 532, y: 173 },
    8: { x: 584, y: 173 }, // 0 is 8
};
exports.groupPageMaterialProdMenu = new Rerouter_1.GroupPage('groupPageMaterialProdMenu', [
    rfpageWoodFarm,
    rfpageBeanFarm,
    rfpageSugarFarm,
    rfpagePowderFarm,
    rfpageBarryFarm,
    rfpageMilkFarm,
    rfpageCottomFarm,
]);
var rfpageToolShop = new Rerouter_1.Page('rfpageToolShop', [
    { x: 420, y: 191, r: 178, g: 16, b: 13 },
    { x: 414, y: 75, r: 135, g: 143, b: 170 },
    { x: 413, y: 84, r: 183, g: 190, b: 211 },
]);
var rfpageIsJammery = new Rerouter_1.Page('rfpageIsJammery', [
    { x: 490, y: 83, r: 0, g: 178, b: 206 },
    { x: 440, y: 89, r: 19, g: 114, b: 129 },
    { x: 430, y: 88, r: 247, g: 243, b: 222 },
]);
var rfpageIsCarpentryShop = new Rerouter_1.Page('rfpageIsCarpentryShop', [
    { x: 494, y: 83, r: 140, g: 86, b: 57 },
    { x: 517, y: 87, r: 165, g: 105, b: 66 },
    { x: 433, y: 73, r: 88, g: 46, b: 30 },
    { x: 420, y: 81, r: 214, g: 146, b: 115 },
    { x: 424, y: 64, r: 84, g: 3, b: 3 },
]);
var rfpageIsJampieDiner = new Rerouter_1.Page('rfpageIsJampieDiner', [
    { x: 535, y: 84, r: 210, g: 36, b: 57 },
    { x: 493, y: 83, r: 0, g: 224, b: 231 },
    { x: 414, y: 81, r: 217, g: 48, b: 77 },
    { x: 432, y: 73, r: 220, g: 149, b: 99 },
]);
var rfpageIsBakery = new Rerouter_1.Page('rfpageIsBakery', [
    { x: 496, y: 82, r: 184, g: 174, b: 155 },
    { x: 539, y: 86, r: 176, g: 83, b: 11 },
    { x: 439, y: 75, r: 173, g: 82, b: 24 },
    { x: 423, y: 70, r: 198, g: 116, b: 63 },
    { x: 424, y: 99, r: 255, g: 219, b: 123 },
]);
var rfpageIsFlowerShop = new Rerouter_1.Page('rfpageIsFlowerShop', [
    { x: 418, y: 80, r: 255, g: 89, b: 165 },
    { x: 413, y: 95, r: 8, g: 150, b: 8 },
    { x: 431, y: 86, r: 214, g: 0, b: 82 },
    { x: 490, y: 86, r: 197, g: 39, b: 41 },
    { x: 538, y: 82, r: 165, g: 85, b: 41 },
]);
exports.groupPageGoodsProdMenu = new Rerouter_1.GroupPage('groupPageGoodsProdMenu', [
    rfpageToolShop,
    rfpageIsJammery,
    rfpageIsCarpentryShop,
    rfpageIsJampieDiner,
    rfpageIsBakery,
    rfpageIsFlowerShop,
]);
// Temporary intros
exports.rfpageMasterpieceIntroInKingdomVillage = new Rerouter_1.Page('rfpageMasterpieceIntroInKingdomVillage', [
    { x: 425, y: 20, r: 2, g: 46, b: 86 },
    { x: 311, y: 21, r: 71, g: 56, b: 4 },
    { x: 224, y: 18, r: 81, g: 18, b: 31 },
    { x: 216, y: 16, r: 85, g: 85, b: 82 },
    { x: 217, y: 22, r: 57, g: 9, b: 19 },
    { x: 224, y: 36, r: 38, g: 10, b: 10 },
    { x: 219, y: 45, r: 50, g: 10, b: 18 },
    { x: 468, y: 324, r: 221, g: 136, b: 51 },
    { x: 417, y: 321, r: 45, g: 6, b: 3 },
    { x: 456, y: 214, r: 255, g: 243, b: 238 },
], { x: 468, y: 324 });
exports.rfpageMasterpieceIntroInCookiePage = new Rerouter_1.Page('rfpageMasterpieceIntroInCookiePage', [
    { x: 413, y: 341, r: 125, g: 146, b: 172 },
    { x: 393, y: 341, r: 45, g: 77, b: 116 },
    { x: 551, y: 343, r: 81, g: 64, b: 15 },
    { x: 519, y: 345, r: 7, g: 17, b: 28 },
    { x: 292, y: 340, r: 42, g: 49, b: 58 },
    { x: 268, y: 341, r: 15, g: 26, b: 39 },
    { x: 16, y: 275, r: 4, g: 6, b: 9 },
    { x: 291, y: 342, r: 42, g: 49, b: 58 },
    { x: 271, y: 341, r: 15, g: 26, b: 39 },
], { x: 435, y: 339 });
exports.rfpageMasterpieceIntroInCostumes = new Rerouter_1.Page('rfpageMasterpieceIntroInCostumes', [
    { x: 447, y: 31, r: 94, g: 49, b: 43 },
    { x: 575, y: 25, r: 38, g: 20, b: 17 },
    { x: 628, y: 18, r: 18, g: 55, b: 77 },
    { x: 632, y: 114, r: 51, g: 45, b: 32 },
    { x: 33, y: 318, r: 69, g: 72, b: 76 },
    { x: 19, y: 319, r: 12, g: 46, b: 75 },
    { x: 149, y: 343, r: 15, g: 26, b: 39 },
], { x: 492, y: 26 });


/***/ }),

/***/ "./src/scriptConfig.ts":
/*!*****************************!*\
  !*** ./src/scriptConfig.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.defaultWishes = exports.config = exports.defaultConfig = void 0;
var types_1 = __webpack_require__(/*! ./types */ "./src/types.ts");
exports.defaultConfig = {
    sleep: 240,
    sleepAnimate: 800,
    sleepWhenDoubleLoginInMinutes: 30,
    // Sample TEST long ID
    // account: 'moonminv35moonminv35moonminv35moonminv35moonminv35moonminv35moonminv35@gmail.com',
    account: 'default_xrobotmon_account@gmail.com',
    password: '',
    materialsTarget: 2000,
    goodsTarget: 320,
    productSafetyStock: 10,
    autoMagicLabTarget: 'upgrade',
    magicLabProductIndex: 9,
    autoCollectMailIntervalInMins: 120,
    autoCollectFountainIntervalInMins: 40,
    autoCollectTrainIntervalInMins: 20,
    autoSendHotAirBallonIntervalInMins: 40,
    isHotAirBallonGotoEp4: false,
    ballonKeepCurrentDestination: false,
    autoCollectDailyReward: true,
    autoFulfillWishesIntervalInMins: 10,
    alwaysFulfillWishes: false,
    wishingTreeSafetyStock: 10,
    wishingTreeMaxFillingMins: 8,
    wishingTreeRefreshGoldenWishes: true,
    wishingTreeForceFulfillGoldWishes: false,
    autoHandleEventWishingTreeAmounts: 0,
    autoPvPIntervalInMins: 0,
    autoPvPTargetScoreLimit: 1000000,
    autoPvPPurchaseAncientCookie: true,
    worksBeforeCollectCandy: 40,
    autoUpgradeCandyHouse: true,
    helpTapGreenCheck: true,
    autoCollectTropicalIslandsIntervalInMins: 40,
    autoGuildAllianceBattle: true,
    autoAllianceUseTimeJumpers: false,
    autoGuildClaimNewLand: false,
    autoGuildBattleDragon: false,
    autoBountiesTarget: 'powder',
    autoLabResearch: true,
    autoResearchKingdom: true,
    autoResearchCookies: true,
    autoLabUseAuroraMaterial: true,
    autoHandleTradeHabor: true,
    autoBalanceAuroraStocks: true,
    autoShopInSeasideMarket: true,
    autoBuyCaramelStuff: true,
    autoBuyRadiantShardsInHabor: true,
    autoBuySeaFairy: true,
    autoBuyEpicSoulEssence: true,
    autoBuyLegendSoulEssence: true,
    autoBuyGuildRelic: true,
    axeStockTo400: false,
    autoSuperMayhemIntervalInMins: 0,
    autoSuperMayhemTargetScoreLimit: 1000000,
    autoHandleTowerOfSweetChaos: true,
    autoHandleCollectCookieOdysseyMission: true,
    buildTowardsTheLeft: true,
    isTestAccount: false,
    isNewKingdomCheckRequired: true,
    isSendPlayingRequired: true,
    deviceId: 'testing',
    jobFailedCount: 4,
    jobFailedBeforeGetCandy: 3,
    productionBuildingChecked: 0,
    productionDashboardEnabled: true,
    currentProductionBuilding: 'NONE',
    lastNetworkIssueOccurTime: 0,
    networkIssueCount: 0,
    networkIssueCountThreasHold: 20,
    lastGotoProduction: 0,
    lastCollectCandyTime: 0,
    lastCollectMail: 0,
    lastCollectFountain: 0,
    lastCollectTrain: 0,
    lastSendHotAirBallon: 0,
    lastCollectDailyReward: 0,
    lastFulfillWishes: 0,
    lastAutoHandleEventWishingTree: 0,
    lastAutoPvP: 0,
    lastAutoSuperMayhem: 0,
    battleMaxLoops: 3,
    lastCollectTropicalIsland: 0,
    lastAutoGuildBattle: 0,
    lastAutoHandleBounties: 0,
    lastLabResearch: 0,
    lastHandleTradeHabor: 0,
    lastAutoHandleTowerOfSweetChaos: 0,
    lastAutoHandleCollectCookieOdysseyMission: 0,
    lastTryResolveGreenChecks: 0,
    lastFreezeCheckScreenShot: null,
    lastFreezeCheckScreenShotTime: Date.now(),
    run: true,
    isXR: true,
    findProductionTimes: 4,
    wishRefreshThreashold: 5,
    searchHouseCount: 0,
    keepProduceUntilWoodEnough: true,
    isMaintainanceMode: false,
    loginRetryMaxTimes: 2,
    loginRetryCount: 0,
    tryRestartGameCount: 0,
    tryRestartGameLimit: 5,
    needToSendLoginSuccess: true,
    needToSendPlaying: true,
    licenseId: '',
    userId: '',
    stock_axe: 60,
    stock_pickaxe: 60,
    stock_saw: 60,
    stock_shovel: 60,
    stock_stack: 60,
    stock_tongs: 60,
    stock_hammer: 60,
    stock_jellybeanJam: 60,
    stock_jellyJam: 60,
    stock_toffeeJam: 60,
    stock_pomegranateJam: 60,
    stock_sparkleberryJam: 60,
    stock_pineconeBirdyToy: 60,
    stock_acornLamp: 60,
    stock_cuckooClock: 60,
    stock_dreamcatcher: 60,
    stock_heartyRye: 60,
    stock_tartJampie: 60,
    stock_ginkgoFocaccia: 60,
    stock_glazedDonuts: 60,
    stock_flyffyCastella: 60,
    stock_goldenCroissant: 60,
    stock_hotJellyStew: 60,
    stock_bearJellyBurger: 60,
    stock_candyPasta: 60,
    stock_fluffyOmurice: 60,
    stock_jellyDeluxePizza: 60,
    stock_fancyJellybeanMeal: 60,
    stock_biscuitPlanter: 60,
    stock_shinyGlass: 60,
    stock_gleamyBead: 60,
    stock_colorfulBowl: 60,
    stock_candyFlower: 60,
    stock_happyPlanter: 60,
    stock_candyBouquet: 60,
    stock_lollipopFlowerBasket: 60,
    stock_bellFlowerBouquet: 60,
    stock_glitteringYogurtWeeath: 60,
    stock_cream: 60,
    stock_butter: 60,
    stock_homemadeCheese: 60,
    stock_jellybeanLatte: 60,
    stock_bubblyBoba: 60,
    stock_sweetberryJuicy: 60,
    stock_cloudPillow: 60,
    stock_bearJellyToy: 60,
    stock_pitayaDragonToy: 60,
    stock_creamRootBeer: 60,
    stock_redberryJuice: 60,
    stock_vintageRootBottle: 60,
    stock_spookyMuffin: 60,
    stock_strawberryCake: 60,
    stock_partyCake: 60,
    stock_glazedRing: 60,
    stock_rubyberryBrooch: 40,
    stock_bearJellyCrown: 40,
};
exports.config = exports.defaultConfig;
exports.defaultWishes = [
    {
        id: 0,
        refreshPnt: { x: 149, y: 74 },
        unfoldPnt: { x: 163, y: 160 },
        fulfillPnt: { x: 183, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 162, y: 200 },
            1: { x: 198, y: 200 },
            2: { x: 162, y: 235 },
            3: { x: 198, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
    {
        id: 1,
        refreshPnt: { x: 260, y: 74 },
        unfoldPnt: { x: 275, y: 160 },
        fulfillPnt: { x: 295, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 275, y: 200 },
            1: { x: 312, y: 200 },
            2: { x: 275, y: 235 },
            3: { x: 312, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
    {
        id: 2,
        refreshPnt: { x: 374, y: 74 },
        unfoldPnt: { x: 390, y: 160 },
        fulfillPnt: { x: 400, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 390, y: 200 },
            1: { x: 425, y: 200 },
            2: { x: 390, y: 235 },
            3: { x: 425, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
    {
        id: 3,
        refreshPnt: { x: 490, y: 74 },
        unfoldPnt: { x: 500, y: 160 },
        fulfillPnt: { x: 520, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 508, y: 200 },
            1: { x: 545, y: 200 },
            2: { x: 508, y: 235 },
            3: { x: 545, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
];


/***/ }),

/***/ "./src/storage.ts":
/*!************************!*\
  !*** ./src/storage.ts ***!
  \************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.globalStorage = void 0;
exports.globalStorage = {
    botStatus: {
        battleStarted: 0,
    },
};


/***/ }),

/***/ "./src/tasks.ts":
/*!**********************!*\
  !*** ./src/tasks.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TASKS = void 0;
var TASKS;
(function (TASKS) {
    TASKS["maintainanceMode"] = "maintainanceMode";
    TASKS["login"] = "login";
    TASKS["production"] = "production";
    TASKS["collectMail"] = "collectMail";
    TASKS["collectKingdomPass"] = "collectKingdomPass";
    TASKS["sendFriendReward"] = "sendFriendReward";
    TASKS["getInShopFreeDailyPack"] = "getInShopFreeDailyPack";
    TASKS["getGachaDailyFreePack"] = "getGachaDailyFreePack";
    TASKS["hotAirBallon"] = "hotAirBallon";
    TASKS["train"] = "train";
    TASKS["wishingTree"] = "wishingTree";
    TASKS["fountain"] = "fountain";
    TASKS["pvp"] = "pvp";
    TASKS["pvpPurchaseAncientCookie"] = "pvpPurchaseAncientCookie";
    TASKS["superMayhem"] = "superMayhem";
    TASKS["tropicalIslandShip"] = "tropicalIslandShip";
    TASKS["tropicalIslandSunbed"] = "tropicalIslandSunbed";
    TASKS["tropicalIslandClearBubble"] = "tropicalIslandClearBubble";
    TASKS["bounties"] = "bounties";
    TASKS["gnomeLab"] = "gnomeLab";
    TASKS["haborShopInSeaMarket"] = "haborShopInSeaMarket";
    TASKS["haborShopInShellGallery"] = "haborShopInShellGallery";
    TASKS["haborSendShip"] = "haborSendShip";
    TASKS["towerOfSweetChaos"] = "towerOfSweetChaos";
    // CollectCookieOdyssey = 'CollectCookieOdyssey',
    TASKS["resolveGreenChecks"] = "resolveGreenChecks";
    TASKS["guildCheckin"] = "guildCheckin";
    TASKS["guildExpandLand"] = "guildExpandLand";
    TASKS["guildBattleDragon"] = "guildBattleDragon";
    TASKS["guildBattleAlliance"] = "guildBattleAlliance";
    TASKS["findAndTapCandy"] = "findAndTapCandy";
    TASKS["upgradeCandyHouse"] = "upgradeCandyHouse";
})(TASKS = exports.TASKS || (exports.TASKS = {}));


/***/ }),

/***/ "./src/tasks/bounties.ts":
/*!*******************************!*\
  !*** ./src/tasks/bounties.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addBountiesTask = exports.addBountiesRoutes = exports.rfpageCannotRefillBountyAnymore = exports.rfpageBountyRechargeTicket = exports.rfpageReadyToBattleBounty = exports.rfpageInOneOfTheBounties = exports.rfpageInBounties = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var types_1 = __webpack_require__(/*! ../types */ "./src/types.ts");
exports.rfpageInBounties = new Rerouter_1.Page('rfpageInBounties', [
    { x: 437, y: 21, r: 12, g: 166, b: 223 },
    { x: 391, y: 20, r: 225, g: 225, b: 225 },
    { x: 101, y: 12, r: 110, g: 141, b: 150 },
    { x: 51, y: 42, r: 119, g: 94, b: 69 },
    { x: 60, y: 43, r: 90, g: 42, b: 39 },
    { x: 7, y: 14, r: 97, g: 122, b: 130 },
    { x: 404, y: 37, r: 38, g: 13, b: 20 },
    { x: 416, y: 5, r: 121, g: 82, b: 94 },
    { x: 33, y: 355, r: 22, g: 5, b: 3 },
]);
exports.rfpageInOneOfTheBounties = new Rerouter_1.Page('rfpageInOneOfTheBounty', [
    { x: 498, y: 342, r: 121, g: 207, b: 12 },
    { x: 486, y: 319, r: 122, g: 209, b: 12 },
    { x: 486, y: 319, r: 122, g: 209, b: 12 },
    { x: 377, y: 21, r: 12, g: 166, b: 223 },
    { x: 618, y: 19, r: 255, g: 255, b: 255 },
    { x: 19, y: 16, r: 218, g: 218, b: 218 },
    { x: 9, y: 28, r: 49, g: 27, b: 29 },
    { x: 32, y: 50, r: 95, g: 74, b: 85 },
    { x: 12, y: 58, r: 91, g: 59, b: 43 },
    { x: 350, y: 321, r: 215, g: 169, b: 77 },
], { x: 500, y: 329 });
exports.rfpageReadyToBattleBounty = new Rerouter_1.Page('rfpageReadyToBattleBounty', [
    { x: 612, y: 321, r: 121, g: 207, b: 12 },
    { x: 91, y: 12, r: 106, g: 71, b: 50 },
    { x: 87, y: 18, r: 247, g: 247, b: 247 },
    { x: 520, y: 19, r: 6, g: 127, b: 254 },
    { x: 407, y: 19, r: 255, g: 209, b: 0 },
    { x: 159, y: 331, r: 121, g: 207, b: 12 },
    { x: 71, y: 329, r: 12, g: 167, b: 223 },
    { x: 60, y: 23, r: 255, g: 255, b: 255 },
    { x: 13, y: 20, r: 95, g: 56, b: 43 },
], { x: 612, y: 321 });
// There is a rechage token (not diamond) in game
exports.rfpageBountyRechargeTicket = new Rerouter_1.Page('rfpageBountyRechargeTicket', [
    { x: 364, y: 70, r: 60, g: 70, b: 105 },
    { x: 337, y: 73, r: 238, g: 168, b: 94 },
    { x: 322, y: 63, r: 107, g: 54, b: 34 },
    { x: 314, y: 72, r: 186, g: 145, b: 138 },
    { x: 299, y: 86, r: 253, g: 205, b: 143 },
    { x: 289, y: 85, r: 36, g: 46, b: 64 },
    { x: 443, y: 70, r: 50, g: 156, b: 219 },
    { x: 316, y: 141, r: 106, g: 178, b: 12 },
    { x: 340, y: 268, r: 121, g: 207, b: 12 },
    { x: 23, y: 10, r: 28, g: 14, b: 17 },
    { x: 21, y: 17, r: 10, g: 5, b: 6 },
    { x: 11, y: 56, r: 44, g: 30, b: 22 },
], { x: 435, y: 70 }, // Do not go next
{ x: 435, y: 70 });
var rfpageNeedRefillBountyInSelectedStage = new Rerouter_1.Page('rfpageNeedRefillBountyInSelectedStage', [
    { x: 435, y: 82, r: 255, g: 255, b: 255 },
    { x: 307, y: 266, r: 5, g: 130, b: 255 },
    { x: 294, y: 265, r: 121, g: 207, b: 12 },
    { x: 285, y: 257, r: 150, g: 217, b: 60 },
    { x: 336, y: 76, r: 182, g: 174, b: 162 },
    { x: 319, y: 93, r: 64, g: 33, b: 26 },
    { x: 289, y: 93, r: 60, g: 70, b: 105 },
    { x: 32, y: 51, r: 48, g: 37, b: 43 },
    { x: 626, y: 318, r: 29, g: 16, b: 18 },
    { x: 435, y: 22, r: 6, g: 83, b: 111 },
], { x: 435, y: 82 }, { x: 435, y: 82 });
exports.rfpageCannotRefillBountyAnymore = new Rerouter_1.Page('rfpageCannotRefillBountyAnymore', [
    { x: 343, y: 250, r: 121, g: 207, b: 12 },
    { x: 317, y: 252, r: 97, g: 98, b: 97 },
    { x: 298, y: 256, r: 121, g: 207, b: 12 },
    { x: 286, y: 246, r: 150, g: 217, b: 60 },
    { x: 268, y: 123, r: 243, g: 233, b: 223 },
    { x: 259, y: 93, r: 60, g: 70, b: 105 },
    { x: 240, y: 168, r: 168, g: 163, b: 157 },
    { x: 235, y: 163, r: 226, g: 217, b: 208 },
    { x: 234, y: 166, r: 80, g: 80, b: 80 },
    { x: 35, y: 45, r: 48, g: 47, b: 53 },
    { x: 19, y: 37, r: 27, g: 16, b: 16 },
    { x: 629, y: 316, r: 39, g: 26, b: 11 },
    { x: 376, y: 181, r: 80, g: 80, b: 80 },
    { x: 372, y: 181, r: 243, g: 233, b: 223 },
], { x: 317, y: 252 });
function addBountiesRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInBounties.name),
        match: exports.rfpageInBounties,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            switch (scriptConfig_1.config.autoBountiesTarget) {
                case types_1.BountyTarget.disabled:
                    (0, utils_1.logs)(context.task.name, "in rfpageInBounties but no target assigned, finishRound");
                    (0, utils_1.sendEventRunning)();
                    (0, utils_1.sendKeyBack)();
                    finishRound(true);
                    break;
                case types_1.BountyTarget.powder:
                    (0, utils_1.logs)(context.task.name, "in rfpageInBounties and goto powder");
                    (0, utils_1.sendEventRunning)();
                    (0, helper_1.scrollLeftALot)({ x: 35, y: 175 });
                    Rerouter_1.rerouter.screen.tap({ x: 135, y: 320 });
                    break;
                case types_1.BountyTarget.crystal:
                    (0, utils_1.logs)(context.task.name, "in rfpageInBounties and goto crystal");
                    (0, utils_1.sendEventRunning)();
                    (0, helper_1.scrollLeftALot)({ x: 35, y: 175 });
                    Rerouter_1.rerouter.screen.tap({ x: 332, y: 320 });
                    break;
                case types_1.BountyTarget.cake:
                    (0, utils_1.logs)(context.task.name, "in rfpageInBounties and goto cake");
                    (0, utils_1.sendEventRunning)();
                    (0, helper_1.scrollRightALot)({ x: 615, y: 175 });
                    Rerouter_1.rerouter.screen.tap({ x: 556, y: 322 });
                    break;
            }
            return;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInOneOfTheBounties.name),
        match: exports.rfpageInOneOfTheBounties,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageInOneOfTheBounties, about to start handleBounties, send running");
            (0, utils_1.sendEventRunning)();
            Rerouter_1.rerouter.goNext(exports.rfpageInOneOfTheBounties);
            // TODO: can double confirm if we are in the right bounties
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageBountyRechargeTicket.name),
        match: exports.rfpageBountyRechargeTicket,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageBountyRechargeTicket, consider bounty completed and finishRound");
            Rerouter_1.rerouter.goBack(exports.rfpageBountyRechargeTicket);
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageNeedRefillBountyInSelectedStage.name),
        match: rfpageNeedRefillBountyInSelectedStage,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageNeedRefillBountyInSelectedStage, consider bounty completed and finishRound");
            Rerouter_1.rerouter.goBack(rfpageNeedRefillBountyInSelectedStage);
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageCannotRefillBountyAnymore.name),
        match: exports.rfpageCannotRefillBountyAnymore,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageCannotRefillBountyAnymore, cannot battle bounty as no more runs left so finishRound");
            Rerouter_1.rerouter.goNext(exports.rfpageCannotRefillBountyAnymore);
            (0, utils_1.sendEventRunning)();
            finishRound(true);
        },
    });
    (0, helper_1.passiveAddRoute)([exports.rfpageReadyToBattleBounty]);
}
exports.addBountiesRoutes = addBountiesRoutes;
function addBountiesTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.bounties,
        maxTaskDuring: 15 * CONSTANTS.minuteInMs,
        minRoundInterval: 3 * 60 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addBountiesTask = addBountiesTask;


/***/ }),

/***/ "./src/tasks/fountain.ts":
/*!*******************************!*\
  !*** ./src/tasks/fountain.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addFountainTask = exports.addFountainRoutes = exports.fountainStatus = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var rfpageInCookieCastle = new Rerouter_1.Page('rfpageInCookieCastle', [
    { x: 521, y: 18, r: 8, g: 125, b: 255 },
    { x: 406, y: 17, r: 255, g: 215, b: 0 },
    { x: 105, y: 339, r: 53, g: 35, b: 44 },
    { x: 94, y: 321, r: 36, g: 60, b: 97 },
    { x: 56, y: 315, r: 39, g: 100, b: 60 },
], { x: 615, y: 20 });
var rfpageInFountain = new Rerouter_1.Page('rfpageInFountain', [
    { x: 505, y: 305, r: 121, g: 207, b: 12 },
    { x: 569, y: 310, r: 219, g: 207, b: 199 },
    { x: 368, y: 23, r: 60, g: 70, b: 105 },
    { x: 526, y: 67, r: 255, g: 85, b: 66 },
], { x: 505, y: 305 });
var rfpageFountain3rdRawEmpty = new Rerouter_1.Page('rfpageFountain3rdRawEmpty', [
    { x: 505, y: 305, r: 121, g: 207, b: 12 },
    { x: 569, y: 310, r: 219, g: 207, b: 199 },
    { x: 368, y: 23, r: 60, g: 70, b: 105 },
    { x: 526, y: 67, r: 255, g: 85, b: 66 },
    { x: 379, y: 234, r: 247, g: 235, b: 222 },
    { x: 428, y: 237, r: 247, g: 235, b: 222 },
    { x: 493, y: 236, r: 247, g: 235, b: 222 },
], { x: 505, y: 305 });
exports.fountainStatus = {
    justWentToCookieHead: false,
};
function addFountainRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInCookieCastle.name),
        match: rfpageInCookieCastle,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.fountain) {
                (0, utils_1.logs)(context.task.name, "rfpageInCookieCastle, leave because current task is not fountain, but: ".concat(context.task.name));
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'tap back to leave rfpageInCookieCastle');
            (0, utils_1.sendKeyBack)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInFountain.name),
        match: rfpageInFountain,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.fountain && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                (0, utils_1.logs)(context.task.name, 'rfpageInFountain, but not TASKS.fountain or TASKS.resolveGreenChecks so send back');
                (0, utils_1.sendKeyBack)();
                return;
            }
            // 3rd raw is empty, fountain is pretty clean
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageFountain3rdRawEmpty, image)) {
                (0, utils_1.logs)(context.task.name, 'rfpageFountain3rdRawEmpty 3rd raw empty, set task complete');
                Rerouter_1.rerouter.screen.tap({ x: 500, y: 310 }); // tap Claim
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageInFountain and collect it');
            Rerouter_1.rerouter.screen.tap({ x: 500, y: 310 }); // tap Claim
            (0, utils_1.sendEventRunning)();
            finishRound(true); // 如果可以正確辨識收成功，這個可以刪除，否則是用水池偏空當作有收成功
        },
    });
}
exports.addFountainRoutes = addFountainRoutes;
function addFountainTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.fountain,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectFountainIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(exports.fountainStatus, {
                justWentToCookieHead: false,
            });
        },
    });
}
exports.addFountainTask = addFountainTask;


/***/ }),

/***/ "./src/tasks/gnomeLab.ts":
/*!*******************************!*\
  !*** ./src/tasks/gnomeLab.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addGnomeLabTasks = exports.addGnomeLabRoutes = exports.rfpageNotEnoughItemsForResearch = exports.rfpageNotEnoughAuroraItemForReserch = exports.rfpageResearchComplete = exports.rfpageCanTapResearch = exports.rfpageInGnomeLab = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
// Gnome lab
exports.rfpageInGnomeLab = new Rerouter_1.Page('rfpageInGnomeLab', [
    { x: 15, y: 11, r: 211, g: 9, b: 35 },
    { x: 25, y: 21, r: 255, g: 223, b: 244 },
    { x: 328, y: 15, r: 169, g: 8, b: 36 },
    { x: 308, y: 28, r: 16, g: 12, b: 8 },
]);
exports.rfpageCanTapResearch = new Rerouter_1.Page('rfpageCanTapResearch', [
    { x: 276, y: 318, r: 121, g: 207, b: 12 },
    { x: 220, y: 317, r: 54, g: 62, b: 95 },
    { x: 398, y: 315, r: 54, g: 62, b: 95 },
], { x: 276, y: 318 });
exports.rfpageResearchComplete = new Rerouter_1.Page('rfpageResearchComplete', [
    { x: 432, y: 62, r: 24, g: 81, b: 115 },
    { x: 326, y: 14, r: 93, g: 4, b: 16 },
    { x: 407, y: 20, r: 104, g: 77, b: 0 },
    { x: 419, y: 260, r: 215, g: 241, b: 157 },
    { x: 425, y: 102, r: 247, g: 235, b: 222 },
    { x: 354, y: 200, r: 255, g: 243, b: 0 },
], { x: 432, y: 62 });
exports.rfpageNotEnoughAuroraItemForReserch = new Rerouter_1.Page('rfpageNotEnoughAuroraItemForReserch', [
    { x: 434, y: 96, r: 255, g: 255, b: 255 },
    { x: 22, y: 21, r: 127, g: 108, b: 122 },
    { x: 13, y: 11, r: 95, g: 1, b: 17 },
    { x: 4, y: 16, r: 7, g: 0, b: 0 },
    { x: 292, y: 235, r: 189, g: 85, b: 247 },
    { x: 350, y: 251, r: 0, g: 182, b: 255 },
], { x: 434, y: 96 });
// Tools, etc
exports.rfpageNotEnoughItemsForResearch = new Rerouter_1.Page('rfpageNotEnoughItemsForResearch', [
    { x: 435, y: 95, r: 255, g: 255, b: 255 },
    { x: 303, y: 250, r: 8, g: 125, b: 255 },
    { x: 287, y: 247, r: 123, g: 207, b: 16 },
    { x: 261, y: 245, r: 222, g: 207, b: 198 },
    { x: 305, y: 100, r: 57, g: 69, b: 107 },
    { x: 22, y: 20, r: 127, g: 102, b: 122 },
]);
var gnomeLabStatus = {
    kingdomSearchCount: 0,
    cookieSearchCount: 0,
    searchLimit: 12,
    targetImageIndex: 0,
    needResearchKingdom: scriptConfig_1.config.autoResearchKingdom,
    needResearchCookie: scriptConfig_1.config.autoResearchCookies,
};
function addGnomeLabRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInGnomeLab.name),
        match: exports.rfpageInGnomeLab,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            var rfpageAlreadyResearching = new Rerouter_1.Page('rfpageAlreadyResearching', [
                { x: 47, y: 69, r: 237, g: 237, b: 229 },
                { x: 159, y: 67, r: 117, g: 223, b: 0 },
            ]);
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageAlreadyResearching, image)) {
                (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, Already researching, skipping handleInGnomeLab");
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                finishRound(true);
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, handleInGnomeLab in gnome lab, send running");
            sendEvent('running', '');
            (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, kingdomSearchCount: ".concat(gnomeLabStatus.kingdomSearchCount, ", targetImageInde: ").concat(gnomeLabStatus.targetImageIndex));
            // TODO： 極光產品檢查還沒做
            if (scriptConfig_1.config.autoResearchKingdom) {
                Rerouter_1.rerouter.screen.tap({ x: 256, y: 340 });
                handleResearchInGnomeLab(finishRound, ICONS.iconsGnomeLabKingdom, 0.94);
            }
            if (scriptConfig_1.config.autoResearchCookies) {
                Rerouter_1.rerouter.screen.tap({ x: 380, y: 340 });
                handleResearchInGnomeLab(finishRound, ICONS.iconsGnomeLabCookies, 0.9);
            }
            return;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageCanTapResearch.name),
        match: exports.rfpageCanTapResearch,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab) {
                (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, start researching and finishRound");
            Rerouter_1.rerouter.goNext(exports.rfpageCanTapResearch);
            if (Rerouter_1.rerouter.waitScreenForMatchingPage(exports.rfpageNotEnoughAuroraItemForReserch, 2000)) {
                (0, utils_1.logs)(context.task.name, "rfpageNotEnoughAuroraItemForReserch, cannot research this one");
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                (0, utils_1.sendKeyBack)();
            }
            else {
                (0, utils_1.logs)(context.task.name, "start researching and finish round");
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageNotEnoughAuroraItemForReserch.name),
        match: exports.rfpageNotEnoughAuroraItemForReserch,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab) {
                (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageNotEnoughAuroraItemForReserch, skip and finishRound");
            Rerouter_1.rerouter.goNext(exports.rfpageNotEnoughAuroraItemForReserch);
            (0, utils_1.sendKeyBack)();
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageNotEnoughItemsForResearch.name),
        match: exports.rfpageNotEnoughItemsForResearch,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab) {
                (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageNotEnoughItemsForResearch, skip and finishRound");
            Rerouter_1.rerouter.goNext(exports.rfpageNotEnoughItemsForResearch);
            (0, utils_1.sendKeyBack)();
            finishRound(true);
        },
    });
}
exports.addGnomeLabRoutes = addGnomeLabRoutes;
function addGnomeLabTasks() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.gnomeLab,
        maxTaskDuring: 15 * CONSTANTS.minuteInMs,
        minRoundInterval: 15 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(gnomeLabStatus, {
                kingdomSearchCount: 0,
                cookieSearchCount: 0,
                searchLimit: 12,
                targetImageIndex: 0,
                needResearchKingdom: scriptConfig_1.config.autoResearchKingdom,
                needResearchCookie: scriptConfig_1.config.autoResearchCookies,
            });
        },
    });
}
exports.addGnomeLabTasks = addGnomeLabTasks;
function handleResearchInGnomeLab(finishRound, targetIconList, threashold) {
    for (var i = 0; i < 12; i++) {
        for (var imageIdx = 0; imageIdx < targetIconList.length; imageIdx++) {
            var foundResults = (0, helper_1.findSpecificIconInScreen)(targetIconList[imageIdx]);
            console.log('>', i, imageIdx, targetIconList[imageIdx].name, JSON.stringify(foundResults));
            for (var j = 0; j < Object.keys(foundResults).length; j++) {
                Rerouter_1.rerouter.screen.tap(foundResults[j]);
                if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupPageLabResult', [
                    exports.rfpageCanTapResearch,
                    exports.rfpageNotEnoughAuroraItemForReserch,
                    exports.rfpageNotEnoughItemsForResearch,
                    exports.rfpageResearchComplete,
                ]), 3000)) {
                    if (Rerouter_1.rerouter.isPageMatch(exports.rfpageCanTapResearch)) {
                        (0, utils_1.logs)(tasks_1.TASKS.gnomeLab, "rfpageCanTapResearch, tap it");
                        Rerouter_1.rerouter.goNext(exports.rfpageCanTapResearch);
                        if (Rerouter_1.rerouter.waitScreenForMatchingPage(exports.rfpageNotEnoughAuroraItemForReserch, 3000)) {
                            (0, utils_1.logs)(tasks_1.TASKS.gnomeLab, "rfpageNotEnoughAuroraItemForReserch, back");
                            (0, utils_1.sendKeyBack)();
                            Rerouter_1.Utils.sleep(1000);
                            (0, utils_1.sendKeyBack)();
                        }
                        else {
                            (0, utils_1.sendKeyBack)();
                            finishRound(true);
                        }
                        return;
                    }
                    else {
                        (0, utils_1.logs)(tasks_1.TASKS.gnomeLab, "rfpageInGnomeLab, cannot tap this one, continue: ".concat(Rerouter_1.rerouter.getCurrentMatchNames()));
                        (0, utils_1.sendKeyBack)();
                        Rerouter_1.rerouter.waitScreenForMatchingPage(exports.rfpageInGnomeLab, 2000);
                    }
                }
            }
        }
        (0, helper_1.swipeFromToPoint)({ x: 600, y: 234 }, { x: -200, y: 234 }, 5, undefined, exports.rfpageInGnomeLab);
    }
}


/***/ }),

/***/ "./src/tasks/guild.ts":
/*!****************************!*\
  !*** ./src/tasks/guild.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addGuildBattleAllianceTask = exports.addGuildBattleDragonTask = exports.addGuildCheckinTask = exports.addGuildRoutes = exports.rfpageCookieAllianceSelectCampaignsNoMuseum = exports.rfpageCookieAllianceSelectCampaignsMuseum = exports.rfpageTallyingfightDragon = exports.rfpageReadyToFightDragon = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var helper_2 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var rfpageInGuildLand = new Rerouter_1.Page('rfpageInGuildLand', [
    { x: 445, y: 329, r: 74, g: 61, b: 154 },
    { x: 212, y: 329, r: 173, g: 150, b: 198 },
    { x: 163, y: 327, r: 107, g: 32, b: 49 },
    { x: 144, y: 326, r: 231, g: 207, b: 214 },
    { x: 107, y: 324, r: 225, g: 213, b: 198 },
    { x: 41, y: 303, r: 217, g: 146, b: 99 },
    { x: 19, y: 267, r: 206, g: 195, b: 247 },
]);
var rfpageSeachToJoinGuild = new Rerouter_1.Page('rfpageSeachToJoinGuild', [
    { x: 7, y: 130, r: 135, g: 152, b: 192 },
    { x: 25, y: 31, r: 189, g: 197, b: 211 },
    { x: 138, y: 23, r: 59, g: 61, b: 123 },
    { x: 280, y: 349, r: 69, g: 70, b: 109 },
    { x: 465, y: 331, r: 116, g: 77, b: 37 },
    { x: 419, y: 319, r: 75, g: 10, b: 6 },
    { x: 422, y: 18, r: 3, g: 62, b: 126 },
    { x: 516, y: 331, r: 132, g: 103, b: 39 },
]);
var rfpageInputGuildWelcomeText = new Rerouter_1.Page('rfpageInputGuildWelcomeText', [
    { x: 434, y: 105, r: 57, g: 166, b: 231 },
    { x: 420, y: 107, r: 57, g: 69, b: 107 },
    { x: 439, y: 209, r: 247, g: 235, b: 222 },
    { x: 438, y: 235, r: 222, g: 207, b: 198 },
    { x: 358, y: 240, r: 123, g: 207, b: 8 },
    { x: 28, y: 272, r: 86, g: 86, b: 89 },
    { x: 26, y: 321, r: 76, g: 76, b: 76 },
    { x: 160, y: 326, r: 25, g: 3, b: 9 },
    { x: 214, y: 334, r: 40, g: 34, b: 53 },
    { x: 155, y: 332, r: 56, g: 12, b: 18 },
    { x: 427, y: 150, r: 239, g: 239, b: 239 },
    { x: 436, y: 319, r: 95, g: 95, b: 95 },
    { x: 108, y: 323, r: 76, g: 57, b: 40 },
], { x: 434, y: 105 });
var rfpageInGuildBeacon = new Rerouter_1.Page('rfpageInGuildBeacon', [
    { x: 519, y: 317, r: 123, g: 207, b: 8 },
    { x: 393, y: 86, r: 255, g: 209, b: 0 },
    { x: 302, y: 82, r: 223, g: 223, b: 223 },
    { x: 232, y: 291, r: 68, g: 58, b: 103 },
    { x: 207, y: 161, r: 246, g: 238, b: 246 },
    { x: 99, y: 105, r: 203, g: 209, b: 213 },
    { x: 159, y: 268, r: 220, g: 223, b: 227 },
], { x: 516, y: 322 });
// const rfpageGuildBeaconLevelUp = new Page(
//   'rfpageGuildBeaconLevelUp',
//   [
//     { x: 525, y: 320, r: 123, g: 207, b: 8 },
//     { x: 608, y: 319, r: 49, g: 60, b: 90 },
//     { x: 380, y: 261, r: 107, g: 198, b: 247 },
//     { x: 347, y: 290, r: 222, g: 223, b: 231 },
//     { x: 391, y: 86, r: 255, g: 211, b: 0 },
//     { x: 569, y: 88, r: 74, g: 75, b: 77 },
//     { x: 215, y: 279, r: 216, g: 219, b: 223 },
//   ],
//   { x: 477, y: 321 }
// );
var rfPageGuildBeaconIsClear = new Rerouter_1.Page('rfPageGuildBeaconIsClear', [
    { x: 600, y: 25, r: 255, g: 255, b: 255 },
    { x: 365, y: 29, r: 57, g: 69, b: 107 },
    { x: 391, y: 85, r: 255, g: 211, b: 0 },
    { x: 435, y: 254, r: 181, g: 178, b: 198 },
    { x: 522, y: 320, r: 120, g: 120, b: 120 },
    { x: 559, y: 326, r: 49, g: 60, b: 90 },
    { x: 511, y: 186, r: 255, g: 255, b: 255 },
], { x: 600, y: 25 });
var rfpageBattleDragon = new Rerouter_1.Page('rfpageBattleDragon', [
    { x: 409, y: 20, r: 255, g: 204, b: 0 },
    { x: 524, y: 20, r: 0, g: 139, b: 255 },
    { x: 317, y: 22, r: 218, g: 227, b: 240 },
    { x: 223, y: 29, r: 192, g: 201, b: 237 },
    { x: 37, y: 103, r: 171, g: 153, b: 220 },
    { x: 24, y: 71, r: 237, g: 237, b: 229 },
], { x: 600, y: 25 });
exports.rfpageReadyToFightDragon = new Rerouter_1.Page('rfpageReadyToFightDragon', [
    { x: 493, y: 325, r: 134, g: 233, b: 253 },
    { x: 108, y: 335, r: 123, g: 207, b: 8 },
    { x: 323, y: 12, r: 233, g: 156, b: 244 },
    { x: 41, y: 195, r: 251, g: 226, b: 237 },
    { x: 610, y: 194, r: 12, g: 167, b: 223 },
    { x: 38, y: 231, r: 107, g: 122, b: 201 },
], { x: 493, y: 325 });
exports.rfpageTallyingfightDragon = new Rerouter_1.Page('rfpageTallyingfightDragon', [
    { x: 493, y: 325, r: 61, g: 104, b: 6 },
    { x: 516, y: 317, r: 166, g: 168, b: 66 },
    { x: 108, y: 335, r: 123, g: 207, b: 8 },
    { x: 323, y: 12, r: 233, g: 156, b: 244 },
    { x: 41, y: 195, r: 251, g: 226, b: 237 },
    { x: 610, y: 194, r: 12, g: 167, b: 223 },
], { x: 493, y: 325 });
var rfpageDragonRemainHealth = new Rerouter_1.Page('rfpageDragonRemainHealth', [
    { x: 368, y: 233, r: 132, g: 65, b: 255 },
    { x: 153, y: 334, r: 1, g: 31, b: 41 },
    { x: 79, y: 334, r: 42, g: 15, b: 4 },
], { x: 572, y: 330 });
exports.rfpageCookieAllianceSelectCampaignsMuseum = new Rerouter_1.Page('rfpageCookieAllianceSelectCampaignsMuseum', [
    { x: 340, y: 14, r: 126, g: 195, b: 204 },
    { x: 331, y: 21, r: 25, g: 25, b: 67 },
    { x: 250, y: 16, r: 109, g: 102, b: 255 },
    { x: 250, y: 20, r: 144, g: 139, b: 243 },
    { x: 256, y: 88, r: 186, g: 154, b: 215 },
    { x: 9, y: 329, r: 36, g: 43, b: 51 },
    { x: 21, y: 60, r: 255, g: 255, b: 255 },
    { x: 10, y: 54, r: 7, g: 16, b: 33 },
    { x: 207, y: 325, r: 102, g: 83, b: 170 },
    { x: 195, y: 318, r: 215, g: 169, b: 126 },
    { x: 140, y: 323, r: 102, g: 83, b: 170 },
    { x: 117, y: 310, r: 175, g: 95, b: 24 },
    { x: 48, y: 318, r: 215, g: 234, b: 234 },
]);
exports.rfpageCookieAllianceSelectCampaignsNoMuseum = new Rerouter_1.Page('rfpageCookieAllianceSelectCampaignsNoMuseum', [
    { x: 340, y: 14, r: 126, g: 195, b: 204 },
    { x: 331, y: 21, r: 25, g: 25, b: 67 },
    { x: 250, y: 16, r: 109, g: 102, b: 255 },
    { x: 250, y: 20, r: 144, g: 139, b: 243 },
    { x: 256, y: 88, r: 186, g: 154, b: 215 },
    { x: 64, y: 319, r: 102, g: 83, b: 170 },
    { x: 83, y: 319, r: 205, g: 227, b: 233 },
    { x: 130, y: 320, r: 102, g: 83, b: 170 },
    { x: 149, y: 312, r: 221, g: 136, b: 52 },
    { x: 161, y: 318, r: 255, g: 237, b: 116 },
    { x: 9, y: 329, r: 36, g: 43, b: 51 },
]);
var groupPageAllianceSelectStage = new Rerouter_1.GroupPage('groupPageAllianceSelectStage', [
    exports.rfpageCookieAllianceSelectCampaignsMuseum,
    exports.rfpageCookieAllianceSelectCampaignsNoMuseum,
]);
var rfpageInCookieAlliance = new Rerouter_1.Page('rfpageInCookieAlliance', [
    { x: 351, y: 332, r: 181, g: 74, b: 206 },
    { x: 170, y: 334, r: 121, g: 207, b: 12 },
    { x: 71, y: 332, r: 12, g: 167, b: 223 },
    { x: 330, y: 20, r: 96, g: 92, b: 225 },
    { x: 252, y: 16, r: 126, g: 109, b: 237 },
    { x: 250, y: 21, r: 146, g: 145, b: 243 },
    { x: 9, y: 81, r: 63, g: 58, b: 62 },
]);
var rfpageInCookieAllianceSkipIntro = new Rerouter_1.Page('rfpageInCookieAllianceSkipIntro', [
    { x: 523, y: 16, r: 0, g: 51, b: 67 },
    { x: 409, y: 18, r: 67, g: 54, b: 0 },
    { x: 334, y: 13, r: 56, g: 49, b: 59 },
    { x: 333, y: 23, r: 64, g: 63, b: 66 },
    { x: 249, y: 22, r: 38, g: 39, b: 64 },
    { x: 250, y: 13, r: 22, g: 15, b: 47 },
    { x: 16, y: 21, r: 61, g: 61, b: 61 },
    { x: 71, y: 21, r: 67, g: 67, b: 67 },
    { x: 64, y: 11, r: 23, g: 19, b: 14 },
], { x: 49, y: 336 } // tap Edit to skip
);
// Mark as conflict with login page
// const rfpageInCookieAllianceSkipIntroInTeamSetup = new Page(
//   'rfpageInCookieAllianceSkipIntroInTeamSetup',
//   [
//     { x: 600, y: 90, r: 64, g: 24, b: 7 },
//     { x: 603, y: 114, r: 32, g: 54, b: 3 },
//     { x: 608, y: 143, r: 3, g: 44, b: 59 },
//     { x: 606, y: 197, r: 3, g: 44, b: 59 },
//     { x: 94, y: 259, r: 3, g: 44, b: 59 },
//     { x: 613, y: 279, r: 1, g: 1, b: 2 },
//     { x: 619, y: 13, r: 14, g: 42, b: 60 },
//   ],
//   { x: 619, y: 13 } // tap X to skip
// );
var rfpageInCookieAllianceSkipIntroBeaconValor = new Rerouter_1.Page('rfpageInCookieAllianceSkipIntroBeaconValor', [
    { x: 336, y: 16, r: 57, g: 50, b: 59 },
    { x: 250, y: 14, r: 26, g: 22, b: 58 },
    { x: 249, y: 21, r: 38, g: 37, b: 64 },
    { x: 213, y: 252, r: 150, g: 217, b: 60 },
    { x: 429, y: 256, r: 121, g: 207, b: 12 },
    { x: 348, y: 270, r: 250, g: 185, b: 9 },
    { x: 219, y: 273, r: 243, g: 201, b: 0 },
    { x: 160, y: 264, r: 236, g: 226, b: 244 },
], { x: 219, y: 273 } // tap 7D
);
var rfpageNoAllianceTicket = new Rerouter_1.Page('rfpageNoAllianceTicket', [
    { x: 244, y: 252, r: 49, g: 190, b: 231 },
    { x: 327, y: 77, r: 156, g: 144, b: 217 },
    { x: 317, y: 100, r: 244, g: 235, b: 231 },
    { x: 355, y: 256, r: 0, g: 198, b: 255 },
    { x: 334, y: 22, r: 85, g: 80, b: 109 },
]);
var rfpageNoAllianceTicket2 = new Rerouter_1.Page('rfpageNoAllianceTicket2', [
    { x: 248, y: 278, r: 12, g: 167, b: 223 },
    { x: 355, y: 282, r: 0, g: 193, b: 255 },
    { x: 318, y: 154, r: 181, g: 169, b: 219 },
    { x: 343, y: 126, r: 52, g: 159, b: 227 },
]);
var rfpageAllianceSteupTeam = new Rerouter_1.Page('rfpageAllianceSteupTeam', [
    { x: 619, y: 18, r: 255, g: 255, b: 255 },
    { x: 606, y: 90, r: 247, g: 89, b: 24 },
    { x: 603, y: 112, r: 123, g: 207, b: 8 },
    { x: 608, y: 139, r: 0, g: 150, b: 214 },
    { x: 610, y: 168, r: 0, g: 150, b: 214 },
    { x: 507, y: 129, r: 134, g: 17, b: 158 },
]);
var rfpageAllianceBeaconIsOff = new Rerouter_1.Page('rfpageAllianceBeaconIsOff', [
    { x: 215, y: 198, r: 94, g: 102, b: 153 },
    { x: 202, y: 201, r: 209, g: 226, b: 248 },
    { x: 209, y: 198, r: 99, g: 109, b: 156 },
]);
var rfpageAllianceTeamSetup = new Rerouter_1.Page('rfpageAllianceTeamSetup', [
    { x: 618, y: 19, r: 255, g: 255, b: 255 },
    { x: 490, y: 8, r: 12, g: 18, b: 33 },
    { x: 407, y: 17, r: 44, g: 20, b: 25 },
    { x: 224, y: 7, r: 127, g: 77, b: 70 },
    { x: 24, y: 15, r: 255, g: 255, b: 255 },
    { x: 21, y: 226, r: 83, g: 102, b: 157 },
    { x: 11, y: 283, r: 19, g: 13, b: 11 },
], { x: 618, y: 19 });
var rfpageAllianceAddMoreCookie = new Rerouter_1.Page('rfpageAllianceAddMoreCookie', [
    { x: 407, y: 250, r: 121, g: 207, b: 12 },
    { x: 297, y: 253, r: 12, g: 167, b: 223 },
    { x: 275, y: 136, r: 110, g: 107, b: 104 },
    { x: 252, y: 135, r: 46, g: 46, b: 46 },
    { x: 335, y: 23, r: 41, g: 41, b: 66 },
    { x: 603, y: 311, r: 26, g: 45, b: 3 },
    { x: 488, y: 328, r: 36, g: 32, b: 7 },
    { x: 37, y: 144, r: 57, g: 22, b: 0 },
    { x: 65, y: 93, r: 12, g: 19, b: 37 },
]);
var rfpageBeaconOfValor = new Rerouter_1.Page('rfpageBeaconOfValor', [
    { x: 338, y: 13, r: 32, g: 58, b: 85 },
    { x: 334, y: 23, r: 199, g: 190, b: 236 },
    { x: 248, y: 13, r: 88, g: 62, b: 186 },
    { x: 249, y: 21, r: 146, g: 142, b: 244 },
    { x: 153, y: 123, r: 219, g: 147, b: 75 },
    { x: 142, y: 129, r: 245, g: 233, b: 88 },
    { x: 346, y: 274, r: 255, g: 209, b: 0 },
    { x: 430, y: 270, r: 60, g: 181, b: 8 },
], { x: 346, y: 274 });
var rfpageCannotLightBeacon = new Rerouter_1.Page('rfpageCannotLightBeacon', [
    { x: 436, y: 284, r: 0, g: 134, b: 189 },
    { x: 261, y: 112, r: 114, g: 80, b: 44 },
    { x: 261, y: 226, r: 118, g: 82, b: 50 },
    { x: 250, y: 192, r: 83, g: 87, b: 104 },
    { x: 197, y: 104, r: 107, g: 142, b: 198 },
]);
var rfpageLightBeaconReminder = new Rerouter_1.Page('rfpageLightBeaconReminder', [
    { x: 301, y: 250, r: 8, g: 166, b: 222 },
    { x: 403, y: 248, r: 123, g: 207, b: 8 },
    { x: 333, y: 19, r: 49, g: 38, b: 75 },
    { x: 187, y: 166, r: 104, g: 111, b: 122 },
]);
// A very long text down below saying fight already started, cannot light beacon, need to be closed
var rfpageStartedFightingSoCannotStartBeacon = new Rerouter_1.Page('rfpageStartedFightingSoCannotStartBeacon', [
    { x: 473, y: 23, r: 255, g: 255, b: 255 },
    { x: 191, y: 82, r: 227, g: 165, b: 82 },
    { x: 197, y: 183, r: 219, g: 147, b: 77 },
    { x: 184, y: 185, r: 242, g: 213, b: 49 },
    { x: 179, y: 312, r: 55, g: 62, b: 96 },
], { x: 473, y: 23 });
// Choose the 2nd alliance reward, need to add tap ({x: 620, y: 22}) when not enough tickets
var rfpageAllianceReward = new Rerouter_1.Page('rfpageAllianceReward', [
    { x: 397, y: 243, r: 189, g: 150, b: 82 },
    { x: 257, y: 41, r: 19, g: 29, b: 6 },
    { x: 310, y: 22, r: 29, g: 6, b: 8 },
    { x: 374, y: 46, r: 41, g: 45, b: 45 },
    { x: 422, y: 76, r: 12, g: 31, b: 49 },
    { x: 618, y: 20, r: 255, g: 255, b: 255 },
], { x: 397, y: 243 });
// Conflict with rfpageBattleFinished
// const rfpageAllianceResults = new Page(
//   'rfpageAllianceResults',
//   [
//     { x: 612, y: 333, r: 8, g: 166, b: 222 },
//     { x: 259, y: 57, r: 66, g: 136, b: 202 },
//     { x: 329, y: 26, r: 222, g: 48, b: 74 },
//     { x: 368, y: 49, r: 198, g: 223, b: 222 },
//     { x: 76, y: 336, r: 247, g: 89, b: 24 },
//     { x: 188, y: 333, r: 8, g: 166, b: 222 },
//     { x: 319, y: 41, r: 149, g: 149, b: 60 }, // differntiate with rfpageWinBountyAndFinish
//   ],
//   { x: 612, y: 333 }
// );
var rfpageCannotRefilAllianceTicketToday = new Rerouter_1.Page('rfpageCannotRefilAllianceTicketToday', [
    { x: 345, y: 275, r: 121, g: 207, b: 12 },
    { x: 331, y: 129, r: 52, g: 159, b: 227 },
    { x: 306, y: 147, r: 69, g: 52, b: 160 },
    { x: 333, y: 24, r: 126, g: 124, b: 127 },
    { x: 218, y: 74, r: 60, g: 70, b: 105 },
]);
var rfpageSelectStartingTeam = new Rerouter_1.Page('rfpageSelectStartingTeam', [
    { x: 260, y: 29, r: 140, g: 88, b: 230 },
    { x: 160, y: 63, r: 107, g: 101, b: 222 },
    { x: 399, y: 107, r: 255, g: 200, b: 0 },
    { x: 488, y: 306, r: 0, g: 150, b: 214 },
    { x: 613, y: 325, r: 30, g: 52, b: 3 },
]);
var rfpageKeepBattleByOrderNotCheckWhenStart = new Rerouter_1.Page('rfpageKeepBattleByOrderNotCheckWhenStart', [
    { x: 145, y: 311, r: 239, g: 235, b: 239 },
    { x: 135, y: 303, r: 30, g: 19, b: 52 },
    { x: 140, y: 274, r: 49, g: 32, b: 90 },
], { x: 145, y: 311 });
var rfpageKeepBattleByOrderNotCheck = new Rerouter_1.Page('rfpageKeepBattleByOrderNotCheck', [
    { x: 146, y: 323, r: 237, g: 233, b: 235 },
    { x: 153, y: 254, r: 49, g: 40, b: 98 },
    { x: 149, y: 270, r: 147, g: 129, b: 235 },
], { x: 146, y: 323 });
var groupPageTeamSelection = new Rerouter_1.GroupPage('groupPageTeamSelection', [
    rfpageSelectStartingTeam,
    rfpageKeepBattleByOrderNotCheck,
    rfpageKeepBattleByOrderNotCheckWhenStart,
]);
var guildBattleDragonStatus = {
    bossIdx: 0,
};
var guildBattleAllianceStatus = {
    needIgniteBeacon: true,
    collectGuildRewardCount: 0,
};
function addGuildRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageSeachToJoinGuild.name),
        match: rfpageSeachToJoinGuild,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageSeachToJoinGuild, tap to friend, send back and finishRound");
            if (context.task.name === tasks_1.TASKS.guildCheckin || context.task.name === tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            }
            Rerouter_1.rerouter.screen.tap({ x: 20, y: 88 });
            Rerouter_1.Utils.sleep(1000);
            (0, utils_1.sendKeyBack)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInGuildLand.name),
        match: rfpageInGuildLand,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 5) !== 'guild') {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageInGuildLand, handle it");
            switch (context.task.name) {
                case tasks_1.TASKS.guildCheckin:
                    Rerouter_1.rerouter.screen.tap({ x: 315, y: 217 }); // tap center guild level up trophy
                    Rerouter_1.Utils.sleep(2000);
                    break;
                case tasks_1.TASKS.guildExpandLand:
                    // rerouter.screen.tap({ x: 315, y: 217 });
                    // Utils.sleep(2000);
                    break;
                case tasks_1.TASKS.guildBattleDragon:
                    Rerouter_1.rerouter.screen.tap({ x: 150, y: 328 }); // tap dragon icon
                    Rerouter_1.Utils.sleep(2000);
                    break;
                case tasks_1.TASKS.guildBattleAlliance:
                    Rerouter_1.rerouter.screen.tap({ x: 200, y: 330 }); // tap alliance icon
                    Rerouter_1.Utils.sleep(5000);
                    break;
                default:
                    // TODO: will fail when resume battle
                    console.log('I am rfpageInGuildLand, panic and donno what to do');
                    (0, helper_1.saveImageToDisk)('guildland-no-task');
                // ii++;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInGuildBeacon.name),
        match: rfpageInGuildBeacon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.guildCheckin) {
                (0, utils_1.logs)(context.task.name, "in rfpageInGuildBeacon, finishRound");
                Rerouter_1.rerouter.goNext(rfpageInGuildBeacon);
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            }
            (0, utils_1.sendKeyBack)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfPageGuildBeaconIsClear.name),
        match: rfPageGuildBeaconIsClear,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.guildCheckin) {
                (0, utils_1.logs)(context.task.name, "in rfPageGuildBeaconIsClear, finishRound");
                Rerouter_1.rerouter.goNext(rfPageGuildBeaconIsClear);
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            }
            (0, utils_1.sendKeyBack)();
        },
    });
    // Guild dragon
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageBattleDragon.name),
        match: rfpageBattleDragon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in ".concat(context.path, ", handle it"));
            var guildBossesEntryPoints = [
                { x: 113, y: 202, r: 123, g: 207, b: 8 },
                { x: 312, y: 205, r: 123, g: 207, b: 8 },
                { x: 505, y: 204, r: 123, g: 207, b: 8 }, // right
            ];
            if (guildBattleDragonStatus.bossIdx >= guildBossesEntryPoints.length) {
                guildBattleDragonStatus.bossIdx = 0;
            }
            (0, utils_1.logs)(context.task.name, "Try to fight boss: ".concat(guildBattleDragonStatus.bossIdx));
            var bossEntryPoint = guildBossesEntryPoints[guildBattleDragonStatus.bossIdx];
            Rerouter_1.rerouter.screen.tap(bossEntryPoint);
            guildBattleDragonStatus.bossIdx++;
            return;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageReadyToFightDragon.name),
        match: exports.rfpageReadyToFightDragon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            Rerouter_1.rerouter.goNext(exports.rfpageReadyToFightDragon);
            Rerouter_1.Utils.sleep(6000);
            if (Rerouter_1.rerouter.isPageMatch(exports.rfpageReadyToFightDragon)) {
                (0, utils_1.logs)(context.task.name, "Still in rfpageReadyToFightDragon 6 secs after tapped Battle!, no more dragon ticket, finish round");
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageTallyingfightDragon.name),
        match: exports.rfpageTallyingfightDragon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "found rfpageTallyingfightDragon, no need to battle dragon, finish round");
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    // Guild alliance battle
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageStartedFightingSoCannotStartBeacon.name),
        match: rfpageStartedFightingSoCannotStartBeacon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            Rerouter_1.rerouter.screen.tap({ x: 372, y: 287 });
            Rerouter_1.Utils.sleep(2000);
            if (Rerouter_1.rerouter.isPageMatch(rfpageStartedFightingSoCannotStartBeacon)) {
                (0, utils_1.logs)(context.task.name, "rfpageStartedFightingSoCannotStartBeacon, stop trying to ignite beacon");
                guildBattleAllianceStatus.needIgniteBeacon = false;
                Rerouter_1.rerouter.goNext(rfpageStartedFightingSoCannotStartBeacon);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(groupPageAllianceSelectStage.name),
        match: groupPageAllianceSelectStage,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "In groupPageAllianceSelectStage, start guild alliance battle");
            for (var i = 0; i < 10; i++) {
                Rerouter_1.rerouter.screen.tap({ x: 560, y: 350 - 25 * i });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                if (!Rerouter_1.rerouter.isPageMatch(groupPageAllianceSelectStage)) {
                    (0, utils_1.logs)(context.task.name, "Left rfpageCookieAllianceSelectCampaigns, start battling");
                    return;
                }
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInCookieAlliance.name),
        match: rfpageInCookieAlliance,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "start guild alliance battle");
            if (guildBattleAllianceStatus.needIgniteBeacon && Rerouter_1.rerouter.isPageMatchImage(rfpageAllianceBeaconIsOff, image)) {
                Rerouter_1.rerouter.screen.tap({ x: 215, y: 198 });
                return;
            }
            Rerouter_1.rerouter.screen.tap({ x: 515, y: 324 });
            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(groupPageTeamSelection.name),
        match: groupPageTeamSelection,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "found groupPageTeamSelection, handle it");
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageSelectStartingTeam, image)) {
                (0, utils_1.logs)(context.task.name, "found rfpageSelectStartingTeam, tap all from top");
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 70 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 113 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 165 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 215 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 267 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                return;
            }
            else if (Rerouter_1.rerouter.isPageMatchImage(rfpageKeepBattleByOrderNotCheck, image)) {
                (0, utils_1.logs)(context.task.name, "handle rfpageKeepBattleByOrderNotCheck, tap and wait 8 secs");
                Rerouter_1.rerouter.goNext(rfpageKeepBattleByOrderNotCheck);
                Rerouter_1.Utils.sleep(8000);
                return;
            }
            else if (Rerouter_1.rerouter.isPageMatchImage(rfpageKeepBattleByOrderNotCheckWhenStart, image)) {
                (0, utils_1.logs)(context.task.name, "handle rfpageKeepBattleByOrderNotCheckWhenStart, tap and wait 8 secs");
                Rerouter_1.rerouter.goNext(rfpageKeepBattleByOrderNotCheckWhenStart);
                Rerouter_1.Utils.sleep(8000);
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageCannotRefilAllianceTicketToday.name),
        match: rfpageCannotRefilAllianceTicketToday,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "found rfpageCannotRefilAllianceTicketToday, finish round");
            Rerouter_1.rerouter.screen.tap({ x: 282, y: 276 });
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageAllianceAddMoreCookie.name),
        match: rfpageAllianceAddMoreCookie,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.logs)(context.task.name, "found rfpageAllianceAddMoreCookie, tap cancel");
                Rerouter_1.rerouter.screen.tap({ x: 264, y: 250 });
                return;
            }
            (0, utils_1.logs)(context.task.name, "found rfpageAllianceAddMoreCookie, tap Start");
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 250 });
            (0, utils_1.sendEventRunning)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInCookieAllianceSkipIntro.name),
        match: rfpageInCookieAllianceSkipIntro,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "found rfpageInCookieAllianceSkipIntro, try to resolve it by tapping SKIP");
            Rerouter_1.rerouter.screen.tap({ x: 608, y: 26 });
            sleep(3000);
            if (Rerouter_1.rerouter.isPageMatch(rfpageInCookieAllianceSkipIntro)) {
                (0, utils_1.logs)(context.task.name, "still in rfpageInCookieAllianceSkipIntro, try to resolve it by Edit { x: 46, y: 336 }");
                Rerouter_1.rerouter.screen.tap({ x: 46, y: 336 });
                sleep(3000);
            }
            if (Rerouter_1.rerouter.isPageMatch(rfpageInCookieAllianceSkipIntro)) {
                (0, utils_1.logs)(context.task.name, "still in rfpageInCookieAllianceSkipIntro, try to resolve it by beacon { x: 46, y: 336 }");
                Rerouter_1.rerouter.screen.tap({ x: 242, y: 199 });
                sleep(3000);
            }
            if (Rerouter_1.rerouter.isPageMatch(rfpageInCookieAllianceSkipIntro)) {
                (0, utils_1.logs)(context.task.name, "still in rfpageInCookieAllianceSkipIntro, try to resolve it by Artifacts { x: 395, y: 332 }");
                Rerouter_1.rerouter.screen.tap({ x: 395, y: 332 });
                sleep(3000);
            }
            (0, utils_1.sendEventRunning)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageAllianceReward.name),
        match: rfpageAllianceReward,
        action: function (context, image, matched, finishRound) {
            if (guildBattleAllianceStatus.collectGuildRewardCount > 10) {
                (0, utils_1.logs)(context.task.name, "found rfpageAllianceReward, tap close as collectGuildRewardCount: ".concat(guildBattleAllianceStatus.collectGuildRewardCount));
                Rerouter_1.rerouter.screen.tap({ x: 620, y: 20 });
                (0, utils_1.sendEventRunning)();
                finishRound(true);
                return;
            }
            guildBattleAllianceStatus.collectGuildRewardCount++;
            (0, utils_1.logs)(context.task.name, "found rfpageAllianceReward, tap it and collectGuildRewardCount: ".concat(guildBattleAllianceStatus.collectGuildRewardCount));
            Rerouter_1.rerouter.screen.tap({ x: 282, y: 276 });
            (0, utils_1.sendEventRunning)();
            finishRound(true);
        },
    });
    (0, helper_2.passiveAddRoute)([
        rfpageInputGuildWelcomeText,
        // rfpageGuildBeaconLevelUp,
        rfpageDragonRemainHealth,
        // rfpageAllianceResults,
        rfpageAllianceTeamSetup,
        rfpageBeaconOfValor,
        // rfpageInCookieAllianceSkipIntroInTeamSetup,
        rfpageInCookieAllianceSkipIntroBeaconValor,
    ]);
}
exports.addGuildRoutes = addGuildRoutes;
function addGuildCheckinTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.guildCheckin,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addGuildCheckinTask = addGuildCheckinTask;
function addGuildBattleDragonTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.guildBattleDragon,
        maxTaskDuring: 10 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_2.assign)(guildBattleDragonStatus, {
                bossIdx: 0,
            });
        },
    });
}
exports.addGuildBattleDragonTask = addGuildBattleDragonTask;
function addGuildBattleAllianceTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.guildBattleAlliance,
        maxTaskDuring: 40 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_2.assign)(guildBattleAllianceStatus, {
                needIgniteBeacon: true,
                collectGuildRewardCount: 0,
            });
        },
    });
}
exports.addGuildBattleAllianceTask = addGuildBattleAllianceTask;


/***/ }),

/***/ "./src/tasks/hotAirBallon.ts":
/*!***********************************!*\
  !*** ./src/tasks/hotAirBallon.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addHotAirBallonTask = exports.addHotAirBallonRoutes = exports.rfpageBeastYeastChooseDestination = exports.rfpageBeastYesatBallonDock = exports.rfpageInHotAirBallon = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
exports.rfpageInHotAirBallon = new Rerouter_1.Page('rfpageInHotAirBallon', [
    { x: 270, y: 330, r: 255, g: 211, b: 0 },
    { x: 192, y: 310, r: 223, g: 173, b: 98 },
    { x: 184, y: 312, r: 223, g: 175, b: 97 },
    { x: 331, y: 312, r: 142, g: 88, b: 65 },
    { x: 565, y: 84, r: 255, g: 251, b: 235 },
    { x: 232, y: 12, r: 242, g: 66, b: 157 },
    { x: 234, y: 42, r: 171, g: 13, b: 87 },
    { x: 269, y: 73, r: 55, g: 156, b: 71 },
    { x: 208, y: 95, r: 47, g: 128, b: 84 },
]);
exports.rfpageBeastYesatBallonDock = new Rerouter_1.Page('rfpageBeastYesatBallonDock', [
    { x: 278, y: 304, r: 242, g: 191, b: 49 },
    { x: 245, y: 280, r: 235, g: 114, b: 136 },
    { x: 33, y: 165, r: 136, g: 109, b: 78 },
    { x: 10, y: 197, r: 111, g: 49, b: 14 },
    { x: 23, y: 236, r: 65, g: 112, b: 121 },
    { x: 36, y: 280, r: 67, g: 71, b: 63 },
    { x: 178, y: 335, r: 12, g: 167, b: 223 },
    { x: 277, y: 333, r: 255, g: 211, b: 0 },
    { x: 420, y: 328, r: 12, g: 166, b: 223 },
    { x: 238, y: 8, r: 254, g: 175, b: 61 },
    { x: 228, y: 57, r: 180, g: 78, b: 6 },
    { x: 216, y: 103, r: 140, g: 59, b: 183 },
    { x: 210, y: 133, r: 50, g: 213, b: 110 },
], { x: 538, y: 329 });
exports.rfpageBeastYeastChooseDestination = new Rerouter_1.Page('rfpageBeastYeastChooseDestination', [
    { x: 16, y: 21, r: 119, g: 119, b: 119 },
    { x: 33, y: 37, r: 168, g: 123, b: 89 },
    { x: 80, y: 33, r: 186, g: 164, b: 111 },
    { x: 82, y: 80, r: 202, g: 174, b: 121 },
    { x: 96, y: 101, r: 231, g: 167, b: 77 },
    { x: 619, y: 335, r: 157, g: 135, b: 92 },
    { x: 554, y: 298, r: 93, g: 58, b: 29 },
    { x: 554, y: 292, r: 216, g: 187, b: 129 },
]);
var rfpageBeastYeastStorageIsFull = new Rerouter_1.Page('rfpageBeastYeastStorageIsFull', [
    { x: 401, y: 250, r: 121, g: 207, b: 12 },
    { x: 302, y: 249, r: 12, g: 167, b: 223 },
    { x: 222, y: 128, r: 243, g: 233, b: 223 },
    { x: 222, y: 95, r: 60, g: 70, b: 105 },
    { x: 291, y: 57, r: 63, g: 53, b: 122 },
    { x: 258, y: 70, r: 70, g: 31, b: 93 },
    { x: 242, y: 51, r: 84, g: 37, b: 4 },
    { x: 238, y: 15, r: 121, g: 77, b: 25 },
    { x: 148, y: 132, r: 24, g: 107, b: 54 },
    { x: 543, y: 325, r: 18, g: 31, b: 2 },
], { x: 370, y: 250 });
var rfpageBallonFlyingDock = new Rerouter_1.Page('rfpageBallonFlyingDock', [
    { x: 611, y: 17, r: 57, g: 166, b: 231 },
    { x: 213, y: 15, r: 50, g: 21, b: 37 },
    { x: 250, y: 51, r: 255, g: 255, b: 255 },
    { x: 269, y: 51, r: 217, g: 217, b: 217 },
    { x: 346, y: 50, r: 40, g: 6, b: 21 },
    { x: 129, y: 23, r: 43, g: 6, b: 26 },
    { x: 37, y: 51, r: 6, g: 14, b: 3 },
], { x: 616, y: 17 });
var rfpageChooseBallonDestination = new Rerouter_1.Page('rfpageChooseBallonDestination', [
    { x: 285, y: 15, r: 208, g: 161, b: 89 },
    { x: 319, y: 7, r: 91, g: 61, b: 45 },
    { x: 352, y: 18, r: 210, g: 162, b: 89 },
    { x: 616, y: 15, r: 56, g: 165, b: 231 },
]);
var rfpageBallonMapEp4 = new Rerouter_1.Page('rfpageBallonMapEp4', [
    { x: 611, y: 204, r: 236, g: 228, b: 255 },
    { x: 9, y: 37, r: 56, g: 33, b: 19 },
    { x: 40, y: 120, r: 129, g: 229, b: 81 },
], { x: 610, y: 230 });
var hotAirBallonStatus = {
    changeMapFinished: false,
};
function addHotAirBallonRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInHotAirBallon.name),
        match: exports.rfpageInHotAirBallon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon) {
                (0, utils_1.logs)(context.task.name, "rfpageInHotAirBallon, task is ".concat(context.task.name, " but not TASKS.hotAirBallon or TASKS.resolveGreenChecks so send back"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageInHotAirBallon, choose next step');
            if (hotAirBallonStatus['changeMapFinished']) {
                Rerouter_1.rerouter.screen.tap({ x: 258, y: 330 }); // tap Auto
                Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                Rerouter_1.rerouter.screen.tap({ x: 575, y: 330 }); // tap Start
                (0, utils_1.logs)(context.task.name, "rfpageInHotAirBallon, start new ballon trip, ep4: ".concat(scriptConfig_1.config.isHotAirBallonGotoEp4));
                (0, helper_1.sendCounter)(context.task.name, exports.rfpageInHotAirBallon.name, {});
                finishRound(true);
            }
            else {
                Rerouter_1.rerouter.screen.tap({ x: 412, y: 330 }); // tap Change
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageBeastYesatBallonDock.name),
        match: exports.rfpageBeastYesatBallonDock,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon) {
                (0, utils_1.logs)(context.task.name, "rfpageBeastYesatBallonDock, task is ".concat(context.task.name, " but not TASKS.hotAirBallon or TASKS.resolveGreenChecks so send back"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            if (!hotAirBallonStatus['changeMapFinished']) {
                Rerouter_1.rerouter.screen.tap({ x: 381, y: 326 });
            }
            else {
                // Tap Auto then start, no need to check map
                (0, utils_1.logs)(context.task.name, 'rfpageBeastYesatBallonDock, tap auto then start');
                Rerouter_1.rerouter.screen.tap({ x: 258, y: 330 }); // tap Auto
                Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                Rerouter_1.rerouter.screen.tap({ x: 575, y: 330 }); // tap Start
                (0, helper_1.sendCounter)(context.task.name, exports.rfpageBeastYesatBallonDock.name, {});
                finishRound(true);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageBeastYeastChooseDestination.name),
        match: exports.rfpageBeastYeastChooseDestination,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon) {
                (0, utils_1.logs)(context.task.name, "rfpageBeastYeastChooseDestination, task is ".concat(context.task.name, " but not TASKS.hotAirBallon or TASKS.resolveGreenChecks so send back"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            // Try tap backward
            var targets = [
                { x: 186, y: 72 },
                { x: 111, y: 85 },
            ];
            for (var i = 0; i < 5; i++) {
                Rerouter_1.rerouter.screen.tap(targets[i]);
                sleep(2000);
                if (!Rerouter_1.rerouter.isPageMatch(exports.rfpageBeastYeastChooseDestination)) {
                    break;
                }
            }
            // Update flag
            hotAirBallonStatus['changeMapFinished'] = true;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageBallonFlyingDock.name),
        match: rfpageBallonFlyingDock,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                (0, utils_1.logs)(context.task.name, "rfpageBallonFlyingDock, skip as current task is ".concat(context.task.name));
                Rerouter_1.rerouter.goNext(rfpageBallonFlyingDock); // close this screen
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageBallonFlyingDock, ballon is flying, finish task');
            Rerouter_1.rerouter.goNext(rfpageBallonFlyingDock); // close this screen
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageChooseBallonDestination.name),
        match: rfpageChooseBallonDestination,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageChooseBallonDestination, goto ep4: ".concat(scriptConfig_1.config.isHotAirBallonGotoEp4));
            if (scriptConfig_1.config.isHotAirBallonGotoEp4) {
                (0, utils_1.logs)(context.task.name, "rfpageChooseBallonDestination, go to first");
                (0, helper_1.scrollLeftALot)({ x: 30, y: 151 });
                (0, helper_1.scrollLeftALot)({ x: 30, y: 151 });
                (0, helper_1.scrollLeftALot)({ x: 30, y: 151 });
                Rerouter_1.rerouter.goNext(rfpageBallonMapEp4); // tap EP4 map
                hotAirBallonStatus['changeMapFinished'] = true;
                return;
            }
            else {
                (0, utils_1.logs)(context.task.name, "rfpageChooseBallonDestination, go to end");
                // scroll to right most and find the last map
                (0, helper_1.scrollRightALot)({ x: 618, y: 151 });
                (0, helper_1.scrollRightALot)({ x: 618, y: 151 });
                (0, helper_1.scrollRightALot)({ x: 618, y: 151 });
                for (var i = 0; i < 6; i++) {
                    for (var xLocation = 550; xLocation >= 100; xLocation -= 125) {
                        for (var yLocation = 140; yLocation <= 260; yLocation += 120) {
                            Rerouter_1.rerouter.screen.tap({ x: xLocation, y: yLocation });
                            if (Rerouter_1.rerouter.waitScreenForMatchingPage(exports.rfpageInHotAirBallon, 2000)) {
                                hotAirBallonStatus['changeMapFinished'] = true;
                                (0, utils_1.logs)(context.task.name, "ballon destination choosed successfully, i, x, y = ".concat(i, ", ").concat(xLocation, ", ").concat(yLocation));
                                return;
                            }
                        }
                    }
                    tapDown(30, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
                    moveTo(250, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
                    moveTo(620, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    tapUp(620, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 3);
                }
            }
        },
    });
    (0, helper_1.passiveAddRoute)([rfpageBeastYeastStorageIsFull]);
}
exports.addHotAirBallonRoutes = addHotAirBallonRoutes;
function addHotAirBallonTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.hotAirBallon,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoSendHotAirBallonIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(hotAirBallonStatus, {
                changeMapFinished: false,
            });
        },
    });
}
exports.addHotAirBallonTask = addHotAirBallonTask;


/***/ }),

/***/ "./src/tasks/login.ts":
/*!****************************!*\
  !*** ./src/tasks/login.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkLoginFailedMaxReached = exports.addLoginRoutes = exports.rfpageEnterTwoPasswordsLongId = exports.rfpageTermsOfServiceLongWindow = exports.rfpageTermsOfServiceWindowRedroid = exports.rfpageTermsOfServiceWindow = exports.rfpageChooseLoginMethodRedroid = exports.rfpageInputAge = exports.rfpageYouAlreadyHaveADevplayAccount3 = exports.rfpageYouAlreadyHaveADevplayAccount2 = exports.rfpageYouAlreadyHaveADevplayAccount1 = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var __1 = __webpack_require__(/*! ../.. */ "./index.js");
exports.rfpageYouAlreadyHaveADevplayAccount1 = new Rerouter_1.Page('rfpageYouAlreadyHaveADevplayAccount1', [
    { x: 115, y: 142, r: 255, g: 95, b: 0 },
    { x: 130, y: 149, r: 255, g: 95, b: 0 },
    { x: 137, y: 142, r: 255, g: 95, b: 0 },
    { x: 144, y: 149, r: 255, g: 95, b: 0 },
    { x: 159, y: 154, r: 255, g: 95, b: 0 },
    { x: 178, y: 150, r: 201, g: 200, b: 200 },
    { x: 205, y: 152, r: 255, g: 255, b: 255 },
    { x: 223, y: 148, r: 255, g: 255, b: 255 },
    { x: 329, y: 207, r: 229, g: 232, b: 234 },
    { x: 343, y: 207, r: 255, g: 255, b: 255 },
    { x: 517, y: 164, r: 196, g: 197, b: 202 },
    { x: 326, y: 157, r: 126, g: 98, b: 84 },
], {
    x: 516,
    y: 164,
});
exports.rfpageYouAlreadyHaveADevplayAccount2 = new Rerouter_1.Page('rfpageYouAlreadyHaveADevplayAccount2', [
    { x: 114, y: 112, r: 255, g: 95, b: 0 },
    { x: 130, y: 112, r: 255, g: 95, b: 0 },
    { x: 137, y: 106, r: 255, g: 95, b: 0 },
    { x: 143, y: 113, r: 255, g: 95, b: 0 },
    { x: 138, y: 120, r: 255, g: 95, b: 0 },
    { x: 166, y: 109, r: 255, g: 95, b: 0 },
    { x: 177, y: 113, r: 255, g: 255, b: 255 },
    { x: 205, y: 116, r: 255, g: 255, b: 255 },
    { x: 222, y: 112, r: 255, g: 255, b: 255 },
    { x: 117, y: 144, r: 56, g: 66, b: 78 },
    { x: 517, y: 129, r: 96, g: 113, b: 130 },
    { x: 326, y: 121, r: 114, g: 89, b: 83 },
], {
    x: 326,
    y: 121,
});
exports.rfpageYouAlreadyHaveADevplayAccount3 = new Rerouter_1.Page('rfpageYouAlreadyHaveADevplayAccount3', [
    { x: 115, y: 90, r: 255, g: 95, b: 0 },
    { x: 129, y: 93, r: 255, g: 95, b: 0 },
    { x: 136, y: 88, r: 255, g: 95, b: 0 },
    { x: 157, y: 98, r: 255, g: 95, b: 0 },
    { x: 176, y: 94, r: 255, g: 255, b: 255 },
    { x: 215, y: 97, r: 255, g: 255, b: 255 },
    { x: 223, y: 93, r: 255, g: 255, b: 255 },
    { x: 516, y: 110, r: 93, g: 108, b: 126 },
    { x: 330, y: 100, r: 207, g: 112, b: 74 },
], {
    x: 516,
    y: 110,
});
var rfpageAnnouncement = new Rerouter_1.Page('rfpageAnnouncement', [
    { x: 224, y: 19, r: 85, g: 18, b: 32 },
    { x: 310, y: 21, r: 89, g: 81, b: 0 },
    { x: 610, y: 19, r: 56, g: 167, b: 231 },
    { x: 619, y: 19, r: 255, g: 255, b: 255 },
    { x: 628, y: 18, r: 56, g: 167, b: 231 },
    { x: 59, y: 219, r: 54, g: 64, b: 87 },
    { x: 71, y: 317, r: 54, g: 64, b: 87 },
    { x: 19, y: 114, r: 63, g: 0, b: 9 },
    { x: 25, y: 321, r: 75, g: 75, b: 75 },
], { x: 610, y: 19 });
// Check for gears in login page via pixel matching
var rfpageInLoginPageWithGearAndVideo = new Rerouter_1.Page('rfpageInLoginPageWithGearAndVideo', [
    { x: 621, y: 13, r: 233, g: 233, b: 235 },
    { x: 622, y: 16, r: 3, g: 4, b: 9 },
    { x: 597, y: 16, r: 233, g: 235, b: 239 },
    { x: 593, y: 16, r: 4, g: 6, b: 11 },
    { x: 590, y: 17, r: 233, g: 235, b: 239 },
    { x: 594, y: 23, r: 14, g: 14, b: 25 },
]);
// Update 2023.9.26
exports.rfpageInputAge = new Rerouter_1.Page('rfpageInputAge', [
    { x: 227, y: 189, r: 255, g: 126, b: 71 },
    { x: 402, y: 225, r: 255, g: 126, b: 71 },
    { x: 420, y: 236, r: 254, g: 243, b: 236 },
    { x: 408, y: 150, r: 255, g: 255, b: 255 },
    { x: 403, y: 156, r: 63, g: 68, b: 78 },
    { x: 262, y: 123, r: 36, g: 39, b: 45 },
    { x: 263, y: 121, r: 216, g: 216, b: 217 },
    { x: 365, y: 123, r: 255, g: 255, b: 255 },
    { x: 366, y: 125, r: 186, g: 187, b: 189 },
    { x: 303, y: 225, r: 255, g: 255, b: 255 },
], { x: 303, y: 225 });
// const rfpageChooseLoginMethod = new Page(
//   'rfpageChooseLoginMethod',
//   [
//     { x: 139, y: 233, r: 255, g: 95, b: 0 },
//     { x: 165, y: 197, r: 0, g: 0, b: 0 },
//     { x: 148, y: 153, r: 244, g: 154, b: 25 },
//     { x: 347, y: 166, r: 177, g: 204, b: 58 },
//     { x: 356, y: 196, r: 59, g: 89, b: 152 },
//     { x: 126, y: 234, r: 255, g: 255, b: 255 },
//   ],
//   { x: 139, y: 233 }
// );
// // Smaller icons (Android 7), not updated for 5 options
// export const rfpageChooseLoginMethod2 = new Page(
//   'rfpageChooseLoginMethod2',
//   [
//     { x: 138, y: 229, r: 255, g: 95, b: 0 },
//     { x: 138, y: 198, r: 0, g: 0, b: 0 },
//     { x: 138, y: 155, r: 234, g: 89, b: 77 },
//     { x: 347, y: 162, r: 177, g: 204, b: 58 },
//     { x: 342, y: 195, r: 59, g: 89, b: 152 },
//   ],
//   { x: 138, y: 229 }
// );
exports.rfpageChooseLoginMethodRedroid = new Rerouter_1.Page('rfpageChooseLoginMethodRedroid', [
    { x: 353, y: 241, r: 255, g: 126, b: 71 },
    { x: 333, y: 243, r: 255, g: 255, b: 255 },
    { x: 346, y: 203, r: 125, g: 192, b: 42 },
    { x: 346, y: 165, r: 25, g: 119, b: 243 },
    { x: 340, y: 127, r: 0, g: 0, b: 0 },
    { x: 343, y: 86, r: 255, g: 255, b: 255 },
    { x: 330, y: 87, r: 244, g: 171, b: 165 },
    { x: 330, y: 94, r: 74, g: 177, b: 103 },
    { x: 360, y: 240, r: 255, g: 126, b: 71 },
], { x: 360, y: 240 });
var rfpageEnterEmail = new Rerouter_1.Page('rfpageEnterEmail', [
    { x: 410, y: 165, r: 255, g: 255, b: 255 },
    { x: 295, y: 69, r: 255, g: 95, b: 0 },
    { x: 298, y: 70, r: 255, g: 235, b: 223 },
    { x: 324, y: 66, r: 255, g: 255, b: 255 },
    { x: 323, y: 70, r: 152, g: 152, b: 152 },
    { x: 222, y: 72, r: 255, g: 255, b: 255 },
    { x: 225, y: 70, r: 98, g: 102, b: 110 },
    { x: 408, y: 62, r: 255, g: 255, b: 255 },
    { x: 410, y: 70, r: 134, g: 137, b: 144 },
    { x: 314, y: 70, r: 255, g: 95, b: 0 },
    { x: 344, y: 169, r: 255, g: 255, b: 255 },
    { x: 294, y: 132, r: 255, g: 255, b: 255 },
    { x: 288, y: 133, r: 96, g: 96, b: 96 },
    { x: 232, y: 133, r: 254, g: 254, b: 254 },
    { x: 229, y: 132, r: 208, g: 208, b: 208 },
], { x: 344, y: 169 });
var rfpageTermsOfServices = new Rerouter_1.Page('rfpageTermsOfServices', [
    { x: 588, y: 233, r: 238, g: 238, b: 239 },
    { x: 580, y: 233, r: 255, g: 255, b: 255 },
    { x: 595, y: 233, r: 36, g: 39, b: 45 },
    { x: 494, y: 234, r: 203, g: 204, b: 206 },
    { x: 465, y: 233, r: 36, g: 39, b: 45 },
    { x: 36, y: 131, r: 255, g: 255, b: 255 },
    { x: 53, y: 128, r: 192, g: 193, b: 195 },
    { x: 131, y: 133, r: 255, g: 255, b: 255 },
    { x: 137, y: 134, r: 80, g: 83, b: 88 },
    { x: 62, y: 185, r: 144, g: 145, b: 148 },
    { x: 104, y: 185, r: 211, g: 211, b: 213 },
], { x: 588, y: 233 });
// TOS page will change when login page change
// Nox: cookie v1.15
exports.rfpageTermsOfServiceWindow = new Rerouter_1.Page('rfpageTermsOfServiceWindow', [
    { x: 448, y: 230, r: 171, g: 220, b: 216 },
    { x: 469, y: 240, r: 255, g: 255, b: 255 },
    { x: 159, y: 116, r: 255, g: 255, b: 255 },
    { x: 471, y: 116, r: 255, g: 255, b: 255 },
    { x: 158, y: 243, r: 255, g: 255, b: 255 },
], { x: 448, y: 230 });
exports.rfpageTermsOfServiceWindowRedroid = new Rerouter_1.Page('rfpageTermsOfServiceWindowRedroid', [
    { x: 479, y: 230, r: 255, g: 255, b: 255 },
    { x: 484, y: 230, r: 0, g: 133, b: 119 },
    { x: 489, y: 229, r: 255, g: 255, b: 255 },
    { x: 349, y: 229, r: 255, g: 255, b: 255 },
    { x: 353, y: 227, r: 0, g: 133, b: 119 },
    { x: 365, y: 231, r: 217, g: 237, b: 235 },
    { x: 394, y: 230, r: 255, g: 255, b: 255 },
    { x: 147, y: 133, r: 255, g: 255, b: 255 },
    { x: 168, y: 129, r: 33, g: 33, b: 33 },
    { x: 214, y: 135, r: 255, g: 255, b: 255 },
    { x: 271, y: 135, r: 108, g: 108, b: 108 },
    { x: 254, y: 171, r: 255, g: 255, b: 255 },
], { x: 483, y: 230 });
// Memu: cookie v1.16
var rfpageTermsOfServicesMemu = new Rerouter_1.Page('rfpageTermsOfServicesMemu', [
    { x: 479, y: 238, r: 66, g: 66, b: 66 },
    { x: 482, y: 238, r: 107, g: 158, b: 153 },
    { x: 484, y: 222, r: 66, g: 66, b: 66 },
    { x: 486, y: 110, r: 66, g: 66, b: 66 },
    { x: 148, y: 123, r: 66, g: 66, b: 66 },
    { x: 171, y: 117, r: 255, g: 255, b: 255 },
    { x: 172, y: 205, r: 66, g: 66, b: 66 },
    { x: 229, y: 206, r: 254, g: 254, b: 254 },
], { x: 479, y: 238 });
exports.rfpageTermsOfServiceLongWindow = new Rerouter_1.Page('rfpageTermsOfServiceLongWindow', [
    { x: 585, y: 234, r: 255, g: 255, b: 255 },
    { x: 599, y: 233, r: 255, g: 255, b: 255 },
    { x: 552, y: 234, r: 158, g: 160, b: 165 },
    { x: 494, y: 233, r: 255, g: 255, b: 255 },
    // { x: 57, y: 185, r: 242, g: 242, b: 242 },
    // { x: 593, y: 235, r: 150, g: 153, b: 159 },
    { x: 456, y: 233, r: 255, g: 255, b: 255 },
    { x: 54, y: 128, r: 36, g: 36, b: 36 },
    { x: 38, y: 132, r: 255, g: 255, b: 255 },
], { x: 585, y: 234 });
var rfpageCannotFindLoginInfo = new Rerouter_1.Page('rfpageCannotFindLoginInfo', [
    { x: 316, y: 243, r: 82, g: 136, b: 5 },
    { x: 323, y: 242, r: 254, g: 254, b: 254 },
    { x: 332, y: 243, r: 123, g: 207, b: 8 },
    { x: 305, y: 242, r: 123, g: 207, b: 8 },
    { x: 300, y: 242, r: 123, g: 207, b: 8 },
    { x: 343, y: 243, r: 123, g: 207, b: 8 },
    { x: 201, y: 106, r: 57, g: 69, b: 107 },
    { x: 422, y: 95, r: 57, g: 69, b: 107 },
    { x: 438, y: 106, r: 57, g: 69, b: 107 },
    { x: 383, y: 177, r: 215, g: 205, b: 195 },
    { x: 377, y: 178, r: 231, g: 220, b: 209 },
    { x: 371, y: 178, r: 231, g: 220, b: 209 },
    { x: 243, y: 180, r: 80, g: 80, b: 80 },
], { x: 316, y: 243 });
// v1.15
// Marked as confused with rfpageNotEnoughItemToBuyThis and we have rfpageDownloadDataAndVoiceOverUnchecked
// export const rfpageCanDownloadResources = new Page(
//   'rfpageCanDownloadResources',
//   [
//     { x: 346, y: 240, r: 121, g: 207, b: 12 },
//     { x: 420, y: 237, r: 219, g: 207, b: 199 },
//     { x: 418, y: 172, r: 243, g: 233, b: 223 },
//     { x: 412, y: 103, r: 60, g: 70, b: 105 },
//     { x: 219, y: 98, r: 60, g: 70, b: 105 },
//     { x: 221, y: 250, r: 219, g: 207, b: 199 },
//     { x: 380, y: 100, r: 57, g: 69, b: 107 },
//     { x: 319, y: 102, r: 57, g: 69, b: 107 },
//     { x: 292, y: 108, r: 57, g: 69, b: 107 },
//   ],
//   { x: 346, y: 240 }
// );
// v2.0.1
var rfpageDownloadDataAndVoiceOver = new Rerouter_1.Page('rfpageDownloadDataAndVoiceOver', [
    { x: 207, y: 192, r: 39, g: 204, b: 0 },
    { x: 372, y: 216, r: 12, g: 167, b: 223 },
    { x: 445, y: 218, r: 12, g: 167, b: 223 },
    { x: 430, y: 81, r: 60, g: 70, b: 105 },
    { x: 214, y: 195, r: 255, g: 255, b: 255 },
    { x: 443, y: 216, r: 12, g: 167, b: 223 },
    { x: 285, y: 269, r: 121, g: 207, b: 12 },
], { x: 207, y: 192 });
var rfpageDownloadDataAndVoiceOverUnchecked = new Rerouter_1.Page('rfpageDownloadDataAndVoiceOverUnchecked', [
    { x: 207, y: 192, r: 255, g: 255, b: 255 },
    { x: 372, y: 216, r: 12, g: 167, b: 223 },
    { x: 445, y: 218, r: 12, g: 167, b: 223 },
    { x: 430, y: 81, r: 60, g: 70, b: 105 },
    { x: 214, y: 195, r: 255, g: 255, b: 255 },
    { x: 443, y: 216, r: 12, g: 167, b: 223 },
    { x: 285, y: 269, r: 121, g: 207, b: 12 },
], { x: 317, y: 264 });
// v2.0.1 has 'New data pak is available'
var rfpageServerSelection = new Rerouter_1.Page('rfpageServerSelection', [
    { x: 351, y: 260, r: 121, g: 207, b: 12 },
    { x: 428, y: 261, r: 12, g: 167, b: 223 },
    { x: 442, y: 242, r: 60, g: 70, b: 105 },
    { x: 422, y: 234, r: 44, g: 47, b: 62 },
    { x: 324, y: 54, r: 101, g: 137, b: 231 },
    { x: 302, y: 64, r: 117, g: 186, b: 100 },
    { x: 278, y: 81, r: 254, g: 254, b: 254 },
], { x: 351, y: 260 });
var rfpageEnterTwoPasswords = new Rerouter_1.Page('rfpageEnterTwoPasswords', [
    { x: 243, y: 307, r: 255, g: 255, b: 255 },
    { x: 377, y: 229, r: 200, g: 200, b: 200 },
    { x: 367, y: 176, r: 255, g: 255, b: 255 },
    { x: 371, y: 50, r: 60, g: 60, b: 60 },
    { x: 319, y: 53, r: 230, g: 230, b: 230 },
    { x: 236, y: 149, r: 195, g: 195, b: 195 },
    { x: 236, y: 183, r: 194, g: 194, b: 194 },
    { x: 243, y: 303, r: 200, g: 200, b: 200 },
], { x: 243, y: 307 });
exports.rfpageEnterTwoPasswordsLongId = new Rerouter_1.Page('rfpageEnterTwoPasswordsLongId', [
    { x: 243, y: 307, r: 255, g: 255, b: 255 },
    { x: 377, y: 229, r: 200, g: 200, b: 200 },
    { x: 367, y: 176, r: 255, g: 255, b: 255 },
    { x: 371, y: 50, r: 60, g: 60, b: 60 },
    { x: 319, y: 53, r: 230, g: 230, b: 230 },
    { x: 236, y: 161, r: 185, g: 185, b: 185 },
    { x: 236, y: 195, r: 185, g: 185, b: 185 },
    { x: 243, y: 303, r: 200, g: 200, b: 200 },
], { x: 243, y: 307 });
var rfpageEnterpassword = new Rerouter_1.Page('rfpageEnterpassword', [
    { x: 298, y: 70, r: 255, g: 235, b: 223 },
    { x: 295, y: 69, r: 255, g: 95, b: 0 },
    { x: 314, y: 61, r: 255, g: 255, b: 255 },
    { x: 313, y: 70, r: 255, g: 95, b: 0 },
    { x: 414, y: 70, r: 255, g: 255, b: 255 },
    { x: 410, y: 70, r: 134, g: 137, b: 144 },
    { x: 312, y: 131, r: 255, g: 255, b: 255 },
    { x: 313, y: 135, r: 255, g: 255, b: 255 },
    { x: 351, y: 131, r: 141, g: 141, b: 141 },
    { x: 400, y: 164, r: 255, g: 255, b: 255 },
], { x: 400, y: 164 });
var rfpageEnterpasswordFinished = new Rerouter_1.Page('rfpageEnterpasswordFinished', [
    { x: 370, y: 150, r: 255, g: 255, b: 255 },
    { x: 227, y: 112, r: 125, g: 125, b: 125 },
    { x: 235, y: 112, r: 84, g: 84, b: 84 },
    { x: 239, y: 114, r: 255, g: 255, b: 255 },
    { x: 368, y: 110, r: 84, g: 84, b: 84 },
]);
var rfpageEnterPasswordLongId = new Rerouter_1.Page('rfpageEnterPasswordLongId', [
    { x: 370, y: 161, r: 255, g: 255, b: 255 },
    { x: 227, y: 127, r: 125, g: 125, b: 125 },
    { x: 234, y: 124, r: 207, g: 207, b: 207 },
    { x: 229, y: 110, r: 255, g: 255, b: 255 },
    { x: 230, y: 110, r: 120, g: 120, b: 120 },
    { x: 227, y: 183, r: 255, g: 255, b: 255 },
], { x: 370, y: 161 });
var groupPageEnterPassword = new Rerouter_1.GroupPage('groupPageEnterPassword', [rfpageEnterpassword, rfpageEnterPasswordLongId], rfpageEnterPasswordLongId.next);
// Check if wrong password set. Any red string in this area means wrong password
var pageEnteredPassword = [
    { x: 370, y: 155, r: 255, g: 255, b: 255 },
    { x: 301, y: 115, r: 255, g: 255, b: 255 },
    { x: 387, y: 53, r: 60, g: 60, b: 60 },
    { x: 298, y: 53, r: 60, g: 60, b: 60 },
    { x: 322, y: 52, r: 60, g: 60, b: 60 },
];
var loginTaskStatus = {
    loginRetryCount: 0,
};
function addLoginRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInputAge.name),
        match: exports.rfpageInputAge,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'input rfpageInputAge');
            Rerouter_1.rerouter.screen.tap({ x: 285 + Math.random() * 35, y: 190 });
            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
            Rerouter_1.rerouter.goNext(exports.rfpageInputAge);
            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 150 });
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
        },
    });
    // rerouter.addRoute({
    //   path: `/${rfpageChooseLoginMethod.name}`,
    //   match: rfpageChooseLoginMethod,
    //   action: (context, image, matched, finishRound) => {
    //     if (context.task.name === TASKS.maintainanceMode) {
    //       logs(context.task.name, 'maintainanceMode, do nothing and sleep 60s');
    //       Utils.sleep(60000);
    //       return;
    //     }
    //     logs(context.task.name, 'input rfpageChooseLoginMethod');
    //     rerouter.goNext(rfpageChooseLoginMethod);
    //     Utils.sleep(CONSTANTS.sleepAnimate);
    //   },
    // });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageChooseLoginMethodRedroid.name),
        match: exports.rfpageChooseLoginMethodRedroid,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.maintainanceMode) {
                (0, utils_1.logs)(context.task.name, 'maintainanceMode, do nothing and sleep 60s');
                Rerouter_1.Utils.sleep(60000);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'input rfpageChooseLoginMethodRedroid');
            Rerouter_1.rerouter.goNext(exports.rfpageChooseLoginMethodRedroid);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageEnterEmail.name),
        match: rfpageEnterEmail,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.maintainanceMode) {
                (0, utils_1.logs)(context.task.name, 'maintainanceMode, do nothing and sleep 60s');
                Rerouter_1.Utils.sleep(60000);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'input email');
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 150 });
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            (0, utils_1.logs)(context.task.name, "typing email ".concat(scriptConfig_1.config.account));
            typing(scriptConfig_1.config.account, 1000);
            Rerouter_1.Utils.sleep(4000); // sleep must equal to typing
            typing('\n', 500);
            Rerouter_1.Utils.sleep(1000);
            var incorrectEmailFormat = {
                name: 'incorrectEmailFormat',
                x: 222,
                y: 166,
                width: 172,
                height: 12,
                targetY: 6,
                lookingForColor: { r: 226, g: 86, b: 86 },
                targetColorCount: 44,
                targetColorThreashold: 3,
            };
            var registerWithSocialPlatformMessageScreen = {
                name: 'registerWithSocialPlatformMessageScreen',
                x: 225,
                y: 162,
                width: 75,
                height: 13,
                targetY: 8,
                lookingForColor: { r: 244, g: 191, b: 191 },
                targetColorCount: 21,
                targetColorThreashold: 3,
            };
            if ((0, helper_1.checkScreenMessage)(incorrectEmailFormat, rfpageEnterEmail)) {
                (0, utils_1.logs)(context.task.name, 'reported incorrectEmailFormat so handle it');
                checkLoginFailedMaxReached();
            }
            else if ((0, helper_1.checkScreenMessage)(registerWithSocialPlatformMessageScreen, rfpageEnterEmail)) {
                (0, utils_1.logs)(context.task.name, 'reported registerWithSocialPlatformMessageScreen so handle it');
                checkLoginFailedMaxReached();
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(groupPageEnterPassword.name),
        match: groupPageEnterPassword,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'input password');
            if (scriptConfig_1.config.password.length < 8 || scriptConfig_1.config.password.length > 21) {
                (0, utils_1.logs)(context.task.name, "incorrect password length, should between 8 to 20, but got ".concat(scriptConfig_1.config.password.length));
                sendEvent('gameStatus', 'login-failed');
                (0, utils_1.logs)('groupPageEnterPassword', "Max retry count reached, login failed");
                __1.cookieKingdom.stop();
                return true;
            }
            Rerouter_1.rerouter.goNext(rfpageEnterPasswordLongId);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            typing(scriptConfig_1.config.password, 1000);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            typing('\n', 500);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 190 });
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            var wrongPasswordMessageScreen = {
                name: 'wrongPasswordMessageScreen',
                x: 225,
                y: 162,
                width: 75,
                height: 13,
                targetY: 6,
                lookingForColor: { r: 230, g: 100, b: 100 },
                targetColorCount: 18,
                targetColorThreashold: 2,
            };
            var wrongPasswordMessageScreenWithLongId = {
                name: 'wrongPasswordMessageScreenWithLongId',
                x: 225,
                y: 175,
                width: 75,
                height: 13,
                targetY: 6,
                lookingForColor: { r: 244, g: 100, b: 100 },
                targetColorCount: 25,
                targetColorThreashold: 2,
            };
            if ((0, helper_1.checkScreenMessage)(wrongPasswordMessageScreen, rfpageEnterpasswordFinished)) {
                (0, utils_1.logs)(context.task.name, 'reported wrongPasswordMessageScreen so handle it');
                checkLoginFailedMaxReached();
            }
            if ((0, helper_1.checkScreenMessage)(wrongPasswordMessageScreenWithLongId, rfpageEnterPasswordLongId)) {
                (0, utils_1.logs)(context.task.name, 'reported wrongPasswordMessageScreenWithLongId so handle it');
                checkLoginFailedMaxReached();
            }
            // TODO: send fail to login event
            (0, helper_1.sendCounter)(context.task.name, groupPageEnterPassword.name, {});
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageEnterTwoPasswords.name),
        match: rfpageEnterTwoPasswords,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'rfpageEnterTwoPasswords, this is a new Devister account, stopping');
            sendEvent('gameStatus', 'new-account');
            __1.cookieKingdom.stop();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageEnterTwoPasswordsLongId.name),
        match: exports.rfpageEnterTwoPasswordsLongId,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'rfpageEnterTwoPasswordsLongId, this is a new Devister account, stopping');
            sendEvent('gameStatus', 'new-account');
            __1.cookieKingdom.stop();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInLoginPageWithGearAndVideo.name),
        match: rfpageInLoginPageWithGearAndVideo,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'tapping (575, 22) until the game start every 3 secs');
            Rerouter_1.rerouter.screen.tap({ x: 575, y: 22 });
            Rerouter_1.Utils.sleep(3000);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageAnnouncement.name),
        match: rfpageAnnouncement,
        action: function (context, image, matched, finishRound) {
            if (scriptConfig_1.config.needToSendLoginSuccess) {
                (0, utils_1.logs)(context.task.name, 'have not send login-success, send it');
                sendEvent('gameStatus', 'login-succeeded');
                (0, utils_1.sendEventRunning)();
                scriptConfig_1.config.needToSendLoginSuccess = false;
                (0, helper_1.sendCounter)('login', context.path, {});
            }
            if (scriptConfig_1.config.needToSendPlaying) {
                Rerouter_1.Utils.sleep(3000);
                (0, utils_1.logs)(context.task.name, 'have not send needToSendPlaying, send it');
                sendEvent('gameStatus', 'playing');
                scriptConfig_1.config.needToSendPlaying = false;
            }
            Rerouter_1.rerouter.goNext(rfpageAnnouncement);
        },
    });
    //   rerouter.addRoute({
    //     path: `/${rfpageCanDownloadResources.name}`,
    //     match: rfpageCanDownloadResources,
    //     action: (context, image, matched, finishRound) => {
    //       if (rerouter.isPageMatchImage(rfpageNotEnoughItemToBuyThis, image)) {
    //         logs(context.task.name, 'confused rfpageCanDownloadResources vs rfpageNotEnoughItemToBuyThis, send back twice');
    //         sendKeyBack();
    //         Utils.sleep(config.sleep);
    //         sendKeyBack();
    //         return;
    //       }
    //       logs(context.task.name, 'rfpageCanDownloadResources, go next');
    //       rerouter.goNext(rfpageCanDownloadResources);
    //     },
    //   });
    (0, helper_1.passiveAddRoute)([
        exports.rfpageYouAlreadyHaveADevplayAccount1,
        exports.rfpageYouAlreadyHaveADevplayAccount2,
        exports.rfpageYouAlreadyHaveADevplayAccount3,
        rfpageTermsOfServices,
        exports.rfpageTermsOfServiceWindow,
        rfpageTermsOfServicesMemu,
        exports.rfpageTermsOfServiceWindowRedroid,
        exports.rfpageTermsOfServiceLongWindow,
        rfpageCannotFindLoginInfo,
        rfpageDownloadDataAndVoiceOver,
        rfpageDownloadDataAndVoiceOverUnchecked,
        rfpageServerSelection,
    ]);
}
exports.addLoginRoutes = addLoginRoutes;
function checkLoginFailedMaxReached() {
    if (loginTaskStatus.loginRetryCount > scriptConfig_1.config.loginRetryMaxTimes) {
        sendEvent('gameStatus', 'login-failed');
        (0, utils_1.logs)('checkLoginFailedMaxReached', "Max retry count reached, login failed");
        __1.cookieKingdom.stop();
        return true;
    }
    else {
        loginTaskStatus.loginRetryCount++;
        (0, utils_1.logs)('checkLoginFailedMaxReached', "Restart game as not inputing login info correctly: ".concat(loginTaskStatus.loginRetryCount));
        var rtn = execute('am force-stop com.devsisters.ck');
        if (rtn == 'signal: aborted') {
            // MEmu
            execute('ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am force-stop com.devsisters.ck');
        }
        sleep(15000);
        return false;
    }
}
exports.checkLoginFailedMaxReached = checkLoginFailedMaxReached;


/***/ }),

/***/ "./src/tasks/pvpArena.ts":
/*!*******************************!*\
  !*** ./src/tasks/pvpArena.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addSuperMayhemTask = exports.addPvpArenaTask = exports.addPvpPurchaseTask = exports.addSuperMayhemRoutes = exports.addPvpArenaRoutes = exports.rfpagePvPCrystaisRefresh = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");
var rfpageInPVPArena = new Rerouter_1.Page('rfpageInPVPArena', [
    { x: 628, y: 22, r: 55, g: 167, b: 231 },
    { x: 522, y: 18, r: 5, g: 128, b: 254 },
    { x: 458, y: 14, r: 228, g: 148, b: 40 },
    { x: 448, y: 22, r: 120, g: 38, b: 30 },
    { x: 356, y: 20, r: 239, g: 174, b: 20 },
    { x: 180, y: 119, r: 221, g: 128, b: 0 },
    { x: 22, y: 112, r: 232, g: 198, b: 132 },
    { x: 33, y: 115, r: 238, g: 190, b: 120 },
    { x: 24, y: 74, r: 255, g: 226, b: 0 },
]);
var rfpageInPVPMedalShop = new Rerouter_1.Page('rfpageInPVPMedalShop', [
    { x: 520, y: 23, r: 0, g: 179, b: 255 },
    { x: 449, y: 20, r: 210, g: 160, b: 27 },
    { x: 357, y: 17, r: 235, g: 159, b: 5 },
    { x: 92, y: 63, r: 255, g: 255, b: 255 },
    { x: 15, y: 46, r: 110, g: 110, b: 108 },
    { x: 17, y: 345, r: 28, g: 83, b: 115 },
    { x: 148, y: 315, r: 54, g: 62, b: 95 },
]);
var rfpagePVPNotEnoughMedal = new Rerouter_1.Page('rfpagePVPNotEnoughMedal', [
    { x: 292, y: 248, r: 123, g: 207, b: 8 },
    { x: 320, y: 185, r: 250, g: 210, b: 8 },
    { x: 338, y: 243, r: 123, g: 207, b: 8 },
], { x: 292, y: 248 });
var rfpagePVPArenaTeamSetup = new Rerouter_1.Page('rfpagePVPArenaTeamSetup', [
    { x: 627, y: 20, r: 54, g: 163, b: 230 },
    { x: 598, y: 88, r: 243, g: 90, b: 28 },
    { x: 598, y: 116, r: 121, g: 207, b: 12 },
    { x: 606, y: 139, r: 12, g: 167, b: 223 },
    { x: 602, y: 168, r: 12, g: 167, b: 223 },
    { x: 25, y: 17, r: 128, g: 128, b: 128 },
    { x: 457, y: 267, r: 110, g: 121, b: 165 },
    { x: 530, y: 263, r: 12, g: 167, b: 223 },
    { x: 609, y: 257, r: 239, g: 191, b: 44 },
    { x: 617, y: 20, r: 255, g: 255, b: 255 },
], { x: 617, y: 20 });
var rfpagePVPArenaReadyToBattlePage = new Rerouter_1.Page('rfpagePVPArenaReadyToBattlePage', [
    { x: 529, y: 14, r: 0, g: 196, b: 255 },
    { x: 449, y: 11, r: 242, g: 208, b: 106 },
    { x: 445, y: 24, r: 243, g: 199, b: 98 },
    { x: 359, y: 14, r: 252, g: 192, b: 32 },
    { x: 507, y: 330, r: 125, g: 69, b: 14 },
    { x: 543, y: 337, r: 121, g: 207, b: 12 },
    { x: 160, y: 334, r: 121, g: 207, b: 12 },
    { x: 76, y: 336, r: 12, g: 167, b: 223 },
    { x: 26, y: 81, r: 240, g: 175, b: 0 },
], { x: 502, y: 326 });
exports.rfpagePvPCrystaisRefresh = new Rerouter_1.Page('rfpagePvPCrystaisRefresh', [
    { x: 243, y: 100, r: 57, g: 69, b: 107 },
    { x: 324, y: 78, r: 255, g: 255, b: 255 },
    { x: 443, y: 92, r: 57, g: 166, b: 231 },
    { x: 402, y: 134, r: 247, g: 235, b: 222 },
    { x: 351, y: 250, r: 123, g: 207, b: 8 },
    { x: 408, y: 251, r: 222, g: 207, b: 198 },
], { x: 436, y: 90 });
var rfpagePvPNoArenaTicket = new Rerouter_1.Page('rfpagePvPNoArenaTicket', [
    { x: 496, y: 27, r: 255, g: 255, b: 255 },
    { x: 484, y: 26, r: 56, g: 167, b: 231 },
    { x: 317, y: 84, r: 243, g: 157, b: 69 },
    { x: 454, y: 161, r: 4, g: 151, b: 211 },
    { x: 457, y: 231, r: 4, g: 151, b: 211 },
    { x: 458, y: 303, r: 219, g: 207, b: 199 },
]);
var rfpageInSuperMayhem = new Rerouter_1.Page('rfpageInSuperMayhem', [
    { x: 451, y: 11, r: 255, g: 29, b: 134 },
    { x: 448, y: 19, r: 231, g: 207, b: 235 },
    { x: 353, y: 19, r: 255, g: 225, b: 76 },
    { x: 34, y: 135, r: 206, g: 132, b: 66 },
    { x: 32, y: 189, r: 197, g: 162, b: 184 },
]);
var rfpageNoMayhemTicket = new Rerouter_1.Page('rfpageNoMayhemTicket', [
    { x: 354, y: 283, r: 5, g: 126, b: 254 },
    { x: 391, y: 278, r: 121, g: 207, b: 12 },
    { x: 301, y: 275, r: 12, g: 167, b: 223 },
    { x: 344, y: 128, r: 52, g: 158, b: 228 },
    { x: 321, y: 137, r: 255, g: 29, b: 135 },
    { x: 319, y: 147, r: 254, g: 248, b: 254 },
    { x: 331, y: 11, r: 127, g: 14, b: 67 },
    { x: 407, y: 20, r: 125, g: 96, b: 5 },
    { x: 523, y: 19, r: 2, g: 66, b: 127 },
    { x: 510, y: 321, r: 120, g: 52, b: 86 },
    { x: 484, y: 331, r: 75, g: 108, b: 30 },
], { x: 269, y: 277 });
var rfpageSuperMayhemReadyToBattle = new Rerouter_1.Page('rfpageSuperMayhemReadyToBattle', [
    { x: 548, y: 329, r: 123, g: 207, b: 8 },
    { x: 505, y: 325, r: 255, g: 251, b: 255 },
    { x: 270, y: 334, r: 123, g: 207, b: 8 },
    { x: 304, y: 218, r: 255, g: 223, b: 24 },
], { x: 550, y: 325 });
var rfpageSuperMayhemReadyToBattleIntro = new Rerouter_1.Page('rfpageSuperMayhemReadyToBattleIntro', [
    { x: 609, y: 24, r: 4, g: 11, b: 15 },
    { x: 524, y: 17, r: 0, g: 52, b: 67 },
    { x: 405, y: 18, r: 67, g: 55, b: 0 },
    { x: 327, y: 21, r: 52, g: 48, b: 55 },
    { x: 86, y: 5, r: 33, g: 18, b: 23 },
    { x: 166, y: 13, r: 57, g: 66, b: 65 },
    { x: 214, y: 336, r: 32, g: 54, b: 3 },
    { x: 185, y: 334, r: 3, g: 44, b: 59 },
    { x: 501, y: 329, r: 132, g: 57, b: 109 },
    { x: 548, y: 320, r: 32, g: 54, b: 3 },
], { x: 606, y: 26 });
var rfpageInSuperMayhemIntro = new Rerouter_1.Page('rfpageInSuperMayhemIntro', [
    { x: 606, y: 26, r: 3, g: 2, b: 3 },
    { x: 405, y: 174, r: 255, g: 243, b: 238 },
    { x: 248, y: 164, r: 219, g: 209, b: 205 },
    { x: 524, y: 24, r: 3, g: 49, b: 67 },
    { x: 451, y: 12, r: 67, g: 8, b: 35 },
    { x: 449, y: 19, r: 61, g: 54, b: 62 },
    { x: 354, y: 15, r: 60, g: 47, b: 21 },
    { x: 282, y: 13, r: 15, g: 25, b: 46 },
    { x: 31, y: 135, r: 57, g: 36, b: 13 },
], { x: 606, y: 26 });
// TODO: page is wrong
var rfpageBattleTargetCanRefresh = new Rerouter_1.Page('rfpageBattleTargetCanRefresh', [
    { x: 532, y: 306, r: 12, g: 166, b: 223 },
    { x: 522, y: 304, r: 255, g: 255, b: 255 },
    { x: 541, y: 303, r: 12, g: 166, b: 223 },
    { x: 188, y: 328, r: 56, g: 167, b: 231 },
    { x: 18, y: 323, r: 56, g: 167, b: 231 },
    { x: 35, y: 78, r: 255, g: 221, b: 16 },
    { x: 25, y: 78, r: 255, g: 232, b: 0 },
    { x: 178, y: 118, r: 204, g: 119, b: 17 },
    { x: 28, y: 114, r: 251, g: 235, b: 199 },
    { x: 615, y: 302, r: 12, g: 166, b: 223 },
]);
var pvpStatus = {
    0: {
        battled: false,
        xy: { x: 288, y: 176 },
    },
    1: {
        battled: false,
        xy: { x: 418, y: 176 },
    },
    2: {
        battled: false,
        xy: { x: 548, y: 176 },
    },
    3: {
        battled: false,
        xy: { x: 430, y: 176 },
    },
    4: {
        battled: false,
        xy: { x: 560, y: 176 },
    },
};
function addPvpArenaRoutes() {
    // TASKS.pvpPurchaseAncientCookie
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInPVPMedalShop.name),
        match: rfpageInPVPMedalShop,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageInPVPMedalShop");
            if (context.task.name !== tasks_1.TASKS.pvpPurchaseAncientCookie) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            // Part of the rfpageInPVPMedalShop page
            var rfpagePVPAncientCookieSoldout = new Rerouter_1.Page('rfpagePVPAncientCookieSoldout', [
                { x: 86, y: 109, r: 206, g: 20, b: 24 },
                { x: 38, y: 131, r: 206, g: 20, b: 24 },
            ]);
            var rfpagePVPSuperEpicCookieSoldout = new Rerouter_1.Page('rfpagePVPSuperEpicCookieSoldout', [
                { x: 118, y: 127, r: 220, g: 23, b: 24 },
                { x: 170, y: 112, r: 206, g: 20, b: 24 },
                { x: 164, y: 98, r: 74, g: 76, b: 87 },
            ]);
            if (!Rerouter_1.rerouter.isPageMatchImage(rfpagePVPAncientCookieSoldout, image)) {
                Rerouter_1.rerouter.screen.tap({ x: 57, y: 125 });
                Rerouter_1.Utils.sleep(1000);
                Rerouter_1.rerouter.screen.tap({ x: 317, y: 260 });
                Rerouter_1.Utils.sleep(2000);
                (0, utils_1.logs)(context.task.name, "Purchased ancient cookie successfully");
            }
            else {
                (0, utils_1.logs)(context.task.name, "ancient cookie already sold out");
            }
            if (!Rerouter_1.rerouter.isPageMatchImage(rfpagePVPSuperEpicCookieSoldout, image)) {
                Rerouter_1.rerouter.screen.tap({ x: 145, y: 125 });
                Rerouter_1.Utils.sleep(1000);
                Rerouter_1.rerouter.screen.tap({ x: 317, y: 260 });
                Rerouter_1.Utils.sleep(2000);
                (0, utils_1.logs)(context.task.name, "Purchased super epic cookie successfully");
            }
            else {
                (0, utils_1.logs)(context.task.name, "super epic cookie already sold out");
            }
            (0, utils_1.sendKeyBack)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpagePVPNotEnoughMedal.name),
        match: rfpagePVPNotEnoughMedal,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.pvpPurchaseAncientCookie) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpagePVPNotEnoughMedal, Need more medals, skipping");
            Rerouter_1.rerouter.goNext(rfpagePVPNotEnoughMedal);
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    // TASKS.pvp
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInPVPArena.name),
        match: rfpageInPVPArena,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 3) !== tasks_1.TASKS.pvp) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageInPVPArena");
            switch (context.task.name) {
                case tasks_1.TASKS.pvp:
                    for (var i in pvpStatus) {
                        (0, utils_1.logs)(context.task.name, "rfpageInPVPArena, checking #".concat(i, " so tap ").concat(JSON.stringify(pvpStatus[i].xy), " and battled: ").concat(pvpStatus[i].battled));
                        if (!pvpStatus[i].battled) {
                            if (+i > 2) {
                                (0, helper_1.swipeFromToPoint)({ x: 600, y: 182 }, { x: 0, y: 182 }, 6);
                            }
                            storage_1.globalStorage.botStatus.battleStarted = 0;
                            Rerouter_1.rerouter.screen.tap(pvpStatus[i].xy);
                            pvpStatus[i].battled = true;
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            return;
                        }
                    }
                    if (Rerouter_1.rerouter.isPageMatch(rfpageBattleTargetCanRefresh)) {
                        (0, utils_1.logs)(context.task.name, "Tap PVP refresh");
                        Rerouter_1.rerouter.screen.tap({ x: 543, y: 303 });
                        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                        return;
                    }
                    else {
                        (0, utils_1.logs)(context.task.name, "Cannot tap PVP refresh, job done");
                        (0, utils_1.sendEventRunning)();
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                case tasks_1.TASKS.pvpPurchaseAncientCookie:
                    Rerouter_1.rerouter.screen.tap({ x: 178, y: 118 });
                    break;
                default:
                    (0, utils_1.logs)(context.task.name, "rfpageInPVPArena, leave because current task is not pvp related, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpagePvPNoArenaTicket.name),
        match: rfpagePvPNoArenaTicket,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.pvp) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpagePvPNoArenaTicket, send back and finish task");
            (0, utils_1.sendKeyBack)();
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpagePVPArenaReadyToBattlePage.name),
        match: rfpagePVPArenaReadyToBattlePage,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.pvp) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpagePVPArenaReadyToBattlePage, tap it");
            var ce = getCEs({ x: 496, y: 72, w: 70, h: 16 });
            if (ce < scriptConfig_1.config.autoPvPTargetScoreLimit && ce !== 0) {
                (0, utils_1.logs)(context.task.name, "Battle with ce ".concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoPvPTargetScoreLimit));
                Rerouter_1.rerouter.goNext(rfpagePVPArenaReadyToBattlePage); // tap Battle
                if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpagePVPArenaReadyToBattlePage, 2000)) {
                    return;
                }
            }
            else {
                (0, utils_1.logs)(context.task.name, "Not to battle with ce ".concat(ce, ", target exceed limit: ").concat(scriptConfig_1.config.autoPvPTargetScoreLimit));
                (0, utils_1.sendKeyBack)();
                sleep(2000);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpagePvPCrystaisRefresh.name),
        match: exports.rfpagePvPCrystaisRefresh,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpagePvPCrystaisRefresh, send back and finish round");
            (0, utils_1.sendKeyBack)();
            finishRound(true);
        },
    });
}
exports.addPvpArenaRoutes = addPvpArenaRoutes;
function addSuperMayhemRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInSuperMayhem.name),
        match: rfpageInSuperMayhem,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.superMayhem) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            var rfpageSuperMayhemCanRefresh = new Rerouter_1.Page('rfpageSuperMayhemCanRefresh', [
                { x: 516, y: 327, r: 255, g: 255, b: 255 },
                { x: 528, y: 326, r: 86, g: 82, b: 105 },
                { x: 541, y: 330, r: 153, g: 153, b: 153 },
                { x: 568, y: 330, r: 199, g: 199, b: 199 },
            ]);
            (0, utils_1.logs)(context.task.name, "in rfpageInSuperMayhem");
            var battleY = [75, 160, 250];
            var scores = (0, helper_1.getMayhemScores)();
            (0, utils_1.logs)(context.task.name, "super mayhem scores: ".concat(JSON.stringify(scores)));
            for (var i = 0; i < scores.length; i++) {
                var ce = scores[i];
                if (ce < scriptConfig_1.config.autoSuperMayhemTargetScoreLimit && ce !== 0) {
                    if (!Rerouter_1.rerouter.screen.isSameColor({ x: 590, y: battleY[i], r: 121, g: 207, b: 16 })) {
                        (0, utils_1.logs)(context.task.name, "Already Battled with ".concat(i, ", ce ").concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoSuperMayhemTargetScoreLimit));
                        continue;
                    }
                    (0, utils_1.logs)(context.task.name, "Battle with ".concat(i, ", ce ").concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoSuperMayhemTargetScoreLimit));
                    Rerouter_1.rerouter.screen.tap({ x: 590, y: battleY[i] }); // tap Battle
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageSuperMayhemReadyToBattle, 3000)) {
                        Rerouter_1.rerouter.goNext(rfpageSuperMayhemReadyToBattle);
                        storage_1.globalStorage.botStatus.battleStarted = 0;
                        return;
                    }
                    (0, utils_1.logs)(context.task.name, "Failed to find rfpageSuperMayhemReadyToBattle in 3 secs, skipping this one");
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Not to battle with ".concat(i, ", ce ").concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoSuperMayhemTargetScoreLimit));
                }
            }
            if (Rerouter_1.rerouter.isPageMatch(rfpageSuperMayhemCanRefresh)) {
                (0, utils_1.logs)(context.task.name, "Tap Super mayhem refresh");
                Rerouter_1.rerouter.screen.tap({ x: 532, y: 329 });
            }
            else {
                (0, utils_1.logs)(context.task.name, "Cannot tap Super mayhem refresh, job done");
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageNoMayhemTicket.name),
        match: rfpageNoMayhemTicket,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.superMayhem) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageNoMayhemTicket, send back and finish task");
            (0, utils_1.sendKeyBack)();
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    (0, helper_1.passiveAddRoute)([
        // Marked as page conflict in fountain when stock is full ["rfpageInSuperMayhemIntro","rfpageStockIsFull"]
        // rfpageInSuperMayhemIntro,
        rfpageSuperMayhemReadyToBattleIntro,
        rfpagePVPArenaTeamSetup,
    ]);
}
exports.addSuperMayhemRoutes = addSuperMayhemRoutes;
function addPvpPurchaseTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.pvpPurchaseAncientCookie,
        maxTaskDuring: 4 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoPvPIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addPvpPurchaseTask = addPvpPurchaseTask;
function addPvpArenaTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.pvp,
        maxTaskDuring: 9 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoPvPIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(pvpStatus, {
                0: {
                    battled: false,
                    xy: { x: 288, y: 176 },
                },
                1: {
                    battled: false,
                    xy: { x: 418, y: 176 },
                },
                2: {
                    battled: false,
                    xy: { x: 548, y: 176 },
                },
                3: {
                    battled: false,
                    xy: { x: 430, y: 176 },
                },
                4: {
                    battled: false,
                    xy: { x: 560, y: 176 },
                },
            });
        },
    });
}
exports.addPvpArenaTask = addPvpArenaTask;
function addSuperMayhemTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.superMayhem,
        maxTaskDuring: 9 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoSuperMayhemIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addSuperMayhemTask = addSuperMayhemTask;
function getCEs(rect) {
    var img = getScreenshot();
    var croppedImage1 = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    var value1 = +(0, helper_1.recognizeWishingTreeRequirements)(ICONS.numberImagesPvP, croppedImage1, 7, 0.75, 0.7) || 0;
    releaseImage(croppedImage1);
    releaseImage(img);
    return value1;
}


/***/ }),

/***/ "./src/tasks/tradeHabor.ts":
/*!*********************************!*\
  !*** ./src/tasks/tradeHabor.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addShellGalleryTask = exports.addSeasideMarketTask = exports.addSendHaborShipTask = exports.addTradeHaborRoutes = exports.rfpageShellShopNotEnoughShell = exports.rfpageConfirmBuyEpicSoulEssence = exports.rfpageConfirmBuyGuildRelics = exports.rfpageConfirmBuyLegendSoulStone = exports.rfpageNotEnoughItemToBuyThis = exports.rfpageMarketItemDetail = exports.rfpageInTradeHabor = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var types_1 = __webpack_require__(/*! ../types */ "./src/types.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
exports.rfpageInTradeHabor = new Rerouter_1.Page('rfpageInTradeHabor', [
    { x: 314, y: 18, r: 247, g: 254, b: 203 },
    { x: 404, y: 20, r: 243, g: 232, b: 12 },
    { x: 519, y: 21, r: 0, g: 178, b: 255 },
    { x: 34, y: 222, r: 255, g: 235, b: 206 },
    // { x: 96, y: 229, r: 132, g: 120, b: 32 },  // got from Memu
    { x: 106, y: 219, r: 220, g: 117, b: 0 },
    { x: 613, y: 261, r: 57, g: 166, b: 231 },
]);
var rfpageShipInHabor = new Rerouter_1.Page('rfpageShipInHabor', [
    { x: 418, y: 212, r: 55, g: 34, b: 22 },
    { x: 609, y: 211, r: 176, g: 133, b: 66 },
    { x: 585, y: 229, r: 123, g: 78, b: 44 },
]);
var rfpageNoShipInHabor = new Rerouter_1.Page('rfpageNoShipInHabor', [
    { x: 246, y: 66, r: 255, g: 12, b: 82 },
    { x: 233, y: 88, r: 249, g: 242, b: 212 },
    { x: 255, y: 138, r: 126, g: 114, b: 41 },
]);
var rfpageCanLoadThisItem = new Rerouter_1.Page('rfpageCanLoadThisItem', [
    { x: 424, y: 201, r: 59, g: 205, b: 0 },
    { x: 351, y: 246, r: 123, g: 207, b: 8 },
    { x: 414, y: 242, r: 222, g: 207, b: 198 },
    { x: 433, y: 309, r: 57, g: 69, b: 107 },
], { x: 434, y: 50 });
var rfpageLoadTooMuchWarning = new Rerouter_1.Page('rfpageLoadTooMuchWarning', [
    { x: 400, y: 252, r: 123, g: 207, b: 8 },
    { x: 304, y: 253, r: 8, g: 166, b: 222 },
    { x: 436, y: 288, r: 27, g: 33, b: 51 },
    { x: 260, y: 55, r: 28, g: 34, b: 53 },
]);
var rfpageInSeasideMarket = new Rerouter_1.Page('rfpageInSeasideMarket', [
    { x: 617, y: 21, r: 255, g: 255, b: 255 },
    { x: 566, y: 183, r: 114, g: 76, b: 32 },
    { x: 256, y: 121, r: 101, g: 151, b: 23 },
    { x: 280, y: 5, r: 206, g: 227, b: 49 },
    { x: 178, y: 117, r: 247, g: 52, b: 90 },
]);
var rfpageFreeRefreshSeasideMarket = new Rerouter_1.Page('rfpageFreeRefreshSeasideMarket', [
    { x: 510, y: 333, r: 155, g: 155, b: 155 },
    { x: 504, y: 333, r: 172, g: 146, b: 126 },
    { x: 498, y: 333, r: 148, g: 120, b: 111 },
    { x: 494, y: 333, r: 175, g: 148, b: 117 },
]);
var rfpageNeedDiamondRefreshMarket = new Rerouter_1.Page('rfpageNeedDiamondRefreshMarket', [
    { x: 426, y: 110, r: 57, g: 169, b: 231 },
    { x: 305, y: 102, r: 255, g: 255, b: 255 },
    { x: 363, y: 118, r: 57, g: 69, b: 107 },
    { x: 297, y: 124, r: 33, g: 44, b: 66 },
], { x: 426, y: 110 });
exports.rfpageMarketItemDetail = new Rerouter_1.Page('rfpageMarketItemDetail', [
    { x: 384, y: 261, r: 205, g: 194, b: 186 },
    { x: 376, y: 236, r: 222, g: 207, b: 198 },
    { x: 378, y: 204, r: 247, g: 235, b: 222 },
    { x: 366, y: 84, r: 57, g: 69, b: 107 },
    { x: 447, y: 87, r: 57, g: 170, b: 231 },
    { x: 261, y: 15, r: 103, g: 113, b: 24 },
    { x: 214, y: 51, r: 90, g: 59, b: 33 },
], { x: 348, y: 265 });
exports.rfpageNotEnoughItemToBuyThis = new Rerouter_1.Page('rfpageNotEnoughItemToBuyThis', [
    { x: 441, y: 95, r: 181, g: 198, b: 209 },
    { x: 378, y: 108, r: 57, g: 69, b: 107 },
    { x: 340, y: 159, r: 9, g: 67, b: 86 },
    { x: 429, y: 132, r: 247, g: 235, b: 222 },
    { x: 447, y: 126, r: 127, g: 121, b: 123 },
    { x: 298, y: 7, r: 109, g: 116, b: 28 },
    { x: 105, y: 26, r: 8, g: 48, b: 28 },
    { x: 585, y: 87, r: 119, g: 125, b: 119 },
], { x: 434, y: 95 });
var rfpageInShellShop = new Rerouter_1.Page('rfpageInShellShop', [
    { x: 609, y: 22, r: 57, g: 166, b: 231 },
    { x: 323, y: 28, r: 247, g: 181, b: 243 },
    { x: 272, y: 28, r: 200, g: 212, b: 214 },
    { x: 254, y: 12, r: 231, g: 199, b: 156 },
]);
exports.rfpageConfirmBuyLegendSoulStone = new Rerouter_1.Page('rfpageConfirmBuyLegendSoulStone', [
    { x: 154, y: 315, r: 60, g: 103, b: 6 },
    { x: 89, y: 314, r: 124, g: 94, b: 119 },
    { x: 245, y: 86, r: 57, g: 69, b: 107 },
    { x: 235, y: 242, r: 222, g: 207, b: 198 },
    { x: 318, y: 15, r: 125, g: 103, b: 117 },
    { x: 410, y: 19, r: 127, g: 95, b: 4 },
    { x: 287, y: 16, r: 119, g: 111, b: 117 },
    { x: 271, y: 30, r: 99, g: 105, b: 103 },
    { x: 334, y: 260, r: 121, g: 207, b: 12 },
], { x: 334, y: 260 });
exports.rfpageConfirmBuyGuildRelics = new Rerouter_1.Page('rfpageConfirmBuyGuildRelics', [
    { x: 337, y: 67, r: 155, g: 95, b: 43 },
    { x: 325, y: 77, r: 207, g: 122, b: 64 },
    { x: 319, y: 18, r: 121, g: 97, b: 118 },
    { x: 369, y: 89, r: 60, g: 70, b: 105 },
    { x: 362, y: 318, r: 113, g: 117, b: 111 },
    { x: 424, y: 317, r: 60, g: 103, b: 6 },
    { x: 364, y: 84, r: 60, g: 70, b: 105 },
], { x: 319, y: 236 });
var rfpageConfirmBuyLegendSoulEssence = new Rerouter_1.Page('rfpageConfirmBuyLegendSoulEssence', [
    { x: 344, y: 255, r: 121, g: 207, b: 12 },
    { x: 307, y: 261, r: 249, g: 189, b: 238 },
    { x: 330, y: 77, r: 249, g: 249, b: 249 },
    { x: 321, y: 95, r: 218, g: 182, b: 235 },
    { x: 275, y: 84, r: 60, g: 70, b: 105 },
    { x: 317, y: 19, r: 124, g: 114, b: 107 },
], { x: 302, y: 254 });
exports.rfpageConfirmBuyEpicSoulEssence = new Rerouter_1.Page('rfpageConfirmBuyEpicSoulEssence', [
    { x: 326, y: 184, r: 228, g: 218, b: 209 },
    { x: 312, y: 263, r: 202, g: 202, b: 224 },
    { x: 353, y: 255, r: 113, g: 194, b: 11 },
    { x: 327, y: 81, r: 239, g: 207, b: 233 },
    { x: 320, y: 91, r: 239, g: 32, b: 159 },
    { x: 345, y: 92, r: 34, g: 43, b: 60 },
], { x: 312, y: 253 });
exports.rfpageShellShopNotEnoughShell = new Rerouter_1.Page('rfpageShellShopNotEnoughShell', [
    { x: 351, y: 243, r: 121, g: 207, b: 12 },
    { x: 320, y: 180, r: 246, g: 200, b: 229 },
    { x: 327, y: 194, r: 248, g: 180, b: 243 },
    { x: 337, y: 183, r: 207, g: 193, b: 182 },
    { x: 342, y: 158, r: 52, g: 158, b: 228 },
    { x: 318, y: 107, r: 60, g: 70, b: 105 },
    { x: 271, y: 32, r: 102, g: 103, b: 95 },
    { x: 257, y: 14, r: 113, g: 98, b: 76 },
    { x: 38, y: 7, r: 109, g: 78, b: 94 },
]);
var seasideMarketStatus = {
    needPullToRightHead: true,
    rareItems: [],
    rightSlideCount: 0,
    rightSlideLimit: scriptConfig_1.config.autoShopInSeasideMarket ? 5 : 0,
    needToBuyRadiantShard: scriptConfig_1.config.autoBuyRadiantShardsInHabor,
    purchaseIndex: 0,
    foundResults: undefined,
    foundIndex: 0,
    nowHave: 0,
};
if (scriptConfig_1.config.autoBalanceAuroraStocks) {
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[0]);
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[1]);
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[2]);
}
if (scriptConfig_1.config.autoBuyCaramelStuff) {
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[3]);
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[4]);
}
var shellGalleryStatus = {
    autoBuySeaFairy: scriptConfig_1.config.autoBuySeaFairy,
    autoBuyEpicSoulEssence: scriptConfig_1.config.autoBuyEpicSoulEssence,
    autoBuyLegendSoulEssence: scriptConfig_1.config.autoBuyLegendSoulEssence,
    autoBuyGuildRelic: scriptConfig_1.config.autoBuyGuildRelic,
};
function addTradeHaborRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInTradeHabor.name),
        match: exports.rfpageInTradeHabor,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.findAndTapCandy) {
                (0, utils_1.logs)(context.task.name, "rfpageInTradeHabor, but current task is ".concat(context.task.name, ", need to start over"));
                (0, utils_1.sendKeyBack)();
                // TODO: if findAndTapCandy moved, need to changed
                // cookieKingdom!.taskStatus[TASKS.findAndTapCandy]['needGotoHead'] = true;
                return;
            }
            else if (context.task.name.substring(0, 5) !== 'habor') {
                (0, utils_1.logs)(context.task.name, "rfpageInTradeHabor, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageInTradeHabor");
            switch (context.task.name) {
                case tasks_1.TASKS.haborSendShip:
                    if (Rerouter_1.rerouter.isPageMatchImage(rfpageNoShipInHabor, image)) {
                        (0, utils_1.logs)(context.task.name, "No ship in habor, finish ".concat(context.task.name));
                        (0, utils_1.sendEventRunning)();
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                    var i = 0;
                    var shipInHabor = true;
                    for (i = 0; i < 5 && shipInHabor; i++) {
                        for (var xPixel = i === 0 ? 55 : 200; xPixel < 620; xPixel += 60) {
                            Rerouter_1.rerouter.screen.tap({ x: xPixel, y: 318 });
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                            if (Rerouter_1.rerouter.isPageMatch(rfpageCanLoadThisItem)) {
                                (0, utils_1.logs)(context.task.name, "can load the item at x: ".concat(xPixel));
                                Rerouter_1.rerouter.screen.tap({ x: 408, y: 202 }); // tap Max
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                                Rerouter_1.rerouter.screen.tap({ x: 342, y: 240 }); // tap load
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            }
                            if (Rerouter_1.rerouter.isPageMatch(rfpageLoadTooMuchWarning)) {
                                Rerouter_1.rerouter.screen.tap({ x: 270, y: 252 }); // Cancel ship confirm
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 270, y: 200 }); // tap minus icon
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 320, y: 240 }); // tap load
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            }
                            if (Rerouter_1.rerouter.isPageMatch(rfpageLoadTooMuchWarning)) {
                                //Even one item is too much
                                Rerouter_1.rerouter.screen.tap({ x: 270, y: 252 }); // Cancel ship confirm
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 434, y: 50 }); // tap close icon
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 320, y: 240 }); // tap load
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                            }
                            if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageNoShipInHabor, 3000)) {
                                (0, utils_1.logs)(context.task.name, "Send the ship successfully");
                                shipInHabor = false;
                                break;
                            }
                        }
                        if (Rerouter_1.rerouter.isPageMatch(rfpageNoShipInHabor)) {
                            break;
                        }
                        (0, helper_1.swipeFromToPoint)({ x: 629, y: 319 }, { x: 200, y: 319 }, 5);
                    }
                    return;
                case tasks_1.TASKS.haborShopInSeaMarket:
                    Rerouter_1.rerouter.screen.tap({ x: 95, y: 230 });
                    return;
                case tasks_1.TASKS.haborShopInShellGallery:
                    Rerouter_1.rerouter.screen.tap({ x: 32, y: 226 });
                    return;
                default:
                    console.log('donno what to do in rfpageInTradeHabor, send back');
                    (0, utils_1.sendKeyBack)();
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInSeasideMarket.name),
        match: rfpageInSeasideMarket,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.haborShopInSeaMarket) {
                (0, utils_1.logs)(context.task.name, "rfpageInSeasideMarket, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "In seaside marketing, send running, task status is: ".concat(JSON.stringify(seasideMarketStatus)));
            (0, utils_1.sendEventRunning)();
            var marketSearchArea = { x: 0, y: 180, w: 630, h: 140 };
            if (Rerouter_1.rerouter.isPageMatch(rfpageFreeRefreshSeasideMarket)) {
                Rerouter_1.rerouter.screen.tap({ x: 543, y: 336 }); // market free refresh, no need to pull to the head of the list as refresh will reset the list
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageNeedDiamondRefreshMarket, 3000)) {
                    Rerouter_1.rerouter.goNext(rfpageNeedDiamondRefreshMarket);
                    Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                }
            }
            else if (seasideMarketStatus.needPullToRightHead) {
                // swipe to start of the list
                (0, helper_1.swipeFromToPoint)({ x: 0, y: 234 }, { x: 4000, y: 234 }, 6, undefined, rfpageInSeasideMarket);
                seasideMarketStatus.needPullToRightHead = false;
            }
            var rfpage1stAuroraSoldOut = new Rerouter_1.Page('rfpage1stAuroraSoldOut', [{ x: 59, y: 262, r: 206, g: 20, b: 24 }]);
            var rfpage2ndAuroraSoldOut = new Rerouter_1.Page('rfpage2ndAuroraSoldOut', [{ x: 150, y: 257, r: 239, g: 24, b: 24 }]);
            var rfpage3rdAuroraSoldOut = new Rerouter_1.Page('rfpage3rdAuroraSoldOut', [{ x: 247, y: 260, r: 206, g: 20, b: 24 }]);
            var rfpageCarmelMapMax = new Rerouter_1.Page('rfpageCarmelMapMax', [
                { x: 339, y: 291, r: 196, g: 130, b: 72 },
                { x: 333, y: 289, r: 157, g: 91, b: 36 },
                { x: 324, y: 294, r: 148, g: 219, b: 57 },
            ]);
            var rfpageCarmeScopeMax = new Rerouter_1.Page('rfpageCarmeScopeMax', [
                { x: 431, y: 291, r: 255, g: 166, b: 73 },
                { x: 423, y: 296, r: 138, g: 199, b: 178 },
                { x: 416, y: 294, r: 148, g: 215, b: 57 },
            ]);
            // Remove sold out aurora items
            // TODO: double confirm
            if (scriptConfig_1.config.autoBalanceAuroraStocks && seasideMarketStatus.rareItems.length > 0) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpage1stAuroraSoldOut, image)) {
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 66; });
                }
                if (Rerouter_1.rerouter.isPageMatchImage(rfpage2ndAuroraSoldOut, image)) {
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 158; });
                }
                if (Rerouter_1.rerouter.isPageMatchImage(rfpage3rdAuroraSoldOut, image)) {
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 253; });
                }
            }
            // Market will remove Carmel map/scope back from the shopping list if it is fulled
            if (scriptConfig_1.config.autoBuyCaramelStuff && seasideMarketStatus.rareItems.length > 0) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageCarmelMapMax, image)) {
                    // seamarketState.rareItems = seamarketState.rareItems.filter(obj => obj.x !== 346);
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 346; });
                }
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageCarmeScopeMax, image)) {
                    // seamarketState.rareItems = seamarketState.rareItems.filter(obj => obj.x !== 439);
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 439; });
                }
            }
            if (seasideMarketStatus.rareItems.length > 0) {
                console.log('>> considerPurchaseSeasideMarket:', considerPurchaseSeasideMarket(seasideMarketStatus.rareItems.shift()));
                return;
            }
            if (seasideMarketStatus.needToBuyRadiantShard) {
                (0, utils_1.logs)(context.task.name, 'Purchasing radiant shard');
                Rerouter_1.rerouter.screen.tap({ x: 540, y: 270 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                Rerouter_1.rerouter.screen.tap({ x: 315, y: 265 });
                Rerouter_1.Utils.sleep(2000);
                seasideMarketStatus.needToBuyRadiantShard = false;
            }
            // for i = rightSlideCount < rightSlideLimit
            // for j = purchaseIndex < Object.keys(ICONS.iconSeasideMarketItems)
            // for k = foundIndex < Object.keys(foundResults)
            console.log('>> 1, consider slide to right', JSON.stringify(seasideMarketStatus));
            if (seasideMarketStatus.rightSlideCount >= seasideMarketStatus.rightSlideLimit) {
                (0, utils_1.logs)(context.task.name, "Jobs finish");
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            console.log('>> 2, loop through shopping list', JSON.stringify(seasideMarketStatus));
            if (seasideMarketStatus.purchaseIndex >= Object.keys(ICONS.iconSeasideMarketItems).length) {
                seasideMarketStatus.rightSlideCount++;
                seasideMarketStatus.purchaseIndex = 0;
                (0, helper_1.swipeFromToPoint)({ x: 600, y: 234 }, { x: 0, y: 234 }, 6, undefined, rfpageInSeasideMarket);
                sleep(2000);
                seasideMarketStatus.foundResults = undefined;
                return;
            }
            console.log('>> 3, go find next item as seasideMarketStatus.foundResults finished', JSON.stringify(seasideMarketStatus));
            if (seasideMarketStatus.foundResults && seasideMarketStatus.foundIndex >= Object.keys(seasideMarketStatus.foundResults).length) {
                seasideMarketStatus.purchaseIndex++;
                seasideMarketStatus.foundResults = undefined;
                return;
            }
            if (seasideMarketStatus.foundResults === undefined || Object.keys(seasideMarketStatus.foundResults).length === 0) {
                console.log('>> 3.1, look for next item in shopping list', JSON.stringify(seasideMarketStatus));
                for (var i = seasideMarketStatus.purchaseIndex; i < Object.keys(ICONS.iconSeasideMarketItems).length; i++) {
                    console.log('>> 3.2, checking item: ', i, JSON.stringify(seasideMarketStatus));
                    seasideMarketStatus.foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketItems[i], marketSearchArea);
                    seasideMarketStatus.foundIndex = 0;
                    seasideMarketStatus.purchaseIndex = i;
                    if (Object.keys(seasideMarketStatus.foundResults).length > 0) {
                        console.log('>> 3.3 found ith item', JSON.stringify(seasideMarketStatus));
                        break;
                    }
                }
                if (Object.keys(seasideMarketStatus.foundResults).length === 0) {
                    return;
                }
            }
            console.log(">> 4 consider to purchase ".concat(ICONS.iconSeasideMarketItems[seasideMarketStatus.purchaseIndex].name, ", state: ").concat(JSON.stringify(seasideMarketStatus), ", result: ").concat(considerPurchaseSeasideMarket({
                x: marketSearchArea.x + seasideMarketStatus.foundResults[seasideMarketStatus.foundIndex].x,
                y: 282,
                w: 62,
                h: 18,
            })));
            sleep(1000);
            seasideMarketStatus.foundIndex++;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageMarketItemDetail.name),
        match: exports.rfpageMarketItemDetail,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 5) !== 'habor') {
                (0, utils_1.logs)(context.task.name, "rfpageInSeasideMarket, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageMarketItemDetail, handle it");
            // 讀這個東西現在有多少
            var targetItemAmount = (0, helper_1.ocrNumberInRect)({ x: 330, y: 154, w: 28, h: 14 }, ICONS.bNumbers);
            if (targetItemAmount === -1) {
                (0, utils_1.logs)(context.task.name, "About to purchase ".concat(ICONS.iconSeasideMarketItems[seasideMarketStatus.purchaseIndex].name, " but found ").concat(targetItemAmount, " (OCR failure), skip this one"));
                (0, utils_1.sendKeyBack)();
            }
            // 與手上相比
            var itemType = checkIfNeedSkipThisSpecialItems();
            (0, utils_1.logs)('rfpageMarketItemDetail', "Considering trade ".concat(seasideMarketStatus.nowHave, " (type '").concat(itemType, "') for ").concat(targetItemAmount));
            if (itemType === types_1.SeasideMarketItemType.mustSkip) {
                (0, utils_1.logs)('rfpageMarketItemDetail', "The required item is a SeasideMarketItemType.mustSkip, skip this one");
                (0, utils_1.sendKeyBack)();
                return;
            }
            else if (itemType === types_1.SeasideMarketItemType.compareAmount) {
                if (seasideMarketStatus.nowHave > targetItemAmount) {
                    (0, utils_1.logs)('rfpageMarketItemDetail', "Decided to use ".concat(seasideMarketStatus.nowHave, " to buy ").concat(targetItemAmount));
                    Rerouter_1.rerouter.goNext(exports.rfpageMarketItemDetail);
                    sleep(1000);
                    return;
                }
                else {
                    (0, utils_1.logs)('rfpageMarketItemDetail', "Decided NOT to use ".concat(seasideMarketStatus.nowHave, " to buy ").concat(targetItemAmount));
                    Rerouter_1.rerouter.screen.tap({ x: 438, y: 90 }); // close the window
                    return;
                }
            }
            else if (itemType === types_1.SeasideMarketItemType.buyAnyway) {
                (0, utils_1.logs)('rfpageMarketItemDetail', "Decided to use ".concat(seasideMarketStatus.nowHave, " to buy ").concat(targetItemAmount, " (buyAnyway)"));
                Rerouter_1.rerouter.goNext(exports.rfpageMarketItemDetail);
                sleep(1000);
                return;
            }
            else {
                (0, utils_1.logs)(context.task.name, "Don't do anything as cannot resolve itemType");
                (0, utils_1.sendKeyBack)();
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageNotEnoughItemToBuyThis.name),
        match: exports.rfpageNotEnoughItemToBuyThis,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageNotEnoughItemToBuyThis, send back twice");
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInShellShop.name),
        match: rfpageInShellShop,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== 'haborShopInShellGallery') {
                (0, utils_1.logs)(context.task.name, "rfpageInShellShop, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            var rfpageLegendarySoldOut = new Rerouter_1.Page('rfpageLegendarySoldOut', [
                { x: 84, y: 226, r: 207, g: 22, b: 24 },
                { x: 148, y: 196, r: 207, g: 22, b: 24 },
            ]);
            if (shellGalleryStatus.autoBuySeaFairy) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageLegendarySoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased legendary cookie successfully");
                    shellGalleryStatus.autoBuySeaFairy = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing legendary cookie");
                    Rerouter_1.rerouter.screen.tap({ x: 80, y: 313 });
                    return;
                }
            }
            var rfpageRelicSoldOut = new Rerouter_1.Page('rfpageRelicSoldOut', [
                { x: 414, y: 242, r: 126, g: 0, b: 1 },
                { x: 393, y: 253, r: 207, g: 22, b: 24 },
                { x: 407, y: 262, r: 107, g: 107, b: 107 },
                { x: 398, y: 285, r: 139, g: 139, b: 139 },
            ]);
            if (shellGalleryStatus.autoBuyGuildRelic) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageRelicSoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased guild relic successfully");
                    shellGalleryStatus.autoBuyGuildRelic = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing guild relic");
                    Rerouter_1.rerouter.screen.tap({ x: 360, y: 313 });
                    return;
                }
            }
            var rfpageLegendSoulEssenceSoldOut = new Rerouter_1.Page('rfpageLegendSoulEssenceSoldOut', [
                { x: 292, y: 118, r: 205, g: 22, b: 27 },
                { x: 277, y: 140, r: 246, g: 255, b: 255 },
            ]);
            if (shellGalleryStatus.autoBuyLegendSoulEssence) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageLegendSoulEssenceSoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased legend soul essence successfully");
                    shellGalleryStatus.autoBuyLegendSoulEssence = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing legend soul essence");
                    Rerouter_1.rerouter.screen.tap({ x: 270, y: 192 });
                    return;
                }
            }
            var rfpageEpicSoulEssenceSoldOut = new Rerouter_1.Page('rfpageEpicSoulEssenceSoldOut', [
                { x: 293, y: 241, r: 206, g: 20, b: 24 },
                { x: 274, y: 263, r: 247, g: 138, b: 247 },
            ]);
            if (shellGalleryStatus.autoBuyEpicSoulEssence) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageEpicSoulEssenceSoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased epic soul essence successfully");
                    shellGalleryStatus.autoBuyEpicSoulEssence = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing epic soul essence");
                    Rerouter_1.rerouter.screen.tap({ x: 310, y: 277 });
                    return;
                }
            }
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
            (0, utils_1.sendKeyBack)();
            (0, utils_1.sendEventRunning)();
            (0, utils_1.logs)(context.task.name, "".concat(context.path, " finishRound"));
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageShellShopNotEnoughShell.name),
        match: exports.rfpageShellShopNotEnoughShell,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageShellShopNotEnoughShell, send back twice and finishRound");
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
            finishRound(true);
        },
    });
    (0, helper_1.passiveAddRoute)([exports.rfpageConfirmBuyLegendSoulStone, exports.rfpageConfirmBuyGuildRelics, rfpageConfirmBuyLegendSoulEssence, exports.rfpageConfirmBuyEpicSoulEssence]);
}
exports.addTradeHaborRoutes = addTradeHaborRoutes;
function addSendHaborShipTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.haborSendShip,
        maxTaskDuring: 10 * CONSTANTS.minuteInMs,
        minRoundInterval: 120 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addSendHaborShipTask = addSendHaborShipTask;
function addSeasideMarketTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.haborShopInSeaMarket,
        maxTaskDuring: 15 * CONSTANTS.minuteInMs,
        minRoundInterval: 120 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(seasideMarketStatus, {
                needPullToRightHead: true,
                rareItems: [],
                rightSlideCount: 0,
                rightSlideLimit: scriptConfig_1.config.autoShopInSeasideMarket ? 5 : 0,
                needToBuyRadiantShard: scriptConfig_1.config.autoBuyRadiantShardsInHabor,
                purchaseIndex: 0,
                foundResults: undefined,
                foundIndex: 0,
                nowHave: 0,
            });
            if (scriptConfig_1.config.autoBalanceAuroraStocks) {
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[0]);
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[1]);
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[2]);
            }
            if (scriptConfig_1.config.autoBuyCaramelStuff) {
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[3]);
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[4]);
            }
        },
    });
}
exports.addSeasideMarketTask = addSeasideMarketTask;
function addShellGalleryTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.haborShopInShellGallery,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(shellGalleryStatus, {
                autoBuySeaFairy: scriptConfig_1.config.autoBuySeaFairy,
                autoBuyEpicSoulEssence: scriptConfig_1.config.autoBuyEpicSoulEssence,
                autoBuyLegendSoulEssence: scriptConfig_1.config.autoBuyLegendSoulEssence,
                autoBuyGuildRelic: scriptConfig_1.config.autoBuyGuildRelic,
            });
        },
    });
}
exports.addShellGalleryTask = addShellGalleryTask;
function considerPurchaseSeasideMarket(target) {
    var newStock = (0, helper_1.ocrStocksInRect)(target, ICONS.numberAuroraStockInTradeBird);
    var newStock2 = (0, helper_1.ocrStockAndReqInRect)(target, ICONS.numberAuroraStockInTradeBird);
    (0, utils_1.logs)('haborShopInSeaMarket', "considerPurchaseSeasideMarket, ocr1 got '".concat(newStock, "', ocr2 got '").concat(newStock2, "', target area: '").concat(JSON.stringify(target), "'"));
    if (newStock > 50) {
        (0, utils_1.logs)('haborShopInSeaMarket', "Try to buy as ".concat(newStock, " > 50"));
        seasideMarketStatus.nowHave = newStock;
        Rerouter_1.rerouter.screen.tap(target);
        return true;
    }
    (0, utils_1.logs)('haborShopInSeaMarket', "skip as OCR failed / condition not met");
    return false;
}
function checkIfNeedSkipThisSpecialItems() {
    if (!Rerouter_1.rerouter.isPageMatch(exports.rfpageMarketItemDetail)) {
        (0, utils_1.logs)('checkSeasideMarketSpecialItems', "Skip as we are not in rfpageMarketItemDetail");
        return types_1.SeasideMarketItemType.others;
    }
    var itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailBeans, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.mustSkip;
    }
    itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailAuroraCompass, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.compareAmount;
    }
    itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailAuroraColumn, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.compareAmount;
    }
    itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailAuroraBrick, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.compareAmount;
    }
    return types_1.SeasideMarketItemType.buyAnyway;
}


/***/ }),

/***/ "./src/tasks/tropicalIsland.ts":
/*!*************************************!*\
  !*** ./src/tasks/tropicalIsland.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addTropicalIslandTasks = exports.addTropicalIslandRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var rfpageInTropicalIsland = new Rerouter_1.Page('rfpageInTropicalIsland', [
    { x: 38, y: 333, r: 255, g: 97, b: 173 },
    { x: 49, y: 323, r: 239, g: 77, b: 140 },
    { x: 62, y: 341, r: 44, g: 81, b: 118 },
]);
var rfpageReadyToClearRedSword = new Rerouter_1.Page('rfpageReadyToClearRedSword', [
    { x: 531, y: 324, r: 121, g: 207, b: 12 },
    { x: 456, y: 28, r: 241, g: 53, b: 60 },
    { x: 494, y: 23, r: 252, g: 246, b: 216 },
    { x: 572, y: 327, r: 60, g: 70, b: 105 },
], { x: 531, y: 324 });
var rfpageBattleToClearSodaIsland = new Rerouter_1.Page('rfpageBattleToClearSodaIsland', [
    { x: 601, y: 326, r: 121, g: 207, b: 12 },
    { x: 623, y: 313, r: 60, g: 70, b: 105 },
    { x: 573, y: 84, r: 254, g: 253, b: 251 },
    { x: 165, y: 335, r: 121, g: 207, b: 12 },
    { x: 297, y: 83, r: 82, g: 215, b: 0 },
    { x: 426, y: 74, r: 255, g: 36, b: 33 },
], { x: 601, y: 326 });
var rfpageEmptySunbedsListInMiddle = new Rerouter_1.Page('rfpageEmptySunbedsListInMiddle', [
    { x: 217, y: 60, r: 133, g: 231, b: 74 },
    { x: 229, y: 132, r: 44, g: 46, b: 60 },
    { x: 247, y: 52, r: 57, g: 69, b: 107 },
    { x: 226, y: 82, r: 165, g: 60, b: 90 },
    { x: 428, y: 19, r: 2, g: 67, b: 127 },
    { x: 47, y: 328, r: 119, g: 40, b: 67 },
], { x: 437, y: 57 });
var tropicalIslandStatus = {
    iconRedExclamationCount: 0,
};
function addTropicalIslandRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInTropicalIsland.name),
        match: rfpageInTropicalIsland,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 14) !== 'tropicalIsland') {
                (0, utils_1.sendKeyBack)();
                return;
            }
            switch (context.task.name) {
                case tasks_1.TASKS.tropicalIslandShip:
                    (0, utils_1.logs)(context.task.name, "in rfpageInTropicalIsland, check the ship status");
                    var rfpageCanClaimResource = new Rerouter_1.Page('rfpageCanClaimResource', [
                        { x: 307, y: 333, r: 123, g: 207, b: 8 },
                        { x: 363, y: 331, r: 123, g: 207, b: 8 },
                        { x: 33, y: 332, r: 255, g: 100, b: 176 },
                    ], { x: 360, y: 333 });
                    if (Rerouter_1.rerouter.isPageMatchImage(rfpageCanClaimResource, image)) {
                        Rerouter_1.rerouter.goNext(rfpageCanClaimResource);
                        (0, utils_1.logs)(context.task.name, "successfully collected island resource");
                    }
                    else {
                        (0, utils_1.logs)(context.task.name, "more resources are on the way");
                    }
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                    (0, utils_1.sendEventRunning)();
                    return;
                case tasks_1.TASKS.tropicalIslandSunbed:
                    (0, utils_1.logs)(context.task.name, "check sunbed");
                    var rfpageSunbedsWithFinishedCookies = new Rerouter_1.Page('rfpageSunbedsWithFinishedCookies', [
                        { x: 52, y: 323, r: 238, g: 68, b: 119 },
                        { x: 61, y: 336, r: 44, g: 77, b: 110 },
                        { x: 61, y: 303, r: 255, g: 0, b: 0 },
                    ], { x: 52, y: 323 });
                    var rfpageFreeAllCrispyCookie = new Rerouter_1.Page('rfpageFreeAllCrispyCookie', [
                        { x: 341, y: 316, r: 123, g: 207, b: 8 },
                        { x: 376, y: 313, r: 49, g: 60, b: 90 },
                        { x: 223, y: 85, r: 255, g: 101, b: 173 },
                    ], { x: 341, y: 316 });
                    var rfpageHasNoCrispyCookie = new Rerouter_1.Page('rfpageHasNoCrispyCookie', [
                        { x: 425, y: 111, r: 44, g: 46, b: 60 },
                        { x: 422, y: 132, r: 44, g: 46, b: 60 },
                    ]);
                    (0, utils_1.logs)(context.task.name, "collecting sunbed cookies, this will wait 4 secs for the cookie list to show up");
                    Rerouter_1.rerouter.goNext(rfpageSunbedsWithFinishedCookies);
                    // Waiting is required, as the cookie list shows up with a delay
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupInSunbed', [rfpageFreeAllCrispyCookie, rfpageHasNoCrispyCookie]), 4000)) {
                        if (Rerouter_1.rerouter.isPageMatch(rfpageFreeAllCrispyCookie)) {
                            Rerouter_1.rerouter.goNext(rfpageFreeAllCrispyCookie);
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            (0, utils_1.logs)(context.task.name, "successfully collect sunbed cookies");
                        }
                    }
                    else if (Rerouter_1.rerouter.isPageMatch(rfpageEmptySunbedsListInMiddle)) {
                        (0, utils_1.logs)(context.task.name, "sun bed cookie list is empty");
                        Rerouter_1.rerouter.goNext(rfpageEmptySunbedsListInMiddle);
                    }
                    (0, utils_1.logs)(context.task.name, "finish collecting cookies");
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                    (0, utils_1.sendEventRunning)();
                    return;
                case tasks_1.TASKS.tropicalIslandClearBubble:
                    var foundResults = void 0;
                    var i = 0;
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedWhiteBackground);
                    (0, utils_1.logs)(context.task.name, "handle iconGreenCheckedWhiteBackground, found ".concat(Object.keys(foundResults).length, " of them"));
                    if (Object.keys(foundResults).length > 0) {
                        for (i = 0; i < Object.keys(foundResults).length; i++) {
                            Rerouter_1.rerouter.screen.tap(foundResults[i]);
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                        }
                    }
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconRedExclamation);
                    if (tropicalIslandStatus['iconRedExclamationCount'] < Object.keys(foundResults).length) {
                        (0, utils_1.logs)(context.task.name, "handle iconRedExclamation, found ".concat(Object.keys(foundResults).length, " of them"));
                        if (Object.keys(foundResults).length > 0) {
                            for (i = 0; i < Object.keys(foundResults).length; i++) {
                                Rerouter_1.rerouter.screen.tap(foundResults[i]);
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap(foundResults[i]);
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                tropicalIslandStatus['iconRedExclamationCount']++;
                                return;
                            }
                        }
                    }
                    // Clear hammers
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconIslandHammer);
                    (0, utils_1.logs)(context.task.name, "handle iconIslandHammer, found ".concat(Object.keys(foundResults).length, " of them"));
                    if (Object.keys(foundResults).length > 0) {
                        for (i = 0; i < Object.keys(foundResults).length; i++) {
                            Rerouter_1.rerouter.screen.tap(foundResults[i]);
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 3);
                            Rerouter_1.rerouter.screen.tap({ x: 324, y: 263 }); // Tab build
                            if (!Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageInTropicalIsland, 4000)) {
                                (0, utils_1.logs)(context.task.name, "Not enough resource to build island, skipping");
                                (0, utils_1.sendKeyBack)();
                                (0, utils_1.sendKeyBack)();
                            }
                            else {
                                (0, utils_1.logs)(context.task.name, "Build hammer successfully");
                            }
                        }
                    }
                    // Clear battles
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconRedSword);
                    (0, utils_1.logs)(context.task.name, "handle iconRedSword, found ".concat(Object.keys(foundResults).length, " of them: ").concat(JSON.stringify(foundResults)));
                    if (Object.keys(foundResults).length > 0) {
                        (0, utils_1.sendEventRunning)();
                        Rerouter_1.rerouter.screen.tap({ x: foundResults[i].x + 10, y: foundResults[i].y + 10 });
                        return;
                    }
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconWhiteSword);
                    (0, utils_1.logs)(context.task.name, "handle iconWhiteSword, found ".concat(Object.keys(foundResults).length, " of them"));
                    if (Object.keys(foundResults).length > 0) {
                        // rerouter.screen.tap(foundResults[i]);
                        Rerouter_1.rerouter.screen.tap({ x: foundResults[i].x + 10, y: foundResults[i].y + 10 });
                        return;
                    }
                    (0, utils_1.logs)(context.task.name, "Finish tropical island");
                    (0, utils_1.sendKeyBack)();
                    (0, utils_1.sendEventRunning)();
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageBattleToClearSodaIsland.name),
        match: rfpageBattleToClearSodaIsland,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.tropicalIslandClearBubble) {
                (0, utils_1.logs)(context.task.name, "in rfpageBattleToClearSodaIsland, send back as this is not my task");
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageBattleToClearSodaIsland, start battle");
            Rerouter_1.rerouter.goNext(rfpageBattleToClearSodaIsland);
            return;
        },
    });
    (0, helper_1.passiveAddRoute)([rfpageReadyToClearRedSword, rfpageEmptySunbedsListInMiddle]);
}
exports.addTropicalIslandRoutes = addTropicalIslandRoutes;
function addTropicalIslandTasks() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.tropicalIslandShip,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectTropicalIslandsIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.tropicalIslandSunbed,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectTropicalIslandsIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.tropicalIslandClearBubble,
        maxTaskDuring: 30 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectTropicalIslandsIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(tropicalIslandStatus, {
                iconRedExclamationCount: 0,
            });
        },
    });
}
exports.addTropicalIslandTasks = addTropicalIslandTasks;


/***/ }),

/***/ "./src/tasks/wishingTree.ts":
/*!**********************************!*\
  !*** ./src/tasks/wishingTree.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addWishingTreeTask = exports.addWishingTreeRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var types_1 = __webpack_require__(/*! ../types */ "./src/types.ts");
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var rfpageInWishingTree = new Rerouter_1.Page('rfpageInWishingTree', [
    { x: 157, y: 29, r: 107, g: 56, b: 82 },
    { x: 235, y: 35, r: 255, g: 0, b: 81 },
    { x: 348, y: 22, r: 255, g: 40, b: 123 },
    { x: 412, y: 18, r: 255, g: 190, b: 8 },
    { x: 523, y: 15, r: 0, g: 195, b: 255 },
]);
var rfpageNotEnoughForTree = new Rerouter_1.Page('rfpageNotEnoughForTree', [
    { x: 445, y: 97, r: 57, g: 166, b: 231 },
    { x: 437, y: 97, r: 255, g: 255, b: 255 },
    { x: 397, y: 112, r: 57, g: 69, b: 107 },
    { x: 252, y: 142, r: 191, g: 183, b: 174 },
    { x: 247, y: 140, r: 80, g: 80, b: 80 },
    { x: 253, y: 15, r: 127, g: 22, b: 61 },
    { x: 60, y: 18, r: 41, g: 18, b: 28 },
    { x: 64, y: 41, r: 20, g: 32, b: 66 },
    { x: 8, y: 24, r: 49, g: 30, b: 94 },
    { x: 524, y: 20, r: 0, g: 69, b: 127 },
], { x: 442, y: 97 });
var rfpageCheckWishingTreeStock = new Rerouter_1.Page('rfpageCheckWishingTreeStock', [
    { x: 355, y: 302, r: 121, g: 207, b: 12 },
    { x: 244, y: 46, r: 60, g: 70, b: 105 },
    { x: 257, y: 21, r: 127, g: 12, b: 46 },
    { x: 410, y: 18, r: 127, g: 94, b: 4 },
    { x: 6, y: 25, r: 50, g: 31, b: 93 },
]);
var wishingTreeStatus = {
    records: {
        opened: 0,
        golden: 0,
        fulfilled: 0,
        notEnoughAndSkip: 0,
        goldenAndSkip: 0,
    },
};
var wishes = __spreadArray([], scriptConfig_1.defaultWishes, true);
function addWishingTreeRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInWishingTree.name),
        match: rfpageInWishingTree,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.wishingTree) {
                (0, utils_1.logs)(context.task.name, "rfpageInWishingTree, leave because current task is not wishing tree, but: ".concat(context.task.name));
                Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 }); // tap X
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageInWishingTree, start working");
            var rfpageAllWishingDailyRewardCollected = new Rerouter_1.Page('rfpageAllWishingDailyRewardCollected', [
                { x: 59, y: 242, r: 247, g: 247, b: 247 },
                { x: 60, y: 256, r: 138, g: 138, b: 138 },
            ]);
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageAllWishingDailyRewardCollected, image) && !scriptConfig_1.config.alwaysFulfillWishes) {
                (0, utils_1.logs)(context.task.name, "rfpageInWishingTree, All wish fulfilled, skipping and send running");
                (0, utils_1.sendEventRunning)();
                Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 }); // tap X
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            var refreshing = 0;
            for (var i in wishes) {
                var wish = wishes[i];
                var records = wishingTreeStatus.records;
                var result = getStatusOfGivenWish(wish, wishingTreeStatus.records, scriptConfig_1.config.wishingTreeRefreshGoldenWishes);
                wish = result['wish'];
                records = result['records'];
                console.log('handling wish', i, JSON.stringify(wish));
                if (wish.status === 'refresh') {
                    refreshing++;
                    continue;
                }
                else if (wish.status === 'opened') {
                    result = checkToSendSpecificWish(wish, records, scriptConfig_1.config.wishingTreeSafetyStock);
                    wish = result['wish'];
                    records = result['records'];
                    console.log('handled wish', i, JSON.stringify(wish));
                }
                wishingTreeStatus.records = records;
                Rerouter_1.Utils.sleep(CONSTANTS.sleep);
            }
            console.log('>>> Wising tree records', JSON.stringify(wishingTreeStatus.records));
            var rfpageCollectTreeReward = new Rerouter_1.Page('rfpageCollectTreeReward', [{ x: 85, y: 289, r: 44, g: 203, b: 8 }]);
            if (Rerouter_1.rerouter.isPageMatch(rfpageCollectTreeReward)) {
                console.log('Daily reward collected');
                Rerouter_1.rerouter.screen.tap({ x: 60, y: 255 });
                Rerouter_1.Utils.sleep(2000);
                Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageInWishingTree, 8000);
                // waitUntilSeePage(pageInWishingTree, 8, pageCollectTreeReward);
            }
            if (refreshing === 4) {
                console.log('All wishes are refreshing, jobs done here');
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageInWishingTree, continue working next loop');
            (0, utils_1.sendEventRunning)();
        },
    });
    (0, helper_1.passiveAddRoute)([rfpageNotEnoughForTree]);
}
exports.addWishingTreeRoutes = addWishingTreeRoutes;
function addWishingTreeTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.wishingTree,
        maxTaskDuring: 4 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoFulfillWishesIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(wishingTreeStatus, {
                records: {
                    opened: 0,
                    golden: 0,
                    fulfilled: 0,
                    notEnoughAndSkip: 0,
                    goldenAndSkip: 0,
                },
            });
            var wishes = __spreadArray([], scriptConfig_1.defaultWishes, true);
        },
    });
}
exports.addWishingTreeTask = addWishingTreeTask;
function getStatusOfGivenWish(wish, records, refreshGolden) {
    if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 255, g: 249, b: 203 })) {
        wish.status = types_1.WishStatus.opened;
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 246, g: 210, b: 135 }, 15)) {
        Rerouter_1.rerouter.screen.tap(wish.unfoldPnt);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 2);
        wish.status = types_1.WishStatus.opened;
        records['opened']++;
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 193, g: 160, b: 111 })) {
        wish.status = types_1.WishStatus.refresh;
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 255, g: 222, b: 41 })) {
        // Folded golden wish
        wish.golden = true;
        records['golden']++;
        if (refreshGolden) {
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "refresh as it is an unfolded golden wish: ".concat(JSON.stringify(wish)));
            wish.status = types_1.WishStatus.refresh;
        }
        else {
            Rerouter_1.rerouter.screen.tap(wish.unfoldPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            wish.status = types_1.WishStatus.opened;
            records['opened']++;
        }
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 255, g: 247, b: 123 })) {
        // Expended golden wish
        wish.golden = true;
        if (refreshGolden) {
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "refresh as it is an unfolded golden wish: ".concat(JSON.stringify(wish)));
            wish.status = types_1.WishStatus.refresh;
            records['goldenAndSkip']++;
        }
        else {
            wish.status = types_1.WishStatus.opened;
        }
    }
    return { wish: wish, records: records };
}
function checkToSendSpecificWish(wish, records, safetySotck) {
    if (Rerouter_1.rerouter.isPageMatch(rfpageNotEnoughForTree)) {
        (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "checkToSendSpecificWish found pageNotEnoughForTree, tap to close that");
        Rerouter_1.rerouter.goNext(rfpageNotEnoughForTree);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
    }
    var stocks = [];
    for (var pntIdx in wish.requirementIconPnts) {
        var reqPnt = wish.requirementIconPnts[pntIdx];
        if ((+pntIdx > 0 && (0, helper_1.isSameColorAtPnt)(reqPnt, { r: 255, g: 249, b: 203 })) || (0, helper_1.isSameColorAtPnt)(reqPnt, { r: 255, g: 255, b: 142 })) {
            console.log('This point has no item, skipping:', pntIdx, JSON.stringify(reqPnt));
            continue;
        }
        for (var i = 0; i < 3; i++) {
            console.log("tapped point ".concat(pntIdx, ", (").concat(JSON.stringify(reqPnt), ") and wait for rfpageCheckWishingTreeStock"));
            Rerouter_1.rerouter.screen.tap(reqPnt);
            if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageCheckWishingTreeStock, 2000)) {
                break;
            }
        }
        if (Rerouter_1.rerouter.isPageMatch(rfpageInWishingTree)) {
            (0, utils_1.logs)('checkToSendSpecificWish', 'skip this point as cannot get into rfpageCheckWishingTreeStock');
            continue;
        }
        var ocrResult = '';
        if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageCheckWishingTreeStock, 7000, 1)) {
            // Use this to collect stock info
            var img = getScreenshot();
            var cImg1 = cropImage(img, 325, 110, 40, 15);
            ocrResult = (0, helper_1.recognizeWishingTreeRequirements)(ICONS.numberImagesWishingTree, cImg1, 12, 0.92, 0.7);
            releaseImage(cImg1);
            releaseImage(img);
        }
        if (!Rerouter_1.rerouter.isPageMatch(rfpageInWishingTree)) {
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(CONSTANTS.sleep);
        }
        Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageInWishingTree, 7000, 1);
        // waitUntilSeePage(pageInWishingTree, 7, pageCheckWishingTreeStock, null, 3);
        ocrResult = ocrResult.trim();
        var stockAndReq = [];
        if (ocrResult.length === 0) {
            // do nothing
        }
        else if (ocrResult.indexOf('/') === -1) {
            stockAndReq = [ocrResult.substr(0, ocrResult.length - 1), ocrResult.substr(ocrResult.length - 1, 1)];
        }
        else {
            stockAndReq = ocrResult.split('/');
        }
        stockAndReq[0] = parseInt(stockAndReq[0], 10);
        stockAndReq[1] = parseInt(stockAndReq[1], 10);
        stocks[pntIdx] = {
            stock: stockAndReq[0],
            need: stockAndReq[1],
        };
        if (stockAndReq.length === 0 || stockAndReq[0] === null) {
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "OCR failed, skip this one, pntIdx, stockAndReq: ".concat(pntIdx, ", ").concat(JSON.stringify(stockAndReq)));
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleep);
            wish.status = types_1.WishStatus.refresh;
            return { wish: wish, records: records };
        }
        if (stockAndReq[0] - stockAndReq[1] < safetySotck) {
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "Skip this one as the stock ".concat(stockAndReq[0], " is lower than config ").concat(safetySotck, ", need ").concat(stockAndReq[1]));
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleep);
            wish.status = types_1.WishStatus.refresh;
            return { wish: wish, records: records };
        }
    }
    (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "Stock is enough, fulfill this wish, ".concat(JSON.stringify(wish), ", ").concat(JSON.stringify(stocks)));
    Rerouter_1.rerouter.screen.tap(wish.fulfillPnt);
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageNotEnoughForTree, 2000)) {
        (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "wish ".concat(wish.id, " tapped but not enough stock (wrong ocr?), refresh it'"));
        Rerouter_1.rerouter.goNext(rfpageNotEnoughForTree);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 2);
        Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
        Rerouter_1.Utils.sleep(CONSTANTS.sleep);
        wish.status = types_1.WishStatus.refresh;
        return { wish: wish, records: records };
    }
    console.log('wish ', wish.id, ' is fulfilled');
    records['fulfilled']++;
    return { wish: wish, records: records };
}


/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.searchHosePaths = exports.Directions = exports.goodsLocationRect = exports.seasideStockRect = exports.SeasideMarketItemType = exports.Advantures = exports.BountyTarget = exports.WishStatus = exports.Icon = void 0;
var Icon = /** @class */ (function () {
    function Icon(name, base64String, thres, next, back) {
        if (thres === void 0) { thres = 0.9; }
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        this.name = name;
        this.base64String = base64String;
        this.thres = thres;
        this.next = next;
        this.back = back;
    }
    Icon.prototype.loadImage = function () {
        this.image = getImageFromBase64(this.base64String);
    };
    Icon.prototype.releaseImage = function () {
        releaseImage(this.image);
    };
    return Icon;
}());
exports.Icon = Icon;
var WishStatus;
(function (WishStatus) {
    WishStatus["opened"] = "opened";
    WishStatus["refresh"] = "refresh";
    WishStatus["unknown"] = "unknown";
})(WishStatus = exports.WishStatus || (exports.WishStatus = {}));
var BountyTarget;
(function (BountyTarget) {
    BountyTarget["disabled"] = "disabled";
    BountyTarget["powder"] = "powder";
    BountyTarget["crystal"] = "crystal";
    BountyTarget["cake"] = "cake";
})(BountyTarget = exports.BountyTarget || (exports.BountyTarget = {}));
var Advantures;
(function (Advantures) {
    Advantures["bounties"] = "bounties";
    Advantures["pvp"] = "pvp";
    Advantures["guild"] = "guild";
    Advantures["towerOfSweetChaos"] = "towerOfSweetChaos";
    Advantures["superMayhem"] = "superMayhem";
    Advantures["tropicalIsland"] = "tropicalIsland";
    Advantures["cookieAlliance"] = "cookieAlliance";
})(Advantures = exports.Advantures || (exports.Advantures = {}));
var SeasideMarketItemType;
(function (SeasideMarketItemType) {
    SeasideMarketItemType["mustSkip"] = "mustSkip";
    SeasideMarketItemType["compareAmount"] = "compareAmount";
    SeasideMarketItemType["buyAnyway"] = "buyAnyway";
    SeasideMarketItemType["others"] = "others";
})(SeasideMarketItemType = exports.SeasideMarketItemType || (exports.SeasideMarketItemType = {}));
exports.seasideStockRect = {
    0: { x: 66, y: 282, w: 60, h: 18 },
    1: { x: 158, y: 282, w: 60, h: 18 },
    2: { x: 253, y: 282, w: 60, h: 18 },
    3: { x: 346, y: 282, w: 60, h: 18 },
    4: { x: 439, y: 282, w: 60, h: 18 },
};
exports.goodsLocationRect = {
    1: { x: 431, y: 101, w: 22, h: 12 },
    2: { x: 431, y: 209, w: 22, h: 12 },
    3: { x: 431, y: 315, w: 22, h: 12 },
    4: { x: 431, y: 106, w: 22, h: 12 },
    5: { x: 431, y: 213, w: 22, h: 12 },
    6: { x: 431, y: 319, w: 22, h: 12 },
    shovel: { x: 432, y: 317, w: 22, h: 16 },
};
exports.Directions = Object.freeze({
    NE: { x: -480, y: 245 },
    NW: { x: 460, y: 255 },
    SE: { x: -460, y: -255 },
    SW: { x: 480, y: -245 },
    S: { x: 0, y: -250 },
    SS: { x: 0, y: -350 },
    N: { x: 0, y: 250 },
    NN: { x: 0, y: 350 },
    E: { x: -460, y: 0 },
    EE: { x: -560, y: 0 },
    W: { x: 460, y: 0 },
    WW: { x: 560, y: 0 },
});
exports.searchHosePaths = {
    0: [
        exports.Directions.SS,
        exports.Directions.S,
        exports.Directions.EE,
        exports.Directions.N,
        exports.Directions.E,
        exports.Directions.E,
        exports.Directions.E,
        exports.Directions.E,
        exports.Directions.N,
        exports.Directions.W,
        exports.Directions.W,
        exports.Directions.W,
        exports.Directions.W,
    ],
    1: [exports.Directions.EE, exports.Directions.SS, exports.Directions.E, exports.Directions.W, exports.Directions.W, exports.Directions.W, exports.Directions.N, exports.Directions.E, exports.Directions.W, exports.Directions.W],
    2: [exports.Directions.EE, exports.Directions.EE, exports.Directions.SS, exports.Directions.EE, exports.Directions.S, exports.Directions.W, exports.Directions.W, exports.Directions.W, exports.Directions.N],
};


/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sendEventRunning = exports.sendKeyBack = exports.logs = exports.padZero = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
function padZero(num) {
    return num < 10 ? "0".concat(num) : "".concat(num);
}
exports.padZero = padZero;
function logs(activity, message) {
    var date = new Date(Rerouter_1.Utils.getTaiwanTime());
    console.log("[".concat(padZero(date.getMonth() + 1), "-").concat(padZero(date.getDate()), "T").concat(padZero(date.getHours()), ":").concat(padZero(date.getMinutes()), ":").concat(padZero(date.getSeconds()), "], ").concat(activity, ", ").concat(message));
}
exports.logs = logs;
function sendKeyBack() {
    console.log('send a back');
    keycode('KEYCODE_BACK', 100);
}
exports.sendKeyBack = sendKeyBack;
function sendEventRunning() {
    sendEvent('running', '');
}
exports.sendEventRunning = sendEventRunning;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/
/************************************************************************/
/******/
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./index.ts");
/******/
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,