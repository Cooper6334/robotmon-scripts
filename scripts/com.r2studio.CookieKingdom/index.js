var window = window || {};


function start(jsonConfig){window.start(jsonConfig);}
function stop(){window.stop();}

/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ (function() {

var window = window || {};



/***/ }),

/***/ "./node_modules/Rerouter/dist/index.js":
/*!*********************************************!*\
  !*** ./node_modules/Rerouter/dist/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = void 0;
__exportStar(__webpack_require__(/*! ./src/screen */ "./node_modules/Rerouter/dist/src/screen.js"), exports);
__exportStar(__webpack_require__(/*! ./src/rerouter */ "./node_modules/Rerouter/dist/src/rerouter.js"), exports);
__exportStar(__webpack_require__(/*! ./src/struct */ "./node_modules/Rerouter/dist/src/struct.js"), exports);
__exportStar(__webpack_require__(/*! ./src/utils */ "./node_modules/Rerouter/dist/src/utils.js"), exports);
exports.version = 1;
var writeFileTmp = writeFile;
// @ts-ignore
writeFile = function (path, content) {
    var rtn = writeFileTmp(path, content);
    execute("chmod 777 ".concat(path));
    return rtn;
};
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/rerouter.js":
/*!****************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/rerouter.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rerouter = exports.Rerouter = void 0;
var struct_1 = __webpack_require__(/*! ./struct */ "./node_modules/Rerouter/dist/src/struct.js");
var screen_1 = __webpack_require__(/*! ./screen */ "./node_modules/Rerouter/dist/src/screen.js");
var utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/Rerouter/dist/src/utils.js");
__webpack_require__(/*! core-js/es/object/assign */ "./node_modules/core-js/es/object/assign.js");
__webpack_require__(/*! core-js/es/array/find-index */ "./node_modules/core-js/es/array/find-index.js");
var Rerouter = /** @class */ (function () {
    function Rerouter() {
        this.debug = true;
        this.defaultConfig = struct_1.DefaultConfigValue;
        this.rerouterConfig = struct_1.DefaultRerouterConfig;
        this.screenConfig = struct_1.DefaultScreenConfig;
        this.screen = new screen_1.Screen(this.screenConfig);
        this.running = false;
        this.routeConflictRecord = [];
        this.routes = [];
        this.tasks = [];
        this.routeContext = null;
        this.unknownRouteAction = null;
        this.startAppRouteAction = null;
    }
    Rerouter.prototype.reset = function () {
        // NOTE: this is an another way that resets Rerouter, just leaving here for memory
        // rerouterContainer.instance = new Rerouter();
        // @ts-ignore included 'core-js/es/object/assign'
        Object.assign(this, new Rerouter());
    };
    /**
     * Recalculate some value like device width or height in screenConfig
     */
    Rerouter.prototype.init = function () {
        // sort routes by priority
        this.routes.sort(function (a, b) { return b.priority - a.priority; });
        // check and calculate screen config
        var deviceWH = getScreenSize();
        var max = Math.max(deviceWH.width, deviceWH.height);
        var min = Math.min(deviceWH.width, deviceWH.height);
        var dWidth = this.screenConfig.rotation === 'horizontal' ? max : min;
        var dHeight = this.screenConfig.rotation === 'vertical' ? max : min;
        this.screenConfig.deviceWidth = this.screenConfig.deviceWidth || dWidth;
        this.screenConfig.deviceHeight = this.screenConfig.deviceHeight || dHeight;
        this.screenConfig.screenWidth = this.screenConfig.screenWidth || dWidth;
        this.screenConfig.screenHeight = this.screenConfig.screenHeight || dHeight;
        this.log("screenWidth: ".concat(this.screenConfig.screenWidth, ", screenHeight: ").concat(this.screenConfig.screenHeight));
        this.screenConfig.logScreenshotFolder = utils_1.Utils.joinPaths(this.rerouterConfig.saveImageRoot, this.rerouterConfig.deviceId);
        // new screen if screen config changed
        this.screen = new screen_1.Screen(this.screenConfig);
    };
    /**
     * Add RouteConfig to Rerouter routes, after starting Rerouter will run over all RouteConfigs to match screen and do action
     * @param config information about how route match and route action
     */
    Rerouter.prototype.addRoute = function (config) {
        // @ts-ignore included 'core-js/es/array/find-index'
        var existingRouteIndex = this.routes.findIndex(function (route) { return route.path === config.path; });
        // If it exists, log a warning and decide what to do next
        if (existingRouteIndex !== -1) {
            this.warning("A route with the path '".concat(config.path, "' already exists. Duplicate route will not be added."));
            // Option 1: Update the existing route with the new configuration
            // this.routes[existingRouteIndex] = this.wrapRouteConfigWithDefault(config);
            // Option 2: Simply return and don't add the new route
            return;
        }
        // If it doesn't exist, push the new route
        this.routes.push(this.wrapRouteConfigWithDefault(config));
    };
    /**
     * Tell Rerouter what to do if not matching any route
     * @param action function to do if not matching
     */
    Rerouter.prototype.addUnknownAction = function (action) {
        this.unknownRouteAction = action;
    };
    Rerouter.prototype.addStartAppAction = function (action) {
        this.startAppRouteAction = action;
    };
    /**
     * Add TaskConfig to Rerouter tasks, after starting Rerouter will run over all Tasks by task condition
     * @param config information about how task works
     */
    Rerouter.prototype.addTask = function (config) {
        this.tasks.push({
            name: config.name,
            config: this.wrapTaskConfigWithDefault(config),
            startTime: 0,
            lastRunTime: 0,
            runTimes: 0,
        });
    };
    /**
     * start Rerouter to run over tasks and routes
     * @param packageName
     */
    Rerouter.prototype.start = function (packageName) {
        this.rerouterConfig.packageName = packageName;
        // check tasks
        if (this.tasks.length === 0) {
            this.log("Rerouter start failed, no tasks ...");
            return;
        }
        this.init();
        this.log("Rerouter started ...");
        // task controller
        this.running = true;
        this.startTaskLoop();
        this.log("Rerouter stopped ...");
    };
    /**
     * stop Rerouter
     */
    Rerouter.prototype.stop = function () {
        this.log("Rerouter stop called, trying to stop task loop");
        this.running = false;
        if (this.routeContext !== null) {
            this.routeContext.scriptRunning = false;
        }
    };
    Rerouter.prototype.checkInApp = function () {
        var packageName = utils_1.Utils.getCurrentApp()[0];
        if (packageName === this.rerouterConfig.packageName) {
            return true;
        }
        return utils_1.Utils.isAppOnTop(this.rerouterConfig.packageName);
    };
    Rerouter.prototype.checkAndStartApp = function () {
        if (!this.checkInApp()) {
            this.log("AppIsNotStarted, startApp ".concat(this.rerouterConfig.packageName));
            this.startApp();
            return true;
        }
        return false;
    };
    Rerouter.prototype.startApp = function () {
        if (!this.rerouterConfig.packageName) {
            this.log("Rerouter start app failed, no packageName ...");
            return;
        }
        utils_1.Utils.startApp(this.rerouterConfig.packageName);
        utils_1.Utils.sleep(this.rerouterConfig.startAppDelay);
    };
    Rerouter.prototype.stopApp = function () {
        if (!this.rerouterConfig.packageName) {
            this.log("Rerouter stop app failed, no packageName ...");
            return;
        }
        utils_1.Utils.stopApp(this.rerouterConfig.packageName);
        utils_1.Utils.sleep(1000);
    };
    Rerouter.prototype.restartApp = function () {
        this.stopApp();
        this.startApp();
    };
    Rerouter.prototype.goNext = function (page) {
        if (page.next !== undefined) {
            this.screen.tap(page.next);
        }
        else {
            this.warning("".concat(page.name, " action == goNext, but no next xy"));
        }
    };
    Rerouter.prototype.goBack = function (page) {
        if (page.back !== undefined) {
            this.screen.tap(page.back);
        }
        else {
            this.warning("".concat(page.name, " action == goBack, but no back xy"));
        }
    };
    Rerouter.prototype.isPageMatch = function (page) {
        var image = this.screen.getCvtDevScreenshot();
        var isMatch = this.isPageMatchImage(page, image);
        releaseImage(image);
        return isMatch;
    };
    Rerouter.prototype.isPageMatchImage = function (page, image) {
        if (typeof page === 'string') {
            var p = this.getPageByName(page);
            if (p === null) {
                this.warning("isPageMatchImage ".concat(page, " not exist"));
                return false;
            }
            page = p;
        }
        if (page instanceof struct_1.Page) {
            return this.isMatchPageImpl(image, page, this.defaultConfig.PageThres, this.debug);
        }
        else {
            var pages = this.isMatchGroupPageImpl(image, page, this.defaultConfig.GroupPageThres, this.debug);
            return pages.length > 0;
        }
    };
    Rerouter.prototype.getPagesMatch = function (groupPage) {
        var image = this.screen.getCvtDevScreenshot();
        var match = this.getPagesMatchImage(groupPage, image, this.defaultConfig.GroupPageThres);
        releaseImage(image);
        return match;
    };
    Rerouter.prototype.getPagesMatchImage = function (groupPage, image, parentThres, debug) {
        var _a, _b;
        var pages = [];
        var thres = (_b = (_a = groupPage.thres) !== null && _a !== void 0 ? _a : parentThres) !== null && _b !== void 0 ? _b : this.defaultConfig.PageThres;
        for (var i = 0; i < groupPage.pages.length; i++) {
            var page = groupPage.pages[i];
            var isPageMatch = this.isMatchPageImpl(image, page, thres, this.debug);
            if (isPageMatch) {
                pages.push(page);
            }
        }
        return pages;
    };
    Rerouter.prototype.waitScreenForMatchingPage = function (page, timeout, matchTimes, interval) {
        var _this = this;
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        return utils_1.Utils.waitForAction(function () { return _this.isPageMatch(page); }, timeout, matchTimes, interval);
    };
    Rerouter.prototype.isRouteMatch = function (route) {
        var image = this.screen.getCvtDevScreenshot();
        var isMatch = this.isRouteMatchImage(route, image);
        releaseImage(image);
        return isMatch;
    };
    Rerouter.prototype.isRouteMatchImage = function (route, image) {
        var routeConfig = this.getRouteConfig(route);
        if (routeConfig === null) {
            this.warning("isRouteMatchImage ".concat(route, " not exist"));
            return false;
        }
        var filledRouteConfig = this.wrapRouteConfigWithDefault(routeConfig);
        var rotation = this.screen.getImageRotation(image);
        var isMatched = this.isMatchRouteImpl(image, rotation, filledRouteConfig, 'waitScreenForMatchingRoute').isMatched;
        if (isMatched) {
            return true;
        }
        return false;
    };
    Rerouter.prototype.waitScreenForMatchingRoute = function (route, timeout, matchTimes, interval) {
        var _this = this;
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        return utils_1.Utils.waitForAction(function () { return _this.isRouteMatch(route); }, timeout, matchTimes, interval);
    };
    Rerouter.prototype.getPageByName = function (name) {
        var _a;
        for (var _i = 0, _b = this.routes; _i < _b.length; _i++) {
            var route = _b[_i];
            if (name === ((_a = route.match) === null || _a === void 0 ? void 0 : _a.name)) {
                return route.match;
            }
        }
        return null;
    };
    Rerouter.prototype.getRouteConfigByPath = function (path) {
        for (var _i = 0, _a = this.routes; _i < _a.length; _i++) {
            var route = _a[_i];
            if (path === route.path) {
                return route;
            }
        }
        return null;
    };
    Rerouter.prototype.getCurrentMatchNames = function () {
        var _this = this;
        var image = this.screen.getCvtDevScreenshot();
        var matchedNames = [];
        this.routes.forEach(function (route) {
            var match = route.match;
            if ((match instanceof struct_1.Page && _this.isMatchPageImpl(image, match, _this.defaultConfig.PageThres, _this.debug)) ||
                (match instanceof struct_1.GroupPage && _this.isMatchGroupPageImpl(image, match, _this.defaultConfig.PageThres, _this.debug).length > 0)) {
                matchedNames.push(match.name);
            }
        });
        this.log("current match: ", matchedNames);
        releaseImage(image);
        return matchedNames;
    };
    Rerouter.prototype.getRouteConfig = function (r) {
        var route;
        if (typeof r === 'string') {
            route = this.getRouteConfigByPath(r);
        }
        else {
            route = r;
        }
        return route;
    };
    Rerouter.prototype.wrapRouteConfigWithDefault = function (config) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        return {
            path: config.path,
            action: config.action,
            match: (_a = config.match) !== null && _a !== void 0 ? _a : null,
            customMatch: (_b = config.customMatch) !== null && _b !== void 0 ? _b : null,
            rotation: (_c = config.rotation) !== null && _c !== void 0 ? _c : this.screenConfig.rotation,
            shouldMatchTimes: (_d = config.shouldMatchTimes) !== null && _d !== void 0 ? _d : this.defaultConfig.RouteConfigShouldMatchTimes,
            shouldMatchDuring: (_e = config.shouldMatchDuring) !== null && _e !== void 0 ? _e : this.defaultConfig.RouteConfigShouldMatchDuring,
            beforeActionDelay: (_f = config.beforeActionDelay) !== null && _f !== void 0 ? _f : this.defaultConfig.RouteConfigBeforeActionDelay,
            afterActionDelay: (_g = config.afterActionDelay) !== null && _g !== void 0 ? _g : this.defaultConfig.RouteConfigAfterActionDelay,
            priority: (_h = config.priority) !== null && _h !== void 0 ? _h : this.defaultConfig.RouteConfigPriority,
            debug: (_j = config.debug) !== null && _j !== void 0 ? _j : this.defaultConfig.RouteConfigDebug,
        };
    };
    Rerouter.prototype.wrapTaskConfigWithDefault = function (config) {
        var _a, _b, _c, _d, _e, _f, _g;
        return {
            name: config.name,
            maxTaskRunTimes: (_a = config.maxTaskRunTimes) !== null && _a !== void 0 ? _a : this.defaultConfig.TaskConfigMaxTaskRunTimes,
            maxTaskDuring: (_b = config.maxTaskDuring) !== null && _b !== void 0 ? _b : this.defaultConfig.TaskConfigMaxTaskDuring,
            minRoundInterval: (_c = config.minRoundInterval) !== null && _c !== void 0 ? _c : this.defaultConfig.TaskConfigMinRoundInterval,
            forceStop: (_d = config.forceStop) !== null && _d !== void 0 ? _d : this.defaultConfig.TaskConfigAutoStop,
            findRouteDelay: (_e = config.findRouteDelay) !== null && _e !== void 0 ? _e : this.defaultConfig.TaskConfigFindRouteDelay,
            beforeRoute: (_f = config.beforeRoute) !== null && _f !== void 0 ? _f : null,
            afterRoute: (_g = config.afterRoute) !== null && _g !== void 0 ? _g : null,
        };
    };
    Rerouter.prototype.startTaskLoop = function () {
        var taskIdx = 0;
        while (this.running) {
            var task = this.tasks[taskIdx % this.tasks.length];
            taskIdx++;
            var now = Date.now();
            var isTaskRunFirstTime = task.lastRunTime === 0;
            if (now - task.lastRunTime <= task.config.minRoundInterval && !isTaskRunFirstTime) {
                this.log("Task: ".concat(task.name, " during: ").concat(now - task.lastRunTime, " <= minRoundInterval, skip"));
                utils_1.Utils.sleep(this.rerouterConfig.taskDelay);
                continue;
            }
            task.startTime = now;
            task.runTimes = 0;
            var exitTask = false;
            for (var i = 0; i < task.config.maxTaskRunTimes && this.running && !exitTask; i++) {
                this.log("Task: ".concat(task.name, " run ").concat(task.runTimes));
                var skipRoute = false;
                if (task.config.beforeRoute !== null) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " do beforeRoute()"));
                    if (task.config.beforeRoute(task) === 'skipRouteLoop') {
                        skipRoute = true;
                    }
                }
                if (skipRoute) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " skipRouteLoop"));
                }
                else {
                    exitTask = this.startRouteLoop(task);
                }
                if (task.config.afterRoute !== null) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " do afterRoute()"));
                    task.config.afterRoute(task);
                }
                task.runTimes++;
                task.lastRunTime = now;
                var during = now - task.startTime;
                if (task.config.maxTaskDuring > 0 && during >= task.config.maxTaskDuring) {
                    this.log("Task: ".concat(task.name, " taskDuring: ").concat(during, "/").concat(task.config.maxTaskDuring, " reached, stop"));
                    break;
                }
            }
            utils_1.Utils.sleep(this.rerouterConfig.taskDelay);
        }
    };
    Rerouter.prototype.startRouteLoop = function (task) {
        var _this = this;
        var _a, _b, _c, _d, _e;
        this.routeContext = {
            task: task,
            screen: this.screen,
            scriptRunning: this.running,
            path: '',
            lastMatchedPath: (_b = (_a = this.routeContext) === null || _a === void 0 ? void 0 : _a.lastMatchedPath) !== null && _b !== void 0 ? _b : '',
            matchTimes: 0,
            matchStartTS: 0,
            matchDuring: 0,
        };
        var routeLoop = true;
        var exitTaskResult = false;
        var finishRoundFunc = function (exitTask) {
            var _a;
            if (exitTask === void 0) { exitTask = false; }
            routeLoop = false;
            exitTaskResult = exitTask;
            _this.log("finish round: ".concat((_a = _this.routeContext) === null || _a === void 0 ? void 0 : _a.task.name, "; exitTask: ").concat(exitTask));
        };
        // pointer for short code
        var context = this.routeContext;
        while (routeLoop && this.running) {
            var now = Date.now();
            // check task.autoStop
            var taskRunDuring = now - task.startTime;
            if (task.config.forceStop && taskRunDuring > task.config.maxTaskDuring) {
                this.log("Task ".concat(task.name, " AutoStop, exceed taskRunDuring"));
                break;
            }
            // check isAppOn or auto launch it
            if (this.rerouterConfig.autoLaunchApp) {
                if (this.checkAndStartApp()) {
                    if (this.startAppRouteAction !== null) {
                        this.startAppRouteAction(context, finishRoundFunc);
                    }
                    continue;
                }
            }
            var rotation = this.screen.getRotation();
            var image = this.screen.getCvtDevScreenshot();
            var matches = this.findMatchedRouteImpl(task.name, image, rotation);
            var matchedRoute = (_c = matches[0]) === null || _c === void 0 ? void 0 : _c.matchedRoute;
            var matchedPages = (_d = matches[0]) === null || _d === void 0 ? void 0 : _d.matchedPages;
            // context.matchStartTS = 0 if init run
            context.matchStartTS = context.matchStartTS || now;
            context.path = (_e = matchedRoute === null || matchedRoute === void 0 ? void 0 : matchedRoute.path) !== null && _e !== void 0 ? _e : '';
            // first match
            if (context.path !== context.lastMatchedPath) {
                context.matchTimes = 0;
                context.matchStartTS = now;
            }
            context.matchDuring = now - context.matchStartTS;
            context.matchTimes++;
            switch (matches.length) {
                case 0:
                    // no match
                    if (this.unknownRouteAction !== null) {
                        this.unknownRouteAction(context, image, finishRoundFunc);
                    }
                    break;
                case 1:
                    // perfect match 1
                    this.doActionForRoute(context, image, matchedRoute, matchedPages, finishRoundFunc);
                    break;
                default:
                    // conflict
                    var error = this.handleConflictRoutes(task.name, image, matches, finishRoundFunc);
                    if (error) {
                        releaseImage(image);
                        throw error;
                    }
                    break;
            }
            // update lastMatchedPath after action done
            // otherwise the lastMatchedPath will be current path when doing action
            context.lastMatchedPath = context.path;
            releaseImage(image);
            utils_1.Utils.sleep(task.config.findRouteDelay);
        }
        return exitTaskResult;
    };
    Rerouter.prototype.doActionForRoute = function (context, image, route, matchedPages, finishRound) {
        var _a, _b;
        this.logImpl(route.debug, "handleMatchedRoute: ".concat(route.path, ", times: ").concat(context.matchTimes, ", during: ").concat(context.matchDuring));
        if (context.matchTimes < route.shouldMatchTimes || context.matchDuring < route.shouldMatchDuring) {
            // should still wait for matching condition
            return;
        }
        var nextXY = (_a = matchedPages[0]) === null || _a === void 0 ? void 0 : _a.next;
        var backXY = (_b = matchedPages[0]) === null || _b === void 0 ? void 0 : _b.back;
        // matched and fit condition, do action
        utils_1.Utils.sleep(route.beforeActionDelay);
        if (route.action === 'goNext') {
            if (nextXY !== undefined) {
                this.screen.tap(nextXY);
            }
            else {
                this.warning("".concat(route.path, " action == goNext, but no next xy"));
            }
        }
        else if (route.action === 'goBack') {
            if (backXY !== undefined) {
                this.screen.tap(backXY);
            }
            else {
                this.warning("".concat(route.path, " action == goBack, but no back xy"));
            }
        }
        else if (route.action === 'keycodeBack') {
            keycode('BACK', this.screenConfig.actionDuring);
        }
        else {
            route.action(context, image, matchedPages, finishRound);
        }
        utils_1.Utils.sleep(route.afterActionDelay);
    };
    Rerouter.prototype.findMatchedRouteImpl = function (taskName, image, rotation) {
        var matches = [];
        for (var _i = 0, _a = this.routes; _i < _a.length; _i++) {
            var route = _a[_i];
            var _b = this.isMatchRouteImpl(image, rotation, route, taskName), isMatched = _b.isMatched, matchedPages = _b.matchedPages;
            if (isMatched) {
                this.logImpl(route.debug, 'current match:', matchedPages.map(function (p) { return p.name; }));
                matches.push({ matchedRoute: route, matchedPages: matchedPages });
            }
        }
        return matches;
    };
    Rerouter.prototype.handleConflictRoutes = function (taskName, image, matches, finishRound) {
        var matchNames = matches.reduce(function (acc, item) {
            return acc.concat(item.matchedPages.map(function (page) {
                return page.name;
            }));
        }, []);
        var warningMsg = "a route conflict when in Task: \"".concat(taskName, "\", names: ").concat(JSON.stringify(matchNames));
        this.warning(warningMsg);
        if (this.rerouterConfig.strictMode) {
            // TODO: save image rather than take another screenshot
            utils_1.Utils.saveScreenshotToDisk(this.rerouterConfig.saveImageRoot, "".concat(struct_1.DefaultRerouterConfig.deviceId, "_conflictedRoutes"));
            if (this.rerouterConfig.debugSlackUrl !== '') {
                utils_1.Utils.sendSlackMessage(this.rerouterConfig.debugSlackUrl, 'Conflict Routes Report', "".concat(struct_1.DefaultRerouterConfig.deviceId, " just logged ").concat(warningMsg));
            }
            return new Error("Intentional crash due to multiple route applied to current screen: ".concat(JSON.stringify(matchNames)));
        }
        // default handle conflict routes in non-strict mode
        this.log("try handle conflict");
        finishRound(true);
        var now = Date.now();
        this.routeConflictRecord.push(now);
        var duringLimit = 60 * 1000;
        var countsLimit = 5;
        while (this.routeConflictRecord.length > 0 && now - this.routeConflictRecord[0] > duringLimit) {
            this.routeConflictRecord.shift();
        }
        if (this.routeConflictRecord.length >= countsLimit) {
            this.routeConflictRecord = [now];
            this.restartApp();
            return;
        }
        keycode('BACK', this.screenConfig.actionDuring);
    };
    Rerouter.prototype.isMatchRouteImpl = function (image, rotation, route, taskName) {
        var _a;
        // check rotation
        if (route.rotation !== rotation) {
            this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " not match rotation, skip"));
            return { isMatched: false, matchedPages: [] };
        }
        var isMatched = false;
        var matchedPages = [];
        // check route.match
        if (route.match !== null) {
            if (route.match instanceof struct_1.Page) {
                var match = this.isMatchPageImpl(image, route.match, this.defaultConfig.PageThres, route.debug);
                if (match) {
                    isMatched = true;
                    matchedPages.push(route.match);
                }
            }
            else if (route.match instanceof struct_1.GroupPage) {
                var match = this.isMatchGroupPageImpl(image, route.match, this.defaultConfig.GroupPageThres, route.debug);
                if (match.length !== 0) {
                    isMatched = true;
                    matchedPages.push.apply(matchedPages, match);
                }
            }
        }
        // check route.isMatch function
        if (!isMatched && route.customMatch !== null) {
            isMatched = route.customMatch(taskName, image);
            this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " isMatch() => ").concat(isMatched));
        }
        this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " match: ").concat(isMatched, ", firstPage: ").concat((_a = matchedPages[0]) === null || _a === void 0 ? void 0 : _a.name));
        return {
            isMatched: isMatched,
            matchedPages: matchedPages,
        };
    };
    Rerouter.prototype.isMatchPageImpl = function (image, page, parentThres, debug) {
        var _a;
        var thres = (_a = page.thres) !== null && _a !== void 0 ? _a : parentThres;
        var isSame = true;
        this.logImpl(debug, "checkMatchPage[".concat(page.name, "]"));
        for (var i = 0; i < page.points.length; i++) {
            var point = page.points[i];
            var color = getImageColor(image, point.x, point.y);
            var score = utils_1.Utils.identityColor(point, color);
            var isPointColorMatch = score >= thres;
            if (!isPointColorMatch) {
                isSame = false;
                this.logImpl(debug, "point[".concat(i, "] match false: score: ").concat(score, ", thres: ").concat(thres, "\n"), "expect: ".concat(utils_1.Utils.formatXYRGB(point), "\n"), "   get: ".concat(utils_1.Utils.formatXYRGB(__assign(__assign({}, color), { x: point.x, y: point.y }))));
                break;
            }
        }
        this.logImpl(debug, "checkMatchPage[".concat(page.name, "][match: ").concat(isSame, "]"));
        return isSame;
    };
    Rerouter.prototype.isMatchGroupPageImpl = function (image, groupPage, parentThres, debug) {
        var _a;
        var thres = (_a = groupPage.thres) !== null && _a !== void 0 ? _a : parentThres;
        for (var i = 0; i < groupPage.pages.length; i++) {
            var page = groupPage.pages[i];
            var isPageMatch = this.isMatchPageImpl(image, page, thres, debug);
            this.logImpl(debug, "checkMatchGroupPage: ".concat(groupPage.name, ", page[").concat(i, "]: ").concat(page.name, " match: ").concat(isPageMatch));
            if (groupPage.matchOP === '||' && isPageMatch) {
                return [page];
            }
            if (groupPage.matchOP === '&&' && !isPageMatch) {
                return [];
            }
        }
        return groupPage.matchOP === '&&' ? groupPage.pages : [];
    };
    Rerouter.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.logImpl.apply(this, __spreadArray([this.debug], args, false));
    };
    Rerouter.prototype.logImpl = function (debug) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (!debug || !this.debug) {
            return;
        }
        // only log when debug + this.debug is true
        utils_1.Utils.log.apply(utils_1.Utils, __spreadArray(['[Rerouter][debug]'], args, false));
    };
    Rerouter.prototype.warning = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        utils_1.Utils.log.apply(utils_1.Utils, __spreadArray(['[Rerouter][warning]'], args, false));
    };
    return Rerouter;
}());
exports.Rerouter = Rerouter;
// NOTE: this is an another way that resets Rerouter, just leaving here for memory
// const rerouterContainer = {
//   instance: new Rerouter(),
// };
// import 'proxy-polyfill';
// export const rerouter: Rerouter = new Proxy(rerouterContainer, {
//   get: (target, prop: keyof Rerouter) => {
//     return target.instance[prop];
//   },
//   set: (target, prop: keyof Rerouter, value: any) => {
//     target.instance[prop] = value;
//     return true;
//   },
// }) as any as Rerouter;
exports.rerouter = new Rerouter();
//# sourceMappingURL=rerouter.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/screen.js":
/*!**************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/screen.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Screen = void 0;
var utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/Rerouter/dist/src/utils.js");
var Screen = /** @class */ (function () {
    function Screen(config) {
        this.config = config;
    }
    Screen.prototype.calculateDeviceOffset = function (func) {
        var results = func(this);
        this.config.screenWidth = results.screenWidth;
        this.config.screenHeight = results.screenHeight;
        this.config.screenOffsetX = results.screenOffsetX;
        this.config.screenOffsetY = results.screenOffsetY;
    };
    Screen.prototype.getScreenX = function (devX) {
        return Math.floor(this.config.screenOffsetX + (devX * this.config.screenWidth) / this.config.devWidth) || 0;
    };
    Screen.prototype.getScreenY = function (devY) {
        return Math.floor(this.config.screenOffsetY + (devY * this.config.screenHeight) / this.config.devHeight) || 0;
    };
    Screen.prototype.getScreenXY = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            return { x: x, y: y };
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            return { x: x, y: y };
        }
        else {
            throw new Error("getScreenXY wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tap = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tap(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tap(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tapDown = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tapDown(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tapDown(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.moveTo = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            moveTo(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            moveTo(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tapUp = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tapUp(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tapUp(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.getScreenColor = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var img = this.getCvtDevScreenshot();
            var rgb = getImageColor(img, p1.x, p1.y);
            releaseImage(img);
            return rgb;
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var img = this.getCvtDevScreenshot();
            var rgb = getImageColor(img, p1, p2);
            releaseImage(img);
            return rgb;
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.findImage = function (devImg) {
        var img = this.getCvtDevScreenshot();
        var result = findImage(img, devImg);
        releaseImage(img);
        return result;
    };
    Screen.prototype.tapImage = function (devImg) {
        var xy = this.findImage(devImg);
        this.tap(xy);
    };
    Screen.prototype.isSameColor = function (devColorPoint, thres) {
        if (thres === void 0) { thres = 0.9; }
        var rgb = this.getScreenColor(devColorPoint);
        var score = utils_1.Utils.identityColor(rgb, devColorPoint);
        if (score > thres) {
            return true;
        }
        return false;
    };
    // currently real device screenshot
    Screen.prototype.getDeviceScreenshot = function () {
        return getScreenshot();
    };
    // currently device screenshot cut by offset
    Screen.prototype.getScreenScreenshot = function () {
        return getScreenshotModify(this.config.screenOffsetX, this.config.screenOffsetY, this.config.screenWidth, this.config.screenHeight, this.config.screenWidth, this.config.screenHeight, 100);
    };
    Screen.prototype.checkAndSaveScreenshots = function () {
        if (this.config.logScreenshotFolder !== '' && Date.now() - this.config.logScreenshotLastTime > this.config.logScreenshotMinIntervalInSec * 1000) {
            this.config.logScreenshotLastTime = Date.now();
            utils_1.Utils.saveScreenshotToDisk(this.config.logScreenshotFolder, 'log');
            utils_1.Utils.removeOldestFilesIfExceedsLimit(this.config.logScreenshotFolder, this.config.logScreenshotMaxFiles);
        }
    };
    Screen.prototype.getCvtDevScreenshot = function () {
        this.checkAndSaveScreenshots();
        return getScreenshotModify(this.config.screenOffsetX, this.config.screenOffsetY, this.config.screenWidth, this.config.screenHeight, this.config.devWidth, this.config.devHeight, 100);
    };
    Screen.prototype.getRotation = function () {
        var _a = getScreenSize(), width = _a.width, height = _a.height;
        if (width > height) {
            return 'horizontal';
        }
        return 'vertical';
    };
    Screen.prototype.getImageRotation = function (image) {
        var _a = getImageSize(image), width = _a.width, height = _a.height;
        if (width > height) {
            return 'horizontal';
        }
        return 'vertical';
    };
    Screen.prototype.setActionDuring = function (during) {
        this.config.actionDuring = during;
    };
    Screen.debug = false;
    return Screen;
}());
exports.Screen = Screen;
//# sourceMappingURL=screen.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/struct.js":
/*!**************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/struct.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultScreenConfig = exports.DefaultRerouterConfig = exports.DefaultConfigValue = exports.GroupPage = exports.Page = void 0;
var Page = /** @class */ (function () {
    function Page(name, devPoints, next, back, thres) {
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        if (thres === void 0) { thres = undefined; }
        this.name = name;
        this.points = devPoints;
        this.next = next;
        this.back = back;
        this.thres = thres;
    }
    return Page;
}());
exports.Page = Page;
var GroupPage = /** @class */ (function () {
    function GroupPage(name, pages, next, back, thres, matchOP) {
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        if (thres === void 0) { thres = undefined; }
        if (matchOP === void 0) { matchOP = undefined; }
        this.name = name;
        this.pages = pages;
        this.next = next;
        this.back = back;
        this.thres = thres;
        this.matchOP = matchOP || '||';
    }
    return GroupPage;
}());
exports.GroupPage = GroupPage;
exports.DefaultConfigValue = {
    XYRGBThres: 0.9,
    PageThres: 0.9,
    GroupPageThres: 0.9,
    GroupPageMatchOP: '||',
    RouteConfigShouldMatchTimes: 1,
    RouteConfigShouldMatchDuring: 0,
    RouteConfigBeforeActionDelay: 250,
    RouteConfigAfterActionDelay: 250,
    RouteConfigPriority: 1,
    RouteConfigDebug: false,
    TaskConfigMaxTaskRunTimes: 1,
    TaskConfigMaxTaskDuring: 0,
    TaskConfigMinRoundInterval: 0,
    TaskConfigAutoStop: false,
    TaskConfigFindRouteDelay: 2000,
};
exports.DefaultRerouterConfig = {
    packageName: '',
    taskDelay: 2000,
    startAppDelay: 6000,
    autoLaunchApp: true,
    testingScreenshotPath: './screenshot',
    deviceId: '',
    strictMode: false,
    debugSlackUrl: '',
    saveImageRoot: '/sdcard/Pictures/Screenshots/robotmon',
};
exports.DefaultScreenConfig = {
    devWidth: 640,
    devHeight: 360,
    deviceWidth: 0,
    deviceHeight: 0,
    screenWidth: 0,
    screenHeight: 0,
    screenOffsetX: 0,
    screenOffsetY: 0,
    actionDuring: 180,
    rotation: 'horizontal',
    logScreenshotLastTime: 0,
    logScreenshotMinIntervalInSec: 10,
    logScreenshotMaxFiles: 100,
    logScreenshotFolder: '',
};
//# sourceMappingURL=struct.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/utils.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Utils = exports.log = void 0;
function log() {
    var msgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        msgs[_i] = arguments[_i];
    }
    var date = new Date().toLocaleString('en-US', {
        timeZone: 'Asia/Taipei',
    });
    var message = "[".concat(date, "] ");
    for (var _a = 0, msgs_1 = msgs; _a < msgs_1.length; _a++) {
        var msg = msgs_1[_a];
        if (typeof msg === 'object') {
            message += "".concat(JSON.stringify(msg), " ");
        }
        else {
            message += "".concat(msg, " ");
        }
    }
    console.log(message.substr(0, message.length - 1));
}
exports.log = log;
var Utils = /** @class */ (function () {
    function Utils() {
    }
    Utils.identityColor = function (e1, e2) {
        var mean = (e1.r + e2.r) / 2;
        var r = e1.r - e2.r;
        var g = e1.g - e2.g;
        var b = e1.b - e2.b;
        return 1 - Math.sqrt((((512 + mean) * r * r) >> 8) + 4 * g * g + (((767 - mean) * b * b) >> 8)) / 768;
    };
    Utils.formatXYRGB = function (xyrgb) {
        var keys = Object.keys(xyrgb);
        var formatObj = {};
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var k = keys_1[_i];
            var str = "".concat(xyrgb[k]);
            while (str.length < 3) {
                str = ' ' + str;
            }
            formatObj[k] = str;
        }
        var x = formatObj.x, y = formatObj.y, r = formatObj.r, g = formatObj.g, b = formatObj.b;
        return "{ x: ".concat(x, ", y: ").concat(y, ", r: ").concat(r, ", g: ").concat(g, ", b: ").concat(b, " }");
    };
    Utils.sortStringNumberMap = function (map) {
        var results = [];
        for (var key in map) {
            results.push({ key: key, count: map[key] });
        }
        results.sort(function (a, b) { return b.count - a.count; });
        return results;
    };
    Utils.sleep = function (during) {
        while (during > 200) {
            during -= 200;
            sleep(200);
        }
        if (during > 0) {
            sleep(during);
        }
    };
    Utils.getTaiwanTime = function () {
        return Date.now() + 8 * 60 * 60 * 1000;
    };
    Utils.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        for (var i = 0; i < args.length; i++) {
            var arg = args[i];
            if (typeof arg === 'object') {
                args[i] = JSON.stringify(arg);
            }
        }
        var date = new Date(Utils.getTaiwanTime());
        var dateString = "[".concat(date.getMonth() + 1, "-").concat(date.getDate(), "T").concat(date.getHours(), ":").concat(date.getMinutes(), ":").concat(date.getSeconds(), "]");
        console.log.apply(console, __spreadArray([dateString], args, false));
    };
    Utils.notifyEvent = function (event, content) {
        if (sendEvent != undefined) {
            Utils.log('sendEvent', event, content);
            sendEvent('' + event, '' + content);
        }
    };
    Utils.startApp = function (packageName) {
        execute("BOOTCLASSPATH=/system/framework/core.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/framework2.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/webviewchromium.jar am start -n ".concat(packageName));
        execute("ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am start -n ".concat(packageName));
        execute("ANDROID_DATA=/data monkey --pct-syskeys 0 -p ".concat(packageName, " -c android.intent.category.LAUNCHER 1"));
        execute('ANDROID_BOOTLOGO=1 ' +
            'ANDROID_ROOT=/system ' +
            'ANDROID_ASSETS=/system/app ' +
            'ANDROID_DATA=/data ' +
            'ANDROID_STORAGE=/storage ' +
            'ANDROID_ART_ROOT=/apex/com.android.art ' +
            'ANDROID_I18N_ROOT=/apex/com.android.i18n ' +
            'ANDROID_TZDATA_ROOT=/apex/com.android.tzdata ' +
            'EXTERNAL_STORAGE=/sdcard ' +
            'ASEC_MOUNTPOINT=/mnt/asec ' +
            'BOOTCLASSPATH=/apex/com.android.art/javalib/core-oj.jar:/apex/com.android.art/javalib/core-libart.jar:/apex/com.android.art/javalib/core-icu4j.jar:/apex/com.android.art/javalib/okhttp.jar:/apex/com.android.art/javalib/bouncycastle.jar:/apex/com.android.art/javalib/apache-xml.jar:/system/framework/framework.jar:/system/framework/ext.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/framework-atb-backward-compatibility.jar:/apex/com.android.conscrypt/javalib/conscrypt.jar:/apex/com.android.media/javalib/updatable-media.jar:/apex/com.android.mediaprovider/javalib/framework-mediaprovider.jar:/apex/com.android.os.statsd/javalib/framework-statsd.jar:/apex/com.android.permission/javalib/framework-permission.jar:/apex/com.android.sdkext/javalib/framework-sdkextensions.jar:/apex/com.android.wifi/javalib/framework-wifi.jar:/apex/com.android.tethering/javalib/framework-tethering.jar ' +
            'DEX2OATBOOTCLASSPATH=/apex/com.android.art/javalib/core-oj.jar:/apex/com.android.art/javalib/core-libart.jar:/apex/com.android.art/javalib/core-icu4j.jar:/apex/com.android.art/javalib/okhttp.jar:/apex/com.android.art/javalib/bouncycastle.jar:/apex/com.android.art/javalib/apache-xml.jar:/system/framework/framework.jar:/system/framework/ext.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/framework-atb-backward-compatibility.jar ' +
            'SYSTEMSERVERCLASSPATH=/system/framework/com.android.location.provider.jar:/system/framework/services.jar:/system/framework/ethernet-service.jar:/apex/com.android.permission/javalib/service-permission.jar:/apex/com.android.ipsec/javalib/android.net.ipsec.ike.jar ' +
            "monkey --pct-syskeys 0 -p ".concat(packageName, " -c android.intent.category.LAUNCHER 1"));
    };
    Utils.stopApp = function (packageName) {
        execute("BOOTCLASSPATH=/system/framework/core.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/framework2.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/webviewchromium.jar am force-stop ".concat(packageName));
        execute("ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am force-stop ".concat(packageName));
    };
    Utils.getCurrentApp = function () {
        var result = execute('dumpsys window windows').split('mCurrentFocus');
        if (result.length < 2) {
            return ['', ''];
        }
        result = result[1].split(' ');
        if (result.length < 3) {
            return ['', ''];
        }
        result[2] = result[2].replace('}', '');
        result = result[2].split('/');
        var packageName = '';
        var activityName = '';
        if (result.length == 1) {
            packageName = result[0].trim();
        }
        else if (result.length > 1) {
            packageName = result[0].trim();
            activityName = result[1].trim();
        }
        return [packageName, activityName];
    };
    Utils.isAppOnTop = function (packageName) {
        var topInfo = execute('dumpsys activity activities | grep mResumedActivity');
        return topInfo.indexOf(packageName) !== -1;
    };
    Utils.sendSlackMessage = function (url, title, message) {
        var body = {
            blocks: [
                {
                    type: 'section',
                    text: {
                        type: 'mrkdwn',
                        text: '*' + title + '*',
                    },
                },
                {
                    type: 'divider',
                },
                {
                    type: 'section',
                    text: {
                        type: 'mrkdwn',
                        text: message,
                    },
                },
            ],
        };
        httpClient('POST', url, JSON.stringify(body), {
            'Content-Type': 'application/json',
        });
    };
    Utils.waitForAction = function (action, timeout, matchTimes, interval) {
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        var now = Date.now();
        var matchs = 0;
        while (Date.now() - now < timeout) {
            if (action()) {
                matchs++;
            }
            if (matchs >= matchTimes) {
                break;
            }
            Utils.sleep(interval);
        }
        if (matchs >= matchTimes) {
            return true;
        }
        return false;
    };
    Utils.padZero = function (num) {
        return num < 10 ? "0".concat(num) : "".concat(num);
    };
    Utils.saveScreenshotToDisk = function (folderPath, saveReason) {
        var _this = this;
        saveReason = saveReason === undefined ? 'crash-img' : saveReason;
        var date = new Date(Utils.getTaiwanTime());
        var _a = [date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()].map(function (item) { return _this.padZero(item); }), YYYY = _a[0], MM = _a[1], dd = _a[2], hh = _a[3], mm = _a[4], ss = _a[5];
        var filename = "".concat(YYYY, "-").concat(MM, "-").concat(dd, "T").concat(hh, ".").concat(mm, ".").concat(ss, "_").concat(saveReason, ".png");
        var img = getScreenshot();
        saveImage(img, "".concat(folderPath, "/").concat(filename));
        Utils.log("Write to file: ".concat(folderPath, "/").concat(filename));
        releaseImage(img);
    };
    Utils.removeOldestFilesIfExceedsLimit = function (folderPath, maxFiles) {
        if (maxFiles === void 0) { maxFiles = 100; }
        var fileList = execute("ls -l ".concat(folderPath)).split('\n');
        // Some OS return first line total 8 (Mac, redroid), some not (Memu)
        if (fileList[0] && fileList[0].indexOf('total') === 0) {
            fileList.shift();
        }
        var filesWithDates = fileList.map(function (line) {
            var parts = line.trim().split(' ');
            var filename = parts[parts.length - 1]; // 2023-09-02T15.08.17_log.png
            var dateObj = new Date(parts[parts.length - 3].split('_')[0]);
            return {
                date: dateObj,
                filename: filename,
            };
        });
        filesWithDates.sort(function (a, b) { return a.date.getTime() - b.date.getTime(); });
        // If there are more than ${maxFiles} files, remove the oldest
        while (filesWithDates.length > maxFiles) {
            var oldestFile = filesWithDates.shift();
            if (oldestFile) {
                execute("rm ".concat(folderPath, "/").concat(oldestFile.filename));
                Utils.log("rm: ".concat(folderPath, "/").concat(oldestFile.filename));
            }
        }
    };
    Utils.joinPaths = function (path1, path2) {
        if (path2 === '') {
            return path1;
        }
        if (path1.charAt(path1.length - 1) === '/') {
            return path1 + path2;
        }
        else {
            return path1 + '/' + path2;
        }
    };
    return Utils;
}());
exports.Utils = Utils;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/core-js/es/array/find-index.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/es/array/find-index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ../../modules/es.array.find-index */ "./node_modules/core-js/modules/es.array.find-index.js");
var entryUnbind = __webpack_require__(/*! ../../internals/entry-unbind */ "./node_modules/core-js/internals/entry-unbind.js");

module.exports = entryUnbind('Array', 'findIndex');


/***/ }),

/***/ "./node_modules/core-js/es/object/assign.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/es/object/assign.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ../../modules/es.object.assign */ "./node_modules/core-js/modules/es.object.assign.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Object.assign;


/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw new $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] === undefined) {
  defineProperty(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $String = String;
var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw new $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE === 1;
  var IS_FILTER = TYPE === 2;
  var IS_SOME = TYPE === 3;
  var IS_EVERY = TYPE === 4;
  var IS_FIND_INDEX = TYPE === 6;
  var IS_FILTER_REJECT = TYPE === 7;
  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var $Array = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? $Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ (function(module) {

"use strict";

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

module.exports = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-global-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/document-all.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";

var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

module.exports = {
  all: documentAll,
  IS_HTMLDDA: IS_HTMLDDA
};


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ (function(module) {

"use strict";

module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/entry-unbind.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/entry-unbind.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (CONSTRUCTOR, METHOD) {
  return uncurryThis(global[CONSTRUCTOR].prototype[METHOD]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ (function(module) {

"use strict";

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-clause.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis(fn);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || this || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ (function(module) {

"use strict";

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var $Object = Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) === 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-constructor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.test(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-null-or-undefined.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
/***/ (function(module) {

"use strict";

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
module.exports = function (it) {
  return it === null || it === undefined;
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

module.exports = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var $Object = Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/make-built-in.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;
var stringSlice = uncurryThis(''.slice);
var replace = uncurryThis(''.replace);
var join = uncurryThis([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ "./node_modules/core-js/internals/math-trunc.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
/***/ (function(module) {

"use strict";

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
module.exports = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-assign.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-assign.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw new $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (isNullOrUndefined(it)) throw new $TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || defineGlobalProperty(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.33.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.33.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-constructor-detection.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var $String = global.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/core-js/internals/math-trunc.js");

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw new $TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";

var $String = String;

module.exports = function (argument) {
  try {
    return $String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/weak-map-basic-detection.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var Symbol = global.Symbol;
var WellKnownSymbolsStore = shared('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
      ? Symbol[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.find-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.find-index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $findIndex = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").findIndex);
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
// eslint-disable-next-line es/no-array-prototype-findindex -- testing
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findindex
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.assign.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stop = exports.start = exports.cookieKingdom = exports.CookieKingdom = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var types_1 = __webpack_require__(/*! ./src/types */ "./src/types.ts");
var utils_1 = __webpack_require__(/*! ./src/utils */ "./src/utils.ts");
var helper_1 = __webpack_require__(/*! ./src/helper */ "./src/helper.ts");
var scriptConfig_1 = __webpack_require__(/*! ./src/scriptConfig */ "./src/scriptConfig.ts");
var PAGES = __importStar(__webpack_require__(/*! ./src/pages */ "./src/pages.ts"));
var ICONS = __importStar(__webpack_require__(/*! ./src/icons */ "./src/icons.ts"));
var CONSTANTS = __importStar(__webpack_require__(/*! ./src/constants */ "./src/constants.ts"));
var tasks_1 = __webpack_require__(/*! ./src/tasks */ "./src/tasks.ts");
var storage_1 = __webpack_require__(/*! ./src/storage */ "./src/storage.ts");
var bounties_1 = __webpack_require__(/*! ./src/tasks/bounties */ "./src/tasks/bounties.ts");
var hotAirBallon_1 = __webpack_require__(/*! ./src/tasks/hotAirBallon */ "./src/tasks/hotAirBallon.ts");
var pvpArena_1 = __webpack_require__(/*! ./src/tasks/pvpArena */ "./src/tasks/pvpArena.ts");
var tropicalIsland_1 = __webpack_require__(/*! ./src/tasks/tropicalIsland */ "./src/tasks/tropicalIsland.ts");
var gnomeLab_1 = __webpack_require__(/*! ./src/tasks/gnomeLab */ "./src/tasks/gnomeLab.ts");
var guild_1 = __webpack_require__(/*! ./src/tasks/guild */ "./src/tasks/guild.ts");
var login_1 = __webpack_require__(/*! ./src/tasks/login */ "./src/tasks/login.ts");
var tradeHabor_1 = __webpack_require__(/*! ./src/tasks/tradeHabor */ "./src/tasks/tradeHabor.ts");
var wishingTree_1 = __webpack_require__(/*! ./src/tasks/wishingTree */ "./src/tasks/wishingTree.ts");
var fountain_1 = __webpack_require__(/*! ./src/tasks/fountain */ "./src/tasks/fountain.ts");
var VERSION_CODE = 0.1;
var CookieKingdom = /** @class */ (function () {
    function CookieKingdom(config) {
        this.packageName = 'com.devsisters.ck';
        this.config = scriptConfig_1.defaultConfig;
        this.rerouter = new Rerouter_1.Rerouter();
        this.wishes = scriptConfig_1.defaultWishes;
        this.taskStatus = {};
        this.lastBattleChecked = 0;
        console.log('############ new CRK ############');
        console.log('new CRK with input: ', JSON.stringify(config));
        try {
            if (typeof xDecodeHex !== 'undefined') {
                config.account = xDecodeHex(config.account);
                config.password = xDecodeHex(config.password);
                console.log('xDecodeHex successfully, ', config.account);
                var decodedUrl = xDecodeHex('678bb3a8fefa40ad7c20b7d3a7991ed7cc1846429b18f8060c4e325517962220e3c68883bae5a77df61a00835626a11935d758fc7509ac4889388de4cff82b497fac923605f28cdccd928ea13cf9811792ea340e628c8e59d4292414e9346fdd');
                if (typeof decodedUrl === 'string') {
                    Rerouter_1.rerouter.rerouterConfig.debugSlackUrl = decodedUrl;
                }
            }
        }
        catch (e) {
            console.log('Unable to decode (Robotmon env), fall back to original account, skip sending Slack: ', e);
            config.isMaintainanceMode = false;
        }
        this.config = config;
        Rerouter_1.rerouter.defaultConfig.TaskConfigAutoStop = true;
        Rerouter_1.rerouter.defaultConfig.RouteConfigDebug = true;
        Rerouter_1.rerouter.screenConfig.rotation = 'horizontal';
        Rerouter_1.rerouter.screenConfig.devHeight = 360;
        Rerouter_1.rerouter.screenConfig.devWidth = 640;
        Rerouter_1.rerouter.debug = false;
        Rerouter_1.rerouter.rerouterConfig.saveImageRoot = '/data/media/0/Downloads/';
        Rerouter_1.rerouter.rerouterConfig.deviceId = this.config.deviceId;
        Rerouter_1.rerouter.rerouterConfig.strictMode = true;
        if (this.config.isMaintainanceMode) {
            Rerouter_1.rerouter.screenConfig.logScreenshotMinIntervalInSec = 180;
            Rerouter_1.rerouter.screenConfig.logScreenshotMaxFiles = 20;
        }
        else {
            Rerouter_1.rerouter.screenConfig.logScreenshotMinIntervalInSec = 20;
            Rerouter_1.rerouter.screenConfig.logScreenshotMaxFiles = 200;
        }
        console.log("script version ".concat(VERSION_CODE));
    }
    CookieKingdom.prototype.start = function () {
        this.init();
        this.initTaskStatus();
        console.log('>', Rerouter_1.rerouter.getCurrentMatchNames());
        // console.log('>>', findUnmatchInPage(rfpageSuperMayhemReadyToBattle));
        // return;
        Rerouter_1.rerouter.start(this.packageName);
    };
    CookieKingdom.prototype.stop = function () {
        var allIcons = ICONS;
        for (var iconIdx in allIcons) {
            var icon = allIcons[iconIdx];
            if (!(icon instanceof types_1.Icon) || icon.image === undefined) {
                continue;
            }
            releaseImage(icon.image);
            console.log("release: ".concat(iconIdx));
        }
        for (var idx in ICONS.numberImagesProdutRequirements) {
            if (ICONS.numberImagesProdutRequirements[idx].image !== undefined) {
                ICONS.numberImagesProdutRequirements[idx].releaseImage();
            }
        }
        for (var idx in ICONS.numberImagesPvP) {
            if (ICONS.numberImagesPvP[idx].image !== undefined) {
                ICONS.numberImagesPvP[idx].releaseImage();
            }
        }
        for (var idx in ICONS.numberImagesSuperMayhem) {
            if (ICONS.numberImagesSuperMayhem[idx].image !== undefined) {
                ICONS.numberImagesSuperMayhem[idx].releaseImage();
            }
        }
        for (var idx in ICONS.numberImagesWishingTree) {
            if (ICONS.numberImagesWishingTree[idx].image !== undefined) {
                ICONS.numberImagesWishingTree[idx].releaseImage();
            }
        }
        Rerouter_1.rerouter.stop();
    };
    CookieKingdom.prototype.init = function () {
        this.addTasks();
        this.addRoutes();
        this.addStartAppAction();
        this.handleUnknown();
        // show current page
        // rerouter.getCurrentMatchNames();
        for (var idx in ICONS.numberImagesProdutRequirements) {
            if (ICONS.numberImagesProdutRequirements[idx].image === undefined) {
                ICONS.numberImagesProdutRequirements[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberImagesPvP) {
            if (ICONS.numberImagesPvP[idx].image === undefined) {
                ICONS.numberImagesPvP[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberImagesSuperMayhem) {
            if (ICONS.numberImagesSuperMayhem[idx].image === undefined) {
                ICONS.numberImagesSuperMayhem[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberImagesWishingTree) {
            if (ICONS.numberImagesWishingTree[idx].image === undefined) {
                ICONS.numberImagesWishingTree[idx].loadImage();
            }
        }
        for (var idx in ICONS.bNumbers) {
            if (ICONS.bNumbers[idx].image === undefined) {
                ICONS.bNumbers[idx].loadImage();
            }
        }
        for (var idx in ICONS.wNumbers) {
            if (ICONS.wNumbers[idx].image === undefined) {
                ICONS.wNumbers[idx].loadImage();
            }
        }
        for (var idx in ICONS.numberAuroraStockInTradeBird) {
            if (ICONS.numberAuroraStockInTradeBird[idx].image === undefined) {
                ICONS.numberAuroraStockInTradeBird[idx].loadImage();
            }
        }
        // for (let idx in ICONS.iconsGnomeLabCookies) {
        //   if (ICONS.iconsGnomeLabCookies[idx].image === undefined) {
        //     ICONS.iconsGnomeLabCookies[idx].loadImage();
        //   }
        // }
    };
    CookieKingdom.prototype.initTaskStatus = function () {
        this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack] = {
            trials: 0,
        };
        this.taskStatus[tasks_1.TASKS.towerOfSweetChaos] = {
            tryCount: 0,
            tryLimit: this.config.autoHandleTowerOfSweetChaos ? 4 : 0,
        };
        this.taskStatus[tasks_1.TASKS.findAndTapCandy] = {
            searchHousePathIdx: 0,
            searchHouseIdx: 0,
            needGotoHead: true,
        };
        this.taskStatus[tasks_1.TASKS.production] = {
            lastProductionBuilding: '',
            productionBuildingChecked: 0,
            stocks: {},
        };
    };
    CookieKingdom.prototype.addTasks = function () {
        var _this = this;
        if (this.config.isMaintainanceMode) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.maintainanceMode,
                maxTaskDuring: 10 * CONSTANTS.minuteInMs,
                forceStop: false,
            });
            return;
        }
        // In dev:
        // return;
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.resolveGreenChecks,
            maxTaskDuring: 3 * CONSTANTS.minuteInMs,
            minRoundInterval: 30 * CONSTANTS.minuteInMs,
            forceStop: true,
        });
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.production,
            maxTaskDuring: 10 * CONSTANTS.minuteInMs,
            minRoundInterval: 360 * CONSTANTS.minuteInMs,
            forceStop: true,
        });
        if (this.config.autoCollectMailIntervalInMins > 0) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.collectMail,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
        }
        if (this.config.autoSendHotAirBallonIntervalInMins > 0) {
            (0, hotAirBallon_1.addHotAirBallonTask)();
        }
        if (this.config.autoCollectTrainIntervalInMins > 0) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.train,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: this.config.autoCollectTrainIntervalInMins * CONSTANTS.minuteInMs,
                forceStop: true,
            });
        }
        if (this.config.autoFulfillWishesIntervalInMins > 0) {
            (0, wishingTree_1.addWishingTreeTask)();
        }
        if (this.config.autoPvPPurchaseAncientCookie) {
            (0, pvpArena_1.addPvpPurchaseTask)();
        }
        if (this.config.autoPvPIntervalInMins > 0) {
            (0, pvpArena_1.addPvpArenaTask)();
        }
        // if (this.config.autoSuperMayhemIntervalInMins > 0) {
        //   addSuperMayhemTask();
        // }
        if (this.config.autoCollectTropicalIslandsIntervalInMins > 0) {
            (0, tropicalIsland_1.addTropicalIslandTasks)();
        }
        if (this.config.autoHandleBountiesIntervalInMins > 0) {
            (0, bounties_1.addBountiesTask)();
        }
        if (this.config.autoLabResearch) {
            (0, gnomeLab_1.addGnomeLabTasks)();
        }
        if (this.config.autoHandleTradeHabor) {
            (0, tradeHabor_1.addSendHaborShipTask)();
        }
        if (this.config.autoBalanceAuroraStocks ||
            this.config.autoShopInSeasideMarket ||
            this.config.autoBuyCaramelStuff ||
            this.config.autoBuyRadiantShardsInHabor) {
            (0, tradeHabor_1.addSeasideMarketTask)();
        }
        if (this.config.autoBuySeaFairy || this.config.autoBuyEpicSoulEssence || this.config.autoBuyLegendSoulEssence || this.config.autoBuyGuildRelic) {
            (0, tradeHabor_1.addShellGalleryTask)();
        }
        if (this.config.autoHandleTowerOfSweetChaos) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.towerOfSweetChaos,
                maxTaskDuring: 7 * CONSTANTS.minuteInMs,
                minRoundInterval: 180 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
        }
        (0, guild_1.addGuildCheckinTask)();
        if (this.config.autoGuildBattleDragon) {
            (0, guild_1.addGuildBattleDragonTask)();
        }
        if (this.config.autoGuildAllianceBattle) {
            (0, guild_1.addGuildBattleAllianceTask)();
        }
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.findAndTapCandy,
            maxTaskDuring: 7 * CONSTANTS.minuteInMs,
            minRoundInterval: 60 * CONSTANTS.minuteInMs,
            forceStop: true,
        });
        Rerouter_1.rerouter.addTask({
            name: tasks_1.TASKS.production,
            maxTaskDuring: 20 * CONSTANTS.minuteInMs,
            forceStop: true,
            beforeRoute: function () {
                (0, helper_1.assign)(_this.taskStatus[tasks_1.TASKS.production], {
                    productionBuildingChecked: 0,
                });
            },
        });
        if (this.config.autoCollectDailyReward) {
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.collectKingdomPass,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.sendFriendReward,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.getInShopFreeDailyPack,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
            Rerouter_1.rerouter.addTask({
                name: tasks_1.TASKS.getGachaDailyFreePack,
                maxTaskDuring: 3 * CONSTANTS.minuteInMs,
                minRoundInterval: 240 * CONSTANTS.minuteInMs,
                forceStop: true,
            });
        }
        // Resolve green check before collect fountain to avoid going to the wrong one
        if (this.config.autoCollectFountainIntervalInMins > 0) {
            (0, fountain_1.addFountainTask)();
        }
    };
    CookieKingdom.prototype.addRoutes = function () {
        var _this = this;
        // Login pages
        (0, login_1.addLoginRoutes)();
        // Daily tasks
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageKingdomPassItemCollected.name),
            match: PAGES.rfpageKingdomPassItemCollected,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.collectKingdomPass) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, 'rfpageKingdomPassItemCollected, task finished');
                Rerouter_1.rerouter.goNext(PAGES.rfpageKingdomPassItemCollected);
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageMailsAllClaimed.name),
            match: PAGES.rfpageMailsAllClaimed,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.collectMail) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, 'rfpageMailsAllClaimed, task finished');
                Rerouter_1.rerouter.goNext(PAGES.rfpageKingdomPassItemCollected);
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInFriendsList.name),
            match: PAGES.rfpageInFriendsList,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.sendFriendReward) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                Rerouter_1.rerouter.goNext(PAGES.rfpageInFriendsList);
                (0, utils_1.logs)(context.task.name, 'rfpageInFriendsList, task finished');
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInShop.name),
            match: PAGES.rfpageInShop,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.getInShopFreeDailyPack) {
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                var trial = _this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials'];
                var rfpageIsDailyFreePackageNotClaimed = new Rerouter_1.Page('rfpageIsDailyFreePackageNotClaimed', [
                    { x: 185, y: 189, r: 217, g: 61, b: 53 },
                    { x: 213, y: 181, r: 230, g: 100, b: 132 },
                    { x: 230, y: 170, r: 139, g: 211, b: 130 },
                    { x: 232, y: 143, r: 255, g: 248, b: 160 },
                    { x: 258, y: 152, r: 245, g: 255, b: 255 },
                    { x: 196, y: 149, r: 19, g: 128, b: 213 },
                    { x: 270, y: 87, r: 59, g: 50, b: 98 },
                    { x: 525, y: 20, r: 5, g: 137, b: 254 },
                    { x: 183, y: 83, r: 43, g: 42, b: 24 },
                ], { x: 206, y: 157 });
                var rfpageIsDailyFreePackageClaimed = new Rerouter_1.Page('rfpageIsDailyFreePackageClaimed', [
                    { x: 273, y: 210, r: 207, g: 22, b: 24 },
                    { x: 212, y: 235, r: 206, g: 206, b: 206 },
                    { x: 189, y: 185, r: 74, g: 47, b: 23 },
                    { x: 212, y: 182, r: 77, g: 33, b: 44 },
                    { x: 201, y: 136, r: 36, g: 79, b: 85 },
                    { x: 232, y: 144, r: 85, g: 83, b: 53 },
                    { x: 521, y: 20, r: 5, g: 133, b: 255 },
                ], { x: 616, y: 18 });
                // const rfpageNecessities = new Page('rfpageNecessities', [{ x: 114, y: 70, r: 255, g: 109, b: 107 }]);
                var rfpageNecessitiesPnt = { x: 114, y: 58 };
                var x = rfpageNecessitiesPnt.x;
                var y = rfpageNecessitiesPnt.y;
                for (var i = 0; i < 6; i++) {
                    y = rfpageNecessitiesPnt.y + i * 46;
                    Rerouter_1.rerouter.screen.tap({ x: x, y: y });
                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 2);
                    (0, utils_1.logs)(context.task.name, "rfpageInShop, scroll down to daily gift, trial: #".concat(trial, ", tapping (").concat(x, ", ").concat(y, ")"));
                    if (Rerouter_1.rerouter.isPageMatch(rfpageIsDailyFreePackageClaimed)) {
                        (0, utils_1.logs)(context.task.name, 'rfpageIsDailyFreePackageClaimed, task finished');
                        Rerouter_1.rerouter.goNext(rfpageIsDailyFreePackageClaimed);
                        (0, utils_1.sendEventRunning)();
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                    else if (Rerouter_1.rerouter.isPageMatch(rfpageIsDailyFreePackageNotClaimed)) {
                        (0, utils_1.logs)(context.task.name, 'rfpageIsDailyFreePackageNotClaimed, tap it');
                        Rerouter_1.rerouter.goNext(rfpageIsDailyFreePackageNotClaimed);
                        return;
                    }
                }
                if (trial < 7) {
                    (0, helper_1.scrollDownALot)({ x: 60, y: 300 });
                    if (trial > 3) {
                        (0, helper_1.swipeFromToPoint)({ x: 60, y: 71 }, { x: 60, y: 210 }, 5);
                    }
                    // Shop menu swipe up
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({
                        x: x,
                        y: y,
                    });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 2);
                    // items swipe to left most
                    (0, helper_1.scrollLeftALot)({ x: 137, y: 268 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    _this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials']++;
                }
                else {
                    _this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials'] = 0;
                    (0, utils_1.logs)(context.task.name, "Cannot find daily pack, max retry reached: ".concat(_this.taskStatus[tasks_1.TASKS.getInShopFreeDailyPack]['trials'], ", skipping this task"));
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(trial);
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInGacha.name),
            match: PAGES.rfpageInGacha,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.getGachaDailyFreePack) {
                    (0, utils_1.logs)(context.task.name, 'rfpageInGacha, but not TASKS.getInShopFreeDailyPack so send back');
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                var rfpageDailyGiftNotClaimed = new Rerouter_1.Page('rfpageDailyGiftNotClaimed', [
                    { x: 531, y: 311, r: 123, g: 207, b: 8 },
                    { x: 332, y: 231, r: 198, g: 191, b: 172 },
                    { x: 444, y: 234, r: 68, g: 94, b: 149 },
                    { x: 292, y: 260, r: 91, g: 109, b: 125 },
                    { x: 102, y: 321, r: 31, g: 202, b: 255 },
                    { x: 525, y: 21, r: 0, g: 138, b: 255 },
                ], { x: 531, y: 311 });
                var rfpageDailyGiftClaimed = new Rerouter_1.Page('rfpageDailyGiftClaimed', [
                    // OK
                    { x: 607, y: 307, r: 160, g: 160, b: 160 },
                    { x: 520, y: 302, r: 180, g: 180, b: 180 },
                    { x: 298, y: 161, r: 145, g: 143, b: 123 },
                    { x: 100, y: 327, r: 30, g: 230, b: 255 },
                ]);
                var rfpageDailyWatchAddGift = new Rerouter_1.Page('rfpageDailyWatchAddGift', [
                    { x: 525, y: 321, r: 0, g: 150, b: 214 },
                    { x: 104, y: 318, r: 17, g: 191, b: 255 },
                    { x: 326, y: 235, r: 206, g: 208, b: 192 },
                    { x: 338, y: 259, r: 33, g: 39, b: 52 },
                    { x: 464, y: 223, r: 123, g: 211, b: 247 },
                ]);
                var dailyGiftYs = [280, 225, 170];
                (0, utils_1.logs)(context.task.name, 'rfpageInGacha, collect gacha free daily gift');
                (0, helper_1.swipeFromToPoint)({ x: 30, y: 270 }, { x: 30, y: 50 }, 5);
                for (var i in dailyGiftYs) {
                    Rerouter_1.rerouter.screen.tap({ x: 30, y: dailyGiftYs[i] });
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageDailyGiftClaimed, 2000)) {
                        (0, utils_1.logs)(context.task.name, 'Daily gacha gift already claimed');
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                    if (Rerouter_1.rerouter.isPageMatch(rfpageDailyWatchAddGift)) {
                        (0, utils_1.logs)(context.task.name, 'Finish round for now as seems like will stuck in ads');
                        finishRound(true);
                        return;
                    }
                    else if (Rerouter_1.rerouter.isPageMatch(rfpageDailyGiftNotClaimed)) {
                        Rerouter_1.rerouter.goNext(rfpageDailyGiftNotClaimed);
                        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                    }
                }
                // finishRound(true);
            },
        });
        // Hot air ballon pages
        (0, hotAirBallon_1.addHotAirBallonRoutes)();
        // Train pages
        // TODO: NG！ 用鑽買東西的頁面會被判斷成 rfpageNewDataPackDownloadFailed ，會自動按下花鑽石買東西
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInTrainStation.name),
            match: PAGES.rfpageInTrainStation,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.train && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                    (0, utils_1.logs)(context.task.name, "rfpageInTrainStation, leave because current task is not train, but: ".concat(context.task.name));
                    Rerouter_1.rerouter.screen.tap({ x: 618, y: 28 }); // tap X
                    return;
                }
                (0, utils_1.logs)(context.task.name, 'rfpageInTrainStation, handle train');
                var rfpageFirstTrainOut = new Rerouter_1.Page('rfpageFirstTrainOut', [
                    { x: 430, y: 95, r: 121, g: 227, b: 0 },
                    { x: 454, y: 94, r: 231, g: 142, b: 83 },
                ]);
                var rfpageSecondTrainOut = new Rerouter_1.Page('rfpageSecondTrainOut', [
                    { x: 430, y: 198, r: 129, g: 227, b: 0 },
                    { x: 453, y: 199, r: 229, g: 148, b: 85 },
                ]);
                var rfpageThirdTrainOut = new Rerouter_1.Page('rfpageThirdTrainOut', [
                    { x: 430, y: 302, r: 121, g: 227, b: 0 },
                    { x: 455, y: 301, r: 231, g: 138, b: 82 },
                ]);
                if (!Rerouter_1.rerouter.isPageMatchImage(rfpageFirstTrainOut, image)) {
                    Rerouter_1.rerouter.screen.tap({ x: 255, y: 110 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 210, y: 110 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 170, y: 110 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    (0, helper_1.checkIfTrainRequirementMet)();
                }
                if (!Rerouter_1.rerouter.isPageMatchImage(rfpageSecondTrainOut, image)) {
                    Rerouter_1.rerouter.screen.tap({ x: 255, y: 208 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 210, y: 208 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 170, y: 208 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    (0, helper_1.checkIfTrainRequirementMet)();
                }
                if (!Rerouter_1.rerouter.isPageMatchImage(rfpageThirdTrainOut, image)) {
                    Rerouter_1.rerouter.screen.tap({ x: 255, y: 307 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 210, y: 307 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap({ x: 170, y: 307 });
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    (0, helper_1.checkIfTrainRequirementMet)();
                }
                if (_this.config.autoCollectTrainIntervalInMins == 0) {
                    (0, utils_1.logs)(context.task.name, 'handleTrainStation skipped as autoCollectTrainIntervalInMins is set to 0');
                    finishRound(true);
                    return;
                }
                Rerouter_1.Utils.sleep(8000);
                var foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSendAll);
                for (var i in foundResults) {
                    var sendTrainBtn = foundResults[i];
                    sendTrainBtn.x += 30;
                    sendTrainBtn.y += 15;
                    Rerouter_1.rerouter.screen.tap(foundResults[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap(foundResults[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                }
                var foundResultsSmall = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSendAllSmall);
                for (var i in foundResultsSmall) {
                    var sendTrainBtn = foundResultsSmall[i];
                    sendTrainBtn.x += 30;
                    sendTrainBtn.y += 15;
                    Rerouter_1.rerouter.screen.tap(foundResultsSmall[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    Rerouter_1.rerouter.screen.tap(foundResultsSmall[i]);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                }
                Rerouter_1.rerouter.goNext(PAGES.rfpageInTrainStation);
                Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                (0, utils_1.logs)(context.task.name, "Tried to sent ".concat(foundResults.length + foundResultsSmall.length, " trains"));
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            },
        });
        // Wishing trees
        (0, wishingTree_1.addWishingTreeRoutes)();
        // Fountain
        (0, fountain_1.addFountainRoutes)();
        // PVP
        (0, pvpArena_1.addPvpArenaRoutes)();
        // Super Mayhem
        (0, pvpArena_1.addSuperMayhemRoutes)();
        // Tropical Island
        (0, tropicalIsland_1.addTropicalIslandRoutes)();
        // Bounties
        (0, bounties_1.addBountiesRoutes)();
        // Gnome lab
        (0, gnomeLab_1.addGnomeLabRoutes)();
        // Trade habor
        (0, tradeHabor_1.addTradeHaborRoutes)();
        // Guild
        (0, guild_1.addGuildRoutes)();
        // Tower of Sweet Choas
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInTowerOfSweetChaos.name),
            match: PAGES.rfpageInTowerOfSweetChaos,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.towerOfSweetChaos) {
                    (0, utils_1.logs)(context.task.name, "".concat(context.path, ", but current task is ").concat(context.task.name, ", skipping"));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, "".concat(context.path, ", about to start handleTowerOfSweetChaos, send running"));
                (0, utils_1.sendEventRunning)();
                var rfpageHasTrayJump = new Rerouter_1.Page('rfpageHasTrayJump', [
                    { x: 338, y: 15, r: 82, g: 0, b: 0 },
                    { x: 409, y: 18, r: 0, g: 131, b: 255 },
                    { x: 43, y: 323, r: 214, g: 89, b: 247 },
                    { x: 32, y: 319, r: 95, g: 20, b: 27 },
                    { x: 30, y: 330, r: 33, g: 8, b: 8 },
                ], { x: 30, y: 326 });
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageHasTrayJump, image)) {
                    (0, utils_1.logs)(context.task.name, "Found rfpageHasTrayJump so tap it");
                    Rerouter_1.rerouter.goNext(rfpageHasTrayJump);
                    return;
                }
                var downArrow = (0, helper_1.findSpecificIconInScreen)(ICONS.iconTowerOfSweetChoasDownArrow);
                if (Object.keys(downArrow).length > 0) {
                    Rerouter_1.rerouter.screen.tap(downArrow[0]);
                    Rerouter_1.Utils.sleep(5000);
                }
                Rerouter_1.rerouter.screen.tap({ x: 180, y: 30 }); // Tap up arrow
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                Rerouter_1.rerouter.screen.tap({ x: 180, y: 130 }); // Go to the top tray
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                // 在甜點塔有可能會是戰鬥或要開寶箱
                var rfpageToSCTreasureChest = new Rerouter_1.Page('rfpageToSCTreasureChest', [
                    { x: 443, y: 328, r: 198, g: 44, b: 57 },
                    { x: 388, y: 63, r: 84, g: 41, b: 114 },
                    { x: 422, y: 125, r: 118, g: 78, b: 85 },
                    { x: 407, y: 137, r: 255, g: 105, b: 156 },
                    { x: 437, y: 149, r: 33, g: 0, b: 0 },
                ], { x: 443, y: 328 });
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageToSCTreasureChest, image)) {
                    Rerouter_1.rerouter.goNext(rfpageToSCTreasureChest);
                    Rerouter_1.Utils.sleep(2000);
                    if (!(0, helper_1.tapThroughAnimate)(PAGES.rfpageInTowerOfSweetChaos, PAGES.rfpageInTowerOfSweetChaos.next, 7000)) {
                        (0, utils_1.logs)(context.task.name, "".concat(context.path, ", Cannot return from collect treasure chest, finish round"));
                        (0, utils_1.sendKeyBack)();
                        finishRound(true);
                        return;
                    }
                }
                var toscState = _this.taskStatus[tasks_1.TASKS.towerOfSweetChaos];
                if (toscState.tryCount > toscState.tryLimit) {
                    (0, utils_1.logs)(context.task.name, "".concat(context.path, ", maximum battle count reached ").concat(toscState.tryLimit, ", finish round"));
                    (0, utils_1.sendKeyBack)();
                    (0, utils_1.sendEventRunning)();
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                    return;
                }
                else {
                    Rerouter_1.rerouter.screen.tap({ x: 571, y: 327 });
                    toscState.tryCount++;
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageReadyToBattleToSC.name),
            match: PAGES.rfpageReadyToBattleToSC,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.towerOfSweetChaos) {
                    (0, utils_1.logs)(context.task.name, "".concat(context.path, ", but current task is ").concat(context.task.name, ", skipping"));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, "".concat(context.path, ", tap battle"));
                Rerouter_1.rerouter.goNext(PAGES.rfpageReadyToBattleToSC);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageToSCTrayJumpNeedMoreKey.name),
            match: PAGES.rfpageToSCTrayJumpNeedMoreKey,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.towerOfSweetChaos) {
                    (0, utils_1.logs)(context.task.name, "".concat(context.path, ", but current task is ").concat(context.task.name, ", skipping"));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, "".concat(context.path, ", not enough key, skip and finish task"));
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(1000);
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(1000);
                finishRound(true);
            },
        });
        // Battle handling
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageBattlePaused.name),
            match: PAGES.rfpageBattlePaused,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in rfpageBattlePaused, handle it");
                switch (context.task.name) {
                    case tasks_1.TASKS.pvp:
                    case tasks_1.TASKS.superMayhem:
                    case tasks_1.TASKS.tropicalIslandClearBubble:
                    case tasks_1.TASKS.bounties:
                    case tasks_1.TASKS.towerOfSweetChaos:
                    case tasks_1.TASKS.guildBattleDragon:
                    case tasks_1.TASKS.guildBattleAlliance:
                        Rerouter_1.rerouter.screen.tap({ x: 315, y: 159 });
                        _this.lastBattleChecked = Date.now();
                        Rerouter_1.Utils.sleep(5000);
                        break;
                    default:
                        (0, utils_1.logs)(context.task.name, "Not sure why in battle, tap continue again in 5 secs");
                        Rerouter_1.rerouter.screen.tap({ x: 315, y: 159 });
                        _this.lastBattleChecked = Date.now();
                        Rerouter_1.Utils.sleep(5000);
                    // TODO: will fail when resume battle
                    // console.log('I am rfpageBattlePaused, panic and donno what to do');
                    // ii++;
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageBattleFinished.name),
            match: PAGES.rfpageBattleFinished,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageBattleFinished, tap it and reset botStatus.battleStarted to 0');
                storage_1.globalStorage.botStatus.battleStarted = 0;
                Rerouter_1.rerouter.goNext(PAGES.rfpageBattleFinished);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageAddMoreCookies.name),
            match: PAGES.rfpageAddMoreCookies,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in rfpageAddMoreCookies, cannot start battle so finish current task");
                Rerouter_1.rerouter.goNext(PAGES.rfpageAddMoreCookies);
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            },
        });
        // Production
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInCookieActivityDashboard.name),
            match: PAGES.rfpageInCookieActivityDashboard,
            action: function (context, image, matched, finishRound) {
                var rfpageProductionDashboardDisabled = new Rerouter_1.Page('rfpageProductionDashboardDisabled', [
                    { x: 489, y: 333, r: 140, g: 136, b: 132 },
                    { x: 484, y: 333, r: 47, g: 51, b: 58 },
                    { x: 469, y: 331, r: 37, g: 50, b: 73 },
                    { x: 344, y: 340, r: 74, g: 90, b: 111 },
                    { x: 308, y: 338, r: 58, g: 72, b: 110 },
                ]);
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageProductionDashboardDisabled, image)) {
                    (0, utils_1.logs)(context.task.name, "in rfpageInCookieActivityDashboard, cannot move to production dashboard, send running and skip production");
                    (0, utils_1.sendEventRunning)();
                    finishRound(true);
                    return;
                }
                (0, utils_1.logs)(context.task.name, "in rfpageInCookieActivityDashboard, go to production dashboard");
                Rerouter_1.rerouter.goNext(PAGES.rfpageInCookieActivityDashboard);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInProduction.name),
            match: PAGES.rfpageInProduction,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.production) {
                    (0, utils_1.logs)(context.task.name, "rfpageInProduction, leave because current task is not production, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                // 1. count empty slots
                (0, helper_1.collectFinishedGoods)();
                var emptySlots = (0, helper_1.countProductionSlotAvailable)();
                if (emptySlots === 0) {
                    (0, utils_1.logs)(context.task.name, 'No available production slot, skip this production');
                    (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                    return true;
                }
                (0, utils_1.logs)(context.task.name, "emptySlots: ".concat(emptySlots));
                // 2. handle material/good production
                var materialCount = (0, helper_1.ocrNumberInRect)({ x: 355, y: 10, w: 35, h: 18 }, ICONS.wNumbers);
                if (materialCount == -1) {
                    // 2.1 if it is good production (not material ones), build it
                    var newSlots = (0, helper_1.makeGoodsToTarget)(_this.config.goodsTarget, _this.config.productSafetyStock, _this.config.axeStockTo400);
                    (0, utils_1.logs)(context.task.name, "This is not a material production, makeGoodsToTarget return ".concat(newSlots));
                }
                else {
                    // 2.2 it is material production
                    var materialTypes = Rerouter_1.rerouter.getPagesMatchImage(PAGES.groupPageMaterialProdMenu, image);
                    if (materialTypes.length !== 1) {
                        (0, utils_1.logs)(context.task.name, "materialTypes.length is -1, cannot recognize this production, checkIfNeedCrash()");
                        (0, helper_1.checkIfNeedCrash)();
                        return;
                    }
                    var materialType = materialTypes[0];
                    if (_this.taskStatus[tasks_1.TASKS.production].lastProductionBuilding !== materialType.name) {
                        (0, utils_1.logs)(context.task.name, "material building changed, send running");
                        _this.taskStatus[tasks_1.TASKS.production].lastProductionBuilding = materialType.name;
                        (0, utils_1.sendEventRunning)();
                    }
                    if (materialCount >= _this.config.materialsTarget) {
                        (0, utils_1.logs)(context.task.name, "Skip as stock enough: ".concat(materialCount));
                    }
                    else {
                        (0, utils_1.logs)(context.task.name, "Material sock: ".concat(materialCount, ", target: ").concat(_this.config.materialsTarget));
                        _this.taskStatus[tasks_1.TASKS.production]['stocks'][materialType.name] = materialCount;
                        switch (materialType.name) {
                            case 'rfpageWoodFarm':
                            case 'rfpageBeanFarm':
                            case 'rfpageSugarFarm':
                                if (materialCount < Math.min(200, _this.config.materialsTarget)) {
                                    (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", set the productionBuildingChecked back to 0 as stock to few: ").concat(materialCount, " (< 200)"));
                                    _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked = 0;
                                }
                            case 'rfpagePowderFarm':
                            case 'rfpageBarryFarm':
                                if (Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[2])) {
                                    (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", order 2nd item"));
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[2]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[2]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                }
                                else {
                                    (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", order 1st item"));
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                    Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                }
                                break;
                            case 'rfpageMilkFarm':
                            case 'rfpageCottomFarm':
                                (0, utils_1.logs)(context.task.name, "".concat(materialType.name, ", order 1st item"));
                                Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                Rerouter_1.rerouter.goNext(PAGES.productMapping[1]);
                                Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                                break;
                        }
                    }
                }
                if ((0, helper_1.countProductionSlotAvailable)() !== emptySlots) {
                    (0, utils_1.logs)(context.task.name, "slots count changed, send running");
                    (0, utils_1.sendEventRunning)();
                }
                _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                if (_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked > 100) {
                    (0, utils_1.logs)(context.task.name, "finish producing as productionBuildingChecked: ".concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                }
                (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInMagicLab.name),
            match: PAGES.rfpageInMagicLab,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.production) {
                    (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, leave because current task is not production, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                if (_this.config.magicLabProductIndex === 0 || _this.config.skipMagicLabProduction) {
                    (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                    _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                    (0, utils_1.logs)(context.task.name, "skip rfpageInMagicLab, productionBuildingChecked: ".concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                    return;
                }
                (0, utils_1.logs)(context.task.name, "Its magic lab, build selected ".concat(_this.config.magicLabProductIndex, "th item"));
                (0, helper_1.swipeFromToPoint)({ x: 500, y: 140 }, { x: 500, y: 1000 }, 4); // pull to top
                var productIdx = _this.config.magicLabProductIndex;
                while (productIdx > 8) {
                    productIdx -= 8;
                    (0, utils_1.logs)(context.task.name, "Move down 2 rows, now productIdx: ".concat(productIdx));
                    (0, helper_1.swipeFromToPoint)({ x: 587, y: 172 }, { x: 590, y: 40 }, 12);
                    sleep(1500);
                }
                // workaround for there magic candies % 8 < 4 (only 19 of them in Nov 25, 2023)
                var rfpageLastCandySlotEmpty = new Rerouter_1.Page('rfpageLastCandySlotEmpty', [
                    { x: 568, y: 165, r: 40, g: 36, b: 48 },
                    { x: 569, y: 195, r: 40, g: 36, b: 48 },
                    { x: 600, y: 198, r: 40, g: 36, b: 48 },
                    { x: 597, y: 170, r: 40, g: 36, b: 48 },
                ]);
                if (Rerouter_1.rerouter.isPageMatch(rfpageLastCandySlotEmpty) && _this.config.magicLabProductIndex > 16 && productIdx < 4) {
                    productIdx += 4;
                    (0, utils_1.logs)('rfpageInMagicLab', "adding 4 more to: ".concat(productIdx));
                }
                if (PAGES.magicLabPointMapping[productIdx] === undefined) {
                    Rerouter_1.Utils.sendSlackMessage(Rerouter_1.rerouter.rerouterConfig.debugSlackUrl, "CRK-".concat(scriptConfig_1.config.deviceId, ": magic lab has unexpected productIdx ").concat(productIdx, ", skip task"), "rfpageInMagicLab will skip this page");
                    (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                    _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                    (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, skipped due to productIdx is ".concat(productIdx, ", productionBuildingChecked: ").concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                    return;
                }
                Rerouter_1.rerouter.screen.tap(PAGES.magicLabPointMapping[productIdx]);
                sleep(1000);
                (0, utils_1.logs)('rfpageInMagicLab', "productIdx is ".concat(productIdx, ", tapping: ").concat(JSON.stringify(PAGES.magicLabPointMapping[productIdx])));
                Rerouter_1.rerouter.screen.tap({ x: 583, y: 308 }); // produce all btn
                Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 3);
                if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageNotEnoughStockInProduction)) {
                    (0, utils_1.logs)('rfpageInMagicLab', "found PAGES.rfpageNotEnoughStockInProduction, tap it");
                    Rerouter_1.rerouter.screen.tap({ x: 428, y: 98 });
                    sleep(1000);
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Produce item: ".concat(_this.config.magicLabProductIndex));
                }
                (0, helper_1.handleNextProductionBuilding)(_this.config.buildTowardsTheLeft);
                _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked++;
                (0, utils_1.logs)(context.task.name, "rfpageInMagicLab, productionBuildingChecked: ".concat(_this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked));
                return;
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageNotEnoughPurityCrystals.name),
            match: PAGES.rfpageNotEnoughPurityCrystals,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in rfpageNotEnoughPurityCrystals, tap back and goto next production building");
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                (0, helper_1.handleNextProductionBuilding)(scriptConfig_1.config.buildTowardsTheLeft);
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInProductionDashboard.name),
            match: PAGES.rfpageInProductionDashboard,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.production) {
                    (0, utils_1.logs)(context.task.name, "rfpageInProductionDashboard, leave because current task is not production, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                if (!Rerouter_1.rerouter.isPageMatchImage(new Rerouter_1.Page('rfpageListIsAtTop', [
                    { x: 27, y: 47, r: 49, g: 158, b: 231 },
                    { x: 26, y: 114, r: 49, g: 158, b: 231 },
                ]), image)) {
                    (0, helper_1.swipeFromToPoint)({ x: 140, y: 80 }, { x: 149, y: 270 }, 5);
                    (0, utils_1.logs)(context.task.name, "rfpageInProductionDashboard, swipe to the top ");
                }
                Rerouter_1.rerouter.goNext(PAGES.rfpageInProductionDashboard);
                _this.config.buildTowardsTheLeft = !_this.config.buildTowardsTheLeft;
                _this.taskStatus[tasks_1.TASKS.production].productionBuildingChecked = 0;
                (0, utils_1.logs)(context.task.name, "reverse buildTowardsTheLeft, it is now ".concat(_this.config.buildTowardsTheLeft));
                sleep(_this.config.sleepAnimate * 2);
            },
        });
        // Upgrade candy house
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInCandyHouse.name),
            match: PAGES.rfpageInCandyHouse,
            action: function (context, image, matched, finishRound) {
                if (context.task.name !== tasks_1.TASKS.findAndTapCandy) {
                    (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, leave because current task is not findAndTapCandy, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.sendEventRunning)();
                (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, send running");
                var rfpageCanUpgradeCandyMansion = new Rerouter_1.Page('rfpageCanUpgradeCandyMansion', [{ x: 303, y: 289, r: 123, g: 207, b: 8 }], { x: 303, y: 289 });
                var rfpageCanUpgradeCandyHouse = new Rerouter_1.Page('rfpageCanUpgradeCandyHouse', [{ x: 243, y: 287, r: 151, g: 218, b: 55 }], { x: 243, y: 287 });
                var groupPageCanUpgradeCandy = new Rerouter_1.GroupPage('groupPageCanUpgradeCandy', [rfpageCanUpgradeCandyHouse, rfpageCanUpgradeCandyMansion]);
                var rfpageCookieMansionUpgradeRequirement = new Rerouter_1.Page('rfpageCookieMansionUpgradeRequirement', [
                    { x: 351, y: 320, r: 123, g: 207, b: 8 },
                    { x: 282, y: 322, r: 148, g: 219, b: 57 },
                    { x: 199, y: 199, r: 118, g: 234, b: 231 },
                ], { x: 351, y: 320 });
                var rfpageCookieHouseUpgradeRequirement = new Rerouter_1.Page('rfpageCookieHouseUpgradeRequirement', [
                    { x: 356, y: 314, r: 123, g: 207, b: 8 },
                    { x: 330, y: 120, r: 68, g: 67, b: 66 },
                    { x: 425, y: 20, r: 0, g: 50, b: 92 },
                ], { x: 356, y: 314 });
                var groupPageUpgradeRequirements = new Rerouter_1.GroupPage('groupPageUpgradeRequirements', [
                    rfpageCookieMansionUpgradeRequirement,
                    rfpageCookieHouseUpgradeRequirement,
                ]);
                if (!_this.config.autoUpgradeCandyHouse) {
                    (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, findAndTapCandy successful so finish round");
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                    (0, utils_1.sendEventRunning)();
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                if (Rerouter_1.rerouter.isPageMatchImage(groupPageCanUpgradeCandy, image)) {
                    (0, utils_1.logs)(context.task.name, "Found upgradeable candyhouse and tap it");
                    Rerouter_1.rerouter.goNext(rfpageCanUpgradeCandyHouse);
                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 2);
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageNotEnoughGnomeBuilders, 2000)) {
                        (0, utils_1.logs)(context.task.name, "Not enough gnome builder, skipping upgrade cookie houses and finish task");
                        finishRound(true);
                        (0, utils_1.sendKeyBack)();
                        return;
                    }
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(groupPageUpgradeRequirements, 2000)) {
                        (0, utils_1.logs)(context.task.name, "groupPageUpgradeRequirements, tap: {x: 357, y:321}");
                        Rerouter_1.rerouter.screen.tap({ x: 357, y: 321 });
                        finishRound(true);
                        (0, utils_1.sendKeyBack)();
                        return;
                    }
                }
                else {
                    (0, utils_1.logs)(context.task.name, "rfpageInCandyHouse, this house is fully upgraded, send back");
                    (0, utils_1.sendKeyBack)();
                }
            },
        });
        // Tower of records collect diamond
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInTowerOfRecords.name),
            match: PAGES.rfpageInTowerOfRecords,
            action: function (context, image, matched, finishRound) {
                var foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconRedBubbleWhiteCheck);
                if (foundResults.length === 0) {
                    (0, utils_1.logs)(context.task.name, "rfpageInTowerOfRecords cannot find any iconRedBubbleWhiteCheck, skipping");
                    (0, utils_1.sendKeyBack)();
                    return;
                }
                (0, utils_1.logs)(context.task.name, "rfpageInTowerOfRecords, found ".concat(foundResults.length, " iconRedBubbleWhiteCheck"));
                for (var i = 0; i < Object.keys(foundResults).length; i++) {
                    (0, utils_1.logs)(context.task.name, "checking iconRedBubbleWhiteCheck at ".concat(JSON.stringify(foundResults[i])));
                    Rerouter_1.rerouter.screen.tap({ x: foundResults[i].x - 40, y: foundResults[i].y + 15 });
                    Rerouter_1.Utils.sleep(2000);
                    for (var j = 0; j < 3; j++) {
                        var foundBlueGems = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenBubbleBlueGem);
                        if (foundBlueGems.length > 0) {
                            for (var gemIdx = 0; gemIdx < foundBlueGems.length; gemIdx++) {
                                (0, utils_1.logs)(context.task.name, "In ".concat(j, "th turn, found ").concat(gemIdx, "th gem and tap it at ").concat(JSON.stringify(foundBlueGems[gemIdx])));
                                Rerouter_1.rerouter.screen.tap({ x: foundBlueGems[gemIdx].x + 10, y: foundBlueGems[gemIdx].y + 10 });
                                Rerouter_1.Utils.sleep(2000);
                            }
                        }
                        (0, helper_1.swipeDown3Items)(); // scroll the page down a bit
                    }
                }
                (0, utils_1.logs)(context.task.name, "rfpageInTowerOfRecords, finished collecting gems");
            },
        });
        // Routing related pages
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageSelectAdvanture.name),
            match: PAGES.rfpageSelectAdvanture,
            action: function (context, image, matched, finishRound) {
                var rfpageSelectAdvantureFirstIsKingdom = new Rerouter_1.Page('rfpageSelectAdvantureFirstIsKingdom', [
                    { x: 628, y: 20, r: 55, g: 166, b: 231 },
                    { x: 422, y: 19, r: 5, g: 130, b: 254 },
                    { x: 308, y: 19, r: 254, g: 210, b: 0 },
                    { x: 56, y: 8, r: 27, g: 57, b: 90 },
                    { x: 24, y: 13, r: 255, g: 255, b: 255 },
                    { x: 35, y: 54, r: 49, g: 96, b: 66 },
                    { x: 44, y: 335, r: 0, g: 73, b: 41 },
                ], { x: 86, y: 198 });
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageSelectAdvantureFirstIsKingdom, image)) {
                    (0, utils_1.logs)(context.task.name, "rfpageSelectAdvantureFirstIsKingdom, go back to \"My Kingdom\"");
                    Rerouter_1.rerouter.goNext(rfpageSelectAdvantureFirstIsKingdom);
                    return;
                }
                var advantureSetting = helper_1.AdvanturesBountiesAt3rd;
                // if (rerouter.isPageMatchImage(PAGES.rfpageBountiesAt2ndSlot, image)) {
                //   advantureSetting = AdvanturesBountiesAt2nd;
                // }
                if (advantureSetting[context.task.name] === undefined) {
                    (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture but this task does not need advanture, send back");
                    (0, utils_1.sendKeyBack)();
                    Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                    return;
                }
                if (advantureSetting[context.task.name].backward) {
                    (0, helper_1.scrollRightALot)({ x: 600, y: 180 });
                    (0, helper_1.scrollRightALot)({ x: 600, y: 180 });
                }
                else {
                    (0, helper_1.scrollLeftALot)({ x: 105, y: 17 });
                }
                switch (context.task.name) {
                    case tasks_1.TASKS.superMayhem:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture goto superMayhem");
                        Rerouter_1.rerouter.screen.tap(advantureSetting[context.task.name].pnt);
                        break;
                    case tasks_1.TASKS.bounties:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture goto bounties");
                        Rerouter_1.rerouter.screen.tap(advantureSetting[context.task.name].pnt);
                        break;
                    case tasks_1.TASKS.towerOfSweetChaos:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture, send back");
                        (0, utils_1.sendKeyBack)();
                        return;
                    default:
                        (0, utils_1.logs)(context.task.name, "rfpageSelectAdvanture don't know what to do, try scroll left a lot to get to the head of the list");
                        (0, helper_1.scrollLeftALot)({ x: 50, y: 180 });
                        (0, utils_1.sendKeyBack)();
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageUncollapsedAffairs.name),
            match: PAGES.rfpageUncollapsedAffairs,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "rfpageUncollapsedAffairs, going to task related affair: ".concat(context.task.name));
                switch (context.task.name) {
                    case tasks_1.TASKS.hotAirBallon:
                        (0, utils_1.logs)(context.task.name, "about to goto hot air ballon");
                        Rerouter_1.rerouter.screen.tap({ x: 320, y: 154 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.train:
                        (0, utils_1.logs)(context.task.name, "about to goto train station");
                        Rerouter_1.rerouter.screen.tap({ x: 369, y: 234 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.wishingTree:
                        (0, utils_1.logs)(context.task.name, "about to send wishing tree");
                        Rerouter_1.rerouter.screen.tap({ x: 235, y: 161 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.gnomeLab:
                        (0, utils_1.logs)(context.task.name, "about to goto gnome lab");
                        Rerouter_1.rerouter.screen.tap({ x: 406, y: 158 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.haborSendShip:
                    case tasks_1.TASKS.haborShopInSeaMarket:
                    case tasks_1.TASKS.haborShopInShellGallery:
                        (0, utils_1.logs)(context.task.name, "about to goto trade habor");
                        Rerouter_1.rerouter.screen.tap({ x: 282, y: 228 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    default:
                        (0, utils_1.logs)(context.task.name, "nothing matched, closing the list");
                        Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 });
                        Rerouter_1.Utils.sleep(2000);
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageUncollapsedAffairsNoHabor.name),
            match: PAGES.rfpageUncollapsedAffairsNoHabor,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "rfpageUncollapsedAffairsNoHabor, going to task related affair: ".concat(context.task.name));
                switch (context.task.name) {
                    case tasks_1.TASKS.hotAirBallon:
                        (0, utils_1.logs)(context.task.name, "about to goto hot air ballon");
                        Rerouter_1.rerouter.screen.tap({ x: 320, y: 154 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.train:
                        (0, utils_1.logs)(context.task.name, "about to goto train station");
                        Rerouter_1.rerouter.screen.tap({ x: 324, y: 235 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.wishingTree:
                        (0, utils_1.logs)(context.task.name, "about to send wishing tree");
                        Rerouter_1.rerouter.screen.tap({ x: 230, y: 161 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.gnomeLab:
                        (0, utils_1.logs)(context.task.name, "about to goto gnome lab");
                        Rerouter_1.rerouter.screen.tap({ x: 410, y: 157 });
                        Rerouter_1.Utils.sleep(1500);
                        return;
                    case tasks_1.TASKS.haborSendShip:
                    case tasks_1.TASKS.haborShopInSeaMarket:
                    case tasks_1.TASKS.haborShopInShellGallery:
                        (0, utils_1.logs)(context.task.name, "NO trade habor, skip this task");
                        finishRound(true);
                        return;
                    default:
                        (0, utils_1.logs)(context.task.name, "nothing matched, closing the list");
                        Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 });
                        Rerouter_1.Utils.sleep(2000);
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInCookieHead.name),
            match: PAGES.rfpageInCookieHead,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageInCookieHead, in head');
                var rfpageStartOfList = new Rerouter_1.Page('rfpageStartOfList', [
                    { x: 114, y: 151, r: 255, g: 218, b: 0 },
                    { x: 115, y: 160, r: 224, g: 0, b: 50 },
                    { x: 253, y: 156, r: 247, g: 207, b: 123 },
                    { x: 255, y: 160, r: 189, g: 20, b: 24 },
                ]);
                var rfpageEndOfList = new Rerouter_1.Page('rfpageEndOfList', [
                    { x: 570, y: 160, r: 252, g: 0, b: 60 },
                    { x: 479, y: 161, r: 68, g: 144, b: 18 },
                    { x: 393, y: 158, r: 194, g: 226, b: 238 },
                ]);
                switch (context.task.name) {
                    case tasks_1.TASKS.fountain:
                    case tasks_1.TASKS.findAndTapCandy:
                        if (!Rerouter_1.rerouter.isPageMatchImage(rfpageStartOfList, image)) {
                            (0, helper_1.scrollLeftALot)({ x: 116, y: 180 });
                        }
                        if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageStartOfList, 3000)) {
                            (0, utils_1.logs)(context.task.name, 'tap goto castle');
                            Rerouter_1.rerouter.screen.tap({ x: 260, y: 224 });
                            return;
                        }
                        return;
                    case tasks_1.TASKS.pvp:
                    case tasks_1.TASKS.pvpPurchaseAncientCookie:
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name.substring(0, 3)].pnt);
                        Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                        return;
                    case tasks_1.TASKS.tropicalIslandShip:
                    case tasks_1.TASKS.tropicalIslandSunbed:
                    case tasks_1.TASKS.tropicalIslandClearBubble:
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name.substring(0, 14)].pnt);
                        return;
                    case tasks_1.TASKS.guildBattleAlliance:
                        (0, utils_1.logs)(context.task.name, "".concat(context.path, " goto Cookie Alliance"));
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name].pnt);
                        return;
                    case tasks_1.TASKS.towerOfSweetChaos:
                        (0, utils_1.logs)(context.task.name, "".concat(context.path, " goto tower of sweet choas"));
                        (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        if (!Rerouter_1.rerouter.isPageMatch(rfpageEndOfList)) {
                            (0, helper_1.scrollRightALot)({ x: 560, y: 186 });
                            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                        }
                        Rerouter_1.rerouter.screen.tap(helper_1.AdvanturesBountiesAt3rd[context.task.name].pnt);
                        return;
                    default:
                        (0, utils_1.sendKeyBack)();
                        return;
                }
            },
        });
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageInKingdomVillage.name),
            match: PAGES.rfpageInKingdomVillage,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, "in ".concat(context.path));
                // In case game crashed during battle
                storage_1.globalStorage.botStatus.battleStarted = 0;
                switch (context.task.name) {
                    case tasks_1.TASKS.production:
                        Rerouter_1.rerouter.screen.tap({ x: 38, y: 221 }); // Tap production dashboard
                        Rerouter_1.Utils.sleep(_this.config.sleepAnimate * 2);
                        break;
                    case tasks_1.TASKS.collectMail:
                        // TODO: check for unread mails
                        // export const rfpageHasUnreadMails = new Page(
                        //   'rfpageHasUnreadMails',
                        //   [
                        //     { x: 584, y: 316, r: 123, g: 207, b: 8 },
                        //     { x: 591, y: 133, r: 126, g: 209, b: 14 },
                        //     { x: 607, y: 10, r: 57, g: 166, b: 231 },
                        //     { x: 54, y: 131, r: 255, g: 239, b: 214 },
                        //   ],
                        //   { x: 577, y: 317 }
                        // );
                        Rerouter_1.rerouter.screen.tap({ x: 550, y: 20 });
                        break;
                    case tasks_1.TASKS.collectKingdomPass:
                        Rerouter_1.rerouter.screen.tap({ x: 600, y: 85 });
                        break;
                    case tasks_1.TASKS.sendFriendReward:
                        Rerouter_1.rerouter.screen.tap({ x: 512, y: 20 });
                        break;
                    case tasks_1.TASKS.getInShopFreeDailyPack:
                        Rerouter_1.rerouter.screen.tap({ x: 26, y: 86 });
                        break;
                    case tasks_1.TASKS.getGachaDailyFreePack:
                        Rerouter_1.rerouter.screen.tap({ x: 370, y: 330 });
                        break;
                    case tasks_1.TASKS.resolveGreenChecks:
                        var foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedWithGiftBox);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckedWithGiftBox, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 12, y: foundResults[0].y + 12 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedGreenBackground);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckedWithGiftBox, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 12, y: foundResults[0].y + 12 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSunbedGreenCheck);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconSunbedGreenCheck, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 7, y: foundResults[0].y + 7 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckGoldCoinInVillage);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckGoldCoinInVillage, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 12, y: foundResults[0].y + 12 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        // TODO：原版會直接過去把這個事件解決，現在只會按掉（如熱氣球新版只會收不會送，要等下次去熱氣球才會送）
                        foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedWhiteBackground);
                        if (Object.keys(foundResults).length > 0) {
                            (0, utils_1.logs)(context.task.name, "Fount iconGreenCheckedWhiteBackground, tap it: ".concat(JSON.stringify(foundResults)));
                            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 7, y: foundResults[0].y + 7 });
                            Rerouter_1.Utils.sleep(1500);
                            return;
                        }
                        (0, utils_1.logs)(context.task.name, "Did not find any green check to resolve, finish round");
                        finishRound(true);
                        break;
                    case tasks_1.TASKS.hotAirBallon:
                    case tasks_1.TASKS.train:
                    case tasks_1.TASKS.wishingTree:
                    case tasks_1.TASKS.gnomeLab:
                    case tasks_1.TASKS.haborSendShip:
                    case tasks_1.TASKS.haborShopInSeaMarket:
                    case tasks_1.TASKS.haborShopInShellGallery:
                        Rerouter_1.rerouter.screen.tap({ x: 105, y: 330 });
                        break;
                    case tasks_1.TASKS.fountain:
                        if (!fountain_1.fountainStatus.justWentToCookieHead) {
                            (0, utils_1.logs)(context.task.name, "try goto head as justWentToCookieHead: ".concat(fountain_1.fountainStatus.justWentToCookieHead));
                            Rerouter_1.rerouter.screen.tap({ x: 25, y: 25 }); // goto head
                            fountain_1.fountainStatus.justWentToCookieHead = true;
                            return;
                        }
                        else {
                            (0, utils_1.logs)(context.task.name, "try goto fountain as justWentToCookieHead: ".concat(fountain_1.fountainStatus.justWentToCookieHead));
                            Rerouter_1.rerouter.screen.tap({ x: 490, y: 359 });
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                            Rerouter_1.rerouter.screen.tap({ x: 490, y: 295 });
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                            Rerouter_1.rerouter.screen.tap({ x: 540, y: 295 });
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                        }
                        break;
                    case tasks_1.TASKS.pvp:
                    case tasks_1.TASKS.pvpPurchaseAncientCookie:
                    case tasks_1.TASKS.tropicalIslandShip:
                    case tasks_1.TASKS.tropicalIslandSunbed:
                    case tasks_1.TASKS.tropicalIslandClearBubble:
                    case tasks_1.TASKS.towerOfSweetChaos:
                    case tasks_1.TASKS.guildBattleAlliance:
                        Rerouter_1.rerouter.screen.tap({ x: 25, y: 25 }); // goto head
                        break;
                    case tasks_1.TASKS.superMayhem:
                    case tasks_1.TASKS.bounties:
                        Rerouter_1.rerouter.screen.tap({ x: 560, y: 325 }); // goto PLAY!
                        break;
                    case tasks_1.TASKS.guildCheckin:
                    case tasks_1.TASKS.guildExpandLand:
                    case tasks_1.TASKS.guildBattleDragon:
                        Rerouter_1.rerouter.screen.tap({ x: 317, y: 325 }); // goto Guild
                        break;
                    case tasks_1.TASKS.findAndTapCandy:
                        var searchHouseState = _this.taskStatus[tasks_1.TASKS.findAndTapCandy];
                        if (searchHouseState.searchHouseIdx >= types_1.searchHosePaths[searchHouseState.searchHousePathIdx].length) {
                            searchHouseState.searchHousePathIdx++;
                            searchHouseState.searchHouseIdx = 0;
                        }
                        if (searchHouseState.searchHousePathIdx >= Object.keys(types_1.searchHosePaths).length) {
                            (0, utils_1.logs)(context.task.name, 'Searched all paths but still cannot end the task, skip it');
                            finishRound(true);
                            searchHouseState.searchHousePathIdx = 0;
                            searchHouseState.searchHouseIdx = 0;
                            searchHouseState.needGotoHead = true;
                            return;
                        }
                        // 要去頭以前先原地掃一次
                        if (searchHouseState.needGotoHead) {
                            if ((0, helper_1.searchForCandyHouse)()) {
                                (0, utils_1.logs)(context.task.name, 'Found rfpageInCandyHouse, return and let rfpageInCandyHouse handle it');
                                return;
                            }
                            Rerouter_1.rerouter.screen.tap({ x: 25, y: 25 }); // goto head
                            Rerouter_1.Utils.sleep(_this.config.sleepAnimate);
                            searchHouseState.needGotoHead = false;
                            return;
                        }
                        console.log("".concat(searchHouseState.searchHousePathIdx, ", ").concat(searchHouseState.searchHouseIdx, ", ").concat(JSON.stringify(types_1.searchHosePaths[searchHouseState.searchHousePathIdx][searchHouseState.searchHouseIdx])));
                        (0, helper_1.swipeDirection)(types_1.searchHosePaths[searchHouseState.searchHousePathIdx][searchHouseState.searchHouseIdx], null, PAGES.rfpageInKingdomVillage);
                        searchHouseState.searchHouseIdx++;
                        if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupPageDecoration', [PAGES.rfpageMovingStructures, PAGES.rfpageKingdomDecoratingExpand]), 2000)) {
                            Rerouter_1.rerouter.goNext(PAGES.rfpageMovingStructures);
                            (0, utils_1.logs)(context.task.name, 'groupPageDecoration, return to try again');
                            return;
                        }
                        if ((0, helper_1.searchForCandyHouse)()) {
                            (0, utils_1.logs)(context.task.name, 'Found rfpageInCandyHouse, return and let rfpageInCandyHouse handle it');
                            return;
                        }
                        break;
                    default:
                        (0, utils_1.logs)(context.task.name, 'Unknown task in rfpageInKingdomVillage');
                        break;
                }
            },
        });
        // Send running when found rfpageStockIsFull
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(PAGES.rfpageStockIsFull.name),
            match: PAGES.rfpageStockIsFull,
            action: function (context, image, matched, finishRound) {
                (0, utils_1.logs)(context.task.name, 'rfpageStockIsFull, stock is full so send running');
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            },
        });
        // rerouter.addRoute({
        //   path: `/${PAGES.AAAAAAAAA.name}`,
        //   match: PAGES.AAAAAAAAA,
        //   action: (context, image, matched, finishRound) => {
        //     logs(context.task.name, 'rfpageIsDailyFreePackage, daily gift collected correctly');
        //     finishRound(true);
        //   },
        // });
        var allPages = PAGES;
        var _loop_1 = function (pageIdx) {
            var page = allPages[pageIdx];
            if (!(page instanceof Rerouter_1.Page)) {
                return "continue";
            }
            if (Rerouter_1.rerouter.getPageByName(page.name) !== null) {
                return "continue";
            }
            Rerouter_1.rerouter.addRoute({
                path: "/".concat(page.name),
                match: page,
                action: function (context, image, matched, finishRound) {
                    if (page.next === undefined) {
                        console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path, " but does not have next page to go"));
                        return;
                    }
                    console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path));
                    Rerouter_1.rerouter.goNext(page);
                },
            });
        };
        for (var pageIdx in allPages) {
            _loop_1(pageIdx);
        }
    };
    CookieKingdom.prototype.addStartAppAction = function () {
        Rerouter_1.rerouter.addStartAppAction(function (context, finishRound) {
            var checkInterval = 3;
            var startTime = Date.now();
            for (var i = 0; i < 120 * 1000; i += checkInterval * 1000) {
                var matches = Rerouter_1.rerouter.getCurrentMatchNames();
                if (matches.length > 0) {
                    (0, utils_1.logs)('addStartAppAction', "waiting finished, found ".concat(JSON.stringify(matches)));
                    break;
                }
                Rerouter_1.Utils.sleep(checkInterval * 1000);
                (0, utils_1.logs)('addStartAppAction', "Start app wait ".concat((Date.now() - startTime) / 1000, " secs until the game started, count is now ").concat(matches.length, ", fist match is ").concat(matches[0]));
            }
        });
    };
    CookieKingdom.prototype.handleUnknown = function () {
        Rerouter_1.rerouter.addUnknownAction(function (context, image, finishRound) {
            Rerouter_1.Utils.log("unknown count ".concat(context.matchTimes, ", task: ").concat(context.task.name, ", during ").concat(context.matchDuring, ", last matched: ").concat(context.lastMatchedPath));
            if (Rerouter_1.rerouter.checkAndStartApp()) {
                (0, utils_1.logs)('handleUnknown', 'checkAndStartApp()');
                return;
            }
            if ((0, helper_1.handleGeneralMessageWindow)(context.task.name, image, finishRound)) {
                (0, utils_1.logs)('handleUnknown', 'handleGeneralMessageWindow() return true, return');
                return;
            }
            if ((0, helper_1.checkIfInBattle)(context.task.name)) {
                (0, utils_1.logs)('handleUnknown', 'In battle so continue monitor');
                context.matchTimes = 0;
                return;
            }
            if (context.matchTimes > 1) {
                Rerouter_1.Utils.log('unknownCheckMissingPage');
                (0, helper_1.unknownCheckMissingPage)(context, finishRound);
            }
            if (context.matchTimes % 3 === 0) {
                keycode('KEYCODE_BACK', 100);
                Rerouter_1.Utils.log('keycode back for unknown');
            }
            if (context.matchTimes % 7 === 0) {
                Rerouter_1.rerouter.screen.tap({ x: 575, y: 22 });
                Rerouter_1.Utils.log('Unknown count 7, could be in tap to login, tapping (575, 22) until the game start');
            }
            if (context.matchTimes > 50) {
                (0, utils_1.logs)('handleUnknown', "Save screenshots and restart game as unknown max reached: ".concat(context.matchTimes));
                (0, helper_1.saveImageToDisk)('unknown-page-reached', image);
                context.matchTimes = 0;
                var rtn = execute('am force-stop com.devsisters.ck');
                if (rtn == 'signal: aborted') {
                    // MEmu
                    execute('ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am force-stop com.devsisters.ck');
                }
                sleep(15000);
            }
        });
    };
    return CookieKingdom;
}());
exports.CookieKingdom = CookieKingdom;
function start(jsonConfig) {
    console.log('typed inputConfig: ', jsonConfig);
    (0, helper_1.configSharePref)();
    if (typeof jsonConfig === 'string') {
        jsonConfig = JSON.parse(jsonConfig);
    }
    (0, helper_1.assign)(scriptConfig_1.config, (0, helper_1.mergeObject)(scriptConfig_1.defaultConfig, jsonConfig));
    if (scriptConfig_1.config.licenseId === '') {
        (0, utils_1.logs)('start', 'config.licenseId is empty thus goto maintainance mode');
        scriptConfig_1.config.isMaintainanceMode = true;
    }
    exports.cookieKingdom = new CookieKingdom(scriptConfig_1.config);
    exports.cookieKingdom.start();
}
exports.start = start;
function stop() {
    console.log('stopppping');
    if (exports.cookieKingdom === undefined) {
        return;
    }
    exports.cookieKingdom.stop();
    exports.cookieKingdom = undefined;
}
exports.stop = stop;
if (window === undefined) {
    window = {};
}
window.start = start;
window.stop = stop;
window.rerouter = Rerouter_1.rerouter;
// // ! following is only for dev
// function run() {
//   cookieKingdom = new CookieKingdom(defaultConfig);
//   cookieKingdom.start();
// }
// sendEventRunning();
// run();
// console.log('jobs done');


/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dayInMs = exports.hourInMs = exports.minuteInMs = exports.sleepAnimate = exports.sleep = void 0;
exports.sleep = 240;
exports.sleepAnimate = 800;
exports.minuteInMs = 60 * 1000;
exports.hourInMs = exports.minuteInMs * 60;
exports.dayInMs = exports.hourInMs * 24;


/***/ }),

/***/ "./src/helper.ts":
/*!***********************!*\
  !*** ./src/helper.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unknownCheckMissingPage = exports.sendCounter = exports.assign = exports.passiveAddRoute = exports.checkIfInBattle = exports.handleGeneralMessageWindow = exports.mergeObject = exports.configSharePref = exports.checkIfNeedCrash = exports.saveImageToDisk = exports.searchForCandyHouse = exports.swipeDirection = exports.makeGoodsToTarget = exports.collectProductItemInfo = exports.countProductionSlotAvailable = exports.collectFinishedGoods = exports.swipeToToolShop456 = exports.swipeDown3Items = exports.swipeDownOneItem = exports.SwipeProductionMenuToTop = exports.handleNextProductionBuilding = exports.tapThroughAnimate = exports.ocrTextInRect = exports.ocrStockAndReqInRect = exports.ocrNumberInRect = exports.ocrStocksInRect = exports.dynamicSort = exports.findSpecificImageInScreen = exports.findSpecificIconInScreen = exports.getMayhemScores = exports.AdvanturesBountiesAt3rd = exports.GenAdvanture = exports.recognizeWishingTreeRequirements = exports.checkIfTrainRequirementMet = exports.isSameColorAtPnt = exports.isSameColor = exports.checkScreenMessage = exports.swipeFromToPoint = exports.scrollRightALot = exports.scrollLeftALot = exports.scrollDownALot = exports.findUnmatchInPage = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var PAGES = __importStar(__webpack_require__(/*! ./pages */ "./src/pages.ts"));
var ICONS = __importStar(__webpack_require__(/*! ./icons */ "./src/icons.ts"));
var CONSTANTS = __importStar(__webpack_require__(/*! ./constants */ "./src/constants.ts"));
var MessageWindows = __importStar(__webpack_require__(/*! ./messageWindow */ "./src/messageWindow.ts"));
var utils_1 = __webpack_require__(/*! ./utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ./tasks */ "./src/tasks.ts");
var storage_1 = __webpack_require__(/*! ./storage */ "./src/storage.ts");
var tradeHabor_1 = __webpack_require__(/*! ./tasks/tradeHabor */ "./src/tasks/tradeHabor.ts");
var scriptConfig_1 = __webpack_require__(/*! ./scriptConfig */ "./src/scriptConfig.ts");
var bounties_1 = __webpack_require__(/*! ./tasks/bounties */ "./src/tasks/bounties.ts");
var gnomeLab_1 = __webpack_require__(/*! ./tasks/gnomeLab */ "./src/tasks/gnomeLab.ts");
var guild_1 = __webpack_require__(/*! ./tasks/guild */ "./src/tasks/guild.ts");
function findUnmatchInPage(page) {
    var img = getScreenshot();
    var errorMessages = [];
    for (var i = 0; i < page.points.length; i++) {
        var point = page.points[i];
        var color = getImageColor(img, point.x, point.y);
        var score = Rerouter_1.Utils.identityColor(point, color);
        var isPointColorMatch = score >= 0.9;
        if (!isPointColorMatch) {
            var errorMessage = "point[".concat(i, "] match false: score: ").concat(score, ", thres: ").concat(0.9, "\nexpect: ").concat(Rerouter_1.Utils.formatXYRGB(point), "\nget: ").concat(Rerouter_1.Utils.formatXYRGB(__assign(__assign({}, color), { x: point.x, y: point.y })), "\n");
            errorMessages.push(errorMessage);
            // console.log(errorMessage);
        }
    }
    console.log('matching finished: ', page.name);
    releaseImage(img);
    return errorMessages;
}
exports.findUnmatchInPage = findUnmatchInPage;
function scrollDownALot(startPnt) {
    Rerouter_1.rerouter.screen.tapDown({ x: startPnt.x, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: startPnt.y / 2 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: -500 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x, y: -1000 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.tapUp({ x: startPnt.x, y: -1000 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 3);
}
exports.scrollDownALot = scrollDownALot;
function scrollLeftALot(startPnt) {
    Rerouter_1.rerouter.screen.tapDown({ x: startPnt.x, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: startPnt.x * 2, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: 1000, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: 1500, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.moveTo({ x: 2000, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    Rerouter_1.rerouter.screen.tapUp({ x: 2000, y: startPnt.y });
    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 3);
}
exports.scrollLeftALot = scrollLeftALot;
function scrollRightALot(startPnt) {
    return swipeFromToPoint({ x: startPnt.x, y: startPnt.y }, { x: -2000, y: startPnt.y }, 5);
}
exports.scrollRightALot = scrollRightALot;
function swipeFromToPoint(fromPnt, toPnt, steps, stopIfFoundPage, swipingPage) {
    if (swipingPage !== undefined && !Rerouter_1.rerouter.isPageMatch(swipingPage)) {
        // console.log('swipe from this point will get to another page, try again: ', fromPnt.x, fromPnt.y);
        keycode('BACK', 100);
        return false;
    }
    steps = steps == undefined ? 4 : steps;
    var step_x = (toPnt.x - fromPnt.x) / steps;
    var step_y = (toPnt.y - fromPnt.y) / steps;
    tapDown(fromPnt.x, fromPnt.y, 40, 0);
    sleep(10);
    moveTo(fromPnt.x, fromPnt.y, 40, 0);
    sleep(10);
    for (var i = 0; i < steps; i++) {
        moveTo(fromPnt.x + step_x * i, fromPnt.y + step_y * i, 40, 0);
        // console.log('in pnt: ', fromPnt.x + step_x * i, fromPnt.y + step_y * i);
        sleep(100);
    }
    moveTo(toPnt.x, toPnt.y, 40, 0);
    sleep(500);
    tapUp(toPnt.x, toPnt.y, 40, 0);
    sleep(500);
    if (swipingPage !== undefined && !Rerouter_1.rerouter.isPageMatch(swipingPage)) {
        console.log('swipe but page changed, failed x, y: ', fromPnt.x, fromPnt.y);
        keycode('BACK', 100);
        return false;
    }
    return true;
}
exports.swipeFromToPoint = swipeFromToPoint;
function checkScreenMessage(message, pageMessageWindow, img) {
    var needReleaseImg = false;
    if (img === undefined) {
        needReleaseImg = true;
        img = getScreenshot();
    }
    if (pageMessageWindow === undefined) {
        pageMessageWindow = new Rerouter_1.Page('rfpageGeneralMessageWindow', [
            { x: 424, y: 101, r: 57, g: 69, b: 107 },
            { x: 294, y: 101, r: 60, g: 70, b: 105 },
            { x: 431, y: 128, r: 243, g: 233, b: 223 },
            { x: 429, y: 244, r: 219, g: 207, b: 199 },
            { x: 380, y: 100, r: 57, g: 69, b: 107 },
            { x: 319, y: 102, r: 57, g: 69, b: 107 },
            { x: 292, y: 108, r: 57, g: 69, b: 107 },
        ]);
    }
    if (!Rerouter_1.rerouter.isPageMatchImage(pageMessageWindow, img)) {
        if (needReleaseImg) {
            releaseImage(img);
        }
        return false;
    }
    var croppedImage = cropImage(img, message.x, message.y, message.width, message.height);
    var whSize = getImageSize(croppedImage);
    var cnt = 0;
    for (var i = 0; i < whSize.width; i++) {
        if (isSameColor(getImageColor(croppedImage, i, message.targetY), message.lookingForColor)) {
            cnt++;
        }
    }
    (0, utils_1.logs)('checkScreenMessage', "Checking ".concat(message.name, ", expecting ").concat(message.targetColorCount, " points and got ").concat(cnt, " points"));
    if (needReleaseImg) {
        releaseImage(img);
    }
    releaseImage(croppedImage);
    return Math.abs(message.targetColorCount - cnt) < message.targetColorThreashold ? true : false;
}
exports.checkScreenMessage = checkScreenMessage;
function isSameColor(c1, c2, diff) {
    if (diff === undefined) {
        diff = 35;
    }
    // console.log(JSON.stringify(c1), JSON.stringify(c2), diff);
    if (Math.abs(c1.r - c2.r) < diff && Math.abs(c1.g - c2.g) < diff && Math.abs(c1.b - c2.b) < diff) {
        return true;
    }
    return false;
}
exports.isSameColor = isSameColor;
function isSameColorAtPnt(point, c2, diff) {
    if (point.x === undefined || point.y === undefined) {
        console.log('Error isSameColorAtPnt as x y cannot be undefined:', JSON.stringify(point));
        return false;
    }
    var img = getScreenshot();
    var color = getImageColor(img, point.x, point.y);
    releaseImage(img);
    if (!isSameColor(color, c2, diff)) {
        return false;
    }
    return true;
}
exports.isSameColorAtPnt = isSameColorAtPnt;
function checkIfTrainRequirementMet() {
    // TODO: or isMessageWindowWithDiamond()
    if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageTrainNotEnoughGoods, 2000)) {
        (0, utils_1.sendKeyBack)();
        return false;
    }
}
exports.checkIfTrainRequirementMet = checkIfTrainRequirementMet;
function recognizeWishingTreeRequirements(words, devImg, maxLength, thres, overlapRatio) {
    var maxWordWidth = 0;
    var allResults = [];
    for (var w = 0; w < words.length; w++) {
        var icon = words[w];
        var wh = getImageSize(icon.image);
        maxWordWidth = Math.max(maxWordWidth, wh.width);
        var results = findImages(devImg, icon.image, thres, maxLength, true);
        for (var idx in results) {
            var result = results[idx];
            allResults.push({ char: icon.name, x: result.x, y: result.y, score: result.score, w: wh.width });
        }
    }
    allResults.sort(function (a, b) {
        return a.x - b.x;
    });
    var str = '';
    var rBound = 0;
    var maxScore = 0;
    for (var i = 0; i < allResults.length; i++) {
        var word = allResults[i];
        // console.log('word', word.char, rBound, 'x', word.x, word.score);
        if (word.x > rBound) {
            maxScore = word.score;
            str += word.char;
            rBound = Math.floor(word.x + word.w * overlapRatio);
        }
        else if (word.x <= rBound && word.score > maxScore && word.char !== ' ') {
            // overlap
            maxScore = word.score;
            str = str.substr(0, str.length - 1) + word.char;
            rBound = Math.floor(word.x + word.w * overlapRatio);
        }
    }
    return str;
}
exports.recognizeWishingTreeRequirements = recognizeWishingTreeRequirements;
function GenAdvanture(pnt, fromHead, backward) {
    return {
        pnt: pnt,
        fromHead: fromHead,
        backward: backward,
    };
}
exports.GenAdvanture = GenAdvanture;
// When there are NO timed event
// export const AdvanturesBountiesAt2nd: { [key: string]: Advanture } = {
//   pvp: GenAdvanture({ x: 123, y: 230 }, true, false),
//   towerOfSweetChaos: GenAdvanture({ x: 214, y: 230 }, true, false),
//   tropicalIsland: GenAdvanture({ x: 300, y: 230 }, true, false),
//   cookieAlliance: GenAdvanture({ x: 392, y: 230 }, true, false),
//   superMayhem: GenAdvanture({ x: 500, y: 150 }, false, false),
//   bounties: GenAdvanture({ x: 300, y: 100 }, false, false),
//   guild: GenAdvanture({ x: 10, y: 100 }, false, true),
// };
// CRK released Aug 9, 2023
exports.AdvanturesBountiesAt3rd = {
    pvp: GenAdvanture({ x: 123, y: 230 }, true, false),
    towerOfSweetChaos: GenAdvanture({ x: 214, y: 230 }, true, false),
    tropicalIsland: GenAdvanture({ x: 300, y: 230 }, true, false),
    guildBattleAlliance: GenAdvanture({ x: 392, y: 230 }, true, false),
    superMayhem: GenAdvanture({ x: 400, y: 150 }, false, false),
    bounties: GenAdvanture({ x: 338, y: 111 }, false, true),
    guild: GenAdvanture({ x: 527, y: 115 }, false, true),
};
// export const AdvanturesBountiesAt4th: { [key: string]: Advanture } = {
//   pvp: GenAdvanture({ x: 123, y: 230 }, true, false),
//   towerOfSweetChaos: GenAdvanture({ x: 214, y: 230 }, true, false),
//   tropicalIsland: GenAdvanture({ x: 300, y: 230 }, true, false),
//   cookieAlliance: GenAdvanture({ x: 392, y: 230 }, true, false),
//   superMayhem: GenAdvanture({ x: 500, y: 150 }, false, false),
//   bounties: GenAdvanture({ x: 100, y: 100 }, false, true),
//   guild: GenAdvanture({ x: 320, y: 100 }, false, true),
// };
function getMayhemScores() {
    var img = getScreenshot();
    var scores = [0, 0, 0];
    var imagesLocation = [
        [
            { x: 495, y: 56, w: 47, h: 12 },
            { x: 495, y: 84, w: 47, h: 12 },
            { x: 495, y: 110, w: 47, h: 12 },
        ],
        [
            { x: 495, y: 145, w: 47, h: 12 },
            { x: 495, y: 172, w: 47, h: 12 },
            { x: 495, y: 198, w: 47, h: 12 },
        ],
        [
            { x: 495, y: 232, w: 47, h: 12 },
            { x: 495, y: 260, w: 47, h: 12 },
            { x: 495, y: 288, w: 47, h: 12 },
        ],
    ];
    for (var mayhemIdx = 0; mayhemIdx < imagesLocation.length; mayhemIdx++) {
        for (var teamIdx = 0; teamIdx < imagesLocation[mayhemIdx].length; teamIdx++) {
            var tImage = imagesLocation[mayhemIdx][teamIdx];
            var croppedImage = cropImage(img, tImage.x, tImage.y, tImage.w, tImage.h);
            var value = +recognizeWishingTreeRequirements(ICONS.numberImagesSuperMayhem, croppedImage, 7, 0.7, 0.7) || 0;
            releaseImage(croppedImage);
            if (value > scores[mayhemIdx]) {
                scores[mayhemIdx] = value;
            }
        }
    }
    releaseImage(img);
    // console.log('>> ', JSON.stringify(scores));
    return scores;
}
exports.getMayhemScores = getMayhemScores;
function findSpecificIconInScreen(target, targetArea, isDev) {
    if (target.image === undefined) {
        target.loadImage();
    }
    return findSpecificImageInScreen(target.image, target.thres, targetArea, isDev);
}
exports.findSpecificIconInScreen = findSpecificIconInScreen;
function findSpecificImageInScreen(target, threashold, targetArea, isDev) {
    if (threashold === undefined) {
        threashold = 0.95;
    }
    var img = getScreenshot();
    var croppedImage;
    var foundResults;
    if (targetArea !== undefined) {
        croppedImage = cropImage(img, targetArea.x, targetArea.y, targetArea.w, targetArea.h);
        foundResults = findImages(croppedImage, target, threashold, 10, true);
        releaseImage(croppedImage);
    }
    else {
        foundResults = findImages(img, target, threashold, 10, true);
    }
    releaseImage(img);
    if (isDev) {
        console.log('findSpecificImageInScreen, found target icon at: ', JSON.stringify(foundResults));
    }
    var rtn = [];
    for (var key in foundResults) {
        rtn.push(foundResults[key]);
    }
    return rtn;
}
exports.findSpecificImageInScreen = findSpecificImageInScreen;
function dynamicSort(property) {
    var sortOrder = 1;
    if (property[0] === '-') {
        sortOrder = -1;
        property = property.substr(1);
    }
    return function (a, b) {
        /* next line works with strings and numbers,
         * and you may want to customize it to your needs
         */
        var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;
        return result * sortOrder;
    };
}
exports.dynamicSort = dynamicSort;
// Stocks like 220/2, means need 2 while we have 200, and will return 218
function ocrStocksInRect(rect, icons) {
    var img = getScreenshot();
    var croppedImage = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    releaseImage(img);
    var txt = recognizeWishingTreeRequirements(icons, croppedImage, 10, 0.8, 0.5);
    console.log('>> ocrStocksInRect got txt', txt);
    releaseImage(croppedImage);
    if (txt.length === 0) {
        return -1;
    }
    else if (txt.indexOf('/') === -1) {
        return -1;
    }
    else {
        var stock = txt.split('/');
        return +stock[0] - +stock[1];
    }
}
exports.ocrStocksInRect = ocrStocksInRect;
function ocrNumberInRect(rect, icons) {
    var text = ocrTextInRect(rect, icons);
    if (text === '') {
        return -1;
    }
    return +text;
    // var img = getScreenshot();
    // var croppedImage = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    // releaseImage(img);
    // var txt = recognizeWishingTreeRequirements(icons, croppedImage, 10, 0.8, 0.5);
    // releaseImage(croppedImage);
    // if (txt.length === 0) {
    //   return -1;
    // } else {
    //   return +txt;
    // }
}
exports.ocrNumberInRect = ocrNumberInRect;
function ocrStockAndReqInRect(rect, icons) {
    var text = ocrTextInRect(rect, icons, 0.78, 8);
    // console.log(`ocrStockAndReqInRect: ${JSON.stringify(rect)}, ${text}`);
    var values = text.split('/');
    if (values.length < 2) {
        return [+text, -1];
    }
    return [+values[0], +values[1]];
}
exports.ocrStockAndReqInRect = ocrStockAndReqInRect;
// 在市集中能正確讀出1,876
function ocrTextInRect(rect, icons, overrideThre, overrideOverlap) {
    var img = getScreenshot();
    var croppedImage = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    releaseImage(img);
    var results = [];
    for (var i in icons) {
        // numbers[i] = bgrToGray(numbers[i], 40)
        var thres = overrideThre === undefined ? icons[i].thres : overrideThre;
        var overlap = overrideOverlap === undefined ? 10 : overrideOverlap;
        var foundResults = findImages(croppedImage, icons[i].image, thres, overlap, true);
        for (var j in foundResults) {
            results.push({
                x: foundResults[j].x,
                y: foundResults[j].y,
                score: foundResults[j].score,
                target: icons[i].name,
            });
        }
    }
    results.sort(dynamicSort('x'));
    // console.log(`=> ocrTextInRect ${JSON.stringify(rect)}, ${icons.length},  ${JSON.stringify(results)}`);
    releaseImage(croppedImage);
    if (results.length == 0) {
        return '';
    }
    var digit_width = 4;
    var output = '';
    var idx = 1;
    while (idx < results.length) {
        if (results[idx].x - results[idx - 1].x < digit_width) {
            // results[i].score > results[i - 1].score ? results.splice(i - 1, 1) : results.splice(i, 1);
            if (results[idx].score > results[idx - 1].score) {
                results.splice(idx - 1, 1);
            }
            else {
                results.splice(idx, 1);
            }
        }
        else {
            idx++;
        }
        // console.log('>>', idx, JSON.stringify(results))
    }
    for (var i in results) {
        output += results[i].target;
    }
    // console.log('ocrTextInRect has output: ', output);
    return output;
}
exports.ocrTextInRect = ocrTextInRect;
function tapThroughAnimate(targetPage, tappingPoint, timeInMs, interval) {
    if (interval === undefined) {
        interval = 500;
    }
    for (var i = 0; i < timeInMs; i += interval) {
        if (Rerouter_1.rerouter.isPageMatch(targetPage)) {
            return true;
        }
        Rerouter_1.rerouter.screen.tap(tappingPoint);
    }
    return false;
}
exports.tapThroughAnimate = tapThroughAnimate;
function handleNextProductionBuilding(buildTowardsTheLeft) {
    if (buildTowardsTheLeft) {
        Rerouter_1.rerouter.screen.tap({ x: 110, y: 174 }); // to left
    }
    else {
        Rerouter_1.rerouter.screen.tap({ x: 349, y: 174 }); // to right
    }
}
exports.handleNextProductionBuilding = handleNextProductionBuilding;
function SwipeProductionMenuToTop() {
    return swipeFromToPoint({ x: 430, y: 80 }, { x: 430, y: 1500 }, 4);
}
exports.SwipeProductionMenuToTop = SwipeProductionMenuToTop;
function swipeDownOneItem() {
    tapDown(430, 319, 40, 0);
    sleep(500);
    moveTo(430, 319, 40, 0);
    sleep(500);
    moveTo(430, 280, 40, 0);
    sleep(500);
    moveTo(430, 230, 40, 0);
    sleep(500);
    moveTo(430, 200, 40, 0);
    sleep(500);
    moveTo(430, 176, 40, 0);
    sleep(1600);
    tapUp(430, 176, 40, 0);
    sleep(2000);
    // return swipeFromToPoint({ x: 430, y: 319 }, { x: 430, y: 176 }, 5);
}
exports.swipeDownOneItem = swipeDownOneItem;
function swipeDown3Items() {
    // console.log('swipe down to 3 item as currently in:', this.config.currentProductionBuilding);
    tapDown(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 250, 40, 0);
    sleep(500);
    moveTo(430, 150, 40, 0);
    sleep(500);
    moveTo(430, 50, 40, 0);
    sleep(500);
    moveTo(430, -70, 40, 0);
    sleep(1600);
    tapUp(430, -70, 40, 0);
    sleep(1600);
    // return swipeFromToPoint({ x: 430, y: 350 }, { x: 430, y: -70 }, 7);
}
exports.swipeDown3Items = swipeDown3Items;
function swipeToToolShop456() {
    SwipeProductionMenuToTop();
    tapDown(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 350, 40, 0);
    sleep(500);
    moveTo(430, 250, 40, 0);
    sleep(500);
    moveTo(430, 150, 40, 0);
    sleep(500);
    moveTo(430, 50, 40, 0);
    sleep(500);
    moveTo(430, -80, 40, 0);
    sleep(500);
    moveTo(430, -170, 40, 0);
    sleep(1600);
    tapUp(430, -170, 40, 0);
    sleep(1600);
    // return swipeFromToPoint({ x: 430, y: 350 }, { x: 430, y: -170 }, 7);
}
exports.swipeToToolShop456 = swipeToToolShop456;
function findProductRequirements(rects) {
    var imgOri = getScreenshot();
    var omin = 150;
    var omax = 255;
    var img = inRange(imgOri, omin, omin, omin, omin, omax, omax, omax, omax);
    var part = [];
    for (var i = 0; i < rects.length; i++) {
        var rect = rects[i];
        var line1 = '';
        var cImg1 = cropImage(img, rect.x, rect.y, rect.w, rect.h);
        line1 = recognizeWishingTreeRequirements(ICONS.numberImagesProdutRequirements, cImg1, 12, 0.7, 0.5);
        releaseImage(cImg1);
        line1 = line1.trim();
        // console.log(line1);
        if (line1.length === 0) {
            // do nothing
        }
        else if (line1.indexOf('/') === -1) {
            part.push([line1.substr(0, line1.length - 1), line1.substr(line1.length - 1, 1)]);
        }
        else {
            part.push(line1.split('/'));
        }
    }
    for (var productIdx in part) {
        for (var reqIdx in part[productIdx]) {
            part[productIdx][reqIdx] = Number(part[productIdx][reqIdx]);
        }
    }
    // console.log('part:', JSON.stringify(part));
    releaseImage(imgOri);
    releaseImage(img);
    return part;
}
function collectFinishedGoods() {
    var rfpageProducing = new Rerouter_1.Page('rfpageProducing', [
        { x: 76, y: 86, r: 134, g: 231, b: 0 },
        { x: 61, y: 89, r: 123, g: 228, b: 0 },
        { x: 38, y: 32, r: 203, g: 235, b: 236 },
    ]);
    // Try to collect finished goods
    if (!Rerouter_1.rerouter.isPageMatch(rfpageProducing)) {
        Rerouter_1.rerouter.screen.tap({ x: 51, y: 66 });
        if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupPageCancel', [PAGES.rfpageCancelProduction, PAGES.rfpageCancelMultipleProduction]), 3000)) {
            (0, utils_1.logs)('collectFinishedGoods', 'Found ask to cancel dialog in production, close it and wait 2secs for rfpageInProduction');
            Rerouter_1.rerouter.goNext(PAGES.rfpageCancelProduction);
            Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInProduction, 2000);
        }
        else if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageCancelProductionLongItemName)) {
            (0, utils_1.logs)('collectFinishedGoods', 'Found ask to cancel dialog in production (item with long name), close it and wait 2secs for rfpageInProduction');
            Rerouter_1.rerouter.goNext(PAGES.rfpageCancelProductionLongItemName);
            Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInProduction, 2000);
        }
    }
}
exports.collectFinishedGoods = collectFinishedGoods;
function countMagicLabSlotAvailable() {
    var groupPageMagicLabSlot = new Rerouter_1.GroupPage('groupPageMagicLabSlot', [
        new Rerouter_1.Page('firstSlot', [{ x: 55, y: 69, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('secondSlot', [{ x: 53, y: 120, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('thirdSlot', [{ x: 49, y: 168, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('fourthSlot', [{ x: 52, y: 223, r: 82, g: 56, b: 107 }]),
        new Rerouter_1.Page('fifthSlot', [{ x: 50, y: 264, r: 77, g: 55, b: 110 }]),
        new Rerouter_1.Page('sixSlot', [{ x: 48, y: 314, r: 82, g: 60, b: 115 }]),
    ]);
    var matchedPages = Rerouter_1.rerouter.getPagesMatch(groupPageMagicLabSlot);
    (0, utils_1.logs)('countMagicLabSlotAvailable', "countMagicLabSlotAvailable: ".concat(matchedPages.length));
    return matchedPages.length;
}
function countProductionSlotAvailable() {
    if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageInMagicLab)) {
        return countMagicLabSlotAvailable();
    }
    var groupPageProductionSlot = new Rerouter_1.GroupPage('groupPageProductionSlot', [
        new Rerouter_1.Page('firstSlot', [
            { x: 50, y: 69, r: 146, g: 88, b: 52 },
            { x: 49, y: 68, r: 146, g: 88, b: 52 },
            { x: 70, y: 90, r: 166, g: 104, b: 65 },
            { x: 42, y: 86, r: 173, g: 105, b: 66 },
        ]),
        new Rerouter_1.Page('secondSlot', [
            { x: 50, y: 120, r: 146, g: 88, b: 52 },
            { x: 49, y: 111, r: 146, g: 88, b: 52 },
            { x: 46, y: 137, r: 173, g: 105, b: 66 },
        ]),
        new Rerouter_1.Page('thirdSlot', [
            { x: 50, y: 170, r: 146, g: 88, b: 52 },
            { x: 49, y: 169, r: 146, g: 88, b: 52 },
            { x: 46, y: 179, r: 142, g: 78, b: 44 },
        ]),
        new Rerouter_1.Page('fourthSlot', [
            { x: 50, y: 219, r: 146, g: 88, b: 52 },
            { x: 50, y: 218, r: 146, g: 88, b: 52 },
            { x: 48, y: 229, r: 144, g: 88, b: 52 },
            { x: 42, y: 236, r: 173, g: 105, b: 66 },
        ]),
        new Rerouter_1.Page('fifthSlot', [
            { x: 50, y: 269, r: 146, g: 88, b: 52 },
            { x: 50, y: 268, r: 146, g: 88, b: 52 },
            { x: 46, y: 286, r: 157, g: 95, b: 55 },
        ]),
    ]);
    var matchedPages = Rerouter_1.rerouter.getPagesMatch(groupPageProductionSlot);
    // logs('countProductionSlotAvailable', `countProductionSlotAvailable: ${matchedPages.length}, ${JSON.stringify(matchedPages)}`);
    return matchedPages.length;
}
exports.countProductionSlotAvailable = countProductionSlotAvailable;
function collectProductItemInfo(id, stockRect, needRect1, needRect2, productionTarget, safetyStock) {
    var minimumTarget = id <= 3 ? Math.max(10, productionTarget * Math.pow(0.85, id)) : Math.max(10, productionTarget * Math.pow(0.6, id));
    var canProduce = false;
    var need1 = {
        stock: -1,
        consume: -1,
    };
    var need2 = {
        stock: -1,
        consume: -1,
    };
    var stock = ocrNumberInRect(stockRect, ICONS.bNumbers);
    if (stock === -1) {
        return {
            id: id,
            minimumTarget: minimumTarget,
            productionTarget: productionTarget,
            stockTargetFullfilledPercent: -1,
            canProduce: canProduce,
            notEnoughStock: false,
            stock: stock,
            need: [need1, need2],
        };
    }
    var requirements = findProductRequirements([needRect1, needRect2]);
    // console.log(`requirements: "${requirements}"`); // TODO: to remove
    if (requirements.length === 0) {
        return {
            id: id,
            minimumTarget: minimumTarget,
            productionTarget: productionTarget,
            stockTargetFullfilledPercent: stock / productionTarget,
            canProduce: canProduce,
            notEnoughStock: false,
            stock: stock,
            need: [need1, need2],
        };
    }
    need1 = {
        stock: +requirements[0][0],
        consume: +requirements[0][1],
    };
    if (requirements.length > 1) {
        need2 = {
            stock: +requirements[1][0],
            consume: +requirements[1][1],
        };
        canProduce = need1['stock'] - need1['consume'] > safetyStock && need2['stock'] - need2['consume'] > safetyStock;
    }
    else {
        canProduce = need1['stock'] - need1['consume'] > safetyStock;
    }
    return {
        id: id,
        minimumTarget: minimumTarget,
        productionTarget: productionTarget,
        stockTargetFullfilledPercent: stock / productionTarget,
        canProduce: canProduce,
        notEnoughStock: false,
        stock: stock,
        need: requirements.length > 1 ? [need1, need2] : [need1], // Pinecone birdy toy (etc,) only need 1 material
    };
}
exports.collectProductItemInfo = collectProductItemInfo;
function makeGoodsToTarget(goodsTarget, safetyStock, axeStockTo400) {
    var goodsLocation = {
        1: { x: 431, y: 101, w: 22, h: 12 },
        2: { x: 431, y: 209, w: 22, h: 12 },
        3: { x: 431, y: 315, w: 22, h: 12 },
        shovel: { x: 432, y: 317, w: 22, h: 16 },
        5: { x: 431, y: 106, w: 22, h: 12 },
        6: { x: 431, y: 213, w: 22, h: 12 },
        7: { x: 431, y: 319, w: 22, h: 12 },
    };
    var productsReqY = {
        1: 92,
        2: 199,
        3: 306,
        4: 308,
        5: 96,
        6: 203,
        7: 310,
    };
    // TODO: recognize building to reduce drop order time
    var goodsOneStock = ocrNumberInRect(goodsLocation[1], ICONS.bNumbers);
    if (goodsOneStock === -1) {
        (0, utils_1.logs)('makeGoodsToTarget', "OCR count failed, swipe to top");
        SwipeProductionMenuToTop();
        goodsOneStock = ocrNumberInRect(goodsLocation[1], ICONS.bNumbers);
        if (goodsOneStock === -1) {
            console.log('OCR count failed twice, skip this round');
            return -1;
        }
    }
    var productionState = {
        1: collectProductItemInfo(1, goodsLocation[1], { x: 463, y: productsReqY[1], w: 50, h: 14 }, { x: 520, y: productsReqY[1], w: 50, h: 14 }, goodsTarget, safetyStock),
    };
    for (var _i = 0, _a = [2, 3]; _i < _a.length; _i++) {
        var i = _a[_i];
        if (!Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[i])) {
            break;
        }
        productionState[i] = collectProductItemInfo(i, goodsLocation[i], { x: 463, y: productsReqY[i], w: 50, h: 14 }, { x: 520, y: productsReqY[i], w: 50, h: 14 }, goodsTarget, safetyStock);
    }
    var availableSlots = countProductionSlotAvailable();
    var productionPage = Rerouter_1.rerouter.getPagesMatch(PAGES.groupPageGoodsProdMenu);
    var productionName = productionPage.length > 0 ? productionPage[0].name : 'otherGoodShop';
    (0, utils_1.logs)('makeGoodsToTarget', "> ".concat(productionName, " has ").concat(availableSlots, " available slots, productionState: ").concat(JSON.stringify(productionState)));
    if (productionName !== 'otherGoodShop') {
        (0, utils_1.logs)('makeGoodsToTarget', "Special handle building: ".concat(productionName));
        swipeDownOneItem();
        if (Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[4])) {
            productionState[4] = collectProductItemInfo(4, goodsLocation['shovel'], { x: 463, y: 308, w: 50, h: 14 }, { x: 520, y: 308, w: 50, h: 14 }, goodsTarget, safetyStock);
        }
    }
    console.log('swipping down =========');
    if (productionName === 'rfpageToolShop' || productionName === 'rfpageIsBakery') {
        swipeToToolShop456();
    }
    else {
        swipeFromToPoint({ x: 464, y: 340 }, { x: 464, y: -1500 }, 5); // SwipeProductionMenuToBottom()
        Rerouter_1.Utils.sleep(800);
    }
    console.log('before OCR 567, productionState:', JSON.stringify(productionState));
    for (var _b = 0, _c = [5, 6, 7]; _b < _c.length; _b++) {
        var i = _c[_b];
        if (!Rerouter_1.rerouter.isPageMatch(PAGES.productMapping[i])) {
            break;
        }
        productionState[i] = collectProductItemInfo(i, goodsLocation[i], { x: 463, y: productsReqY[i], w: 50, h: 14 }, { x: 520, y: productsReqY[i], w: 50, h: 14 }, goodsTarget, safetyStock);
    }
    (0, utils_1.logs)('makeGoodsToTarget', "> ".concat(productionName, " has ").concat(availableSlots, " available slots, productionState: ").concat(JSON.stringify(productionState)));
    if (productionName === 'rfpageToolShop' && axeStockTo400) {
        productionState[1].productionTarget = 400;
        productionState[1].stockTargetFullfilledPercent = goodsOneStock / 400;
    }
    var itemToProduce = {};
    var itemToProduceLater = {};
    // check minimum req
    for (var key in productionState) {
        if (productionState[key].stock < productionState[key].minimumTarget) {
            itemToProduce[key] = productionState[key];
        }
    }
    // check user defined production target
    for (var key in productionState) {
        if (productionState[key].stock < goodsTarget) {
            itemToProduceLater[key] = productionState[key];
        }
    }
    var itemsToProduce = Object.keys(itemToProduce).map(function (key) { return itemToProduce[+key]; });
    var itemsToProduceLater = Object.keys(itemToProduceLater).map(function (key) { return itemToProduceLater[+key]; });
    itemsToProduce.sort(dynamicSort('stockTargetFullfilledPercent'));
    itemsToProduceLater.sort(dynamicSort('stockTargetFullfilledPercent'));
    var _loop_1 = function (obj) {
        var keyExists = itemsToProduce.some(function (element) { return element['id'] === obj['id']; });
        if (!keyExists) {
            itemsToProduce.push(obj);
        }
    };
    for (var _d = 0, itemsToProduceLater_1 = itemsToProduceLater; _d < itemsToProduceLater_1.length; _d++) {
        var obj = itemsToProduceLater_1[_d];
        _loop_1(obj);
    }
    (0, utils_1.logs)('makeGoodsToTarget', ">> ".concat(productionName, " has ").concat(availableSlots, " available slots, stocks to produce: ").concat(JSON.stringify(itemsToProduce)));
    var rfpageLockedGood = new Rerouter_1.Page('rfpageLockedGood', [
        { x: 351, y: 244, r: 121, g: 207, b: 12 },
        { x: 305, y: 244, r: 121, g: 207, b: 12 },
        { x: 425, y: 244, r: 219, g: 207, b: 199 },
        { x: 425, y: 105, r: 60, g: 70, b: 105 },
        { x: 417, y: 297, r: 235, g: 219, b: 207 },
        { x: 381, y: 316, r: 237, g: 237, b: 229 },
    ], { x: 351, y: 244 });
    for (var id in itemsToProduce) {
        var item = itemsToProduce[id];
        if (item['stock'] === -1) {
            continue;
        }
        if (item['stockTargetFullfilledPercent'] > 1) {
            // logs(makeGoodsToTarget, `stockTargetFullfilledPercent > 1 should should be stock OCR error `);
            continue;
        }
        if (item['notEnoughStock']) {
            (0, utils_1.logs)('makeGoodsToTarget', "should panic as found notEnoughStock ");
            // ii++;
        }
        if (!item['canProduce']) {
            (0, utils_1.logs)('makeGoodsToTarget', "skip as not having enough raw materials for #".concat(id));
            continue;
        }
        (0, utils_1.logs)('makeGoodsToTarget', "adding item ".concat(item['id'], " from ").concat(item['stock'], " to ").concat(item['productionTarget'], ", ").concat(JSON.stringify(item)));
        switch (item['id']) {
            case 1:
            case 2:
            case 3:
                SwipeProductionMenuToTop();
                SwipeProductionMenuToTop();
                Rerouter_1.rerouter.goNext(PAGES.productMapping[item['id']]);
                break;
            case 4:
                SwipeProductionMenuToTop();
                SwipeProductionMenuToTop();
                swipeDownOneItem();
                Rerouter_1.rerouter.goNext(PAGES.productMapping[item['id']]);
                break;
            case 5:
            case 6:
            case 7:
                SwipeProductionMenuToTop();
                SwipeProductionMenuToTop();
                swipeToToolShop456();
                Rerouter_1.rerouter.goNext(PAGES.productMapping[item['id']]);
                break;
        }
        for (var timer = 0; timer < 4; timer++) {
            var latestCount = countProductionSlotAvailable();
            if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageNotEnoughStockInProduction)) {
                (0, utils_1.logs)('makeGoodsToTarget', "PAGES.rfpageNotEnoughStockInProduction");
                Rerouter_1.rerouter.screen.tap({ x: 428, y: 98 });
                itemsToProduce[id]['notEnoughStock'] = true;
                sleep(800);
                break;
            }
            else if (Rerouter_1.rerouter.isPageMatch(rfpageLockedGood)) {
                (0, utils_1.logs)('makeGoodsToTarget', "rfpageLockedGood");
                Rerouter_1.rerouter.goNext(rfpageLockedGood);
                break;
            }
            if (latestCount === 0) {
                (0, utils_1.logs)('makeGoodsToTarget', "No more slots, stop at: ".concat(item['id']));
                return latestCount;
            }
            sleep(1000);
        }
        // Add check if there are no worker cookie
    }
    return countProductionSlotAvailable();
}
exports.makeGoodsToTarget = makeGoodsToTarget;
function swipeDirection(direction, targetPage, swippingPage) {
    var tapableArea = {
        fromPnt: { x: 165, y: 90 },
        endPnt: { x: 566, y: 285 },
    };
    if (targetPage !== null && Rerouter_1.rerouter.isPageMatch(targetPage)) {
        (0, utils_1.logs)('swipeDirection', "Already in page ".concat(targetPage.name, ", skip swipping"));
        return true;
    }
    var x = tapableArea.fromPnt.x + Math.random() * (tapableArea.endPnt.x - tapableArea.fromPnt.x);
    var y = tapableArea.fromPnt.y + Math.random() * (tapableArea.endPnt.y - tapableArea.fromPnt.y);
    var fromPnt = { x: x, y: y };
    var toPnt = { x: x + direction.x, y: y + direction.y };
    var steps = 4;
    if (swipeFromToPoint(fromPnt, toPnt, steps, targetPage, swippingPage)) {
        // console.log('swipe successfully');
        return true;
    }
    else if (Rerouter_1.rerouter.isPageMatch(tradeHabor_1.rfpageInTradeHabor)) {
        console.log('swipeDirection skip to go to head and start over');
        return false;
    }
    else {
        console.log('pickup house, try again');
    }
    return false;
}
exports.swipeDirection = swipeDirection;
function filterOverlapFindIconResults(points, minDistance, debug) {
    var result = [];
    points.sort(function (a, b) { return b.score - a.score; });
    var _loop_2 = function (point) {
        var isTooClose = result.some(function (p) {
            var distance = Math.sqrt(Math.pow(point.x - p.x, 2) + Math.pow(point.y - p.y, 2));
            var tooClose = distance < minDistance;
            if (tooClose && debug) {
                console.log("Point ".concat(JSON.stringify(point), " is too close to ").concat(JSON.stringify(p)));
            }
            return tooClose;
        });
        if (!isTooClose) {
            result.push(point);
        }
    };
    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
        var point = points_1[_i];
        _loop_2(point);
    }
    return result;
}
function difference(array1, array2) {
    var onlyInArray1 = array1.filter(function (a) { return !array2.some(function (b) { return a.x === b.x && a.y === b.y; }); });
    var onlyInArray2 = array2.filter(function (a) { return !array1.some(function (b) { return a.x === b.x && a.y === b.y; }); });
    return __spreadArray(__spreadArray([], onlyInArray1, true), onlyInArray2, true);
}
// 1. searchForCandyHouse
// 2. if !1, swipe directinos
function searchForCandyHouse() {
    if (Rerouter_1.rerouter.isPageMatch(PAGES.rfpageInProduction)) {
        (0, utils_1.logs)('searchForCandyHouse', 'Found in production so hit back then search for it');
        (0, utils_1.sendKeyBack)();
        Rerouter_1.Utils.sleep(1500);
    }
    // 1. find and tap candy
    var foundResults = findSpecificIconInScreen(ICONS.iconCandy);
    var filteredResults = filterOverlapFindIconResults(foundResults, 15);
    // console.log(filteredResults.length, JSON.stringify(filteredResults), filteredResults.length, JSON.stringify(filteredResults));
    if (Object.keys(filteredResults).length === 0) {
        (0, utils_1.logs)('searchForCandyHouse', 'findAndTapCandy did not see any candy > 0.95, skipping');
    }
    else {
        // Tap at most 5 possible candies
        var i_1 = 0;
        while (i_1 < Math.min(5, Object.keys(filteredResults).length)) {
            if (filteredResults[i_1].x < 93 || filteredResults[i_1].x > 575 || filteredResults[i_1].y < 37 || filteredResults[i_1].y > 300) {
                (0, utils_1.logs)('searchForCandyHouse', "Skipped as this point exceed feasible area: (".concat(filteredResults[i_1].x, ", ").concat(filteredResults[i_1].y, ") (93<x<575, 37<y<300)"));
                i_1++;
                continue;
            }
            (0, utils_1.logs)('searchForCandyHouse', "tapping: (".concat(filteredResults[i_1].x, ", ").concat(filteredResults[i_1].y, ") of ").concat(JSON.stringify(filteredResults)));
            Rerouter_1.rerouter.screen.tap({ x: filteredResults[i_1].x + 5, y: filteredResults[i_1].y + 5 });
            if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInCandyHouse, 2000)) {
                (0, utils_1.logs)('searchForCandyHouse', "rfpageInCandyHouse, return and let rfpageInCandyHouse page handle it");
                return true;
            }
            filteredResults = findSpecificIconInScreen(ICONS.iconCandy);
            (0, utils_1.logs)('searchForCandyHouse', "candies left > ".concat(i_1, ", ").concat(JSON.stringify(filteredResults)));
            i_1++;
        }
    }
    // 2. find and tap house, the arrow will move, so check multiple times
    for (var i_2 = 0; i_2 < 3; i_2++) {
        filteredResults = filterOverlapFindIconResults(findSpecificIconInScreen(ICONS.iconCandyHouseUpgradeArrow), 15);
        if (Object.keys(filteredResults).length > 0) {
            console.log('Found it via candyHouseUpgradeArrow:', JSON.stringify(filteredResults));
            break;
        }
        filteredResults = filterOverlapFindIconResults(findSpecificIconInScreen(ICONS.iconCandyHouseUpgradeArrow2), 15);
        if (Object.keys(filteredResults).length > 0) {
            console.log('Found it via candyHouseUpgradeArrow2:', JSON.stringify(filteredResults));
            break;
        }
        sleep(500);
    }
    if (Object.keys(filteredResults).length === 0) {
        (0, utils_1.logs)('searchForCandyHouse', 'findAndTapCandy did not see any candy house upgrade arrow > 0.95, skipping');
        return false;
    }
    var i = 0;
    while (i < Object.keys(filteredResults).length) {
        if (filteredResults[i].x < 93 || filteredResults[i].x > 575 || filteredResults[i].y < 37 || filteredResults[i].y > 300) {
            (0, utils_1.logs)('searchForCandyHouse', "Skipped upgrade house as this point exceed feasible area: (".concat(filteredResults[i].x, ", ").concat(filteredResults[i].y, ") (93<x<575, 37<y<300)"));
            i++;
            continue;
        }
        (0, utils_1.logs)('searchForCandyHouse', "Tap candy house green upgrade at: (".concat(filteredResults[i].x, ", ").concat(filteredResults[i].y + 25, ") of ").concat(JSON.stringify(filteredResults)));
        Rerouter_1.rerouter.screen.tap({ x: filteredResults[i].x, y: filteredResults[i].y + 25 });
        if (Rerouter_1.rerouter.waitScreenForMatchingPage(PAGES.rfpageInCandyHouse, 2000)) {
            (0, utils_1.logs)('searchForCandyHouse', "Found upgradeable candyhouse at ".concat(filteredResults[i].x, ", ").concat(filteredResults[i].y + 25, ", return and let candy house handle this"));
            return true;
        }
        i++;
    }
    (0, utils_1.logs)('searchForCandyHouse', "Finish searching for upgradable candy house");
    return false;
}
exports.searchForCandyHouse = searchForCandyHouse;
function saveImageToDisk(crashType, img) {
    crashType = crashType === undefined ? 'crash-img' : crashType;
    var date = new Date(Rerouter_1.Utils.getTaiwanTime());
    var filename = "".concat((0, utils_1.padZero)(date.getMonth() + 1), "-").concat((0, utils_1.padZero)(date.getDate()), "T").concat((0, utils_1.padZero)(date.getHours()), ".").concat((0, utils_1.padZero)(date.getMinutes()), ".").concat((0, utils_1.padZero)(date.getSeconds()), "-").concat(crashType, ".jpg");
    if (img === undefined) {
        (0, utils_1.logs)('saveImageToDisk', "image not provided, get new one and save to: ".concat(filename));
        var img = getScreenshot();
        // TODO: write to images,
        // For nox/memu: /sdcard/Pictures/Screenshots/robotmon/
        // For redroid: /data/media/0/Download/
        saveImage(img, '/sdcard/Pictures/Screenshots/robotmon/' + filename);
        saveImage(img, '/data/media/0/Downloads/' + filename);
        releaseImage(img);
    }
    else {
        (0, utils_1.logs)('saveImageToDisk', "save given image to: ".concat(filename));
        saveImage(img, '/sdcard/Pictures/Screenshots/robotmon/' + filename);
        saveImage(img, '/data/media/0/Downloads/' + filename);
    }
}
exports.saveImageToDisk = saveImageToDisk;
function checkIfNeedCrash() {
    saveImageToDisk();
    if (scriptConfig_1.config.account === 'default_xrobotmon_account@gmail.com') {
        (0, utils_1.logs)('checkIfNeedCrash', 'rfpageGeneralMessageWindow, saved the problematic screen and crash the script');
        throw new Error('Intentional crash');
    }
    else {
        (0, utils_1.logs)('checkIfNeedCrash', 'rfpageGeneralMessageWindow, saved the problematic screen and hit back to see if it resolved');
        (0, utils_1.sendKeyBack)();
    }
}
exports.checkIfNeedCrash = checkIfNeedCrash;
function configSharePref() {
    var rtn = execute('ls /data/data/com.devsisters.ck/shared_prefs');
    if (rtn === 'exit status 1') {
        console.log('Did not find shared_pref, removing all related dirs');
        execute('rm -r /data/data/com.devsisters.ck/app_payload_lib');
        execute('rm -r /data/data/com.devsisters.ck/cache');
        execute('rm -r /data/data/com.devsisters.ck/code_cache');
        execute('rm -r /data/data/com.devsisters.ck/.sealing_reports');
        execute('rm -r /data/data/com.devsisters.ck/files');
        execute('mkdir /data/data/com.devsisters.ck/shared_prefs');
    }
    var content = readFile('/data/data/com.devsisters.ck/shared_prefs/com.devsisters.ck.v2.playerprefs.xml');
    if (content !== undefined) {
        var lines = content.split('\n');
        lines.splice(4, 0, '<string name="TITLE_FIRST_TIME_ANIMATION_TAG_KEY">time</string>');
        for (var idx in lines) {
            if (lines[idx].indexOf('OPTION_MUTE_BGM') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_MUTE_BGM" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_MUTE_SE') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_MUTE_SE" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_MUTE_VOICE') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_MUTE_VOICE" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_USE_LIGHT_SAFE_FILTER') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_USE_LIGHT_SAFE_FILTER" value="1" />';
            }
            else if (lines[idx].indexOf('OPTION_HIDE_SKILL_EFFECT') !== -1) {
                console.log(lines[idx]);
                lines[idx] = '<int name="OPTION_HIDE_SKILL_EFFECT" value="1" />';
            }
        }
        console.log('Write file return: ', writeFile('/data/data/com.devsisters.ck/shared_prefs/com.devsisters.ck.v2.playerprefs.xml', lines.join('\n')));
    }
    else {
        // no com.devsisters.ck.v2.playerprefs.xml file create one
        var playerprefsXML = "<?xml version='1.0' encoding='utf-8' standalone='yes' ?>\n<map>\n    <string name=\"TITLE_FIRST_TIME_ANIMATION_TAG_KEY\">time</string>\n    <int name=\"OPTION_MUTE_BGM\" value=\"1\" />\n    <int name=\"OPTION_MUTE_SE\" value=\"1\" />\n    <int name=\"OPTION_MUTE_VOICE\" value=\"1\" />\n    <int name=\"OPTION_USE_LIGHT_SAFE_FILTER\" value=\"1\" />\n    <int name=\"OPTION_HIDE_SKILL_EFFECT\" value=\"1\" />\n</map>";
        console.log('Write new file return: ', writeFile('/data/data/com.devsisters.ck/shared_prefs/com.devsisters.ck.v2.playerprefs.xml', playerprefsXML));
    }
    execute('chmod -R 777 /data/data/com.devsisters.ck/shared_prefs');
}
exports.configSharePref = configSharePref;
function mergeObject(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {
        var source = sources_1[_a];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== undefined) {
                target[key] = source[key];
            }
        }
    }
    return target;
}
exports.mergeObject = mergeObject;
function handleGeneralMessageWindow(taskName, image, finishRound) {
    var rfpageGeneralMessageWindow = new Rerouter_1.Page('rfpageGeneralMessageWindow', [
        { x: 424, y: 101, r: 57, g: 69, b: 107 },
        { x: 294, y: 101, r: 60, g: 70, b: 105 },
        { x: 431, y: 128, r: 243, g: 233, b: 223 },
        { x: 429, y: 244, r: 219, g: 207, b: 199 },
        { x: 380, y: 100, r: 57, g: 69, b: 107 },
        { x: 319, y: 102, r: 57, g: 69, b: 107 },
        { x: 292, y: 108, r: 57, g: 69, b: 107 },
    ]);
    if (!Rerouter_1.rerouter.isPageMatch(rfpageGeneralMessageWindow)) {
        return false;
    }
    if (checkScreenMessage(MessageWindows.theNetworkIsUnstableMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm theNetworkIsUnstableMessageScreen, tap OK');
        Rerouter_1.rerouter.screen.tap({ x: 316, y: 250 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.theReloginIntoAnotherDeviceMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm theReloginIntoAnotherDeviceMessageScreen, stay here and wait for it');
        for (var i = 0; i < scriptConfig_1.config.sleepWhenDoubleLoginInMinutes; i++) {
            sleep(60000);
            (0, utils_1.sendEventRunning)();
            (0, utils_1.logs)('handleUnexpectedMessageBox', "Detect relogin, wait: ".concat(i, "/").concat(scriptConfig_1.config.sleepWhenDoubleLoginInMinutes, " mins to restart..."));
        }
        keycode('BACK', 1000);
        return true;
    }
    if (checkScreenMessage(MessageWindows.messageTeamDontMatchToSCRow1, rfpageGeneralMessageWindow, image) &&
        checkScreenMessage(MessageWindows.messageTeamDontMatchToSCRow2, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm PAGES.messageTeamDontMatchToSCRow1 && messageTeamDontMatchToSCRow2, send back and finish round');
        if (taskName === tasks_1.TASKS.towerOfSweetChaos) {
            finishRound(true);
        }
        (0, utils_1.sendKeyBack)();
        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
        (0, utils_1.sendKeyBack)();
        return true;
    }
    else if (checkScreenMessage(MessageWindows.skipTutorialMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm skipTutorialMessageScreen, skip this one');
        Rerouter_1.rerouter.screen.tap({ x: 390, y: 250 });
        sleep(2000);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.unfinishedPVPBattleMessageScreen, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.pvp) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedPVPBattleMessageScreen, skip current task');
            finishRound(true);
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedPVPBattleMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 394, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.messageCookieDryingOnSunbed, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.tropicalIslandClearBubble) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm messageCookieDryingOnSunbed, end current task');
            Rerouter_1.rerouter.screen.tap({ x: 320, y: 253 });
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm messageCookieDryingOnSunbed, tap to close and skip current task');
        Rerouter_1.rerouter.screen.tap({ x: 320, y: 253 });
        finishRound(true);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.bountyAddMoreCookiesMessageScreen, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.bounties) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyAddMoreCookiesMessageScreen, tap cancel and skip');
            Rerouter_1.rerouter.screen.tap({ x: 263, y: 252 });
            finishRound(true);
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyAddMoreCookiesMessageScreen, tap start and force run');
        Rerouter_1.rerouter.screen.tap({ x: 375, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.bountyHasExpired, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.bounties) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyHasExpired, tap OK and skip');
            Rerouter_1.rerouter.screen.tap({ x: 316, y: 252 });
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm bountyHasExpired, tap OK and finish this task');
        Rerouter_1.rerouter.screen.tap({ x: 316, y: 252 });
        finishRound(true);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.unfinishedSuperMayhemBattleMessageScreen, rfpageGeneralMessageWindow, image)) {
        if (taskName !== tasks_1.TASKS.superMayhem) {
            (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedSuperMayhemBattleMessageScreen, skip current task');
            finishRound(true);
            return true;
        }
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm unfinishedSuperMayhemBattleMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 394, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.downloadDataNoLanguageTitle, rfpageGeneralMessageWindow, image) &&
        checkScreenMessage(MessageWindows.downloadDataNoLanguage, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm downloadDataNoLanguage, tap download');
        Rerouter_1.rerouter.screen.tap({ x: 320, y: 255 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.battleAbnormalButLastWasSavedMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm battleAbnormalButLastWasSavedMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 318, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.guildBattleAttemptNotUsedMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm guildBattleAttemptNotUsedMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 317, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.TOSCsearingKeysNotUsedMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm TOSCsearingKeysNotUsedMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 317, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.battleCompletedNotInflictDamageMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm battleCompletedNotInflictDamageMessageScreen, tap cancel');
        Rerouter_1.rerouter.screen.tap({ x: 264, y: 250 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.newAreaAvailableMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm newAreaAvailableMessageScreen, tap OK to send the ballon');
        Rerouter_1.rerouter.screen.tap({ x: 375, y: 250 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.anErrorHasOccuredMessageScreen, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm anErrorHasOccuredMessageScreen, tap it');
        Rerouter_1.rerouter.screen.tap({ x: 317, y: 253 });
        return true;
    }
    else if (checkScreenMessage(MessageWindows.anUnknownErrorHasOccurProcessingRequest, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm anUnknownErrorHasOccurProcessingRequest, wait 5 secs and tap it');
        Rerouter_1.Utils.sleep(5 * 1000);
        Rerouter_1.rerouter.screen.tap({ x: 317, y: 253 });
        // var rtn = execute('am force-stop com.devsisters.ck');
        // logs(context.task.name, `rfpageGeneralMessageWindow confirm anUnknownErrorHasOccurProcessingRequest, ${rtn}`);
        return true;
    }
    else if (checkScreenMessage(MessageWindows.messageNotifyQuit, rfpageGeneralMessageWindow, image) ||
        checkScreenMessage(MessageWindows.messageNotifyQuit2, rfpageGeneralMessageWindow, image) ||
        checkScreenMessage(MessageWindows.messageNotifyQuit3, rfpageGeneralMessageWindow, image) ||
        checkScreenMessage(MessageWindows.messageNotifyQuitRedroid, rfpageGeneralMessageWindow, image)) {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow confirm messageNotifyQuit/messageNotifyQuit2/messageNotifyQuit3/messageNotifyQuitRedroid, send back');
        (0, utils_1.sendKeyBack)();
        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
        return true;
    }
    saveImageToDisk('unknown-message-window', image);
    if (scriptConfig_1.config.account === 'default_xrobotmon_account@gmail.com') {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow, saved the problematic screen and crash the script');
        throw new Error('Intentional crash');
    }
    else {
        (0, utils_1.logs)(taskName, 'rfpageGeneralMessageWindow, saved the problematic screen and hit back to see if it resolved');
        (0, utils_1.sendKeyBack)();
    }
    return false;
}
exports.handleGeneralMessageWindow = handleGeneralMessageWindow;
function checkIfInBattle(task) {
    // read the life bar of both players
    var rfpagePvPBattling = new Rerouter_1.Page('rfpageBattling', [
        // From PVP
        // { x: 284, y: 17, r: 145, g: 219, b: 143 },
        // { x: 351, y: 16, r: 77, g: 32, b: 12 },
        // From Super mayhem
        { x: 354, y: 14, r: 125, g: 12, b: 251 },
        { x: 285, y: 15, r: 65, g: 205, b: 12 },
    ]);
    var rfpageBountyBattle = new Rerouter_1.Page('rfpageBountyBattle', [
        { x: 454, y: 21, r: 82, g: 209, b: 0 },
        { x: 591, y: 10, r: 255, g: 255, b: 255 },
    ]);
    var rfpageTOSCBattle = new Rerouter_1.Page('rfpageTOSCBattle', [
        { x: 608, y: 41, r: 47, g: 35, b: 38 },
        { x: 616, y: 17, r: 205, g: 205, b: 203 },
    ]);
    var rfpageInIslandBattle = new Rerouter_1.Page('rfpageInIslandBattle', [
        { x: 594, y: 12, r: 249, g: 37, b: 38 },
        { x: 590, y: 20, r: 24, g: 24, b: 24 },
        { x: 453, y: 21, r: 85, g: 211, b: 2 },
    ]);
    var rfpageCookieAllianceBattle = new Rerouter_1.Page('rfpageCookieAlliance', [
        { x: 442, y: 20, r: 85, g: 215, b: 2 },
        { x: 36, y: 21, r: 51, g: 227, b: 255 },
    ]);
    var rfpageGuildDragonBattle = new Rerouter_1.Page('rfpageGuildDragonBattle', [
        { x: 556, y: 12, r: 90, g: 27, b: 175 },
        { x: 158, y: 338, r: 126, g: 247, b: 51 },
    ]);
    var rfpageAutoUseSkillEnabled = new Rerouter_1.Page('rfpageAutoUseSkillEnabled', [{ x: 28, y: 291, r: 223, g: 221, b: 1 }], { x: 41, y: 289 });
    var rfpageAutoUseSkillNotEnabled = new Rerouter_1.Page('rfpageAutoUseSkillNotEnabled', [{ x: 41, y: 289, r: 203, g: 203, b: 203 }], { x: 41, y: 289 });
    var rfpageAutoUseSkillNotEnabled2 = new Rerouter_1.Page('rfpageAutoUseSkillNotEnabled2', [{ x: 41, y: 289, r: 197, g: 193, b: 195 }], { x: 41, y: 289 });
    var rfpageSpeedBoostEnabled = new Rerouter_1.Page('rfpageSpeedBoostEnabled', [{ x: 32, y: 331, r: 161, g: 159, b: 8 }]);
    var rfpageSpeedBoost25Enabled = new Rerouter_1.Page('rfpageSpeedBoost25Enabled', [{ x: 36, y: 334, r: 153, g: 151, b: 8 }]);
    var rfpageSpeedBoostNotEnabled = new Rerouter_1.Page('rfpageSpeedBoostNotEnabled', [{ x: 33, y: 319, r: 203, g: 203, b: 203 }], { x: 33, y: 319 });
    var rfpageSpeed1_2x = new Rerouter_1.Page('rfpageSpeed1_2x', [
        { x: 20, y: 333, r: 211, g: 209, b: 2 },
        { x: 32, y: 334, r: 161, g: 159, b: 8 },
    ], { x: 20, y: 333 });
    var gpInBattle = new Rerouter_1.GroupPage('gpInBattle', [
        rfpagePvPBattling,
        rfpageBountyBattle,
        rfpageTOSCBattle,
        rfpageInIslandBattle,
        rfpageCookieAllianceBattle,
        rfpageGuildDragonBattle,
        rfpageAutoUseSkillEnabled,
        rfpageAutoUseSkillNotEnabled,
        rfpageAutoUseSkillNotEnabled2,
        rfpageSpeedBoostEnabled,
        rfpageSpeedBoost25Enabled,
        rfpageSpeedBoostNotEnabled,
        rfpageSpeed1_2x,
    ]);
    var matchedBattlePages = Rerouter_1.rerouter.getPagesMatch(gpInBattle);
    if (matchedBattlePages.length === 0) {
        return false;
    }
    (0, utils_1.logs)('checkIfInBattle', "Found matched battle page: ".concat(JSON.stringify(matchedBattlePages)));
    if (matchedBattlePages.some(function (element) { return element.name === 'rfpageAutoUseSkillEnabled'; })) {
        (0, utils_1.logs)('checkIfInBattle', "Auto skill correctly enabled");
    }
    else if (matchedBattlePages.some(function (element) { return element.name === 'rfpageAutoUseSkillNotEnabled' || element.name === 'rfpageAutoUseSkillNotEnabled2'; })) {
        Rerouter_1.rerouter.goNext(rfpageAutoUseSkillNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        (0, utils_1.logs)('checkIfInBattle', "Tap auto skill enable 1 time for rfpageAutoUseSkillNotEnabled");
    }
    if (matchedBattlePages.some(function (element) { return element.name === 'rfpageSpeedBoostEnabled' || element.name === 'rfpageSpeedBoost25Enabled'; })) {
        (0, utils_1.logs)('checkIfInBattle', "Speed boost correctly enabled");
    }
    else if (matchedBattlePages.some(function (element) { return element.name === 'rfpageSpeedBoostNotEnabled'; })) {
        Rerouter_1.rerouter.goNext(rfpageSpeedBoostNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        Rerouter_1.rerouter.goNext(rfpageSpeedBoostNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        (0, utils_1.logs)('checkIfInBattle', "Tap speed boost 2 times for rfpageSpeedBoostNotEnabled");
    }
    else if (matchedBattlePages.some(function (element) { return element.name === 'rfpageSpeed1_2x'; })) {
        Rerouter_1.rerouter.goNext(rfpageSpeedBoostNotEnabled);
        Rerouter_1.Utils.sleep(1500);
        (0, utils_1.logs)('checkIfInBattle', "Tap speed boost 1 time for rfpageSpeed1_2x");
    }
    // 如果打太久要停
    var maxBattleTimeInMins;
    switch (task) {
        case tasks_1.TASKS.tropicalIslandClearBubble:
            maxBattleTimeInMins = 15;
            break;
        case tasks_1.TASKS.guildBattleAlliance:
            maxBattleTimeInMins = 40;
            break;
        default:
            maxBattleTimeInMins = 3;
    }
    if (storage_1.globalStorage.botStatus.battleStarted === 0) {
        (0, utils_1.logs)('checkIfInBattle', "battle started");
        storage_1.globalStorage.botStatus.battleStarted = Date.now();
    }
    else if (Date.now() - storage_1.globalStorage.botStatus.battleStarted > maxBattleTimeInMins * CONSTANTS.minuteInMs) {
        (0, utils_1.logs)('checkIfInBattle', "Max battle time reached (".concat(Date.now() - storage_1.globalStorage.botStatus.battleStarted > maxBattleTimeInMins * CONSTANTS.minuteInMs, "), force stop"));
        Rerouter_1.rerouter.screen.tap({ x: 615, y: 19 });
        Rerouter_1.Utils.sleep(1500);
        Rerouter_1.rerouter.screen.tap({ x: 321, y: 198 });
        return true;
    }
    else if (Date.now() - storage_1.globalStorage.botStatus.battleStarted < 10 * CONSTANTS.minuteInMs) {
        (0, utils_1.logs)('checkIfInBattle', "battle last: ".concat((Date.now() - storage_1.globalStorage.botStatus.battleStarted) / CONSTANTS.minuteInMs, " mins"));
    }
    (0, utils_1.sendEventRunning)();
    return true;
}
exports.checkIfInBattle = checkIfInBattle;
function passiveAddRoute(pages) {
    var _loop_3 = function (pageIdx) {
        var page = pages[pageIdx];
        if (!(page instanceof Rerouter_1.Page)) {
            return "continue";
        }
        if (Rerouter_1.rerouter.getPageByName(page.name) !== null) {
            return "continue";
        }
        Rerouter_1.rerouter.addRoute({
            path: "/".concat(page.name),
            match: page,
            action: function (context, image, matched, finishRound) {
                if (page.next === undefined) {
                    console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path, " but does not have next page to go"));
                    return;
                }
                console.log("findPath, task: ".concat(context.task.name, ", path: ").concat(context.path));
                Rerouter_1.rerouter.goNext(page);
            },
        });
    };
    for (var pageIdx in pages) {
        _loop_3(pageIdx);
    }
}
exports.passiveAddRoute = passiveAddRoute;
function assign(target, source) {
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
    return target;
}
exports.assign = assign;
// https://ga-dev-tools.google/ga4/event-builder/, https://developers.google.com/analytics/devguides/collection/protocol/ga4/sending-events?client_type=gtag#send_an_event
function sendCounter(taskName, finishedPageName, furthurInfo) {
    // TODO: remove when counter verify finished
    var body2 = {
        client_id: scriptConfig_1.config.deviceId,
        user_id: scriptConfig_1.config.licenseId,
        user_properties: {
            client_id: scriptConfig_1.config.deviceId,
            user_id: scriptConfig_1.config.licenseId,
            user_category_1: scriptConfig_1.config.deviceId,
            user_category_2: scriptConfig_1.config.licenseId,
            user_category_deviceId: scriptConfig_1.config.deviceId,
            user_category_licenseId: scriptConfig_1.config.licenseId,
        },
        events: [
            // Page view event
            {
                name: 'page_view',
                params: {
                    page_title: "".concat(taskName),
                    page_path: "/".concat(finishedPageName),
                    engagement_time_msec: 1,
                    task: "".concat(taskName, "_done"),
                },
            },
            // Your custom event
            {
                name: "".concat(taskName, "_done"),
                params: assign({
                    page_title: "".concat(taskName),
                    page_path: "/".concat(finishedPageName),
                    engagement_time_msec: 1,
                }, furthurInfo),
            },
        ],
    };
    var body = {
        client_id: scriptConfig_1.config.licenseId,
        user_id: scriptConfig_1.config.userId,
        non_personalized_ads: false,
        events: [
            {
                name: "".concat(taskName, "_done"),
                params: assign({
                    rerouter_page: "".concat(finishedPageName),
                    rerouter_task: "".concat(taskName),
                    engagement_time_msec: 100,
                    license_id: scriptConfig_1.config.licenseId,
                    user_id: scriptConfig_1.config.userId,
                    device_id: scriptConfig_1.config.deviceId,
                }, furthurInfo),
            },
        ],
    };
    httpClient('POST', 'https://www.google-analytics.com/mp/collect?measurement_id=G-1J3WHD2SDV&api_secret=bE8-LEC6REuSDW_G3Mt87Q', JSON.stringify(body), {
        'Content-Type': 'application/json',
    });
    (0, utils_1.logs)(taskName, "Sending counter with ".concat(scriptConfig_1.config.deviceId, ", ").concat(scriptConfig_1.config.licenseId, ", ").concat(JSON.stringify(body)));
    (0, utils_1.logs)(taskName, "Sending counter for task '".concat(taskName, "' at page '").concat(finishedPageName, "'"));
}
exports.sendCounter = sendCounter;
// 往Slack報告上一頁是 context.lastMatchedPath，下一頁應該是 targetPage，印出不符合的顏色點
function quickReportWrongPointToSlack(context, targetPage) {
    Rerouter_1.Utils.sendSlackMessage(Rerouter_1.rerouter.rerouterConfig.debugSlackUrl, "CRK-".concat(scriptConfig_1.config.deviceId, ": Target page seems like missing: ").concat(targetPage.name, ", skip task"), "".concat(context.task.name, " task were in ").concat(context.lastMatchedPath, " but is now unknown, perhaps *").concat(targetPage.name, "* screen is updated, Point check: ").concat(findUnmatchInPage(targetPage)));
}
function unknownCheckMissingPage(context, finishRound) {
    Rerouter_1.Utils.log("unknown count ".concat(context.matchTimes, ", task: ").concat(context.task.name, ", during ").concat(context.matchDuring, ", last matched: ").concat(context.lastMatchedPath));
    switch (context.task.name) {
        case tasks_1.TASKS.bounties:
            if (context.lastMatchedPath === "/rfpageSelectAdvanture") {
                quickReportWrongPointToSlack(context, bounties_1.rfpageInBounties);
                finishRound(true);
            }
            else if (context.lastMatchedPath === "/rfpageInBounties") {
                quickReportWrongPointToSlack(context, bounties_1.rfpageInOneOfTheBounties);
                finishRound(true);
            }
            else if (context.lastMatchedPath === "/rfpageInOneOfTheBounties") {
                quickReportWrongPointToSlack(context, bounties_1.rfpageReadyToBattleBounty);
                finishRound(true);
            }
            break;
        case tasks_1.TASKS.gnomeLab:
            if (context.lastMatchedPath === "/rfpageUncollapsedAffairs") {
                quickReportWrongPointToSlack(context, gnomeLab_1.rfpageInGnomeLab);
            }
            break;
        case tasks_1.TASKS.haborShopInSeaMarket:
            if (context.lastMatchedPath === "/rfpageInSeasideMarket") {
                quickReportWrongPointToSlack(context, tradeHabor_1.rfpageMarketItemDetail);
            }
            break;
        case tasks_1.TASKS.guildBattleDragon:
            if (context.lastMatchedPath === "/rfpageBattleDragon") {
                quickReportWrongPointToSlack(context, guild_1.rfpageReadyToFightDragon);
            }
            break;
    }
}
exports.unknownCheckMissingPage = unknownCheckMissingPage;


/***/ }),

/***/ "./src/icons.ts":
/*!**********************!*\
  !*** ./src/icons.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.iconGreenBubbleBlueGem = exports.iconRedBubbleWhiteCheck = exports.iconSeasideMarketItems = exports.wNumbers = exports.bNumbers = exports.numberImagesProdutRequirements = exports.iconSeasideMarketDetailAuroraBrick = exports.iconSeasideMarketDetailAuroraColumn = exports.iconSeasideMarketDetailAuroraCompass = exports.iconSeasideMarketDetailBeans = exports.numberAuroraStockInTradeBird = exports.numberImagesWishingTree = exports.numberImagesPvP = exports.numberImagesSuperMayhem = exports.iconsGnomeLabCookies = exports.iconsGnomeLabKingdom = exports.iconsAuroraItems = exports.iconSunbedGreenCheck = exports.iconGreenCheckedWithGiftBox = exports.iconTowerOfSweetChoasDownArrow = exports.iconBountiesGreenEnter = exports.iconWhiteSword = exports.iconRedSword = exports.iconIslandHammer = exports.iconRedExclamation = exports.iconGreenCheckGoldCoinInVillage = exports.iconGreenCheckedGreenBackground = exports.iconGreenCheckedWhiteBackground = exports.iconCandyHouseUpgradeArrow2 = exports.iconCandyHouseUpgradeArrow = exports.iconCandy = exports.iconSendAllSmall = exports.iconSendAll = void 0;
var types_1 = __webpack_require__(/*! ./types */ "./src/types.ts");
// In train page
exports.iconSendAll = new types_1.Icon('iconSendAll', 'iVBORw0KGgoAAAANSUhEUgAAAEsAAAAxCAYAAACS91RNAAAAA3NCSVQICAjb4U/gAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAA0mSURBVGhD7VsJdBRFGv66e67cEAiHgAECBEGQI3Iop1nkEBAEFmVXVx6+RdYFLx4KD1ZcAc3j8Ip47e4TheByugRkww3hEINyJSFkCAkkgdyTazJnd+9f1TMkKGzYZTJo9Jup6a7q6uqqr///r/+v7hE2nLuqwgOZkqTtXgeTJKCZUUSYQUKITgRtYBSoLiWF0u2AtQHBc1XaF4T6GlShsh4rbF+GfK33teDHCU7aOtxAoV1Bbo1Tq3uD+rcK4Z91yPKCdZcRZxCB84cPIDlxEyzFhdrACPUN51ZQPyn/Kzwk/gBefhhRDvpxK1SPH9HQtEUrDBg5Fv1HjOb5QBqkURI1YaB7yMYsqiJU2gobMoksb4siu8Mq0o4lY/PqVdBTBaNOAlWFeJtj83aQcaQ1dZsN3gTqjRgjeIfICHMwwiijUh8ET8/YyCXq3HNzX8GAQQ/CQN1jZTpRhI7tk+AIGzML67Qu4rXfjaMDAmqCy/DmJ+3gKAhEQZuj2mGDTAzXqd4YoBihc0lwu93Y+nQXXsRu47bERM+NpY9nzMIWc/G10b/21GNQZTdeebs/fv/As1QSzcsr6RNvbgcphNFJFDcmCGT8mM0h6JQAOByBODi7DaqrgMQdiZo4epRA2JJFZFH9vzw5EWF3BeO5ed3xRP8V2tE6eD4tAEF2gyfXeKDT6RBgIqUxGEjIaniZYtfh4J+7obJKxfYd23kZAzNHyDh1nIyYgtCxSTck6qPSPgiwB2iK28iSm8ZfZQNKK5yorKAymKALMGDwh+lcBffv36+RQOBa9eXKN2GAG0OHNvUU1yI+oycqcio8ucYI5oNoSXYAliKyy0439ESMWy7FiuW1wiPqyeSTC4VJ64opqyInJ5t+VXx3cTde/S4cRUVFsNDnlwMZFs9wh64t0HY8ENN3JaJpKLP45bzSp+X9sOBkM2yqmApBJL8k1EEeBbkOlH4pUImwMouMCCGMNFXCzq938nIpSC8trii3InpCMZwuRoiiTZmedDuQneQ9Z8gwH3Dh3G4X8k7KsJUr0JHHZwxmN8hT8f9EVZGCvO/dKM5SYLOoCAgTIDHn0EeQdDUwb2uJ3Nw8TBj/KMRSUjPWvFf0fAWXTcXxtQ4cWKpHp6rpmNxjCWJbz4P76BAcep9EPY/HK7eF83tcqD7UF/dYZ+FcApmM8x4fwEewWrXZv7CggPvrzPw3CHLpjuftDsfRvamIf/8DzH15LhYvfh3btu5Et4hYlGRRXEeSV12soOKqguoS8mAojmOgiRkOmrbLLssoSHej5KKMmjKypHX4dTtUZO53Ycoj07Fk0XJEt3wA+Wd8SxbDtbBM+JGH6TsRvnhMxtTHnkLr1q2RnJyMvn37Yvjw4YiLi0NGmhllOTL2rrRh+8s6pCzriC2zVSQtq8GFZBf2v2fDhllOHFjQDKnxnXBqRQdsecGJ4587UJqj4PsNDmyYbYUttymaNWvGr8fCl7Jc35LFbBcD48ug/xFZvjPiTGLcbu1ier0ely9fxsGDB7Bg4au4YsnEhcNu9AqdhvRv8/Ft8knknC3FiE6zcWi1A80tQ3HpTDUyUrPx7dGTlE7jeFIWyo60x57lNlQc6ob17x4i9SjCuHHj+DUYWc4aX09CFD0SUUy6JNHYcGoY3FzA+vUJKC0txYABA5CdnY2lS5chvGUQwttLaKpG4+OPPiVbaSH1XMyPx8UtR7vg+8hBNkCkAJadu2HDBk40k9Dn/vgiXHktuCoPHDgQKSkpyMzM9FyR4GuuCJoaahrXYGR1GKhHSUU+evfujc8++wxGoxHz58/H5oSvkX/KjdEjx0KSJJw+fRrBwcEoLCzkHRs7diycThdv48SJE5g6dSoWLlzI81FRUZgyeSoiIiKwefNm9OvXD8eOHePHGg61pqnByGrRRURkfx0KSvIwffp0dO/eHZWVlRgyZAi6Rt0Hk5ECMsKoUaMwd+5c9OjRA1lZWbA7HHwFwAuyq6iqoqjWg5AQiuYJFy5c4Ft/ga22iIw43y/EUaxFBjzUHYX33/4A06Y9gZ49e/JglcFms12TiLS0NMTGxmLixIlYvXo14t56Cy6XJlkMEltM8sBut+Obb77h+3PmzOGTRXS0tjLC4fthXAMz7w0mWZVXga6RfTBz5iysW5eATZs2wWQycfXJNJ/H7j27sGbNGi5xe/fuxb59+7BkyRLoTAIcDjtvQ5ZliESWomgTRU1NDXbtSsKKFSu4TZs3bx63hwwq+RXM0W1ICIMHD2YLhnhgVapPQ5qM3U4kLXWgR9cY9OrVi9slJkVJSUmI6EwCTbepkJzIQQ8O4m4Fk5rDhw/janUGnOV6PDLqUSI1E5dKz0C1BmPUiDE4m3oW5uw0OKwqmoQ1QUxMDMLDw/lsu3tvEno+acX904yeHvgGR1+8j08c7GY2GFml2TKSP3Ig+5gbTqvCJyrJIKD1PSL6/8HEw5Ljn9u5IymTg8nm6MBwAdEP6VBZoKLgnEx1gOgRBhTRfjE5poYAoNMQPWootLmU4oatgjmyKnTUbqtuOjz0khGtaetL+IUsdoHqUgUlFxSUXiJCyAw1aSuiZRcJYXdp2s9iu2KzFvpINEbmUjTvKBEZCuyVWiNhd0mwV1C+mgwsnRYeKcEQKKCigDz/fIW3YQwR0ITabNZR5MT5ErVk7WlAsuoBC11YLFdMYY9C+82IhJYkdaIocKmqJBJYPNacCLRT6OPNt+gkcdL9BUYWW4Lft39fwxn4+sDU9FC8jCjLDHS1zkTKx0bkfS9zSTnxDwldK2dCdzIWKevt1+VPbXV4WvAfmAjJFMjeMbLSdroQ034c3l75HlbErcJvH/4TThIRLPYLdnbCstdX4oVZ83HxiHxd/kKy74Pl+sGeN9LM7Mn5FWx1ga0YTH5siqcEmDx5Ci6fkLnEeVcfmP/H7FfdfHWRf8lizyH5s0hKd4SsEiLEVW7C6NGjkZeXhyNHjuDee+9FZKvOKM4kMuqYTpk9Ubgu79nxExw0MzGyRIFsZkN6vTdDepILI38zBoGBgUhMTMRXX33FyyeRpF1Nq0dy6hDnD9jddlhd5OKUlRJZfr44c8bNTAVJ7RjYWheTLIYpU6bAcsXPHboFuFUZmRSS+F0NS7MVOCwGjBkzhucTEhJw9Kj2egCLHzvcHeXv+1cvmPKJIlNDP4OFQSNjxyAoKAj5+fk4ePAgT95VhMmTSOJ+esLF4X/JIm9+3LjxfH/RokUYNmwYTzNmzOBl48ePh+JZbFfIW2WrDtfl78AbBN43c6TIyMjFTM7ajSziwW1Dg8WKO9Yex7lzGdi8eROM4S6ERIgwp+XiSv4VvPPOO7iYlcWDbrZSUenOR0mBBWdPa/kaXT56T/JtsPzfYN6uPaV/eNIYiAoZL3/i7hgdbIarSNj6dwS3r8GEt4LweHwQIu8XsXbjJ7haYUZgaye27foSZy8cQ5dhOrTs4a7NP0TRtZ/B1/tIuIS+A2NUiSLU4e+a/RIbsocK7KGoIqvQGwVEREl8daGI/CunTYXiEriquZ0UspKkN2kjwmlVYS3T8uF3iwgmSfQPVOx4tgMnKm7dagh9iCxWPGp1DpX52eP7yUNHZLXlZC1fG+8x8CRlJTJTxzvgof6EoXBOGASoFHOJpgAylsScorSnwoZXw58diBJTgAlBdivE/oP6sUVKmEtKiMlfJYuDaKid9lT07NMNJkc5xOlzpvMFt8zMXO+xX8GYovTJdxaioxoTnrkHZcZcCqZJrFSFiiyhiKODCvsXwC+YMOZ/KqqATy8KcF0JICGTodfbgECXZuA7d+uMLnu0528fZ9EULeiokm8X/n8uUElYGAfstYKO/26FDl1bk+zwfwJASLlygDswsyY/D7vNgdSZ6fykV/pqnit7PsedMoL3rZJGBZrx7EGhfNdgtXLtYui8pg1Mbj1WrmNhGPl/qgThX6mvMVHiIjb/6S9QLbiRM+MSP4EhtgnQvn0oWhoMjVI7C8uq4NCpWJfh9JQAHf/WCiFSIFZ+8Qx/NZcUk6unsCP9ddqQlyw0hw0ReOOpxVCDgYzHU3k1DhIsUecvr9m/UFwaHV702tgRqAJWrX2G52sFhGRql/mvlJfgVoxwqgF8+XTBk/EkdpokWWLLUN6pDC7UMt+YEOYIRnCeAeH7tBdOmGCsIom6EYTdmW8QZZ4cQVUDUaG0hY2IS/xwI9KPn4GO/SuKPk4Kh0SaKXRELjvFJdhpK0EnsL+nCSSsRsprjbFnbTL7oS9bu2b13B7CdaTqOoFmFzYTs7rexH5YwU3ADnnTjcBUhfVT68EtwHM9hbyBHjGRmPHSw1r5TSDsMy+rvTad7FDCYJXDOSkGNQQtlFYIJHocNNQqIqeSUgvSU0U9j0oxl4bP9FmFpNrhUsIRIoYhGG2pNBBWoYa8lGqEqU5IRE6NaoFDLef1TWQnTHo9TcsmPkj2sgwji83B3r/q/RBMYRw0x9zId2ZGgsZMfaAKrEGfA/gPla3E2EIuQrcAAAAASUVORK5CYII=', 0.9);
exports.iconSendAllSmall = new types_1.Icon('iconSendAll', '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', 0.9);
exports.iconCandy = new types_1.Icon('iconCandy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9TPAfi86p4R1Pwj4p8FjW765tJbzVLjVr9JFvLAR7XidZGzINgIK8kqDxxXyh8ev29Pi58DPitqfwp+HP/BQTwV4D0TSEtk07wj4p8N6vql9pqPbxSbJLltIuzICXLoPPk2o6J8u3YpRX3+T8P5dmGd1VUTXu30t3S6po/laOaZllmFp0KdaXLFzimm4StFreVPklK923zN3dm9Vc/9k=', 0.95);
exports.iconCandyHouseUpgradeArrow = new types_1.Icon('iconCandy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAQAAsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7O8IfBr4c+H9T8c6fqXjCz1OTQtZn0/wrP44tn1e0knitYMpLZ6fJa/akhvJLhJvtEgDrbLCn7zzpU9b8N/8ABQv4H6TolvpXxu/Z98b6Z4ptUMOq2XhL4M+IPEuloVJVDaanp+myQXUDRhGRspIqsEmht5lkt4/zg/YM/a0+BP7JvgLxB+zX+17+1xY6Jd+Ddbs9O8CQ+N9SQSP4dTRtNEH2dkgjDwLcC8RRtYxlGjMkrIXPiv7UvxF/4Lk/tN/HvxF8Zv8Aglg/xC8RfAfUZ4bXwPrfhm0tP7PvGs4I7K/kgMwDtGb+3vMMRhvvD5SK/l3Jc68R8fx7jssw2Eo0sNSh7spqrCnK0lZqpyPmnJT1jypWhpZxblw1s64nq57iMLWgv3eiu5aWdnrrv6K+5//Z', 0.86);
exports.iconCandyHouseUpgradeArrow2 = new types_1.Icon('iconCandy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9BvEP7IP7PPwt+Kll5+q6haaXqqi91jRbDxAq2MEPyxi4fzI3uo1McRiigtmG5o0VESOO4mh2L/wB+xD8SdAk/wCE+8LaP4Jn8J2ph0XxBp+rC2nbS55oi2bl8faN0+0zRzqzxyyqx5ljlk/LiL9rz4bfsV+P9J/a6+JNz8QdY8M+KPDjeCLnQ7LW3vXtnhuJL+waK3u7hYkhg8vVFVUkQJ9vO1MM2Pur/gkF8WPgT+3p4y8Y/wDBQvwb4S8QQWPhOyT4ceGrbxLc7bizkZodU1WZLSKaS2QXAuNHTzSzSn+zyv7teJP5/WZ8QT8RVltPDU44B0nOU9OeTaVk/euuWasklblbbu+Xl9HMsbn+X8VfUJyTpximpJu+qv8A8Da3qf/Z', 0.86);
exports.iconGreenCheckedWhiteBackground = new types_1.Icon('iconGreenCheckedWhiteBackground', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAVABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9hfHH7cngXwTe6hql/wCDPFN74N0HUZdP8U/EfTrCB9F0W6iz50cuZ1uZliOVmntoJoLZklE8kX2e48rsfi/8e/BfwR+HV78TPGlxcPZWnlR29rptqbi61C5mkWK3tLaJfmmnmleOKONeWd1HfNfnd+2X4A+IX7OHj6XxFbXMl98NfEuvXd5pF4u8t4d1nUb2S6ubO56jyLq8uJpYLjgLLM1u+Abbd5roX7REHgL4axWWoeM9Re18KxXI8MR6nPGmneDNOaLZMbIIokMsivJbo0hc21uxtbQRx3Dxn8Pz7xbxnDObYzL8fgJKcUnQcZcyq3dl9lct9NuZq0lva/wWZ8dYLJMzq4LH05QaV6b39ptpHTdt2++7R7l+0l+0j8TLrwVc/FW1+IXijTvireL5XhDSPCfjG+bTNO1WXK6dolrp0Eq2WsNvwJ7i8gnM7yTunk20UCQ/ofHrzmNTMFVyo3KpyAe4BwM/kK+Hf2Df2Zr/AE68sv2qPjx4cuLfxZPZungzw9qi/vPCthMuHd4+iajcIcTPy0UWLdSB55m+qv8AhID/AM9j+dfU+HeC4tw+W1MbxHiHPEYhqXs7JQoxSsoRS6tazfV97Xf02TrMZ4b22M0lPXl/lXb17nkfxGs9C+JHhjV/ht458PWup6JqltLZanp92m6O5hddrK3pkHqMEHkHIBrwH4S/8E+/hp8MviDpfjrWfHniTxZH4euVuvD+l+JTaPHb3S4MV1M8UCSXc0RGYnlZtjYkIaVUlUor6zFZZl2OrUq2IoxnOm7wbSbi+6b2Z0YnL8Di61OrWpRlKm7xbSbi+6b2PpTT/FWoyXSQShWDuASeozxWodUuAcYoorsb1O+KTWp//9k=', 0.95);
exports.iconGreenCheckedGreenBackground = new types_1.Icon('iconGreenCheckedGreenBackground', '/9j/4AAQSkZJRgABAQEAYABgAAD/4QA6RXhpZgAATU0AKgAAAAgAA1EQAAEAAAABAQAAAFERAAQAAAABAAAAAFESAAQAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9KvH/APwUBs78XC6hceILPw/Dff2Zcazb+G9RXw/Dcib7O0UmpiE2oInzC26basqmNtsg21c1zx3Z+GdFvNS1G8t7HT9Pge5urm4lEcNvEilnd2JwqqoJJPAANfEup/EfXPh1ZQ/B/wARtJJoGi6c9r4fgc77DXtJChHYofka5VWxdIRlmfzduyTg8HeOLqPQ7G11rxFHrGi+E7qKXw3obRzT3V3cKwaGTUJX+SeG02gwoSzyyGJpgzW++f8AhXPs+p4vFyniKlRuMU+ao1L2i700l7qb0UW3bdtNSS+Br8eYHDYqrhcW3TcFdX+0v7vm+i6+R7dq3iCb4kRah4i8aX3ibw3YsM+H9AttbvNCbTbILv8A7S1B7aWGY3Uw+ZbWZjFBCE8yMyvIqd9+yN+0H4i+Iv7P+i6xearqUy3U16tldSI1q+pWKXk8dneNGFRQ1xbLDOSqIjGUsqIpCj5U8H6fc/theL5v7VZrr4b6Zds+rTTnevi++R8m2U/8tLWKQZmf7ssimMblSQn6lHiZVGAy/nXlwzbHpc+Iapt25YRVvZxV9JP4pTndSld6WX+GPflOaYjEw+tVvdjL4Y9Uujfmz5/+N2k2fxh8Jvpc0k1jdWsy3em6lCAbjTLtM+XPHnuMkEdGRnU/KxFeFaf8KvH3ibUI9J1aHSdBsZCE1XWNN1BpHuYSDvSziKB4Xk+6Wdj5as2zcQpBRXyFHOa1OPK1GVtVdX5X3Wtvk7q+tj5TMMswmNqwrYumpSpu8W+n+a8ndH0j4X8S2nhHRLPS7Czgs9M0+FLe3t4IxGkEajCqoHGABjFdhavdXkCyRoWjbkHcBmiirwNadaUvaO/U9qjVlLRs/9k=', 0.92);
exports.iconGreenCheckGoldCoinInVillage = new types_1.Icon('iconGreenCheckGoldCoinInVillage', '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', 0.95);
// In tropical island
exports.iconRedExclamation = new types_1.Icon('iconRedExclamation', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAbABcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9yPj58YIfgj8DPGnxnTQJtXPhDwnqOtDS4JAj3ptbWSfyVY8KX8vaCehNflr4x/4KbX//AAgekfETwH8X/if/AMLmNuLrXNZ1LWgvhJJ/K3Gzi0NXe3ksGf8AdhjFHepFh/tLzAuf0u+Iy2Hjr4e694I1Aebb6zo11Yzxk/fSWJo2HTuGNfzh6fruo2nwUttcYTCMeEEuVuF/hH2YNuLLwpByD6EEHkV8PxhmOZ4KNFYSfLztpu3+Fq10/P7z9+8COCuF+Mp5m84g5fV6anG0uVfbTTs9ej7aa32P6V/gB8aNP+PHwH8E/HG00SfTIvGfhHTddi024kDyWi3drHcCJmGAzKJNpIABIorjv2fbdfh58BPBHgB0aE6H4Q03TzCylShhtY49pGOMbcY7UV9opOyufz/J+87PT5GTP46tYZGi+0FivBwa/B3x38R/gvqmjT/EXWPgH4f034mPrE2va5rNzrEy/Z/EokknNj/Yhf7GFhvf3f2WS3ea4SHLFpJDKf2YN/eI5RbhsDpXG3XwF+BN98SV+M178EfB03jBZUlXxXL4XtG1ISIoRXF0Y/N3BQFB3ZAAHQV89m2W18zhTUKrhyu+nU+y4N4vy3haripYrBrEe1puEbycOVv7Xu/Eu8Xps9Gj3Dwx8R7jVdCsb3XbM6fezWUcl5Z+aJBbylAXj3D721iRnviiuBa/vGRgZz0/rRXrrn6nyELVFdfkj//Z', 0.935);
exports.iconIslandHammer = new types_1.Icon('iconIslandHammer', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAWABkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9H4/i7oP7OvxV8S/Dv9nPwLY+PPH2nXEen/EL4sfF7xpJYie9aCK9TS4ZrSxupW8uO6jnNnbW1tYW5uhs2ySSJW7o/wC0d/wU+8RnUPH2g/s8/BW80HQZ3tZPC1h8RdQk1HxK8aP5s1hfz2MFvbDzPLiSK5iG9klLSxJsdsX/AIKGfsA/Cf4z+BPHPx7+DngNdO+ND6CJtN17R9fuNLbWJrVQ0dteBJUt7kSRobcNco4VXAJVV48W/ZQ/bk8PSeCdM1/wv4geXw/NbxrZX4jJt5I9gaOKeEcwTeXsO372CDwpBPBBylVcKk+Xta2q+a3XVa/id6jQjh4yowTS0d09HZdnaz6aL71c+u9D/aw/Yt/at8L+IfhH8Z7bStKvtIiim8bfC/4v6bb2d7pirLG0U09rdFopoRKYWjuoWlgLmMpKWxUf/DEP7JH/AEVL4of+JN+Mv/lzXmd1oXwA/bY8XaPrnx4+EHhHxJofg1bpNGPiHR7fUba4vriOISuhmQhIkjABX5keRgWw9shrW/4YC/4Jl/8ARpnwa/8ACN03/wCN1u44rZJS+9foznnTwFTWSa+Sf3O6If2+P2qtX/Zr/Z8uPEvhvRorzXPEGpweH9A+3RCS0t7u6Dqs9wmQZIo1V3MY5kKqmUDl1/OD4O+Ifin8XPHng79jP4exaEup/wDCNpp/g74ja8pTUNF0rTY1KxXMUEZj1RIk2eTaSeXASqiXftDkor4PiTCUcyzTDUcRdxhKM42lKLUk3qnFp3tpvqm09Gz7jh2lTpZDiK8UubVX30SWlnpbXY674T/tl+KvBv7LnjL4t+GLeeO48DT3+keJNL81Uhu9Ws7aJrp7diH2xM7jy5mUSYGWj42n0L/h2V/wUf8A+j9vBv8A4auz/wDiKKK+ldSrWjDmk/hWza6vs12PDq06WGqTVOK+JrVJ6JLa6dt3sf/Z', 0.935);
exports.iconRedSword = new types_1.Icon('iconRedSword', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAaABMDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9J/2kf+CnngbwiqeE9AXUtJF7ZS3E+sPpVxcPaWcckMU1zKbdJEsrdXuIEN1O6opmUZViCPkXSvHnwB+OXxR8Sal8adSu7vwrpUdpafDzxJo/ivUNP0uG5EP2i+uvtmm3cDSzkvDEDJugh+yhVlMs80K7P7Neh/Hzxb+0b8SPiX8G9QsrzQtM8PaNpOv2XiOOSKK81QPNcW9hY3USfuTHbzSXM5cTANdWq7F83zIpvFPhP4G/HyK60r4fxy+CPFcsst5c2FxZ+Ut1JuDSyG3R/IulZ5Q0txbsX8x08yQlfLP8ueLPF3GGAwTvhqtHCzty4unaUYO/vRlFRk6WqSUpJqWtvL+gMvjwrl+cV+H6clFwa5lGT9o7LRybfvJPdR+Ha2pFqX7Mv7RdtfzR/DP9ubXtE0EyFtM0nWPCljrNxaRt83lm9uf31woJO1pSzhNoZ3ILkr5C134R/s1fDXVJPA/7Rn7MWoan4309UTxHqun+MrY299OVDfaYQ+owMkUissiIYYyiuF2LtxRXzuCyrjmrg6c6XFsHFxi0/q9GV00rPmc7y06vV7s+iVCnbSvFLs6k016rl0Z+in/BLXwpB8Sv2BPFWm+A5Ld9c134zeJLfxPqUzB3smN1HD5mM5LLp0VqqKCOPL5AryH/AIKHfHX4b6neQ/sN/B1YLq28M6vb3HjDxlpOohW0KW1nEsVjZXED749SeaNTcOCDDE0qN+9mGz5A+M/xa+Kvwt/4J3eLrD4Y/EzxB4cg1b9oe4tdUh0HWp7NLyCXw5pfmxSiJ1EiPk7lbIbPINXfBul6ZoPhex0nQ9OgsrWK1Tyra0hWONMjJwqgAZJJ+pr+ic0z6thuG6ODhBWqQs29dGrNWt1PnOBfCfJ+KvF7Msdj6rlHC1ZNQt8TUmld32T1atrs3Y6RfhV8EdTL6l8QNDTxfrNxK8l/4i8VxR3d/eMzEgyy7VztBCKAAFRFUABRRWWZJMn5z+dFfBU63soKEEkloktEktkl0R/X8OD8ihFRjRjZf3V/kf/Z', 0.88);
exports.iconWhiteSword = new types_1.Icon('iconWhiteSword', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAdABcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9t/i/+0J8G/gF4bg8W/GD4hab4c0y6v0soL/VrgRRNMyO+3J6ARxyyMxwqRxSSMVRGYfKn7Z/7T3hfx/8evD3wX/4XB4g0TwPaeCIvFE/iLwB43m0satd30lzb2KTahYsHt7WKK1up8FhHcvLB8w8jElX9rK/+KPiD9tbwEfg5q9vrV74a+Hev6lrPhnUENvBpdvMY4YL2O+Ri1veXVyqWcatFKGt11AqYwsok8U1j4W/A34qy6vpPgnQ7n4ceM7i6uZNd0D7FDAZ54vLWa4ntI38m82+fEGubd8lpFR5sgoPwPxh4/4i4Zy+rQw+Eq06M1FLGQUZwpyum1ONpON1onKKTvZdbfd8G5TkmNzOlHF1lzNN+zXxW1Skk7XS3drvt0Z9Efsp/tIfGL4WfHvw1+zL8SviDrPxB8O+M7G9/wCEX17WhbyatolzZW6zPFcywpGbuykiVttzIjTRz7I5ZZvtMZjK88/4JZeDfht8HfFmr+DviHHqcfxkOmXkzC7vJbnTF8Om/Hl/2O3+qit9xtRcJtine4TzJIwjQMSvuvDGvmdXgjCVMwxscZUkr+1jazi37qbTacorST7pni8VQwdHPKtPDU3CMdLNWvb7SXRPdHb/ALNM154o+Ov7VPiXTon1nxHY614Z0bStKluwEhtINDS6tQNzKEQ3WoXzscjOWHJBzxP7V3gbQND8OWH7HPhbUrfUfij4uYX9trps/PuPDlq8q/a/EkhDxvb+UFaO2JYeddLDHh0Sdkq+NPgB8XPDn7QnjPxn8IP2odZ8Caf4u0uy0nxraeGfD9kb7U5dPe7S3uY7y6Sb7K3l3JQ7I9+I0IcEDHQfCf4R+A/gtY3sHgfS5/tmrXX2rXtc1S/lvdS1e5Ocz3d3OzzXEnJwXY7QcKFGBX2qqTlgJ4SUE4ycua+qak3pbzTtrt5nyuJwGFq5vTzBzd4RhypXVpRSWr7XV7K99ro6z9mT4G6X8CNR8Q+Itc+Kuq+M/EWvzRQP4j1+0toLqLS7febSx220ccRWNpriQuqK0kk7sRjaqlWtGN1qupR2H2ny/M3fPtzjCk9OPSiuPA4HB5XhIYXCU406cFaMYpKKXZJaJHfXxFfGVnWrScpPdvc//9k=', 0.88);
exports.iconBountiesGreenEnter = new types_1.Icon('iconBountiesGreenEnter', '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', 0.97);
exports.iconTowerOfSweetChoasDownArrow = new types_1.Icon('iconTowerOfSweetChoasDownArrow', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAeAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD85vAPiXxH+0J8R/C3wb8KaRZyeKPGfibS9B0qW6xAlzf3c8dnbedMCwSMPMoZ1jB2jcVdlFfon8Qv+DXzw94jVdQ13/goubSG0LbLj/hSKrtQno7Nr+D27DnPTJFfnt/wT6tPBVj/AMFFPgfYWHjq2a90z49+CHS2iu42ivEk1+xK+UsjecpVSSy5kC7T83Ir+hDxffa14v1CS71CSTyN+be1Dny48ZwcAYLcnLdTnrgADzqOV/Vqko11eadj6vNc3r88Y4eVo21Vlvf9D8sz/wAG1/hiz1uPTPhV/wAFD7zVvEMx8rRIrr4PnT7Ge8YlIoZ7tNYmkghZ9oeaOCcojFljlI2H804NXtruxt9WvbpYTdwpKPtEoB5UHGSeTX9PPwu8NQR/FHw3c+SAya/ZsRtJBxOh9K/m0+E6fAS08HaZLe3vhe71GbS4Gvf7b1y3Z0bYuVCEtswTjGAR0PIqcThI6OCsyspzWveaqyvtbb/gH3Z/wTK/4K7+Mf2IdFf9mX9o/wAUXtj8JEub278C+KdCt3ij8OT3N1Ndy2N7DbAM0E1xPL5dx8xjkdEfEL5tf1Q8OeIvCuu+HrLxP4f1Ww1LT9Rs4rvTtQ0+7jnt7u3kUPHNFIhZZEZSGVlJDAggkGv57WuILrTZbW8tUmhlVklilUMrqQQVIPBBGeK9B/ZL/bv/AGgP+Cf1pr2veDdRbxT8LNEsIH1D4Y63qsiR2st1PIqT6bcFJTZsLht8kW0xSCaYld/lun2uc5XHCJ4ik/db1T3V+3l+K8zxsZhVF+0j1P3J8b+O/AXw98I3nj34jeLNA8OaFp4Q3+s+IdSitLW2DusaGSaYqiBnZVG4jJYDqa/Gr/grH/wUi8X/APBT24f4DeB7l7b4Q+FvEkep+H/FGrx3Zv8AxDfRQz25u0gklVYbQpcSGIPGJipVmKGR4IuF+Mv7WPx7/b/+N3g2/wD2jNTs/wDhA73VRr/g/wCGenHfp2mwbPLQXTtGj39wERsvLlVM04jWOOYxDy5r1JdTvJkgAje7laNDztBc4FY5LgKGPxFsQrxtey0vrbVrX7jLB04yqrm9T//Z', 0.95);
exports.iconGreenCheckedWithGiftBox = new types_1.Icon('iconGreenCheckedWithGiftBox', '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', 0.94);
exports.iconSunbedGreenCheck = new types_1.Icon('iconSunbedGreenCheck', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAPABIDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2X9jfxl+zT/wT5/Zusvg78WfEPhD4gfCzxMIta8Y+ItG8F3lza2WsvDamJ3jmubo6naZggtknhtbZo3tbeVoZBPNcQ8B4U+B/wK+D+v8AiLxL4r/Z6j+IPxB+I/iW+tvhz8JfEeh2twPDdjLcyXFloNvbyGW3smt7ZYjd3LkR2SQSxxmNRO13paD+xz+078APDfh/xb4BOq+I31xzqfiTw3YSWNjfeFdZmdrh3sjJeiBrYuwSSJbljHOpmhZkmdI+++F2veDf+Ccvwx1j9t/9t/VpbTXtVQabp+gaVbm/fRoJFkuINGt5I12S3k5ty8907RwNJEiB1iijZ/wmtlHiFxBmP9jY6XscLCbk61FuEqlJ/DSi7uUXupyTvZb7OXw9GvxZmOZywmLpKEIvn9qnq4vaEVraW6k72S2vdM+4/wBnvQvHvw1+AXgf4dfELxh/amv6B4P0zTdc1OO5edbu8gtY4pphLKokkDyKzb3AZs5IBJor8Qtd/wCC4f8AwU/8Xa3eeLPBH7UPgnw1ouqXUl3pHhyX4f6fdtpVrIxeK0M8mkM8xiRlj8xmZn27iSSTRX7dHDV4pJH2y5ErXP/Z', 0.985);
// Numbers in wishing tree:
var b64N0_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2e0ntLDTtT0e28PaebjQ/2TrP4p6d8QBYsNT1DxKVs7kSteZ+eG6lnms/s3TbHtUcGivfLf8AZ28E20EGgjW/ED+G7S7S5tfB0msyHSoZEm89AIP+eazHzFhLGJX+YIDRXDOtB20O2FOa6n//2Q==';
var b64N1_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsv2xbK68I/slaVqfhiCy8PeLdA+LmoeF9X8WeHBNFda7DDpdncGa5aWR2Z3lnZyN20EAKABiivqnxd+y58J/Hd/dz+LLTUL2yvdTk1KXRpdRf7Et9JFFC90sXRZWjgjUt6L7miuB1U7HYqUu5/9k=';
var b64N2_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1H4teG7vSP2WfG9t4V0/SJdc1STTtE+CPi3R/Do0rUtV1CAynWrlphIxuLY2wCmaQ7ZJ5CsYAKklfRF7+zR4e1bwtZfDrXfiP4zv/AAnpsMMOneErvXi1hbQxMjxRIoQOqK0aEDf/AAjOaK4pVVodkab1uf/Z';
var b64N3_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2j4bweGJPg9471LTNd8L3/iPwR4i8NWOlXGneFpLDVtFSTXI7GTVLu+VfLvluosM0as2fNbO3OAV7zov7O/hbSLex0S58XeJtR0LS5raXTPDOoayz6fbtbkG3zGoUyiIqpQSs4QqCACAaK8+rUUmjupwcUz//2Q==';
var b64N4_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6n+GnwP8AF/xK/Zi8UeJNc8E614u1H/hSHiSz+Et5EQ0dldaZarBHqLjI/wBPvbw7rcfwQ2ucqZGBu/8ADfv7MP8A0Ulf/AST/Cuw139m34S6td3OoaR4cXw/cahYXdhrFx4Y26fJqdncgC4trloQDNFJtGVbPsRk1f8A+FBfAr/oi/hP/wAJ22/+IrzpzpyitDvhGcW3c//Z';
var b64N5_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDvvHdvovi/9ny0uPhhPoJ1PwB8LvDUPxe01PCItdd/tx7gW11ex6jcQlJ1kuDEjKjjIEjAsGIor6Y/4ZX+Hl1oEngXXdc8Rap4Vdw//CIX+sudOyHLoGjUK0oRyWRZGcK2CACAQVxyrQ7M640p9z//2Q==';
var b64N6_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6M0rRtU0jw/8AD34hfDvxBZeI/Hr/AAtsfiP4v0XUEnguL2x1dks7S3iv2BgS2tVlRfIADSOplJLcUV6defsxeAtR8Ot4A1DxD4ml8I+WI4/Bh8QzLpkUayeakSxqQ4iST50i3+WjAFVGBgrhlOg3qjsjCstmf//Z';
var b64N7_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6Bt/iX8Av2Ofh14p+IXx3+B2gfEnRrLxvYeDPCSweEraHUZ54NOkudRuZHiXM6Iz2kLSH/lrvzgmivbrX4FfD6DxA2v3Vpd3oWW/ltNO1C+ee0s5L2aOe7eCFyViaWWKN2x1K9smiuL6zZJWOv2F3e5//2Q==';
var b64N8_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6K0jwh8J9V+G1pdXOhprniOX9nvwx4suvBejaY9r4lfU73UbeO61j+2zhWjlScgwbvuNwo5AK9RvP2ZfBWoaCfA974s8WSeFvs6W8fhL/AISWdbCKFHEkcKhSJBEjgMkW/wAtCq7VGBgrl9vT00On2FTuf//Z';
var b64N9_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3Xw5ofwXv/wBmHVPi54y1rStJ8OeG/hr4ZtvEerJYXNv4utPG9xdw/bXa6ZQ00UsDSYWNmXyXVgqrySvbda/Zo+EfiPUJ7rxBolzeWk+oNf8A9j3GozNYxXjQxwNcpBu2LIYokTcBwu4DG5slcf1iHY6/YT7n/9k=';
var b64Nd_1_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1e4+EHxE/ag+DHgPTtR8SS6D8QPG+lP498QeIYFIn07RiItO0ixQ9ortYLu9K8fOtFfUXw8+E/hn4bfaJNHvNSvJri0tLRrrVtQe5lS1tYvKtrdWflY40JCr23E8kk0V506rv7ux3xpq3vbn/2Q==';
var b64Nd_2_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDf0f8A4Ji/GDVPgh8Of2cv2XPhz4Pfxz4W8Jp4q+MniHxloMN1eT6h4glkubTT5ZCAfOtLe12umdo89CoAfkr9VP2JfANp4a+Gmp+P7/XtQ1nxF4412TWPFGu6sYjcX1yIYrZMiGONFRIbeKNUVQAE9SSSvg8VnuJpYiUKKSitEmu2h6ao+19+o7yerfqf/9k=';
var b64Nd_3_tree = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0PXfiz8GP2cPg94Nv/CnwO8aeK9D8Tvfy+AvDfgbxJqGmR6J4VtHistPvJoreZN8mpzQX+otNJukke4kZ2ZsmivvD/gnD8FfC2j+Dda8V61d3Gu6gsen+GLWfV7a1xaaVpEUkFlaxRwQxxxoolmY4X5nlY+gBXxdfOqWEqujCimo2V3u9FuegqEqq55Sd2f/Z';
var b64_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzuD/gm/8AsJa/Zx2fxe+Flv8ADrQ7CG0TwP4vh8S3lu3juzksLWebUHa5neOYrPK67oFRBv2YytFfkhD/AKfNLbX376O2bZbRy/MsSnkhQfujPOBRX5rDg3PJRus2qx8le3rrNvXd62u9ElZLreIp/wDPtH//2Q==';
var b64_0_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxP4O/DL/glpfeCtMl8X2/wYbw4dJhbQNY13xyltrV9dGWb7YL6IXazRsmLcIskaDa2UzljRRRX4NXwmJniKn+11laUlpUa2k1f1drvzb2PUjKKivdX3H/2Q==';
var b64_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD488I/AT9mXxV+yT4A8XeK/wBnL/hHPFUOv69ofiaSHVr5p7+ezNkfNnSeT9zIDO6mJFVVwRjOaK+Fjqmp6nM11qOoz3EsqrNLJPMzs8jjLuSTyzHknqe9FfEQyHGtyksZNKTk7Xk7c0m7azbsr2Xkjo9rH+VH/9k=';
var b64_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5N/aE/Z3+FXw4+CXwo8TfHX9gjWfCHinxVolzqH2T4X2WsSWdxph+z/Y5bmW9uJ0e7YGV3EUnyrJHvVCQKK+AIte1zUZHg1DWbueO2Oy3Sa5ZhEvPyqCflHA4HpRXxOCyXFU8OlPFTbvJ6SmlrJtJJzk7JaK7ex0SqRb+H+vuP//Z';
var b64_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDiv+CX37Bf7LH7RP7Lum+Nf2j/ANjrT47tXaPStT/sDxPpTapDuYG5a8lvTb6lkgDdapGkWNpGWGCvyFk1XU7q7m0651GeS3tXxawPMxSENy2xScLk8nHWivyLHcDZ3jsbUr082q04yk2orntHXZfvV+R3wxNKMUnTT/r0P//Z';
var b64_4 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwnxX/AMErvgRof7OHwzvvh+PB3irXLqPUP+Ev8WwfFPSmttRuttpIscAS+2pHCJWi2kCTcGZgAyUV+YTu8czWyOVjTBWMHCgnqQPfA/Kivz+lw9n1NNPMHJ3k7uEusm/+fttL2SVkkrJJaHU6tJ/Y/r7j/9k=';
var b64_4_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDw7xd/wS5+CGjfs5/DTUfh8/g7xRrl2mof8Jf4st/inpTW2oXW20kWO3CX21I4RK0W0gSbgzMAGSivzPlVVu5LZVAjQKyxgfKCepA98D8qK+ApcO59TTTzByd5O7hLrJv/AJ+20vZJJJLRJLQ6fa0n9j+vuP/Z';
var b64_5 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5n/aG/Y00LxN4G+H/AMRf2fP2d/hr4W8O6z4diMcHxF8L+JdD1a8nS1tDNcu1xe+XewvJIzRzwIkZDHg8Givzjt/GPi6B5Fh8VakgQ+UgW+kG2NfuoOeFGTgdBk0V+eUMszTCUlSWLcrX1cW3Zu6u+fW21+p1ucJO/L/X3H//2Q==';
var b64_6 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5s/ad/wCCNWhWvh/wDf8AwK+IXh7QrG48J2x1bVfGMV9Ztr988EFxLeW08rPBdW/+kLGpt0RU8vDF2OQV+b6SSapNJZ6k5uIbNvLtIpzvWBDyVQHhRnnAor4zA5RxJQwyh/aPNa+rpJvd7vmOiVSi3fk/E//Z';
var b64_6_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5w/aa/wCCOOhWXh/wDf8AwM+IXh/Q7G48KWzarqvjFL6zbXr54IbiW8tppWeC6t/9IWNTboip5eGLscgr85rQnVJprTUybmKzfy7SKf51gQ8lUB4UZ5wKK+KwWT8SUcMof2jzWvq6Sb3e75jolUot35PxP//Z';
var b64_7 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD51/YqX/gnro/7LHh/4gft4/sufDyCbWNSvLHwnqWnyata3mqw2awie5ut+oOkjGSdVDRJEvyN8voV+dUaq91LE6gqu0qpHAJ6n8cCivzvEcDfXMTOvLHV480m7RqSjFK+iS5nsvvetlsdaxPKkuVfcf/Z';
var b64_7_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4h+Pevfs7fDr4FfCHWvFX7EvgOLxj4q8PXmravaeFr7V7KNNPM6w2MsyT307GWTyblyQyqQRhRRXx9agP5isMhJSqg9h1wPQcn86K+XwmQ0aNHlnVnJ3k789RbybStz7JOy8kbSqtvRfgv8j/2Q==';
var b64_8 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnPH//AATY/YOtvBvha6l/Z1ubPztMgaO4TUdQ0Y3Qexspmc3d7eNDqx8yaU/aLRUiXds25Aor8erRm1WWaz1Qm5hs38uziuPnWBDyVQHhRnnAor8yw/Budqkl/atR7/z9/KqjseJp3+Bf18j/2Q==';
var b64_8_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwf/gnt8PP+CZviL9lHQ9U/aR0r4btrzarqCaxP4g8W6faXAkWRPs6yNLeR3cRMW8rEsJt2ALmXeApKKK/AM2w+Knm2IaxVaK55aKpJLft/Wh6lOUVTj7q27H/2Q==';
var b64_9 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxD4jfBH/gjpp/wT+G3xH8YtY+G7PxTpMsuhjT5NbstTvIYY7aOeXUVvJCssv2s3IWW3VYGUELnbwV+ZCf6+Zu/mlc+w5x9Mk/maK+Ew/CGKp0+V5liHq/t9G20uuy0v1302Ol4iL+wj//2Q==';
// The material requirement numbers in production
var b64N0_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnH8V/s6/Aea8+J/8AwWDvfB/iP4F/EnUP7V/Ym0u78HHVItJ8JLa2zOlrbQWJfS4Psk2iwm2lEZM9rcy+WWkeecoooA//2Q==';
var b64N0_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5g+HX/BSv/gmL8NNU8Vap+0wLj9oPwZ4l8Tzap8Ivhpd/DOK4f4R6ZLFEz6UG1Zo4YUw1vZrb2Ek1qiaOrqyiZVooooA//9k=';
var b64N0_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDk/wDgobc/sl/s8Wiy/wDBaT9mHxp4y8L+I/jJ40uf2T9M8B6xb20GhfDqK30OHTYIoLPULZLKyMC24gsmVZInjuXeKN52aUoooA//2Q==';
var b64N0_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0/wAT/tZfGjxf8ZdJ03wR43vrCXxHfaynhXS4rS3OnRR2L3UcC3m8GWQ3LWU5LIR5YKjrzRXlf7RGrR/DL9ovXvC/hbSLVJPDOvzQ+GtWkDm60tNZO66ERDBDta5nMRdH8vzWHI4or53lxM5P2bWnf+u1j9RjDhqhhKUsZQk3KKa5HbTlinza6vn5nfs16L//2Q==';
var b64N1_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8gvjJ8XPFPj3/AIJpfAj4eeJfERu4PA3xN+IOn6BZm2RPsNhcW/hq98sMqgybrq4vJMsWYb8ZChACiigD/9k=';
var b64N1_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8z/26/wBpiD9oX/glR+xx4d1Lxu2sa98O7jx34Y1iFtPMH9nwwzaM9jbAiNElC2T2x3oWzn52L76KKKAP/9k=';
var b64N2_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD83/8Agqf4b+PHg79kX9le1+M3xR8UfEOPxV4O1HxtZ+OvFfiaS+ljn1W30ppNCginLTwW9jBb2T7mYxyzahcNGFAYUUUUAf/Z';
var b64N2_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5o/4Jd/8ABVP4f/8ABPL9mbTbRv23PDvxC8T+LIIjrfgn4i6j4wg07wFa2imOysdP8jQ7yOSR0lkNw8bpEBFbRoHERkcoooA//9k=';
var b64N2_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDoP2Ef2Y/+Ci3gj9g34Ra98Wf+CZHhv9uux8YeCtO1/wAFWPxJ8WeFLTRvhfoUun2cFhpmljVopLo3FxaW9vNeKiR2ymO12GWdruQlFFAH/9k=';
var b64N3_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6I/4N9fBH7Tfg79hXQNR/bn0/Xbax1rw9ot78L5/ibf6V4r0O50A2CCzbQ7TT2S60MCzFitzbXbSCV1inj2SSXKKUUUAf/9k=';
var b64N3_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDhP+CB/wDwV7/Yf/Yg/Zt1PwB+2Z+2lBbaxdrpp0aTTbDxZ4ikhs44HC2M9pfWD2WnyWodYA+nt5c6KiuD9mjllKKKAP/Z';
var b64N4_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5h/bQ8N/8Egvj3+w5+z78KPhF/wAFCIPAHg34Zaz4t03TLvVPhPr2pXus3lzHolzeTXLJEm2XeySHaPKxchIwqxbQUUUAf//Z';
var b64N4_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzb/gif/wWB/4JufsKeDPEnwR1j9rP4raV4ETw/oN1o+n/ABP8LNcFPEjvqX9uPpsWjpdi1sJANNkSGaQuJHm5c75HKKKBJWR//9k=';
var b64N5_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4d+Cfxb/4Jlfty/s9+AvDH/BVn9qW9+Hmp/Cvwxb+GvAVj8Ml1+aWfTIlEROo20+l31lFc/uI5BPZSL5yzhZUUwIKKKKAP//Z';
var b64N5_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDyr4VePPglrP7O/wAK/ih/wUw/bm/aF/ZH0y++FnhvQPhXZfC74salrOn+NLHSdItLSXVf7OsbCddGJjNkxiaUGV5pGMasjyTFFFAH/9k=';
var b64N6_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4j/bp+Lv/AARA+NfiDQdZHi34iXFloOm23h7whZfCNL95NP8AD9lpWmxW0Oop4l2RRz/a/wC0mH9nkxuHaSbMrmSQoooA/9k=';
var b64N6_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4K/4L2/Cn4O6TrPw0+PXwV0jWtI8J+LLa60f4WaPceLJNT0tvAOl6VoQ0G/so7i1hutPe5+2X73NrctLKLlJZSzed5kpRRQB//9k=';
var b64N7_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5J/Z4/wCC4f7YH/BLD/gnf8GfBnwN+M1j418S/EG417xBq+lfECx1G/j8L6Ba3EGiaPp1m7XKIsfmaVqkvlx/KiyxLsXGXKKKAP/Z';
var b64N7_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5u/YO/wCC1H7Wf/BJD/gnz8OfFfjDXde+LGnfFfVtYTwZ4Z1/x3Mlr4P0bRTa2EUdt5ltK0Qmne6UwLJ5McdpAyIjSybiiigD/9k=';
var b64N7_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD85/8Ags7+1F44+J/hL9n/APZr8WfGfxH4+Hgb4fXXi0+IvHWsXep+IF/4Sy7/ALY0+0vr24wtxJFoB8PBxCvlR3D3SI7qFClFFAH/2Q==';
var b64N7_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7B/Ze/Zd/Zl1rxr8TG/aM+GNp4Y17SfFUOjXni3Rf2i/GEyeK7i3s4Wmmd5ZoH3QGZISmGCEFVO0Ciuu+J3/BHPxb8amTwz46/aRbT/Dui6zquo+Go/Delyw3k02pXTXN3NfvJM6zSkiFA0YRcRk7RnAK8SlxHg6dKMZTd0lsmlsjZ4abbsj/2Q==';
var b64N8_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDR/wCCRv8AwWv/AOCVP7LFlc6n8cP2gNA0O4vfgb8LfDXnx6F4u1PUJr/RNEnt9QgnhNg9lZQw3E5SJbLKzMZ7iSR3mwhRRQB//9k=';
var b64N9_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5b+Lf/BWz9lPS/wBlr4N+I/in+xX4f+J/iXxXZanq1x4D8T3ER0T4fWdubXRILbQUmsZVtbG5bRp5/sisTAwwzybg5KKKAP/Z';
var b64N9_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDH/wCCbX/Bcn9kf/gnt+x94K+Nn7UXw4+M+tS/Efw3pfhTQPBWmXum6voWjQ+EtPttLl1PToLie3+wDUZZjNPH8zvc28zt8nlSSlFFAH//2Q==';
var b64NS_0 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8fv2xLrwN8Pvgz8FP2Zvh/qVtfnRvBQ8a+Mr9bK4hlbxB4jhtbp4CZXZGjh0u20WFTEFQvHM5+aRgpRRQB//Z';
var b64NS_1 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8i/8AgqV4k0KD9qy4/Z38C6kLrwt8C9Asvhn4emXQYNNW5fSVaPU74QxFiBe6w+qajmV3l/08h2yNqlFFAH//2Q==';
var b64NS_2 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5S/ai+K/7EP7Ud34R+F//AAUm/aL8ReGNf0nwZpvxG1DxB4d0C48zX/EPjW1i1y7QyeTqMkltYaP/AMIxpcHmmJlWwkVQ0YQIUUU00uhm4Nu/M193+R//2Q==';
var b64NS_3 = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8pfjX8df2a/jD8GPhJ8BPHHxw8ZyQfDvwZHcX/iXR/h3FqNxqeuX6RC5tZHvNVtX8jTrCy0XSoGwwZdOk8sLAsGSiinddiHBt6Sa+7/I//9k=';
exports.iconsAuroraItems = [
    new types_1.Icon('column', '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', 0.92),
    new types_1.Icon('brick', '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', 0.92),
    new types_1.Icon('compas', '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', 0.92),
];
exports.iconsGnomeLabKingdom = [
    new types_1.Icon('craftsmanship', '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', 0.94),
    new types_1.Icon('smithy', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAZAB0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6u8bfF/xH4iklFtfPp9gucRQy7SV5yXcYJ4PI4X2714Kf2u/g5e6feah4dm1fVF0u+t7fWoo9FmtZNNWaJ5kmlS7EJKGONyoTfJIUZYkkZWUdBqz2Hj3TvFvheXxzrGi694WvYLybSl0+xfTtY8OzwIryMLiKaV2S481JZF8qNU+XlgWHkU+kaV4Pln8FaTqfg9dO8TQz32naJqyW2j2c8sBjeS7F3bW6hGtrQzyGWTznaBSPLm8pUbatQq4SgsXUs6Ss5K9pWbW2nLs3uzfDwp4mToRT9rL4P5dnfm69rW8z6S8I+NbmG1tfEvgrxJutruFLi1urK4Dw3EbKGRxjKyKQQR1BBzXqHg743aY2kra+IxFb3EPBkO8rKCScgKrYx0IP4eg+av2abnRr74bPqHhO6jk0KfWb06II2hbbEszJIS0TsGL3CzyfNtcCQK6RspRfQKybpt3pu8Xs/LoZShOnJwmrNaP1W5wfxj+F3ifxLqmhfFL4U+IotJ8c+Drtrvw7cXzyGwvdylZLO8jQ5MMqFk81B5sO9mTcrSxS48vwXsPjh4f8Xat8W/AtzoVz4ztxbx6NcaiL2XQgsfMsDNNcW6Tfa2muI5oVi/di0DxK8O0eqUVs8RUlhnQesX/VvTqTG8Kimt1sfP37Pvw/+KP7POs/8I0mqaVqXg7XpIbltaljuFaDVPJihaKdAZGskmATZJ++iMlttLiW+Cw+56Lr0Grr9nms57K+jt4pbrTLzaJrcSA7c7GZHUlXUSRs8bGN9jsFJrz74x/8kNtf+xr8Hf8AqS6TR8Jf+Tifiv8A9dtB/wDTYlfd8T8MZRk2Xc+Ei48rirXbVpXdte1tNdtz+c/CjxL414y4idHOK8KsZQm2/ZqMuan7NXvFpXn7S87xteKcVG7v/9k=', 0.94),
    new types_1.Icon('bakery', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7U/ac/av0X4E2N266Be+K/FDaVc6u2i2d0qNHbR7t13dzvkQQtJ8gbDyOxby45PLk2fI0X/BU79qrWDP470nw18MrXwfDc/vZrtbmWW3X5cQySreKfOO5QB5AYl1GzJAPP/tz6VfeIf2nPHVzqd9fzWsOsWdjMwRnWyjXTLCZYo9xAKYlExQEKJJnJwXJPH678dviLqtxa+B7Ux23w0sLEabZ/DkMjWX2DDBt/wC7CveuXkle+2CXz5WeMRKEjT+b8Xm9eGJnCLsou3+d7p/LY/ozL+GaSwNGq6XtHOPM220lfZJL+tN1sfav7JH/AAUK+H37TmtyeBdW8PN4Y8SYd7Cykv8A7Ta6ki72It5zHGWlWNDI0Txo2zcyeYsUrR/RMd7dxII4rqRVHQK5AFflP+zf4d8PeH/H/gzV4fEGo298fiFoaTz2u5I0hfUYI1jd1xkyyPHEVHylJGDbtxA/VOvVyvGTxmHcpbp2/BP9T5viLKoZRjIwp6KSvbtrb7jxz9pb9mK5+K2pJ8QPAp0v/hIYrAWV3p+uGRbPVbZGd4ozNGrSWcqPI+2eNZAUlkWSKU+S0Pklp+y94At1tk8a/sTfF681VMf2jdeEfEnhcaY75+byPtmqRzyIOzyRROw5MSE7QUUsTk2X4uu6s4+9tdNq+29nZ+trmOE4gzfBYdUKVVqK2Xb9beR5jeWvw9t/i74f8OeGLOKLx9e+GYdSNjDC8Vl/YiahbSXN5MqbEW5WWOMQ3EDLdLcGB23Rxlo/Wfh3+0p+2R408E6d4x+DfwZ1jxh4U1a3+2eHvEt/p+j+ZfWkpLxuPN1yyl2BWCp5tvHLsVfN3ybnYor+oPFTHYXLsHQksJRm5VJr3oPSyTduWUfibbl3eu5/DHgDkmLzatiX/aOJp8tGg7QqKz5nUVmpxmrQjTjGFknGN0nZ2P/Z', 0.94),
    new types_1.Icon('candyHouseFaster', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9RfiF8SvEXxE1RrvVLhorVWH2XT43PlRAZAOP4m5OWPJyegwB5/49+IGleCE0zTWmtJta8QatBpXhnRp9ShtpNTvpnCJEhkIyFBMjlQzJHHI4VtuD5n+2z+1t4E/ZZ+FGreKvE/jP+yjZWkUl5NYrDPqKCYyrbwWdvLlZLy5aCdIWlVoIhBcXMqyR2skMnmV3+2r8HNd8K6b47+H/AMNtQl8GfFHQrS40jShNK8viS0HnJd2ur38gee/NtfXOoWcmnyTT2iRLCFgWOaNj+QzTjReMxHNJX2Su3+KSXnfQ/S8JhZV6scPRstOui0/N9bddbtHuPwt+POr+JfEE/wAN/i14Ag8I+MNNuILHWdKtvFNjq1pbapJp8WoNpq3Fu4c3MdvKSyyRRCQ212YDPHbSSj16Dx740toVt4vFF8ERQqg3DHAHQcnpXxF8KPEfxi+Jvxoh0HwlcS6RpFxFb2tv4F8L2qfbEt3k324s4pB5cLQPaJPGZ2htQLVhKPsYuY6+r/AXiO48W+EbHxDdf2az3MZJuNF1RL6wugGKi5tLlABcWsoAlhlKoZIpI2ZI2JRc4VHUw0cTRTgm7NXej3VnpfT1s7rte8dg1hMR7Go1J2T/AM9Lu2v3r52+P/8Agt9+zhqf7QHwG8IWHgLw7pUvipPG3l2l9chYbh7b+yNUZ7ZJ8ZUM4RtpZULKCSMA18Tf8E9f2n3/AGJ5/E37Pnxv+HGtajNZXM+oeG49C1OzivtM11o0tpUe7kWVWtriExCUMtwqyWltIsRZS4KK9rLZKvhHh6iThZuz9T6HhvC0sdjI0Kt+Wzejs73T0a1W1vS66n1N8TPBcdx8M/HOtXWi3fhzw/4pSfV/ih4CfUE1GR4bWyutlnZ3TgxGS3leKRTKjq72NvteCMNHJ7r8Nvi/8XvhT8N/Dvwv8GfDnwhrel+G9AstLstV1bxpeadc3KW9ukW6S3i0u5SI5QjCzODjPy52gor+pYeH/COaZbRjWwqXuwl7rcdZR1+FrTRad7tbs/yyzTxo8TeH87xX1bMpyXtatNKoo1EowneNueMndXa5r3cbRbajBR//2Q==', 0.94),
    new types_1.Icon('fountainFaster', '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', 0.94),
    new types_1.Icon('flower', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6x+IXxSutXhfRNJuvs2lW4Ks4O0zqP4mJ5C4HTj1PbFTS/h95ZuX+JviKbwVHHbPJZR6x4fuZb3UWSSNJFtrIbJp1j82MyOgbYZYhg7yV4fxh8VtD+Cun2/xJ1zUFg/svUbe4tENvLMZ545VkSPy4Q0jglPm2jhA7HAUke2fGb4S/GCP4raj8bPFepzxeFdb0rRteTVfDniGW40S20nTUsrua2l1OO2ZJrQXcdxL5dzb28c1tqck0LiSK4WP4bjjiTH8P5ZOrg6XtJJK6V243vq0tVHT1d9NmfQcNYLLMzx7oV6iUoq/LdXd9l11erV1b3Wcnrnwf8Wada63rXh/y9e0fw+sb6lq+mYIgjeFJwZocmS3dYpEeWNxmFWDOQhDnEtPFPiewt1s7DxJqEEKD5Iobx1Ve/ABwK9Uuta+PP7Kn7HeveO57+XRb7w74J0DwjqniPxppNze31+++1tjKLqeCG41S5tTdX8qTtZx29xLdElOJa8U0i/0vVdKtdU0O/hu7K5t0ls7q2mEkc0TKCjq4JDKVIIYEgg5r0eEs5x2c5TCtjKfs6jWsf+3pJNX1tLl5l5PdnNnODwuCxbp0ZX8r3a0T10XV2+Wtjzb9p34M+Ivino+nap4KkRtY0wzQW9vdX8lvBJFceWHZmTOCjxxSZKv8iSKEYuMfCXxq+NX7ZGpa/q/7FPjn9qrxBaeEdGv5NO1HwzPqF/NpN7aRbZ4S1sLuQbGVYZVhB2gvhwG3YKK6M1y/CwcsXGNqjsm/RGvB+R5Xic+q16sG5ThZ2lNXS01UZJPR9U7WTVme5fs9eE/i5+1b8Irfw9q/7WnjnULTwV41ttN0TTPEOuzXmkJYw6daK8VvFKjSWEyLPIsMyB9oCo6yDc5+n/hFFBYfD+y0mbxxerLYS3FncQa9pfn3ttLDPJE8E8sM5ilkjZGjaSL925TcgCkAFFfvXCnB3DeKyHB4iph17SdKLlJXTbVt2rd9el9T+EfFLxA43yDxRzfC5dj504U6soRuoVOWCbtBe1hU91bq+q2TSuj/2Q==', 0.94),
    new types_1.Icon('diner', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6c8aeNdR8UXjvc3bpYwuxtbZmwsSc4J9TjqT/AC4rzhPjj8Pb1Wk0C/utViCho73TbCWSzmGcfJdlRbuQQQQJCQQQeQa86/a71681HxToXwat3tbmbxJ4R8RXmgaBeSrHFrOtWf2D7HbSs4MZj2z3L+XKVjZ0iyykA18S+I/hb8dviXLceNfHGs6rcXFnPMviGSfUfstzbCO78hlWF1DLieXy1TLlQxby41DKvgY/Na1PFSw9CycUm3LW9+yTX3330sfp/A/h5PizDTxMp2jHonbrZa2e78l016H6X6L4ti8ZtdjRvENhoVvpGnDUdd1HxFbkQ2lsS20kiRFKssczGZXdE8rDDLri94Q1W41/wnpeu3gbzr3ToJ5d+ny2h3PGrHME37yE5P8Aq3+dfutyDXyPqH7Mf7TP7Png/wAB/sK6t4Y1vTT401G28Q/EAxzrI8um3F35S6ezQO0tuVghMlxny2RI40y6TzKPpX9nzxkvjr4WWusR+IYdYjtdT1LTINXgn81b+Oyv7izS48wEiQyLAHLr8rFiy4BArlyXGZjiMyrRxcui5YpWSS0be7Tk9Um9vw8zi3h/D5Jg6PsY+7JtqTd3JO9n0VtGlp0T1vd+cf8ABQL9lvxF+0f8MbDVfhsLceMfCd497oS3EgjF5EygT2YdjtjMmyJ1ZvlLwIrMiszj5p+GP7R3if4rQPpGs6u8us6XeTWt2+vWcGrXFhcLJmVYpL2KaNVDIwDKG46Ciitc/wAJQqKNWS95BwbmOLpOdGErJK6aumr9mj234N2GhfGH4X+PW8X/ABE1htG8L+LpJv7RaBILZo7fStNuZI73TbRYre9tBIrMbcRq5G7y5EeR3f1rwR8Iv7C8M2+meAPEniXwdpKtI9r4f8PXmly2UBeRneSJr3T57giV2aY+ZIWBlIwuAilFf0Hwrk2T1eHcJKeHg26VNt8qu3Zq7a3dl/nsrf52+LnGHF2WeIOaPD5hXiliKsVH2tTlS92Tsua2rk35O7jZynzf/9k=', 0.94),
    new types_1.Icon('materials', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9JviV8R7Ux3vxA+JHiez0+ztYd91f39ylvbWkIPdnIWNBnqT1JJJJJPzP4x/aQ+JWiWnhj4geG/GcN9d6rZzT+IfBV/of2bTdHRWLpbi92m4lumjUx+aB5W9lbyesa7H7cOr+G/C114T8XeMNWguLG2TUoIdAuF+U3cscXl6kzrloUgRJrZpQAqpqjbmVWIb5Z1P9uL4orZm00f4feFdGWxhzHF4jtLi58naAA0ixTRj5WG0Kskm47ckcrX5N4L8MeGK4Wq53xRKGKq4nmh7KUXKVJJyi2tebmleM1UXLy8qjGV+dP4rxezP6QOZ8b4fIuAculSw1CCnPEzmqdGo5pcqT0UnT5ZRdN+0UufmlBJQkv0D8KfEz4feOYbOXwl4z02/Oo6XFqNrBb3iGWS0kVWSby87ghDryR/EK7jwf8Q/EXgiJ7PS5t9rIS32V3YIrnHzDaRg4GK8w8M/tw/Duy/Ym8C+Hfh34F0rVUuNFs4fD/hq7sBd2WjWunmGIW87b0aSS3ngmjRkUYe1VjtK7mu/By81a/wDhrpV/rrvJLPC8kTtfrd7oTIxiZZlz5iGPYVZizlSu95H3O35H4j+Flbw5wFDOcBjXKFSfJG65Zu6cuZJaOFlaV7WbW99P6K4e4kXEFepgcXh7SgrvqtGlbyd9vRlH4keE/HE3xY+HfxX8F6fYX6eEdbnl1jTLjU5LG4ns5odkhtp0SRfNUqpEMiqkvQywkLIPjH4yfCfxT/wUl/bd1S58JatrHh/w2NI0+78cavrMFlHqNtahIoLWGBbZ5Fa4nn0++m5LW8SyuzqzYimKK8fh7ibNcBw1iqVFpKkouOmznOzfZ2vdX2flofSQpxneq/iS5V6N3/P+tjd+J3w/0X4K6Kmi/DXU9X0TSPCOrXlrovhbTNYnhtNbnm8+ztbaV0YS2shuLkulzC6BJ55LiRXdjKv0J+zP8dR488XeJPg095Fe3Pgqz043cyWYt5LNbiANDDMEVYZWcRySrJAqIFPltFGY1eYor+vfHnJsoxHgjTzCrQjKvShhnCbvzRc+SM2mmviWjTvF725rM/gnwCzziHEeMlbCzxtV0ZPFc0HLmjJU53hFqSlZRlOUouLjJaR5uS8H/9k=', 0.94),
    new types_1.Icon('goods', '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', 0.94),
    new types_1.Icon('dairyFactory', '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', 0.94),
    new types_1.Icon('latte', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAWABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7Q8S/Ef4h+P8A9pbwv+yr8INU0/TNT8Q300cut38XmpaJZw2t9f8AmR9SfsdzAkKLjzZLl3aa3FmIr3ET9lf4ga34d8LeIPD/AO3l8WNG1DxFb20cV1qPhuPULGK7mc+Ulw0VoLa2nbdBG1pJIvlSSugmnMQEnzH+1p/wVN0v9m/9otdb8NfC241q7t9amsLSDTdaax1PTntrqW0uLqK5W0n8ma/k082ot1WWN7eyt5ZtrvGlv9b/ALL3x4179uDwPqfxq+CH7WdikV1qMVl4xltvhxBperQoI4p2t5LsRwTM4ikQLOu+IsG2ljGyj8yWUOdCMuRttLZrqlv7y632vo12s/1CGY/VKV3KMI9XKPNd3ez5J6Wto7ap2ve6x/2evit8YbT4seIf2YfjrqOn694j8IWNvPqHizR7Zbe1u/tO6SBPLO1hNtWeOSMRhY3s3+dzJsi9syfWvBvifF8C/wBnzxRY+Hvg62meItN8TzWumx+KtQt3/tddf/tS10/7dZ6kEiinjsn1GKGewt2CDZdxTRFri7Ne81x5hgK2AcI1FZtdn0duv3PzTOKnmGDzKc6uFacLra3ZO9k3a97pdmj4+/bk/wCCWuj/ALROsy+PfhXd2NlqVyJmv/D+oX8tlY3lxNIhecTRQz/Z8nzZpFW3ZpZiHWSBpLhp+G+Anjj4N/sx+A/Ff7Gn7O/7NOoXmrf2Rq9x4p/4Sz4v3o0nU5JIpBI8tvDZNbz7EEcUatZodkKFmMheRiivWynFYh07OW2i/AWIo061LknqtdLv9BPid4q0G++OMnwk/s0t4gs/ADa7qus3Vsk0E3h5tQ8u4014mbbeGb7JJFsmULEsgdHPzxP3nw00f9vb42/DzQ/jL8G/jxbeHfCfizSbfWPDmj6jqNvdXNvZXMYmi857nSbmRZWRw7xefKkTMY43aNENFFfvviniZUsNSahB/vJL3oQlsltzRdvNrV9dj+Ifo75Ng8Ri8ReVSNqNJ+5Vq09ZSle/s5xuvdVk7qN5OKTlK/8A/9k=', 0.94),
    new types_1.Icon('milkWell', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAZAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9DPj/APHPW9AsLfxBeaHqHiDV9Quo9N0HRrFG2vKUZlVnwy28CIjyPKwOAp2iSVkjf59+Nv7Yniv4PeENT1Lxvq2m2fidJEk8MeDNCaKa6vHlH7iG5VhK8tuSsm6aMWxPAXD7Y5PSP2qPgbov7RGi+E/hle+FbPxFqV14wjbQPDGoapNY2+q3X2K8VkluYGEtvHFbtcXTSRiRlW0JEF1zbTe9fs4f8Ekv2T/2ZdZ07xj4K+H32rXbDeYvEuv3bXl2uXVlCRH/AEe2ddoHnwqs3XbIgZgfyzDZPi8ygq6qJRu+Zu9/y1+/1Pv55zl+WQlQnR5p2Vu1u2+nndN9jkbebUBdXul6zodzpt/p1/LaXtjdlC8ciNjIaNmRlZSrqQx+VxnByo2/DPjfxV4OeR/DetS2vnACVFwVb0JU5GffGeT61tftf3nwa8J+AH1jwwulabrPh/R9X1WE2MMdvNcR6bFNNcxMH2O8ckkTREKZcmR5RGxiE0PIV1Z5lMsmrwqUpNRnfl3TVnqu+l9+vY87KsfLMaUqVeHvQtfs79fvTuuhk+J9O15rnSPF/gue3h8Q+GdXj1TQprptqeaqPFNCz7X8tZ7aa5tmlCO0a3DSKpZFFek67/wUI/Zt0TRz4U+Lvxq0zwFqmqwGO1s/GOvwafeWxZBlz5jGJ1Utt81Wkt2ZHVZHKSBOMoqMnz6rlcfZuCnG97Xs0/Wz08rfrd5lk0MfUVWM3CS02umvNd/M+Jv2hvHngDxZHcnXfig6aZ4h8fXMHhxpDBdJ4lvBeLZwI1oGMOowultaAyQlM2kS7ZorTelewfsc/Gnxl8QJrnwdrEN5fQ6PpMMOqTiU3kGhapBtgn0xtSdgb+bcrllIknheCVriUfabeMfG37cH/Je/jT/2Sfw5/wCrHvK+3f8AgnP/AMo/Pgb/ANkh8N/+my3r9H4z4nw2YcNUqM8HDnkoJT+0n7OnNyVktXzWte1lqnpb8S4B4IzLBcd4vMv7UrOHPWm6V/3bUsRXgoNNyXLFxclZJqT9xwTnz//Z', 0.94),
    new types_1.Icon('ballonFaster', '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', 0.94),
    new types_1.Icon('materialStorage', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAZABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7e/a0+Jnif4X/AAV1Dxf4V1RbbUn1PT7c3RhE88VtLewpez28RDefcRWhuZ449km54lzHIMo3xw3xs+Cfxe8LW3wc0jxn8QNJg8S+K5mXW4rPcmi6nq1xJFJqj29zcxtA8ckqv5ikPGDGYyoQFOq/4Kjf8FCo/wBlT46fD3wDN8P7bU5NMns/F+nTy65HbGe6jku7ZLdkaCRtg+/vjaOTcVCsAGDfHH7QP/BRHw7+0d8Yj8ZvGXwg1DTrt76wurnStA8WW9tZXDWylWWRfsDSMJ8s03z5Yu20oDivmuEM9zbh7CyWEo071HrOUbz5HZOKd9E+1nq7nqcXeEGTeIeNwmOzPHYiEaCcoUqdb2dKU03yynBQbk9bX50re7bV3/Y7xh4s0XwD8TNN+Fn/AAsLSPFd/qMpWZtDsmtW00fZ2mUypJNIsikRlT5chlRpYt0IjEkydIuraqihE1KcADAAlOAPzr83/wBkn9vLx78XfixafGyb9mK/i8If8JnY+Gte8VR6obu307UNYuPJgEa+XF5k3n3FqJJSZmt4Jwp8sXamT9GK+V4gq5LLNJxytpxhaM9VpUspNNJ+47Si+V62als0fVYKjjcLR9niakZTT+y72XRN9z4l/wCCiPieS0/bf+Aum3/iay8P2en69p12niG+vxbRWLSarbiSeSUn91HEsCSGQ4CjJzwa7H4i678FYNGjPxGX4NfG/wCLNr4S1C2i+Oa/FzwXpaRajJpYi08tY3t5LFrX2abZF9s1K1EirCJBbzFVR8X/AIKff8jP4R/68Lr/ANDjr4k+PP8AyKFt/wBhJP8A0XJW+WqKorzt+Hk7rpvuujR9xDO51Mqw+DULezjOPMpOMnzyk/ijyzS96zjzOErLmi7JL7iuPjf+zj4h+APi6y1b4JfEvW7DUvidpFnq2lyfGxPEGtal4geXRV0+S11uDxJdLEUkk0sLt1KEQmE5VOd/SWXjz9oHSbOHStD/AGMfj/DZW0SxWcV38RvCd1KkSjCK81xrM00rBQAXllkkY5LO7Esfj3/gm19zxX/2UP4df+na6r9Wq/HMq4HwOXZlmNOOKxMv3+reJre85UaE+aXv+9P3uVzfvSUYp6JJfkuV5VUp4rFwdedo1GlblWnLFpP3dXrvp6H/2Q==', 0.94),
    new types_1.Icon('goodStorage', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3v9qf4sft0+NPG3iL4Y/shjwb4e0/w3e29hqfjHW/F2jQXUV/JaWt8Ixa6jKMx/Z5yCBC27IZJgUkjHmviO48Nfs/fCG8/ZH8RftK2/hq78OeHodJ1bUptDVIopLrTBNPNaEPBN5KiWVYxFGuFt4SnkJhh4/+2V+1V+0d+zp+3t4/+Gfwd1fxzPe6nBCuif2PdXFxcfZZ7L7W4hU20mTFcXF0Y2Ut5McaxqVVXQ+F+I/2vv2hPGXiy28U+KfDXj7VNRt9Ll062fUYJbhlhlkhcgmSyZpW/cgBpC5Akk5y+a+SwmHoRwFNUHySly3ly36XfVXfbXS/yP6R4ZxGV4NUvbrlTV5uMbyd77802mt0rcqd22m0j9Wf2RP2kbn4p32tfCDxH4c0uy1Hwjp9hLp2p6HMVsdb02ZGWG5itpMTWMq+V++sn8w2plijM0jFtpXwj+xj4d/aX1n41+G/iVL8KNe8IaH8Tb7UvDGieKJPE8NrFp2oW1pJc3Ma6fGFugzLoLwyNKiJuVAJP3axEr4iKwtWc4wxEJ8kpQbi01zRdpJqLlyyTTUoN3jJNbWPg8zjl9LGyjgJupS0s2knsrppSkrp9pNbanqn7UHxI8JWn/BWPSdB8dftH6J8KRa+FZbOw8a6nrYtDpAl0m+aK6DLIrqwnmKoQVJbaNy5zXXfEn9vf9luC8uNT8M6R4B8QeNIrLT7a/8AjrB8cPCGheJtaRLpJNRkjtrO4VLKea3a5t4p4rmO6KeSsl3GWaWMor6LC4OFbAOnzSjzLVxdnrFLR7xavdSjaSe0kffYiMMxyXDUKy932HIrNxaTlK75otN36xk5U3ZNwbVzqrf9pb4J/Ev4N/DrW/DX7PHxA8SQeJfHerDwTp+i+M7STWP7ZUay17dDUxriwSb47fVWMqahJ5iSlQDuKqUUV/P2RcAZQ3jEsRiFbE4haYmsr8tWS5pWmrydryk9ZO7ep/PWQ5bLFQxKlXqLkrVIKzS0jKyv7u/mf//Z', 0.94),
    new types_1.Icon('fountainStarJellies', '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', 0.94),
    new types_1.Icon('fasterTrainTrading1', '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', 0.94),
    new types_1.Icon('fountainFasterProduction2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6GuJ5Z5XurqZnd2LSSSNksTySSev1rwSx+MP7QnxBgk8b/DfWPDv/AAjmr3V6PBy6V4Nk183Nra389gZ57mPVrVQ00luZ440jP7m4gO5t24+teIvhR4z/AGkf7Z+EXhLSruTQdM0lNQ+JV7FpTzq2ky+ai6ZDtdSbi8MciMyB/Ito7mV9j/ZxLwniv4pa14/u9C+IGv634c8Jt4p05rm0tbrTJ51mjgvJbcx2n2S28uzYNZNGUuGRVVVfzQmPL+jyLL8DXo1MZi5Q9lCUINSk4LmnKKXvR1Ts7pWfM1Z2vzL5HijOMzwVell+Xxl7apGU7xgqjUYRm7KElyvmcfed4uEfeXN8L7H4S/EMfELQ9STULnRm1nw74k1Lw/4jg0LVlvbaG/sbuS2kMcgCkxyCNZ49yqxiniYj5hXU151498X+KLLTPEf7WGt3XhXQbLwD4p/4Qnx5p1xeWobW7SIXNzENPuw8Ud3e2PmSyfZo1kkureS4aNDKIlf0RHWRBIjAqwyCO4ry80wP9mZhPC83Ny219YqXRtaXs7Nq63PbyXM1nWVU8cocnPze7e9uWTjvaLs7cy0Xutdbnn+tfFjwn+zf8cLzxP8AE3UvF1h4C+JngWTw14w1rQdQMFto93DqNk9hPMzvHbxxypcXsErXMiKYiUjkjaR0uOk0DxZ/wTq8S+EfFd/oH7QSS2GiaW72sOneJNHltlWUXk0kMn2K5vIbVPllbzbyWzhcskIcbzLCUV8rmHF3EfC3NRyzEOnCo1KSUYO8tFe7i3slpez6n2WE8PuFeNfZYrNqLnUpxnGL5pL3Um0uW/L1ava6WzT1PnU/tkfs1w+DvBvwo0D9oXQH8W3Xh7Sbizv/AO1ImtrLyreWNYLxozJFcuYp72NNMy80n2hljNt9oW6HZXkqX93LfaJ+yd8Y7qymkaS0udO+Ib6VbzRE5R4rKTxFbPZoVwVga3gaIEIYoipRSiv1DGcV4+VOPNSpvXrBPZLXW6u+r66dEj+bcm8I+Ho4mpOlicTT5kpfu68qfxym2r01F8qavGLbSbk/ik2//9k=', 0.94),
    new types_1.Icon('materialsFaster2', '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', 0.94),
    new types_1.Icon('goodsFaster2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAaACADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7d8YfHCWxhTSvCqRyTiJfPvXG5VbbyEXuQccnjjoetfOniX9rhvG/xB03wV4A+KPhHWxd6BqeuahqOqeNhb2FnDaTWsJVngjmWHebiQq+3aDaupCoZJoMb9sbxX8GfD3wdfSv2gLIzeFNbv0ttVBkVAIoY5L1wrujoszJaOkHmI0TXLwLKBGzstfxf+0t/wAE0vgb4U8Sz/sffGX4UaJ8RIIvKn8T6x4/udaS4s7qaa9FukzJF9qkgx5IKIXIa1Sa6IFykvPiKsqdNtdFfpfTsurPuOE+HcBmlOWJxknyp25bJJ6K8pS54ySV18MZXejaV2egfDP47/E1vH2p/D/WJYdO1HS/D+natPBYatc3KQC8udQhS3mjuraBo50SwV3R4wyNMYyoMe9/dPh18YV1i6bSPEFuFvLh1EMkRCpM+NuMMQFYgDvgnOMcA/mH8RP20dD+JdvpviLR/i58INC1XVLuzk07xP4e8QxaZqWlzXV9bSSPeLJve7iWMXCyx3O2DN008lsz26ivsX4T/EFPib8P9J+IVrpUunf2jB5q2rXkFwYmDFflmt5HilXKkq6MQylSOuBx4DH1K9SVCvTcKiSdm07xfVOLa0ejV7p76NN68ecJS4ZzBTpcvsanw8s4ztotG1KW+rV3rrbYpfFLxTrfgK98HePtG0XRNS/snx/o/nWGu2Rmjc3FwLKGVCCGjlhuLmC5VlIJ+zlcgOa97/4ah+Pf/PHwr/4A3X/x+vnj9oD/AJEjS/8AsfvCv/p/0+vU6/POP8RWoZjS5Ha8PLuzXg/D0q+CqOa2l+iK3xR/4KE/tF/DCx1DULrwJ4XvILWdFjvoBefZrWIm2DXF+wcvZwIJppXmCSxJFaOWdZHjhfzr4Laz4nuNAuNI+I/9n2niZtSvdRvNE00/6Np9rd3k1xa29sdoWW2hhkS2SSPMebZ4wd0bBewmAXxsJVGGE8WGHX7iV4H8E9a1k/8ADP8Aop1a6+x3Pwuvbq5tPPbypZ0tdKVZWXOGcLJIAxGQJGAPzHP7tlXAmT4Lg3D5xRclWqUKVSV3dXlGHMkuibfN5O62sl/I0PGfinHeK+J4YxUKcsNTxVWjFqLjNJTrcjbu03GNPlenvLlfuyjJz//Z', 0.94),
    new types_1.Icon('toyStore', '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', 0.94),
    new types_1.Icon('cottom', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9K/GXjO91KS58V+MNYeTy42eaeUkiNBlsKB0A5woHfgV09p8BfifeaJp+pFtAt7rVtrafp11qkokZTGZMOyQMquFByAWQY++eMy/BDwJ4p1NNT+KBvVg0p9I1Sw0q5sLnE0DpiOW4OcFJhNHJHGVB2rFIxY+coX228u9KsknsdYvoTdo8RM1zOI2mRipMiFiNoU+ZhQcDbznIz8/kvDGDlgo18bHnnPW12uVdNmtXu76ray1Z9/isTHDpUaMU5J672W3u2XLtf3nfR6aWbPlbStWtNXt2ntWw0UzwXERYFoZUYq8bbSRlWBHBIOMgkEGuo034o/EDSLGPTdO8VXUcEK7YowwO0enIrZ+OdmfFejXXxutLW5ksPD3w8v8AUE8RQpbpaXqW05lFq8e8XDO8EcjIxAjgL5G8ySR1w9fNcQ5LWyDFJ05Pknfl11VrXjLzV10V97HXONCvRjWhZxleyupWt0vbs1rZPytvb+G/xAi+DfxJh8W+JvE3ib/hFr3empafYl7m1srsxhI7t4VDSCEhRG4jDBXMUzLGi3Eta03/AAUE+BsuuR6GmpaVrvh3yrm5OvWixzaVpPllfLt7q8i329rIY3bYHwMRkFgXiEhRX2HCmPxGIylqq+b2cowV/wCV/wCV7LysfVZNkeAzjCzxOJTco2irO2i2emt/ete+yXz+D9O+IPxQvvB/gfwFf/HHxVJax6Zc3dl4Y1nxLdX8t3N51lOmoh5/tHnPZTYkQXaT26zXkI3RhLeOtu9/4KJfFOG5eDwP8B4vHOmx4SLxR4e0rxZLaXjgYlVG03w/qVrmOQPEyx3kxV42V/LcPEhRX6j4hZVkqwFGtUwsJS5+W75k7OCk9YSi3q9ndLolqf59+Due8ZZzn+Kw1XN8QoKnzJN06iTVaVNW9tTqW92OrVpPaTcYwUf/2Q==', 0.94),
    new types_1.Icon('researchSpeed', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYAB4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9KNE8R+Pvj98bdX+FekRRSt4Y8LWOqaveyXkbSWiX8t7DYpb2hZPOUvpt15rSSwYAj2GdjL5Mul/BHx/4K1K+sPjV+0b4Y1GO7VxYWHhvwRcaPfaYrKNplmkvdUikcZ3DMKhsr8uASY/gz4m8GeDf2jr7SrCzI8W+J/h/PqgkRgDcWGhTNEsJ2gOf9I8RoR82BuOB8xNcT+0n8e/Dv7Ovwa8TfHvx6t3e22iWZuHggVpJ7+5kcRwwKefnmnkjjDsQqmTc7KoZh/N3DWQcO47h/DYyphVUr1k+aU25Xak43SbstVZWtotT9LnUzGWYzw1Ko1GLSUYqz1SstFd/m2z52/ap/wCCjf7Iv7IL+Lfhx4N/aV+M/wAX/F1leSxXNxpvhzw5Pp3hjUI2gkSxlnNrpaTxlt0E0cf2ieNftMbS206xyR9L/wAEt/8Agqv8QP2v/GvxR0jTvhtB4a0Pws+lT6HazajJPNNDeG8TNxs2oswNkXPlkqBPsy/liV/yO/Zd/Ym/a3/b2+JUvwz+EemXWr3i3N7P4w8fa1fzizsr2JTLdS3NwFb7RdyOxbyAxnlaTcQEEkqftJ+xZ+xh8OP2EPg4/wAC/h9rE2r3UOsXEvizXbm9M8mpawm21uZDg7Ywpt1iEagBREA2597svFDLuHuH8ljiMHho0sS2oQlTShy6qUnJRsneMXFXTfvO3U9fLKdOVT6vUqyqXXNJSfMvK3bV/getWXinRPhd450/4wah4N1DUpNOsZ7C5u9Jg8+5sLCSe1vJ3SBQZLndJp1shiiBkYNlFdlCnxj9tP4GWH7Qvj7wH8WD8e/C/g34ADw/fX9x4r1DxatrZ6pFqVpeafeQJMYXi2TadcmC3vI7hWSDUb5wyTJbSUUV0+EGMqYvK54eolalJcr1uudNvW/fY8HP5zweJjXpO0pJ37aWX5f8A8d8EfHvWfBXhrxHb/DP43W0Gl61421jwv4RutE1aaSxvtNs/EV59mt9PWzkDxqLO3aNJrIhktk3us0Vsix+o/sg/FvV/FOv6z4Cs4rjWLWPUtZ1jxLrU1yZn0bWbzUftkulTTpuhuJvMu7ttiMkltFDAsiP50czlFfvPjvlmTx8HlWeFpucfYNSs1JSlGKc04tXlZta3i+sW9T+UfB3Mc+xPjli6M8fW9kp4q9Nz5oOMa1S0OWSlaKb5ly8sotWjJRcoy//2Q==', 0.94),
    new types_1.Icon('moreStorageSpace1', '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', 0.94),
    new types_1.Icon('moreStorageSpace2', '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', 0.94),
    new types_1.Icon('fasterBallonExploration2', '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', 0.94),
    new types_1.Icon('barrelInn', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9M/D+mR+IXkvLnVI4oxq0WmxB5UEl5fuizfZlLuqoTCS/mMerIqLK7bBa8E3Hwn8W/ESw8F/2vJcRaxZ3sFvLoer/AGp7S4jRJfOcyW0Hl4TcqZjlSRmYHbsOPiDx/wDtxftSfsaf8FO/+FPeBPHlp4i8LfEux0LVLPwNrNu6eRdXFzFpTw21xlxDuWxZw2I4w15I0gk2KR6F+0V/wUJ/ae8BePfipo3hu/8AAugCw1XUrTR9V03QZbm9njsjMsP2pknZHbZGBiZUTLMi7TjH479XmqlKcalldOUXC/Mt7JuS10aenVb2979IlRqzUrLpo+a1r6aq3dpr/g6fQn2XU7Bm0/W1hF7bOYbwWzFoxKh2vsJwSu4HBPOMUV8Af8Ehv2oNa8Z+K774MJ4s1PXxcR6hrevzaxY4eG5aS3EctvNsjZ4nRt0okRyZbmMrJw3mlZVIOFRxaNKlN05WvfqZv/BVD9mP4wS/tL2P7V1smu6j4TtfCtvaLq/hm1E2oeEbm0nln8zyY/LL2rrLJMZmctHIjFpYUWOOXye9+Nnw++JGi+K9N8JeJ5PGl7LYy3Gq29mUvJHgZnE93OYGuXESq4eR5ECZJDugPmAor0MvUp4+jPmatKK/H+trfea4uUZcN4u8U7Ql+R674Yu/gB8GfiNr3iL4a6lpeg3WjTacPGjaMyRWWlStcTC3hjeORPsV3cXBjR7SISpOPKjltQLkNKUUV/S3EeIy6jXhz4ChO/P8VO9rVJLTVb2u/wC82+p/A/AvD+ZZphqz/tjHUuV0laniZQT5sPSnro7uPNyRfSEYR2ij/9k=', 0.94),
    new types_1.Icon('maisonDuCake', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9APip8Xfh78FfC6+LviP4gFhaS3cdpZxx28k895cyZ2QQQRK0s8pwxCRqzbVZsbVYj8h/jT+1j+0j8YbfUvHGra/4qsNW1LWlOk3Oj+M7y0t/DOZI9trHDbMsYKIVTztokcSb2LllNfrP4p/Zj8WfFe/vP2iLa+0q9ttL0mXSPA+jXEgjuGu47ib+0pUk8twolaK3tgr7AHtt5ZVI8zkP+CbH7Jvwu+H37Gfj79m34r+M/CPi/wAT/EfWX1Hx7L4UnhkutHUQW8NtZecdxmltpLdp1Z4/KjmndVSVQZJfy/DZdNwp1FNJzT0a+5K/V73V7LU/p7hTO+EOFciqY3EU/rOInOFOcbK9ODcudx0dmla7dlKX7vSzk/i74f8A7b37ZXhnQ9A+K3jv9onR/Exk8Q2Wk2Hw71HSY7W/1i6u4J7GCaH+zrQ+ZCtwzXEkMrK7NBGsW0uoBX1P8ZPhP+y/4V8Cx+Ovhv8Asz6CLDULSx8HeFvFV3NHdRGLW9QtbGDVLQs8puZVlvllF24jkaPKwyiGRRRWOMhRpOPKl9zSdu10r+q0Pg+LJZPnubPE5SpYSm0rwtF697Rk+XS103e9361/2u/iL4p8AXfiH4e/2n4R03TtdTS9Z0jxF4+1ULYeH4l+122s6gLR5I7e5+zSLoBiSdXH2jVWLExFlT5j8d/BZPjG3iT4mfHfxX4o+KGqeEvDX2n4e+IPBfhV9J0GS0S3lleR5obNtKmghkEcyraXSSy/vQwkbZGpRXJlNWdXOowjaPK4apK8tVpJtO+/k+zOrG5zisDwZiKdJJOVOp71nzJcrTUZXvFNKzSsnd31Og1TU/2d7X4n3+q2sGl3N7Z65YS+KpUtGmtP7UtWuYNNgslixINZW6imSKPT90m+K4jkjE8se8oor+keJuII4SvC+DoVObn+OnzWtUktNVa9rvvJt9T+DOAPDiGd4OrJ5vj6PIqCtSxMoJ82HpTXMknfkUlTh/LThCC0ij//2Q==', 0.94),
    new types_1.Icon('jewelry', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYABgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD79+IWmz3fwyh8TP438PPZ+INQvtJm0xdRjlKmC4aERDjzPtBMTsUiXzQ26Nd5QFtS9+GviPwN8U9H+G3wn0LTJ/DbeBGWXXb3UvsNgurWc8QeEpHAfLmnF1MzSeWqs1qVPzBwvnfiX9nb4ay+MdY+IU/xW1nwTonhPR73xn4kl0yWG4g0yVJFmfUILOWCYpI/lXMz+UjRO6zs8LT3XnVa0fS9aHhe++NH7TN7JDFaaZNdxeDwqS6f4ZsE3T+S0VspS+u0XJkuSrkyGX7OIo5CjfNZ3xZkmYcIUsoyuH76OkrwsoyfLZ3TvOVtnf8Ax9E88p4b4gwvGmIzPMKq9itYe823FqV4tWSSu+ZrpZcr1udbofxA06+8VyeANZa2tdbSyN7bwW96J4NQtVZY5J7WXC+csUrLFKCqvE7Rl0CTQPKV8ifBjxHonir9vjX/AI23+h3llpPijXYNO8H/AGjTo4xCbS0exN9eBgTaztNaahY26u0c+3U5ojEH+0JEV+efVsVhYRhX1l3ty3to7LXZpxdnuntsv0v2+DxDvh5xkrK/K1KzcVJJ2b3i1JX6NPZo+gP2qPhN4m8aeDtcv/A8Oq3k2teFb3w/4i0DSZIRNq1jPbzpEIjPc20ccsM0+/LzKjwvcRsGdoXi8U8R+Df2idD+Cnje4/ar8MeLfiRbJ4O1O48PxXuqaXa6d4elS0kK3N3DYOsuoTRD95DG8N5i5t4GV4W/0lSiujL60sPjKc4JXUov5pr5/wCa0ehjmEVistrYee0otX6pNNaP5nHXfiXWvFXjW0ttD+AninUv7U0YWml/bPDpjuvGOlN9pW5tktLuSBFtLeVYd11qeyFBdJHGNmpQTTFFFfsGZ+LHE1CquWFLXmesH/PJfzdkvz3Z/OGTfRw8PZU5pzr6cq0qJf8ALuDe0FvKTfZX0stD/9k=', 0.94),
    new types_1.Icon('trainFaster', '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', 0.94),
];
exports.iconsGnomeLabCookies = [
    new types_1.Icon('tastierStarJellies', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAYAB8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6E8Y+MrPR4JNf8S6gXklYJChIM11LtOyCJeskjbdqRryeABXuPw1/YX1jxzb6SbL42tc6i+mwXXiq2ttBWa1s5iP3lta5aGQhWwBLI0mRzs7V474A1C70v45+H7rS4WkkfStSi1AHG2OxPkM7jkZf7Qlmg6/LI5xxlfr/AMDfEjxP4AuZfH/hmys20/Wpli8m+mBMZ3HC8EMADn1OACa+uwmUf8I8cRGHNKonZu1laTSSuvJu6326a/G8Q4TimeOoYqjCSwUG+eUHJSbtfZNJpbW10bas0eA/tFfs4+IvgVrhutLtNb1fwzJZtOdYfSmkFg0Y/fJcyQp5cagbZBI4jBVyOfLZjwega9faHerqelTpkoR8yh0dSO4PDDofqAe1fYvxu8Q/GnSdL1jwN4E1G1vfEd94fuLzT7qwlV7awlMbiO4mMuFCIxQ5IYtuVVVyQp+ItBWKzs28Otplzp9zo7ixvtKv1AuLGVFX91IASM7SjBlLI6OkiM6OrH4p4ijDFfVak4+1tzKN1zOF7c3Lvy3sr6q/bS+/DeZ4rHSq05RkoQ0vO/NzXd1e75ku+ltFq72XVdB03V3hubpZYri2Zja3tndSW9xblhhvLliZZEyODtYZHByOK6eT9oD4p3Xh3RNAm8EQ3dzo2n21pqN3f695MWqyQRJCLsGOOV/MkVC771UhnIDP94lFfRZZxBj8rpunTtKPRSu1Hu4q6tfr30e6TX3mAzTGZbzewaXMrapNa21s7q+ltjzf9nP43fFvWP2kfin8L/2nPiT4UitLGx0fXvA0Z1cQyQ6df3WrRm0kacxrM1ubKOMSJGuUKF/masLRPFXxL+J/7ZPxG14ePfD0/gTwMbfwrothpFus1xqVxLpulam1xcXauVZLdrqeKKJcgG5nJ2n7xRX8t5LlmEq/SSzXGSTclQU0rtqMpRoJtXbeqlJWbaXM7dLfBYWhT/1sr1OvL6K75W9F6vTZdEf/2Q==', 0.9),
    new types_1.Icon('charge', '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', 0.9),
    new types_1.Icon('defense', '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', 0.9),
    new types_1.Icon('magic', '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', 0.9),
    new types_1.Icon('support', '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', 0.9),
    new types_1.Icon('bombard', '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', 0.9),
    new types_1.Icon('range', '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', 0.9),
    new types_1.Icon('heal', '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', 0.9),
    new types_1.Icon('ambush', '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', 0.9),
    new types_1.Icon('allCookies', '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', 0.9),
    new types_1.Icon('arenaTicketRechargeRate', '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', 0.9),
];
// Save for super mayhem from Aug 9, 2023
exports.numberImagesSuperMayhem = [
    new types_1.Icon('0', b64_0, 0.9),
    new types_1.Icon('0', b64_0_1, 0.9),
    new types_1.Icon('1', b64_1, 0.9),
    new types_1.Icon('2', b64_2, 0.9),
    new types_1.Icon('3', b64_3, 0.9),
    new types_1.Icon('4', b64_4, 0.9),
    new types_1.Icon('4', b64_4_1, 0.9),
    new types_1.Icon('5', b64_5, 0.9),
    new types_1.Icon('6', b64_6, 0.9),
    new types_1.Icon('6', b64_6_1, 0.9),
    new types_1.Icon('7', b64_7, 0.9),
    new types_1.Icon('7', b64_7_1, 0.9),
    new types_1.Icon('8', b64_8, 0.9),
    new types_1.Icon('8', b64_8_1, 0.9),
    new types_1.Icon('9', b64_9, 0.9),
];
exports.numberImagesPvP = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCn4h8DfBWC+1j9j20/Z88C2sOjfs6W/ju0+J0eiAeJ/wC3Dax3TahJqGd8lvI7NEIiNuBtJZflBXA+LPiT+0NefAa9/Z+m+Ol2fBiaE2nx2P8AYVkL9tPTLx6fJqAj+0yWisBiIv0AUsVGKK9bIfCzxe4WVan9bdPnld+zq86nJJKVWXtHFxlUerir26s+Lq8T8I5moylTUuVW96FrLflVk9Fsf//Z', 0.9),
    // new Icon('0', ,0.9),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDx39siD4cL/wAE0PAPxC8Cfs8eEPAnifT/AIrXvhvV9Z8IQO17q8UOmQzGW5vZwbicvJIXKuxCkKB93JKj8deFNb+IXgIfCDxP4xnl8HweI5Nes9CjsoUMGoyW8dvJN54XzGBjiUbCdoJJFFfrPD3hLxbklPE0KVblpOvWnTTq1JP2c6jlC7d3flte7bvu2fl9fjHJcRGnOpC8+SKk+RfEkr/K/wAj/9k=', 0.9),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDR+GVp8KbbxR4u0z4nfDL4N+MfhlpOi6lrHxC+Id94KEut6e0ylrCCHWvtDZuzIyJbwwoGVQGyuU3Fee+Gf2kfjP4J+GVj8LvDvibTE8N+PR/wkGs6JeeENJu7eK9vSWlaET2rmNV3EIMnYMAGivy3H8OZvm+c4nGwm8PGpJNRpYmpFaq7lO9OV5tt7WSVklpq6OJo0KEKb95rS7ivw12P/9k=', 0.9),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnv2O4Pg38S/hx8Rvhv498B/s8eK4PDPhbWLzTvC+ieEVi+I2sXKwfao9Qj1CSQJ+6MuzzEfdttyNqnmivEfg9+1b8dtI0RP2dPDHijTdG0bXdJlOp6ppHhLS7fVpYLsmee2+3rbeesTNI44YOqkAMABgrPLfCzjbiHOMyzHL8VDDUqlaTVNV8RpfV/BGmnvu05d29D5bE8SZPlmHoYfE05VJKC97khrbTq3bbZaH/2Q==', 0.9),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC5rv7F0fgr9gLx14/8c/s867rHxX1DRdL8SWerHwjLcp4b0prlTDY2dwI2/wBJ8nfNc+UcruCvgKMleXWvi3456T4U1T4d6D+0p4/h8Na9Yx2et6NfeLL2+WWBGBCQyXMryWgIGxhCyhk+U0V+n8HeHfjPkGKzGrjMZh6s8TW9rzOVV3vGK91JLkircqj0SPyzMOI+DsXRoRhSqJQjypJRVtet3q+t/wBT/9k=', 0.9),
    // new Icon('4', ,0.9),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDj/ijB8PPit+ydYS/siWX7Nuoab4N+FOkT/Fqzsvh/FH460a6CpHd6gl2YUB2zFdzLJ5gO4gkkAlYem6/8WtP+D6/s+J8QtPtfBZgigv8AT9F8G6dYXmrQRvvSC9vYYhNcxhsEgkFsYYsMglfrPhZ4UcUcLZfi8PmKppSquUP3k5TcbLWcoezi23e3u3S0bZ+VcRcXZVj8RTnh3J2jZ+7FK/kpJv8AQ//Z', 0.9),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDJ+NH7I3hfwR8EfCUnw28Q+ANX+JGi+BIfiV8U7Cc3I8T3mn3cYWKKzkMRhWzgSTAtt4MjpvyDnJXM3XxO/aG1L4VD4Faj8cbmTwgNITSGt00CxTU5dKRgyabJqaxC5e1XAATcGwACxAor9b8OODPHDhjL8Vh8bisPJzrTqKU3OpKTlZyleKjZN/DF3cVpex+S57nPA+ZVqc406nuwUbRtFJLZWfVd1of/2Q==', 0.9),
    // new Icon('6', ,0.9),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDlH1fQdV/YR8WXHjr9nb4L2+pS+LdI8GfDnxL4U+FVppWpvdRxLPf3TXKtI7SQwBCXUqWcvnGKK5HwS+v+NvElt8LvEviu8n8PeFLy9v8AQNLWC2jS1uL757iQskQeVicgNIzMqsVBxgAr988MeBMFwzhsxlVil7fFVZwhCU3GFOLUIRTlZ3tHml/eb1aPxfiPPMVj6tBU3fkpxTckryk1dvTS2uh//9k=', 0.9),
    // new Icon('7', ,0.9),
    // new Icon('8', ,0.9),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDb8cfBj9l2w/Zg1mz0bwL8M49R079nPTfFdj4PsfC0KfELT9akCPJrNxqW/dJC2SxTexKHBjx8oK+d1/am/aD8R3Vz+ytrHxHEvhtPD0ei3F+PD+mrq91o8WDHpkuoLbC5e2UAKF37sADdRXq+GPhX4g4XC41PM1H9817tSq7tJKUn7sNW+rvJ/ak2fF59xRkMKlLnwzleKavGOiey3f8Akf/Z', 0.9),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC9H8If2ZvE/wCxD4t8cfDzwz8DZvB3hP4MWF1Dr+mRKfiFp3jzK+ct/L/rkDyB1WNz84O0AoQKK8Ji1bxTqAu/hBd+Lrw+E4tdTxA3h6OGCOCfUTEiLNM6RCWfYEBRZHZUblQCBgr9Q8NvBzP8kp5gqub1FGWInyckm24xtHmqcyX7yTV5W082flufcZYGtKg1hIyfJFvmS0b1srdF0/I//9k=', 0.9),
];
exports.numberImagesWishingTree = [
    new types_1.Icon('0', b64N0_1_tree, 0.9),
    new types_1.Icon('1', b64N1_1_tree, 0.9),
    new types_1.Icon('2', b64N2_1_tree, 0.9),
    new types_1.Icon('3', b64N3_1_tree, 0.9),
    new types_1.Icon('4', b64N4_1_tree, 0.9),
    new types_1.Icon('5', b64N5_1_tree, 0.9),
    new types_1.Icon('6', b64N6_1_tree, 0.9),
    new types_1.Icon('7', b64N7_1_tree, 0.9),
    new types_1.Icon('8', b64N8_1_tree, 0.9),
    new types_1.Icon('9', b64N9_1_tree, 0.9),
    new types_1.Icon('/', b64Nd_1_tree, 0.9),
    new types_1.Icon('/', b64Nd_2_tree, 0.9),
    new types_1.Icon('/', b64Nd_3_tree, 0.9),
];
exports.numberAuroraStockInTradeBird = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDC0HwVpN/oun+CLr40/Euf463/AOz9d/F2Dxh/wkCR+HY0tx5x0k6YE2NE0Hy78htxzkY5K+c9R/bz+M3hj4N3f7OllofhmWewum+GFn8RJ9JY+JIvDEsm97IXIkEXI+TcYc7eD60V+dZpkvAfLReJy6nK8Vy2pw0j0XQ8ithsrtFzop6aaLY//9k=', 0.7),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDL8KQaJonwb+E/x68MeO/irJ411L4qat4J+KWn+PNatntJr220Ce+mFta2uYYYo7hUEbKdxVDnrRXnul/F7xNqf7Xn/DI1xaWI8LaV8Z9d8XW0yRMLs39x4cWORWk3bTFiVyF2gg4+Y9KK/iXxSeWVcywFenh40/aYWjNqEVGN5Ob0S+S9Ej85zr2Eq1KSgleEXorLW5//2Q==', 0.7),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAANAAkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDnPh3oXh3x34x+JvgH41618UtA8ceDfBGteLrn4oaP8SrZtC0RYWZtOtX05E8tFmXavlzfvHIbAOQa+eP+HjX7a3/QvR/+CJ69O+Pn7T/iX4D+D/ih+xb/AMKq8B+IvD/j/wAQ6nruqavq+j3aagZ5/MeESSwXcYnFvlREHG0CNPlOK+RN/gP/AKFrWf8AwrbqvxbLeH+F+K+H8DP2NCc4U48zdJxXvJaJK21n1ffS585RwuCx2EpPli2kr+60f//Z', 0.7),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDlf2dfA3h343fsQ+Jv2sdV8Q/GPwhL4dWzhg+KS/E211SPWr179LS4j/sNIybaHaxKMyLgkHJxyV8ueFf22/F/wR/ZItPDPwd+Dnw/8N6z42ePTfFvjfT9GuDrGqQ2kxuUMjy3DwhmljUsViUEZwBRXy2IyLhROKq4GlJ2Vv3UHp21RxSw2BVualF/9uo//9k=', 0.7),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDTs/hf4u/ar+FPxT/aW1LW/GOmaJoPhXV4vgto3hq4ubY6te6eV+1arctDjdGX/dQxv8rhGbBzwVW+I/gPX/gXZRad8Bfjp8SvBeneIku9N1bRNF8eXr6e0NyymUxWty8sNq+d2HgWMjc3NFfgvC3EPh0uGsLGjgG4KNlzU6bk2naTb5nduV3f8FsfL4LF5T9Thy0tLdUr+fXuf//Z', 0.7),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDz39s7wDrP7P37L/hH46/An4f/ABS8Sx6v4J8O6j4h+K1n8aTe2tjql7ArXFrLpUccjwgsSiswVQXGOVor560z9pfV9F/Zv8Ofs1fCz4W+DvA1n8Q5V/4TPxP4V06dNY1Q6eJJ4C81xPLGuZI1L7YlDc9KK+FzTL+FaVeKrYSN+VbU6bVvmjzK9LAxmuaC27I//9k=', 0.7),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCPx58O/wBqL9lX4afDH9qH4lS+MvGg1rRF134oW/h/WLCaz0Oz1CDbpdlFpakXRYSNEz3Jwu4lcHrRXyR8W/8Agqx+0Xbfs3WGlWHhDwRba9qENv4P1fx1Bokw1jUNJ0mQvZwzSGcxEgxpuZYlLYor8mzzwl4EzzEwr1KLp2gopU7QjZXs2ktXrq+tkeFishyvEzUpRa0S00R//9k=', 0.7),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgPDWgeGIv2VfiX498UaF8TvD3xU+Hd94d0HS9dX4vz6lp+ueJdQeGT7L9lMSRqBA29kOdoYjqKK574S/F/wAS+Pv2xrv9kfWbCwj8KeGPi94j8YRtbwuLrUdTMcflNdOzFZEhErCJVVSoAyTiiv5I8QuMsHk1XAUv7PoVJzw9OpJunFK8+kUr2Wnc+DzbMKeHlSj7KLbgm9O/Y//Z', 0.7),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCez/Zvj8QfsJR/tnap8Z/iFFe3nwUfx1c/Emz+IkEVvb6sZdo0ePQDCT9mIIQT4O0kEkkclfFun/8ABTb41x/sZLocPw48BJrkPhpvhrb+N00W4GrQ+HXbLWqt9o8jOBt3mEnHvzRXytfh3hSKgp4Gk7JJfuoOy6LY4ZYTAKydKP8A4Cj/2Q==', 0.7),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwB/hT9nvWvFf7Fn/DWumfEr4l6j4gj+DbePrj4sw+LYV8N22qxy86A+lhNoUoCnzESZOSR3+WP+HwP7VX/Rql//AOAM3+Fcb4+/aB8bfDfwX48/ZB8CWOmaV4T8WTRa54rezt3S71drfSLe6W0mk37fszTZd0RVZySS2Tmvdv8Ah7X8bP8Aohvwp/8ACYuP/kqvzafBnA3FWEw9avgIK0ItKKUbKSul7tr2t126bnj/ANn5ZjqcJSpLZeW/of/Z', 0.7),
    new types_1.Icon('/', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAMAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxz9oF/wBofxJ8F/AXxN+EXjHxsfiT8Vr3V/FFj4c0zXo7W00vwdBNHa2m+GWNgs0krK+7gsGOOBRWb4F+KPij9qfwrrHxo8dvDpmq6TH4a8K6RD4dVra3sdKs9MmaOCJWZyoZpSzksdxVD/DRX825/mGEynNqmXYDA4b2dDlgvaUVKTtCLu2pK+/r1Z8fiqtOhXdKlShaNlrG72Xmf//Z', 0.7),
];
// These are very small icons in seaside market detail page
exports.iconSeasideMarketDetailBeans = new types_1.Icon('iconSeasideMarketDetailBeans', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAAwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2vS/Eeha/40n8E2uqXxksLaV9WfSdMW6e3ka3ZoIMvIiRyM7Quc79kRBZP3sRZnhO/wBevtPdPElmY7uGXbI62whjfciyYRfNkbCFzCWfaXeF3VQjJmHXtC+IV/PcNofxSu9Ph+yznTrdbUFba5ZI1jLFGQy26skjmJv3jNM2J0UIi7JtIDqV9rC2sCXOpXInvpo4VRp3WNIlZyoG8rFFFGC2TsiQZO0V/FnFGK8G6HhBl+AyaMqucSlGdabhKLpvlftIObjGMoXdqag56RUpNPf+Usohx/U41xVXMFThl6i1SjGXNKTTXLLo02uZyutG+VcySkv/2Q==', 0.955);
exports.iconSeasideMarketDetailAuroraCompass = new types_1.Icon('iconSeasideMarketDetailAuroraCompass', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDvvEvw9/aU+HXxo0bwL8NdRh8aeKfi6kM2m+FdV0O+a28N6TuujDqjXguYre3kLII/ssUMxuLa3dyy3O3fteFv7Y+I/wCzX4c+LvhvxtoPiC+vtRmtdfh02wWKDTLlQSIBme4Ey/eVZ1cCTynJSJsxJjftefEnwL4e8BeGfAvjf4dv4007xDquneGdAj8Za9qF22l6jqN1cm6WKSG5gltbQqItrRSb1hkNkI/s8R+0ad34T8X+LvizffEzxhfaXptuuni00rw94WtTBYp5vlTXEnlvnyVWZGWKFCVXfcSlv9JWC1+B8QMo8Ea/gHh86w+HhDMJYeiqdSNF886kFDmjL3VT5VB8rdo2UXyTneNvj8Y8leUSlyXquMXGVkrJLVNfabdrO8Uo3jZtpr//2Q==', 0.94);
exports.iconSeasideMarketDetailAuroraColumn = new types_1.Icon('iconSeasideMarketDetailAuroraColumn', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6F1W38EXPgM6VfaX4jvfHuveHNUufCmhWcLWFlZQQTXmmC5urqO6IuDLJdx3EkiyRC0tIbeQR215Cj3uH4r1CHVDdReFIbKWWDVbiF9Lvi6XNvHHLJEJHt5lSdI2dHEczxqkwjkMZYK2NdPHOl/CuKb4m6r4cGojw9A2oRGG4aG6t/KG+R7WYf6i4aISxLKVbZ5xYDcFYcV8IPjfYftM/DvSfit4Z0ow6Lq5vpze6hB9k1KSVL2a2igENrJ9nt4I4LdXbb5hnnuJHAtwhE/8AM+LreH/GngB9deEjgsVlk6dPmhFT9vUnBLVxjBpVOTmfO5cujc5ybcfzSvXw2Oy2M+VRlSSjot9tXbdvXfba+x//2Q==', 0.96);
exports.iconSeasideMarketDetailAuroraBrick = new types_1.Icon('iconSeasideMarketDetailAuroraBrick', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAOAA4DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3rw14u8N+J/hLqnxm8F+DNa8RW3h7xHf6DeWWly2l20t9ZybJ55rVbmG8itRK62wRVMkr2s7LJEkto8/Mf8FIPiTq37Ffwo0zWvB/w4/4T3XfFPiKzuU8Hafp8817b6b/AGaV+2W/lRSGwt1u4rqOa3nkvXkmni8u6C20kVM034Z654H8dzeP/g98Qb7wtPdzNc6jaWttBJbXNwyyh3MOxYyGLq581ZXErTSbzvRIr/gLw3rFpA/jH4l65qmr+MNR0nTLXU7278QSXsUX2eGQPGjyxq8o3yALIRGfKijQphV2fkUM2+jVw54Q4fG4fBwxmKlCMJU6lOrCs67pxdSE8RGEVGEFJpToO07pcsXecfhY4zIaOT8saSlVaSu73Ttd6pLdaX776an/2Q==', 0.958);
exports.numberImagesProdutRequirements = [
    new types_1.Icon('0', b64N0_0, 0.95),
    new types_1.Icon('0', b64N0_1, 0.95),
    new types_1.Icon('0', b64N0_2, 0.95),
    new types_1.Icon('0', b64N0_3, 0.95),
    new types_1.Icon('1', b64N1_0, 0.95),
    new types_1.Icon('1', b64N1_1, 0.95),
    new types_1.Icon('2', b64N2_0, 0.95),
    new types_1.Icon('2', b64N2_1, 0.95),
    new types_1.Icon('2', b64N2_2, 0.95),
    new types_1.Icon('3', b64N3_0, 0.95),
    new types_1.Icon('3', b64N3_1, 0.95),
    new types_1.Icon('4', b64N4_0, 0.95),
    new types_1.Icon('4', b64N4_1, 0.95),
    new types_1.Icon('5', b64N5_0, 0.95),
    new types_1.Icon('5', b64N5_1, 0.95),
    new types_1.Icon('6', b64N6_0, 0.95),
    new types_1.Icon('6', b64N6_1, 0.95),
    new types_1.Icon('7', b64N7_0, 0.95),
    new types_1.Icon('7', b64N7_1, 0.95),
    new types_1.Icon('7', b64N7_2, 0.95),
    new types_1.Icon('7', b64N7_3, 0.95),
    new types_1.Icon('8', b64N8_0, 0.95),
    new types_1.Icon('9', b64N9_0, 0.95),
    new types_1.Icon('9', b64N9_1, 0.95),
    new types_1.Icon('/', b64NS_0, 0.95),
    new types_1.Icon('/', b64NS_1, 0.95),
    new types_1.Icon('/', b64NS_2, 0.95),
    new types_1.Icon('/', b64NS_3, 0.95),
];
exports.bNumbers = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7F/ZY/aM/aE1r4+y2fgn4seJPFfjK80vxPL8V/BmpztPbeGbu31yCDTUjgKgWu62acBQf3iIH9yUUVlC7RpKyZ//Z', 0.9),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD68svhv8cvhf8AHD4veCvC998R7/R7X4kO+kXuqX9/dvPFJpenSMyzOTvXzXlxg4ByBjGKKKKwsbJ6H//Z', 0.9),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3P9oHw34g8X/ta/EOy/Zu/aN+K/wX0XRb2PT9Uub218Rai3inVFmumubyPYGWOBN6RRkHDhSQAAKKKK5d2b3sf//Z', 0.9),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7g+Adh4lk/wCCo3xK8JfDf4s+MdQ8JJ4Vvbi/TSPFuravFFqo1WNCl2moBYrSdFMqRx25dPKUnNFFFZQ2NJbn/9k=', 0.9),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7Z+Cbf8FA9P8A+CrnjL4y/G79lXxld2OtfDS8tdD0e28R6a2mWNnHq9utqIpxceSJWijZ3jdhMWldtmwZoooqIxt1Kb8j/9k=', 0.9),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAHAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD379k74keDvCPjHx/8JPhZ8H/B3xjk8Oa0/wDbvi24tbzSb5bqe/1Bza3Ju5iLkxABEkiVU2AA5IzRRRWENYm0tJH/2Q==', 0.9),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAJAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7j/ZZttY8J/t4fFL4f69feI/Hmo3Vxrmrtr/hLx9rU0Oj28msL5GlXNndBLS3mWN12mDcdsLjO05JX354U/5Dut/9fa/yNFRGNkU5XZ//2Q==', 0.9),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD63/YW/bO/4KKeD08ar4//AGWdf+IfiDVtffUteYRajYSaFdPPcw/2cRdgwMiQwQMgtQECOCxZm3EoorGN+Xc1klfY/9k=', 0.9),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7f8IfsO+Lfjb+1n8ZtP8Ag/8AGj4k+D/BnhHU9M0e1m1Dxpql0NT1YwzXV/JF9omYpGn2m2iATCfJkd6KKKzUItFuTTP/2Q==', 0.9),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCj+258W/26vDHxW1u9+FXxn+JkOqXXjrxJFrsXhnxFrbXyQQ6gyWQvLMsLayQQkiAWxIeMMWwQuSiiuGV+Y61ax//Z', 0.9),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAJAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDpI/23f22xfzt4E/aX8TQ6o9xeHxMdMupdeneddTvo4vtFiUUaK4hSNRbgsJFUPxRX7FfDP/koXjr/ALDif+gGisVTbW5r7Rdj/9k=', 0.9),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAIAAUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD37TPg1/wVft/jd498A/Bb4neIZtW0DUEXxt4p/wCExvr2x1m8uJ7q4gNvHdIqWrRWklujxQAoMoCSQQCiisVBPqauR//Z', 0.9),
];
exports.wNumbers = [
    new types_1.Icon('0', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDK/Zt+AXwN1H4KfCb9mHUv2d/DeoeEviZ8C/Enizxf8SbjSA99a6rbLO0MiXn/ACxETRJHsyM7vU0V+e2kfteftN+Bv2WdY/Z+8I/G7xBYeDLhzHJ4ft74iDy5TmWMfxKjkfMoIU9xRWDSWljRNvW5/9k=', 0.8),
    new types_1.Icon('1', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzf9kHTPgJ8cv+CacMt9+zJ4M0zV/CXxEtNLudftLAvd6v5tleStLO8hJJyiDAwBt6UV8IfDb9oH40/D34c3ngDwT8SdU0zRrvWIb+4060n2xSXKRSRrKRj7wR2H0NFeeq0bK6NXGV9D//2Q==', 0.8),
    new types_1.Icon('2', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzX9hjWfhnrX7CniHxv+25+yb4GsfhHottZaZ4T16x8J7NY13WjexmSVJVy8yrD5gkb7vAHXNFdD+yz8TfiTF/wTO8N+FoviDri6Zawv8AZtOXVphBF/xMGPyx7tq888CisIq8UaJn/9k=', 0.8),
    new types_1.Icon('3', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzbX7H4RfGH/gjrr/xS8QfDT4ea34i8OX3h+3tNK8IeCJNE1Dw0sk4id57t1C3ZnVQxKE/for4r+NP7aH7U3xO+BWg/A/x18btbv8AwlaRQJDoTSqkBEChYdwRQZNgA27icYorhnOLex1wpNrc/9k=', 0.8),
    new types_1.Icon('4', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDH+Kf/AASJufgz/wAEX/Fuj6P+zvc698YtS1Dw3r1/4lgtY2EEN3cgmws2LZCxREeb6mTHOKK/P74e/F74sQ/sP/FTQYvih4iWxm1rQjNZLrc4icrM20lN+DjAxkcUVztRdtDN2lqf/9k=', 0.8),
    new types_1.Icon('5', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDz79rDTPCPx0/YQ03xn+xUfhhc+HvCXgvwpaePNHl+HZtNZt9UdY45Z1v5owJlebAZVPTceQaK+Ifin+2H+0540/Z50H4C+JfjNrNx4PtREItAEixwEQ5MW/YoMmzHy7icUVxTnFsapSmro//Z', 0.8),
    new types_1.Icon('6', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAKAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzb9sn/glR4E0/9jTwR4B/Zr8R+GG8WeEPBuj+L/iF9t0GaPUdUfWCkcbLqDHyjDGZFUQqO26ivNfj/wDGX4v3n/BIzwJpV38VfEktrJcW9tJbSa7cNG0MUhMUZUvgohAKr0XHGKK5pxhfYbqzi7I//9k=', 0.8),
    new types_1.Icon('7', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDifhP+1F8K/Cf/AATf8PftB/tY/szfDe6uPEPjtdF8GQ6Z4RtrSeWxsrKQXFxIVUGQNI8Q3H+JWor8xfiP8Xvid488B+Efhn4x8cajqOgeEra6j8N6TczlodOSWRXkEa9gzEk0Vye10Q4U3OKdz//Z', 0.8),
    new types_1.Icon('8', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDr/jP+zJ+yM37JOoeENO+EHhrU7jRPhd4O1i28B6T4VFprmkXV3NAtxfTaqcLcLMHIMYYkbs4or8vPGv7dX7X/AIu/Z60z4MeJP2hfEt34Zg8q2j0qS9+XyYDmGNmADsiFQVUsQMDFFcUq1NvY6FSl3P/Z', 0.8),
    new types_1.Icon('9', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAALAAcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwBfGPw2/YD8S/8ABNS++Mmn6N8NU+GOjeHvDFjo11YaE8HiC28TvLGuopczsoM24GQkKWAGDwKK/I3xL8Zvirr3wd0X4Lax491O48J6TqVze6d4fkuT9lguHCB5QnTcRxk59qKr2dzH2tj/2Q==', 0.8),
];
exports.iconSeasideMarketItems = [
    new types_1.Icon('white_powder_heal', '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', 0.96),
    new types_1.Icon('white_powder_support', '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', 0.96),
    new types_1.Icon('white_powder_charge', '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', 0.96),
    new types_1.Icon('blue_powder_heal', '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', 0.96),
    new types_1.Icon('blue_powder_support', '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', 0.96),
    new types_1.Icon('blue_powder_bombard', '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', 0.96),
    new types_1.Icon('blue_powder_defence', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAeACoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9nru2utV1iZYY8kSbSx6KBxk/lVrWdW8M/DTwlqfjLxXrUdlpekWE19quo3TbY7e3iQySSN6KqKzH2Fa0cUcQIjQDcxY47k9TWV478feCPhf4TvPHnxH8W6doWi6eitfarq14kEEIZgi7ncgAs7KqjqzMAMkgV/PKvJpH013KyR8S+Jv22/2xv2svHz+Gf2MdPTwp4XlEVz4c1m60i2u9Y8Q2oiMj3axzPJFZ28gdTHHLD9oAj3SCIsYlh+Dv7YX7a/hX49eBP2Vv2mPhjY+J9S8UeIryyj8W6Tq0cF5Z2TwXl9aTXtl9kgt0YW9pOfkmDTJbStFHIyFW8PsPD/7LHw2/a38S+JfhMvi/wl4P1SOO/wDBQ8PaFPoMklvNbxy6hZxLPsmbTWnMJhkhSF4ZZJYkaOGOFjz2rftV+PdN+P1l8T/2Yfh3rOmx6D4f1PTrcf8ACPWuoyRvdwD+0L+4uN0qT6oZbOxwrzvK4jjZvP8APuID+lYXhV4zLIOnQdOTXN7WpJRpWd7JO13J3Sab0ad9ND5HHcV0MuzWpTdaNWMXyqhTpuWITtG7mubaLUpKVuWUZKKjdKT/AFy8NaJqGlSTS6hJA5kVdhiJyvJyDkDP8Jz7kY4ydavnL/gmL+11qv7V37OkMvxO1yM/ErwxdzWXj3Q59OaxvLJmnmNlNLbsiYWe1WKRZY18l2EoTBjdE+ja/O8XRqYbFTpTabi2rrZ20uttHun2PqKNZ4ijGq4uPMk7NWaur2a6NdQr4u+JnjmH46/Fb4gfHjxxoes33gP4CPeQeFPDkdk08dxrdkTFfa89ozWwult5Jlij/wBJARLS7aMxSuGH2RpAlGnRCZyzFclixOcnI6+xFfHXwQ8Lxt8E/Gfwd1HXria3vfFPi7RNRv7m389riL/hIL0SeYpdWdJVBjl2SRSlJZBFNBIUmTvyhUI4xOrsml+d/wArejO2lCbo1JU/iS0+Z5r8Lf8AgqHpf7SN1P4D139naxXWINCv7m20rTbid4dVgs7Wa8kjErM/2Rkhgl2oLW7893VM2+N5+gfHvgP4R+FdO8Q22o6Lp9tNp07JaamLNEGEkCnhBncR065zgc4z4h8IP+Cclv8AsN/FSy+LnxC1OZbq11wz+GLnw/4ne9lFuJPMit5FaysxE7LGIZ5t0yTW89xEtvEzpPHP+1L8WbbS/Eel+Arq3uWWaFbwugUh2csq5yQRtAbp13n0Br6bO6dGFWEacUpO99Om33+fSxjlDryhJ1ZNrSx5t4o+Jo/Zy+JWm/tieAPDkk174QQxeJoYoUNzqvhiSRG1Gzw00SFo0X7XDufie1jAyryI/wCoGk6tpWv6Va67oWp297Y3tuk9neWkyyRTxOoZJEdSQyspBDAkEEEV+cGq/Azxh+0F8F/EXhrSNe0/T7bVtOvdID3CuWUvbPlyFHYHIwRyOeuR9h/sM3N7pf7E/wAHtMnMbPb/AAs8PROwyQSum24JyTk9K8/PshxeBwlCvUXx7arydnr0v+J42VcSZdxJWxEcJe9CfJLRq/Zq6XZr5eh//9k=', 0.96),
    new types_1.Icon('blue_powder_ambush', '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', 0.96),
    new types_1.Icon('purple_powder_bombard', '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', 0.96),
    new types_1.Icon('purple_powder_defence', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAbACoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9yKyfHfjjwt8MvBOr/Ebxxqy2GjaDpk+oaretE7+RbwxmSR9qAs2FUnaoLHoASQKu6Zqtvq1s1zaqwCuVKuRnOAegJx17/Xpg14Z+1j42+Gd/4Nj+EHxR+Imr6bqniu4MvhbT/D3ha5v9Yg1LTriG9t7m0s7ZJ3v1glhiuHxG0SogE4VHK1+D4HL6mNcnF6Rs2vtNN291dWfUQgpS12MceKv2qvjVK/irXfG978IPDskbyaT4a03SrKXWmtnSJo5tUn1CGeG2k2+ZutYYQYWbDXEm0gUvC3xN/aa+G82k6H8d/B3h3VPDt9qEej6P498N+JpJ72+uZpVjsZrvTGsoFhWfeiSPaSXCxStvMSW/mSQfOXwa/ap+IvgvTrrXvjz8RfC1z4y08z6VrsHi6Oe8k0a7iuWsphb2ml6ZJDcxefbS3AhLwzxC4aFztRL24xvhj+0p+1/r3xg0D4heCf2e77xfaNrj/wDCOeJfF2hag2mlD51ndX5vJHmjsLto1cH7EwgiS+uYzBdlo5E/ep+GH1rJo/U8JKNRRT5qr9knJ7JSnZVHb3vdb0v1sn7U6cJ0VGFO3Z6Xl5rd/fr2T3P0w8L6jrV400OqzWs6pHC8dxZxyImXjDNHiRVOUYkdPTIVtyLck0eKR2c3dwNxJwJa85+A/wC1J4a+MWu3/wANvEPhq88KeONHtY59T8L6pKjieFlTdd2NwnyX1oJH8vzVCujbRNFC7Kh9Rr8FzSNWnmFSM6XsWnrDVcvlrqeLNVKcrNWZzWn6xpvgPwhq/inxnfJpmnabFLfaheXgEcdvbxwhpJWb+6qoSScYC+nJ8Etfj7pnwS/Zj0n9r/xbcae3jf4pWdtrM51a0jub7TNJnKT2+mW1qbi1e6jskura2aNJYAZJ57103vLHJ6r+2jaW+ofsdfFmwu498U/w016OVMkblOnzgjI56GvjT9rbVr/xH/wTK/Zk8Q63MLi+vPCOlz3Ny8ahpJJNGtXdjgd2OT+HoK/QPDLB4bFZnOdRa6L0Tu399kexkOCpZnm9DD1fhnKz9FFv81qTWH7eX7Lv7RXxpjsvjL8Cfhp4l1W5sz9ql8T/AAnTTLqa0t0eWWWPUTdanGfIt4pG8m7S1twoLvewLGQ33PfaBH4g8KWnibVNOvNLM2nwzT6dqyxLc2LNGrG3lEbyR+YhbYQjsu5SFZhgn8hv2aPC+g+IvjtDpOs6cs1vf+FPElldpvZfMgn0O/ilTKkEbkdhkHIzkEEA1+xvxVuJo9ALJIQZdRCyY/iGHbB/EA/hX7nmtChSxGHhRutOr21totkvle/XtrneVVeHc/lQoz9xpNLt+HkfN37V3h9P+FBap8TPA+j29t42+FsV3418D60YZ3njubOEXF1Zt5M8TyW95aW8lnLDu2MsqsysY0x9HeCvGmnfELwbpHj7wrp2o3Gl65plvqGm3H9nyDzbeaNZI2xjjKsD+NeBo0//AAkmv+KnvLh7vS9ZgtbESXLtDFDItukieSSYmDrI6tlTuDEHOa+xokSONY40CqqgKqjAA9K+N454Ry3H42niqraclZ8rS1ST1unfSSS266bHyMsTVp0vaS95SlK1+lrXXprdfPQ//9k=', 0.96),
    new types_1.Icon('purity_crystals', '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', 0.96),
    new types_1.Icon('swiftness_crystal', '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', 0.96),
    new types_1.Icon('strength_crystal', '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', 0.99),
    new types_1.Icon('arcane_crystal', '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', 0.96),
    new types_1.Icon('power_crystal', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAgADADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9xLW0t7KBbe2j2qBye7H1NeXfti/tofs9fsIfBW/+Ov7RvjePStKtQY7CxhAkvtXuiMpaWkOQZpm9MhEXc8jRxo7ryH/BS/8A4KHfDf8A4Jqfs3T/AB28eeGNS129vb9dK8KaDp8LganqkkckkUEk4Rkt02xyOztk7I32LIwCH4N/4J7fsw+Cv2yP2rtd/bB/4LOXmr6h8WLG/sZvCngPX7JrLwxodj5b3VvaRo7EOsYZJBFIVjcTK7NdvcyufwXC4ahJKpiaip027Xk7Xfa7/wCDrokz9MyPhrFZpha2PnGToUVefJHmm1dK0Y+r1baS3b0Z6T+yP/wcwfs2/Gz4t3Pw4/aX+EmqfBbTtTnUeCPFPiTUjcWOooZdmLxxBGNPfa8L7iZIFVnLzRhUaX0b4r/8Fi/hJ8QfiNP8F/8Agn1+z5rn7R/jW0n8u+vvDN+umeH9M2SBJPN1mVSgxuRg0KPDIHA80HIrE/4KXfs9fsx/tc/E1vHH7Sf9heFfCfhbVbfTtZ8RarqQsYmsoZwuZZ3lWKFgxuAko2tsn8t96qoHdfA/9pP9gzwN440D9n79irxf4C8Q+DNGhj1HxXbfDcveWtijuIEe5u7RZIDKxCyCJ5WuLlbaT5SiOT5OLznK51ZvBQcoQnySnK6pxXMo87XxuK3dnpvdXR9RieH+HYewq4eE3Uq0+b2PN8EkrtSqJe9fRwSs5Xs3BrXmf+CZ/wDwU7j+OHxq179in9svwd4b8AftC+Fb28EOmeHL6RtG8U2UZfc+mtLLKfNgVHElsXZgIpJYzgXMdv8Ad1fhp/wWo/Ys1X/gn18StI+OXwm8dJ4JtdO8QDWfg34vRTcf2XqEJWU6ZMJFkZ+F27XEiyxBXYSlJYx+oH/BK39vzwp/wUk/Yu8MftHaQILfXvLGlePtItrdoo9M1+COP7XDGjSSFYWLpNDudn8ieHfh9yr7mNy+vh6fPONmnyySva/eN/sy3Wrt9x5fHWQZRldfD43KMQq2ExMFOD05ov7UJxUpOEou6s2/JuzS9T/aW+G/wF+LnwE8WeAP2odJ0W8+H17osz+LF8Q3KwWcFnEvnPcSTMy/Z/J8sTCcMrQtGJFZSgYfkz/wTx/af8M+N/F3j39j+L4g+Ifir8PPhqWm+CPxkvdOlXUV05rmNF0O/eVEFxbKZpWhmfy3hNvMIVeF47eL1T/g5Y+Ff7QWsfD3wn8Tpfi9rA+BcM8OlfEDwTp0xtbe11F5y9jqt7JHGTcWjS+TAyTSIkEy2siAmSQjlf2Mv2qvgHH+wTpnwF+FHgjRPCHiTRvEVtaeL9I0q2bOo26iWZL55HBYs8iRDljt2siYRdieXm1WWEyCa9n7WNX3Wn8Mf7z68ydrNWs7O+x9J4fcOYrF0IYzDzcm6iXLB2dP+aUrpu3Lo0laSdm7ar5O/b8u/jR8Zv2gPEfxv+Lv7LPjIfCrwSV8PeCtY8UeA9Si0aK189YpNQzdxiBXvbpkCyMkcjRpaxn5gVr6I/4Jx/tzR6/c6F+yN8Lf2H71tLFu0+r+L/C/iq3u/IwY0e/vreW2tVtoAgACpLMyKkUKec5XPeftJ/s7fGP/AIKafEz4X/swXfis+GPgr4fvjr/jDUoNQt5L7XNQEUohtrSDy2eI28ccmZJXWItfrJ5Uxttp/QP9lr9j/wCFP7K/wqsvhF8BPAkWjaLbZlnuJWL3F/OR89zcTN880jYA3HhVVUQKiKi/M4nF0MZlNLA06HtKlvdhFyaglonLlavJ7tba3lZn1mf8XYDKeG1lOLoONeE3KLi+S+/v1W4vnbfNaKWi2cVY/Lz/AILR/tn6F8ef2d9P/Ygisor1dBuYb2TWmMcdtYPatKvmEkbpJI7bdAI0AQi4aR5GKbVyP+DUr9nT9orwv8VviV+0n4Yjm0z4IeI9FTSN2rRDf4m1q1ucw3VmAgPk2yPexSS7ghe52BZXSQ23I/8ABfXT/wBlf4ofG2Gb4CeMY77xFNI9v8QrWwbfYsyqjQ3sRAysh+ZWPCzjypIwwEsrfZ3/AAQX/wCCpvgz9p3wHb/sNeK/CllpHj74ZeF0+zSeGdGW30nV9Ft2ht0uVihGyyuEaSJJYMCJmdZISFkaGD7LKsRiv9X+SUpSk0lJSd+VKy06W91WtpvPVybPn+Lsox+H4Ho4qjlypUqk3Kc5K01J3dlF2aW7ctW9IvlSSP/Z', 0.96),
    new types_1.Icon('milk', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAXACUDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9yK+WP2gv+CnHgLwb4/1P4LfA/wAEjx14h0LUEtfEOoSXf2fR9JugW3W/nqkjXV5E6pvt4k2oSUkmhkXbX1PX44eMvCn/AAUf+Fgl0n9mzwfeeM/Amh+L/EvhzTNV8M6JHrGqM9lqV1ZLHrEUEZkiu1SCO5EyxpFMtzE7s7yNGv4JhcFWxVKc4RcuW17a79bH3GUf2Y8YljHp0V+W/wA/03fQ+m9b/an/AGhtL0DUviT8Tvjdd+CtN0zRj9ps/C2g6VY2kTqSUdE1O2vJndgwQRCY72wEClsH1b/gnJ+3xp/7Vnwt0i38d6Z4i0rxHeXWrRaNfeJNDWzi8TWtnePF9otJYv8AR7iWOIwi4WLaFmE2xAiZHxT4S/4JY/8ABQ79qTXNK8S/tmeMZPCHhUXMAT7fJFcXl0HimYC00+z/AHaTEokbNcGAgTBh5pQxn9Mvh5+xf4J+H3hzwBoXgXTbPStP+GGm6hB4Qt/swkn8+7gjSW6uGjaJHldzdvKoAWR7jeGUqCfpsn4Wr46hVliIOHuvkvZNz6XX8vR+TujHinNcvUqdPARjzKS5uVacmqeq3fVavVa7noVFePap+1v4N+ElydG/aH1eDSJZi50vVbLSrswXwWRlkiaILI1tcQ4j82FnfHmxsrMrjBXlV+F+IaNVw+qzlbrGMpRfo0mn+mzs9D5+GcZZOCk60V5NpNeqb/rdaHsNeJfslfCjTvib8YviV+1rrPhmy0z+2fEuoeE9G02xuXaCe10e6uNMn1K7t+IpdRnuIruNZ3V2iso7eFCPMufMKK9ngiKWLrVOqil971/IMx95Ri9tX9x9Cw+AfDUDR3L2Jmkig8lHmlZsRg8IBnaFHZQAB6Vh+PPE1h4QAgtfDtnLZxJHc63K15Jbm1tjMqeaqxxN5zAGRgmV/wBWRkbhRRX6RTV8VFNuzXd90v1/BdDz4QhyvQ8C8fxfCz4z3yX3xQ8GaXr2nwrHdaW9payo1tNdW1vPJGzTPum/0drE+dtj3ZIMcZUqCiivXxU6lGs4Qk0kl+SPNlhcPOTbij//2Q==', 0.96),
    new types_1.Icon('cotton', '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', 0.96),
];
// Tower of records
exports.iconRedBubbleWhiteCheck = new types_1.Icon('iconRedBubbleWhiteCheck', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAPABADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5B/Yx/Yy8GfGTwFcTp+zv4m+M/i280zVvEE+j+H/EV3pP9g6HpmqvpTvBBaTLLfzSThZJF/euFmhWKIeXM76n7Wv7NHwY/Zq+1w/DnwppfhrxV4SOmxfEfQbT4hXutwQC8vPsclk892GRtSsriewEy2srQIst1GzSS27+V4b4a+Jf7Rv7POq/8Jt+zz43a0uLG7m1DTXbVr2z1DR5JFl+1Lp95azI8C3AllDRsSgMsuNomlDL4V8SWfx+8Q2GuLpjW3g3SZEvtGsNSs4GudRulV41uJ9pkEMce9wkKOdzgO7HaijwJ5VxFHPkrv2cpNt83uKCtZKNk+Z3trdaN9dP3V5/4UVvDSdN0oRxcKMIxiqTWIniZX56k67lKHsIcrmlBQk/aRptWi3P/9k=', 0.96);
exports.iconGreenBubbleBlueGem = new types_1.Icon('iconRedBubbleWhiteCheck', '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAAVABoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9afglcfsr/slfAnQv2cP2K/g/a2FhZWCWWieHtP0/ylMpAG+5kkIa4mdmZ3lZmaRtzPINxevEPiP8WNO+Bl3ceFfjZe6xaeJbeebdo/hsJfp5BJa2fzppbbDPEYy67dqSMyo8yp5p8S8T/twXH7NX7TejeMfFPhGTUdG1zQrXTvBUlzqDQW2la8k91JeI5CNG81zA1ksDSgsBaXKRmMzyrN5H+0n+0t4n8ffGrWvHmqeHZrg61Ml5FJPduAiMg/coWT5khIMAI4Pk14vgR4FZP4+8PYbiHjCnTxNBwmqVKjOVKNGSmlKMuWoqjqStzVOd9uRWvKX8xeLPirmuSqngMmX+13UnzR9x0nF3cXKyk+blWkna0lZWPfPgJ+3VoPxo+Imp/Da/tLvw/qkNw7aDb3+pB21S3RcsdpC7J1KuXgXzAqAMHbLBPWrjR/CN7cSXl/8AD/w/cTzOXmnm0eJnkcnJZjjkk5JPqa/Lfxn8ZtPtfiQJfEHwfa7sGtrFTqdpez2+ojU5JpBb2emH7OHmvn2QyJJbviEhGaSNozt/Qr4X/EvVNN+Gnh3Tvirqo1DxRb6FaR+JL+wtwsFzfrCguJYwAmEaUOyjavBHyr0H88fTB8B+CPBvinCVuGqns8Pi4y/2aU3KdKUOVScZNuUqUm/dc25KSaTkrW9/w34xz/PsqlLNqXs6keVqacXGakr6crdpR05k1HSUXbU+ddf8e+Dfjh8SfEX7J3xC+GdtqGizaSzX8t1elluFypACBAY2DEMrq+5GVWUggEfNb/H/AF79nn4x+J/gX4gsP+EvPw9L3GleI9ReOG+u7U2C3sUVw4jbzJkAEfnDAbl/LDM24or7T6IOdZrw94qwybL60oYXE4SlUq073jKo50oudpXtJxlJXjbR26K2vGvDeSZ3kdWONoqfs6fPHVpxk7JtNNOzT1V7PS60Vo/2KfiZba/oHi79sn4meHj4i8WadG8+kCe5WKDTorh2E4gjWMqk8rBjJPjLIRGqxoGDewWv/BQqS4tY52+EgBeMMQNe6ZGf+eFFFfE+IWX4fjfjvNsyzzmr1lXUFKU5+7BU4tQilJRjFNtpJJK7sfcYfJ8twdJ0KFJRhCyilokrJ2S9T//Z', 0.96);


/***/ }),

/***/ "./src/messageWindow.ts":
/*!******************************!*\
  !*** ./src/messageWindow.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TOSCsearingKeysNotUsedMessageScreen = exports.newAreaAvailableMessageScreen = exports.battleCompletedNotInflictDamageMessageScreen = exports.guildBattleAttemptNotUsedMessageScreen = exports.battleAbnormalButLastWasSavedMessageScreen = exports.unfinishedSuperMayhemBattleMessageScreen = exports.bountyHasExpired = exports.bountyAddMoreCookiesMessageScreen = exports.unfinishedPVPBattleMessageScreen = exports.messageTeamDontMatchToSCRow2 = exports.messageTeamDontMatchToSCRow1 = exports.messageCookieDryingOnSunbed = exports.messageNotifyQuitRedroid = exports.messageNotifyQuit3 = exports.messageNotifyQuit2 = exports.messageNotifyQuit = exports.theReloginIntoAnotherDeviceMessageScreen = exports.theNetworkIsUnstableMessageScreen = exports.anUnknownErrorHasOccurProcessingRequest = exports.skipTutorialMessageScreen = exports.anErrorHasOccuredMessageScreen = exports.downloadDataNoLanguage = exports.downloadDataNoLanguageTitle = void 0;
exports.downloadDataNoLanguageTitle = {
    name: 'downloadDataNoLanguageTitle',
    x: 260,
    y: 88,
    width: 110,
    height: 20,
    targetY: 10,
    lookingForColor: { r: 249, g: 249, b: 250 },
    targetColorCount: 45,
    targetColorThreashold: 5,
};
exports.downloadDataNoLanguage = {
    name: 'downloadDataNoLanguage',
    x: 226,
    y: 127,
    width: 180,
    height: 12,
    targetY: 4,
    lookingForColor: { r: 202, g: 193, b: 183 },
    targetColorCount: 40,
    targetColorThreashold: 5,
};
// export const termOfServiceMessage: MessageWindow = {
//   name: 'termOfServiceMessage',
//   x: 168,
//   y: 127,
//   width: 140,
//   height: 6,
//   targetY: 4,
//   lookingForColor: { r: 37, g: 37, b: 37 },
//   targetColorCount: 32,
//   targetColorThreashold: 5,
// };
// export const facebookRefreshTokenExpiredLogout: MessageWindow = {
//   name: 'facebookRefreshTokenExpiredLogout',
//   x: 220,
//   y: 135,
//   width: 196,
//   height: 14,
//   targetY: 4,
//   lookingForColor: { r: 140, g: 135, b: 128 },
//   targetColorCount: 16,
//   targetColorThreashold: 5,
// };
exports.anErrorHasOccuredMessageScreen = {
    name: 'anErrorHasOccuredMessageScreen',
    x: 194,
    y: 176,
    width: 236,
    height: 7,
    targetY: 4,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 28,
    targetColorThreashold: 5,
};
exports.skipTutorialMessageScreen = {
    name: 'skipTutorialMessageScreen',
    x: 194,
    y: 166,
    width: 238,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 48,
    targetColorThreashold: 5,
};
// "An unknown error has occured while processing this request" 先用等的，可能會需要重開遊戲
exports.anUnknownErrorHasOccurProcessingRequest = {
    name: 'anUnknownErrorHasOccurProcessingRequest',
    x: 190,
    y: 160,
    width: 254,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 67,
    targetColorThreashold: 5,
};
// export const anUnknownErrorHasOccurMessageScreen: MessageWindow = {
//   name: 'anUnknownErrorHasOccurMessageScreen',
//   x: 222,
//   y: 160,
//   width: 198,
//   height: 25,
//   targetY: 4,
//   lookingForColor: { r: 80, g: 80, b: 80 },
//   targetColorCount: 79,
//   targetColorThreashold: 3,
// };
exports.theNetworkIsUnstableMessageScreen = {
    name: 'theNetworkIsUnstableMessageScreen',
    x: 222,
    y: 160,
    width: 198,
    height: 25,
    targetY: 4,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 51,
    targetColorThreashold: 5,
};
exports.theReloginIntoAnotherDeviceMessageScreen = {
    name: 'theReloginIntoAnotherDeviceMessageScreen',
    x: 190,
    y: 160,
    width: 246,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 68,
    targetColorThreashold: 1,
};
exports.messageNotifyQuit = {
    name: 'messageNotifyQuit',
    x: 220,
    y: 162,
    width: 196,
    height: 12,
    targetY: 4,
    lookingForColor: { r: 95, g: 95, b: 95 },
    targetColorCount: 42,
    targetColorThreashold: 8,
};
exports.messageNotifyQuit2 = {
    name: 'messageNotifyQuit2',
    x: 234,
    y: 184,
    width: 180,
    height: 12,
    targetY: 4,
    lookingForColor: { r: 168, g: 162, b: 155 },
    targetColorCount: 36,
    targetColorThreashold: 8,
};
exports.messageNotifyQuit3 = {
    name: 'messageNotifyQuit3',
    x: 200,
    y: 184,
    width: 240,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 131, g: 128, b: 125 },
    targetColorCount: 67,
    targetColorThreashold: 4,
};
exports.messageNotifyQuitRedroid = {
    name: 'messageNotifyQuitRedroid',
    x: 208,
    y: 184,
    width: 240,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 171, g: 166, b: 160 },
    targetColorCount: 47,
    targetColorThreashold: 4,
};
exports.messageCookieDryingOnSunbed = {
    name: 'messageCookieDryingOnSunbed',
    x: 201,
    y: 172,
    width: 226,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 172, g: 165, b: 158 },
    targetColorCount: 68,
    targetColorThreashold: 8,
};
exports.messageTeamDontMatchToSCRow1 = {
    name: 'messageTeamDontMatchToSCRow1',
    x: 234,
    y: 160,
    width: 140,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 155, g: 150, b: 144 },
    targetColorCount: 47,
    targetColorThreashold: 7,
};
exports.messageTeamDontMatchToSCRow2 = {
    name: 'messageTeamDontMatchToSCRow2',
    x: 240,
    y: 173,
    width: 160,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 95, g: 95, b: 95 },
    targetColorCount: 38,
    targetColorThreashold: 8,
};
exports.unfinishedPVPBattleMessageScreen = {
    name: 'unfinishedPVPBattleMessageScreen',
    x: 240,
    y: 160,
    width: 160,
    height: 6,
    targetY: 4,
    lookingForColor: { r: 247, g: 235, b: 222 },
    targetColorCount: 128,
    targetColorThreashold: 5,
};
// There're empty spots on the team!
exports.bountyAddMoreCookiesMessageScreen = {
    name: 'bountyAddMoreCookiesMessageScreen',
    x: 191,
    y: 177,
    width: 247,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 54,
    targetColorThreashold: 5,
};
exports.bountyHasExpired = {
    name: 'bountyHasExpired',
    x: 224,
    y: 166,
    width: 186,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 89, g: 80, b: 73 },
    targetColorCount: 37,
    targetColorThreashold: 5,
};
exports.unfinishedSuperMayhemBattleMessageScreen = {
    name: 'unfinishedSuperMayhemBattleMessageScreen',
    x: 240,
    y: 166,
    width: 160,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 227, g: 218, b: 209 },
    targetColorCount: 84,
    targetColorThreashold: 5,
};
// Your most recent battle was not finished due to an abnormal exit. However, the previous level's battle record was saved
exports.battleAbnormalButLastWasSavedMessageScreen = {
    name: 'battleAbnormalButLastWasSavedMessageScreen',
    x: 197,
    y: 173,
    width: 242,
    height: 12,
    targetY: 6,
    lookingForColor: { r: 227, g: 218, b: 209 },
    targetColorCount: 86,
    targetColorThreashold: 5,
};
// Your last battle was not finished properly, and the Guild Battle attempt was not used!
exports.guildBattleAttemptNotUsedMessageScreen = {
    name: 'guildBattleAttemptNotUsedMessageScreen',
    x: 205,
    y: 180,
    width: 220,
    height: 10,
    targetY: 5,
    lookingForColor: { r: 227, g: 218, b: 209 },
    targetColorCount: 152,
    targetColorThreashold: 5,
};
// Guild dragon: Battle Completed! If you didn't inflict any damage to the Guild battle boss monsters, you won't be able to claim the individual reward when the battle ends.
exports.battleCompletedNotInflictDamageMessageScreen = {
    name: 'battleCompletedNotInflictDamageMessageScreen',
    x: 192,
    y: 192,
    width: 252,
    height: 8,
    targetY: 4,
    lookingForColor: { r: 131, g: 128, b: 124 },
    targetColorCount: 46,
    targetColorThreashold: 4,
};
// Hot air ballon: a new area is available for exploring! Do you still want to explore this area?
exports.newAreaAvailableMessageScreen = {
    name: 'newAreaAvailableMessageScreen',
    x: 192,
    y: 171,
    width: 247,
    height: 14,
    targetY: 7,
    lookingForColor: { r: 80, g: 80, b: 80 },
    targetColorCount: 57,
    targetColorThreashold: 4,
};
// Your last battle was not finished prperly, and the Searing Leys were not used!
exports.TOSCsearingKeysNotUsedMessageScreen = {
    name: 'TOSCsearingKeysNotUsedMessageScreen',
    x: 198,
    y: 180,
    width: 240,
    height: 9,
    targetY: 5,
    lookingForColor: { r: 227, g: 218, b: 209 },
    targetColorCount: 190,
    targetColorThreashold: 5,
};


/***/ }),

/***/ "./src/pages.ts":
/*!**********************!*\
  !*** ./src/pages.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rfpageNotEnoughStockInProduction = exports.rfpageInMagicLab = exports.rfpageInProduction = exports.rfpageNotEnoughGnomeBuilders = exports.rfpageInCandyHouse = exports.rfpageInTowerOfRecords = exports.rfpageInGacha = exports.rfpageBattlePaused = exports.rfpageAddMoreCookies = exports.rfpageNotSelectTeamLeader = exports.rfpageCanEquipTopping3 = exports.rfpageCanEquipTopping2 = exports.rfpageCanEquipTopping = exports.rfpageReadyToBattleToSCTimeJump = exports.rfpageReadyToBattleToSC = exports.rfpageToSCTrayJumpNeedMoreKey = exports.rfpageToSCConfirmTrayJump = exports.rfpageInTowerOfSweetChaos = exports.rfpageBattleFinishedWithMVPCookieWithExit = exports.rfpageBattleFinishedWithNextLv = exports.rfpageGuildDecorShop = exports.rfpageKingdomDecorating = exports.rfpageInKingdomConstructionShop = exports.rfpageFoundOctopus = exports.pageBattleTowerOfSweetChaosVictory = exports.pageBattleFinishedWithMVPCookieWithExit = exports.pageBattleFinishedWithMVPCookie = exports.pageBattleFinishedWithoutNextLv = exports.pageWinBountyAndFinish = exports.pageBattleFinishedWithNextLv = exports.pageBattleFinishedWithSunbeds = exports.rfpageArenaBattleDefeat = exports.rfpageBattleFinished = exports.rfpageBattleVictoryButNeedTap = exports.rfpageTrainNotEnoughGoods = exports.rfpageInTrainStation = exports.rfpageUncollapsedAffairs = exports.rfpageUncollapsedAffairsNoHabor = exports.rfpageMailsAllClaimed = exports.rfpageMailsCanClaimAll = exports.rfpageKingdomHaveNoCookieIcon = exports.rfpageKindomHasOnlySorageAndBuildIcon = exports.rfpageStoryBuildCookieHouses1 = exports.pageStoryBuildCookieHouses1 = exports.rfpageNameYourKingdom = exports.pageInCookieGacha = exports.pageLoginFacebook = exports.rfpageKingdomDecoratingExpand = exports.rfpageMovingStructures = exports.rfpageInKingdomVillage = void 0;
exports.groupPageGoodsProdMenu = exports.groupPageMaterialProdMenu = exports.magicLabPointMapping = exports.productMapping = exports.rfpageErrorBusterIntro = exports.rfpageTrialGroundIntro = exports.rfpageGameSettings = exports.rfpageInShop = exports.rfpageInFriendsList = exports.rfpageWorldChat = exports.rfpageKingdomPassItemCollected = exports.rfpageInKingdomPass = exports.rfpageDownloadNewDataPakIsAvailable = exports.rfpageGooglePlaystoreHasStopped = exports.rfpageInCookieHead = exports.rfpageCookieKingdomHasStopped = exports.rfpageCookieKingdomIsNotResponding2 = exports.rfpageCookieKingdomIsNotResponding = exports.rfpageHallOfAncientHeros = exports.pageToSCTeamsNotMeetRequirement = exports.rfpageDragonHasExtraTime = exports.rfpageRedValvetDragonWon = exports.rfpageDragonTotalDamage = exports.rfpageSelectAdvanture = exports.rfpageBountiesAt3rdSlot = exports.rfpageBountiesAt2ndSlot = exports.rfpageStockIsFull = exports.rfpageInProductionDashboard = exports.rfpageInCookieActivityDashboard = exports.rfpageNotEnoughPurityCrystals = exports.rfpageCancelMultipleProduction = exports.rfpageCancelProductionLongItemName = exports.rfpageCancelProduction = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var rfpageWoodFarm = new Rerouter_1.Page('rfpageWoodFarm', [
    { x: 596, y: 118, r: 123, g: 207, b: 8 },
    { x: 527, y: 86, r: 140, g: 81, b: 57 },
    // { x: 520, y: 91, r: 249, g: 192, b: 139 },  // Memu
    { x: 520, y: 91, r: 222, g: 163, b: 121 },
    { x: 427, y: 79, r: 140, g: 81, b: 57 },
], { x: 596, y: 118 });
var rfpageBeanFarm = new Rerouter_1.Page('rfpageBeanFarm', [
    { x: 602, y: 122, r: 123, g: 207, b: 8 },
    { x: 527, y: 83, r: 0, g: 204, b: 223 },
    { x: 525, y: 88, r: 1, g: 252, b: 248 },
    { x: 414, y: 82, r: 0, g: 207, b: 220 },
], { x: 602, y: 122 });
var rfpageSugarFarm = new Rerouter_1.Page('rfpageSugarFarm', [
    { x: 600, y: 118, r: 123, g: 207, b: 8 },
    { x: 531, y: 92, r: 135, g: 151, b: 200 },
    { x: 419, y: 71, r: 244, g: 250, b: 253 },
    { x: 411, y: 89, r: 239, g: 240, b: 249 },
], { x: 600, y: 118 });
var rfpagePowderFarm = new Rerouter_1.Page('rfpagePowderFarm', [
    { x: 596, y: 120, r: 123, g: 207, b: 8 },
    { x: 523, y: 87, r: 231, g: 157, b: 74 },
    { x: 435, y: 90, r: 156, g: 117, b: 49 },
    { x: 423, y: 83, r: 239, g: 162, b: 82 },
], { x: 596, y: 120 });
var rfpageBarryFarm = new Rerouter_1.Page('rfpageBarryFarm', [
    { x: 597, y: 118, r: 123, g: 207, b: 8 },
    { x: 527, y: 90, r: 198, g: 36, b: 41 },
    { x: 428, y: 76, r: 28, g: 117, b: 16 },
    { x: 413, y: 82, r: 200, g: 26, b: 31 },
], { x: 597, y: 118 });
var rfpageMilkFarm = new Rerouter_1.Page('rfpageMilkFarm', [
    { x: 597, y: 118, r: 123, g: 207, b: 8 },
    { x: 521, y: 79, r: 214, g: 138, b: 99 },
    { x: 526, y: 90, r: 255, g: 255, b: 239 },
    { x: 425, y: 85, r: 255, g: 255, b: 242 },
], { x: 597, y: 118 });
var rfpageCottomFarm = new Rerouter_1.Page('rfpageCottomFarm', [
    { x: 596, y: 120, r: 123, g: 207, b: 8 },
    { x: 528, y: 87, r: 254, g: 231, b: 251 },
    { x: 428, y: 92, r: 255, g: 241, b: 255 },
    { x: 423, y: 96, r: 202, g: 49, b: 136 },
], { x: 596, y: 120 });
exports.rfpageInKingdomVillage = new Rerouter_1.Page('rfpageInKingdomVillage', [
    { x: 39, y: 313, r: 255, g: 101, b: 156 },
    { x: 24, y: 321, r: 255, g: 255, b: 255 },
    { x: 55, y: 327, r: 255, g: 227, b: 247 },
    { x: 377, y: 321, r: 121, g: 52, b: 52 },
    { x: 418, y: 321, r: 132, g: 16, b: 8 },
    { x: 466, y: 318, r: 231, g: 167, b: 85 },
    { x: 96, y: 327, r: 254, g: 244, b: 158 },
]);
exports.rfpageMovingStructures = new Rerouter_1.Page('rfpageMovingStructures', [
    { x: 615, y: 21, r: 255, g: 255, b: 255 },
    { x: 518, y: 16, r: 241, g: 255, b: 255 },
    { x: 406, y: 20, r: 255, g: 211, b: 0 },
    { x: 39, y: 21, r: 99, g: 174, b: 49 },
    { x: 23, y: 20, r: 134, g: 220, b: 80 },
    { x: 32, y: 81, r: 255, g: 255, b: 255 },
    { x: 16, y: 187, r: 132, g: 211, b: 33 },
    { x: 42, y: 343, r: 74, g: 85, b: 123 },
    { x: 36, y: 347, r: 207, g: 207, b: 208 },
], { x: 615, y: 21 });
exports.rfpageKingdomDecoratingExpand = new Rerouter_1.Page('rfpageKingdomDecoratingExpand', [
    { x: 622, y: 18, r: 255, g: 255, b: 255 },
    { x: 517, y: 22, r: 0, g: 182, b: 255 },
    { x: 405, y: 19, r: 255, g: 211, b: 0 },
    { x: 39, y: 27, r: 92, g: 166, b: 43 },
    { x: 48, y: 181, r: 140, g: 211, b: 33 },
    { x: 25, y: 238, r: 57, g: 69, b: 107 },
    { x: 5, y: 348, r: 47, g: 52, b: 75 },
    { x: 565, y: 336, r: 255, g: 255, b: 255 },
    { x: 42, y: 26, r: 97, g: 173, b: 48 },
], { x: 622, y: 18 });
exports.pageLoginFacebook = [
    { x: 186, y: 72, r: 59, g: 89, b: 152 },
    { x: 484, y: 71, r: 59, g: 89, b: 152 },
    { x: 376, y: 123, r: 255, g: 235, b: 232 },
    { x: 602, y: 167, r: 255, g: 255, b: 255 },
    { x: 506, y: 24, r: 21, g: 21, b: 21 },
];
exports.pageInCookieGacha = [
    { x: 36, y: 233, r: 205, g: 204, b: 205 },
    { x: 35, y: 75, r: 206, g: 215, b: 231 },
    { x: 30, y: 12, r: 148, g: 81, b: 66 },
    { x: 268, y: 17, r: 218, g: 173, b: 234 },
    { x: 342, y: 16, r: 99, g: 117, b: 132 },
    { x: 418, y: 21, r: 239, g: 195, b: 2 },
    { x: 524, y: 20, r: 0, g: 139, b: 255 },
];
exports.rfpageNameYourKingdom = new Rerouter_1.Page('rfpageNameYourKingdom', [
    { x: 362, y: 247, r: 160, g: 160, b: 160 },
    { x: 269, y: 242, r: 180, g: 180, b: 180 },
    { x: 410, y: 154, r: 255, g: 255, b: 255 },
    { x: 286, y: 155, r: 171, g: 161, b: 159 },
    { x: 230, y: 153, r: 130, g: 127, b: 124 },
    { x: 233, y: 100, r: 60, g: 70, b: 105 },
    { x: 267, y: 103, r: 173, g: 173, b: 173 },
    { x: 295, y: 104, r: 60, g: 70, b: 105 },
    { x: 356, y: 104, r: 2, g: 2, b: 2 },
], { x: 362, y: 247 });
exports.pageStoryBuildCookieHouses1 = [
    { x: 563, y: 86, r: 59, g: 127, b: 161 },
    { x: 477, y: 83, r: 211, g: 131, b: 56 },
    { x: 492, y: 104, r: 178, g: 50, b: 32 },
    { x: 25, y: 320, r: 75, g: 75, b: 75 },
    { x: 22, y: 330, r: 28, g: 12, b: 12 },
    { x: 94, y: 333, r: 26, g: 54, b: 33 },
    { x: 523, y: 270, r: 48, g: 68, b: 109 },
    { x: 468, y: 268, r: 255, g: 189, b: 8 },
];
exports.rfpageStoryBuildCookieHouses1 = new Rerouter_1.Page('rfpageStoryBuildCookieHouses1', exports.pageStoryBuildCookieHouses1, exports.pageStoryBuildCookieHouses1[0]);
exports.rfpageKindomHasOnlySorageAndBuildIcon = new Rerouter_1.Page('rfpageKindomHasOnlySorageAndBuildIcon', [
    { x: 613, y: 331, r: 148, g: 40, b: 33 },
    { x: 601, y: 320, r: 66, g: 0, b: 16 },
    { x: 44, y: 331, r: 255, g: 224, b: 247 },
    { x: 248, y: 18, r: 231, g: 165, b: 182 },
    { x: 339, y: 20, r: 255, g: 215, b: 0 },
    { x: 454, y: 21, r: 0, g: 139, b: 255 },
]);
exports.rfpageKingdomHaveNoCookieIcon = new Rerouter_1.Page('rfpageKingdomHaveNoCookieIcon', [
    { x: 418, y: 319, r: 146, g: 80, b: 69 },
    { x: 468, y: 319, r: 136, g: 17, b: 17 },
    { x: 505, y: 322, r: 0, g: 0, b: 0 },
    { x: 582, y: 310, r: 56, g: 92, b: 134 },
    { x: 37, y: 312, r: 159, g: 6, b: 40 },
    { x: 253, y: 16, r: 241, g: 51, b: 92 },
], { x: 418, y: 319 });
exports.rfpageMailsCanClaimAll = new Rerouter_1.Page('rfpageMailsCanClaimAll', [
    { x: 590, y: 320, r: 113, g: 194, b: 11 },
    { x: 455, y: 323, r: 51, g: 57, b: 89 },
    { x: 57, y: 131, r: 234, g: 224, b: 201 },
    { x: 31, y: 136, r: 203, g: 194, b: 186 },
    { x: 594, y: 132, r: 113, g: 194, b: 13 },
    { x: 361, y: 32, r: 57, g: 66, b: 98 },
    { x: 295, y: 30, r: 173, g: 173, b: 173 },
    { x: 282, y: 30, r: 57, g: 66, b: 98 },
], { x: 548, y: 316 });
exports.rfpageMailsAllClaimed = new Rerouter_1.Page('rfpageMailsAllClaimed', [
    { x: 615, y: 19, r: 41, g: 89, b: 123 },
    { x: 373, y: 30, r: 57, g: 69, b: 107 },
    { x: 296, y: 30, r: 255, g: 255, b: 255 },
    { x: 606, y: 301, r: 49, g: 60, b: 90 },
    { x: 591, y: 322, r: 160, g: 160, b: 160 },
    { x: 486, y: 317, r: 180, g: 180, b: 180 },
    { x: 44, y: 327, r: 41, g: 44, b: 63 },
    { x: 30, y: 328, r: 49, g: 60, b: 90 },
    { x: 622, y: 322, r: 9, g: 14, b: 20 },
    { x: 18, y: 280, r: 54, g: 43, b: 26 },
], { x: 615, y: 19 });
// This player don't have seaside market
exports.rfpageUncollapsedAffairsNoHabor = new Rerouter_1.Page('rfpageUncollapsedAffairsNoHabor', [
    { x: 319, y: 56, r: 182, g: 153, b: 85 },
    { x: 423, y: 18, r: 1, g: 23, b: 45 },
    { x: 221, y: 17, r: 43, g: 9, b: 16 },
    { x: 227, y: 160, r: 134, g: 183, b: 249 },
    { x: 325, y: 154, r: 255, g: 109, b: 200 },
    { x: 411, y: 163, r: 255, g: 223, b: 243 },
    { x: 230, y: 236, r: 255, g: 255, b: 205 },
    { x: 326, y: 234, r: 255, g: 223, b: 142 },
    { x: 338, y: 234, r: 220, g: 47, b: 72 },
    { x: 413, y: 233, r: 247, g: 209, b: 85 },
]);
exports.rfpageUncollapsedAffairs = new Rerouter_1.Page('rfpageUncollapsedAffairs', [
    { x: 228, y: 163, r: 134, g: 183, b: 249 },
    { x: 320, y: 155, r: 255, g: 109, b: 200 },
    { x: 396, y: 139, r: 207, g: 12, b: 36 },
    { x: 410, y: 159, r: 254, g: 223, b: 241 },
    { x: 190, y: 234, r: 163, g: 218, b: 254 },
    { x: 287, y: 227, r: 244, g: 57, b: 159 },
    { x: 275, y: 233, r: 255, g: 249, b: 109 },
    { x: 364, y: 233, r: 255, g: 223, b: 142 },
    { x: 453, y: 234, r: 247, g: 209, b: 85 },
    { x: 41, y: 319, r: 26, g: 1, b: 5 },
    { x: 320, y: 57, r: 158, g: 133, b: 73 },
    { x: 427, y: 18, r: 1, g: 23, b: 45 },
]);
exports.rfpageInTrainStation = new Rerouter_1.Page('rfpageInTrainStation', [
    { x: 407, y: 19, r: 239, g: 196, b: 0 },
    { x: 334, y: 19, r: 103, g: 49, b: 28 },
    { x: 336, y: 27, r: 238, g: 238, b: 238 },
    { x: 315, y: 32, r: 87, g: 45, b: 29 },
    { x: 143, y: 14, r: 167, g: 49, b: 56 },
    { x: 27, y: 19, r: 122, g: 122, b: 122 },
    { x: 21, y: 25, r: 160, g: 43, b: 52 },
    { x: 4, y: 30, r: 87, g: 45, b: 29 },
    { x: 588, y: 326, r: 239, g: 208, b: 132 },
    { x: 606, y: 324, r: 223, g: 157, b: 71 },
    { x: 604, y: 315, r: 76, g: 88, b: 139 },
], { x: 617, y: 13 });
exports.rfpageTrainNotEnoughGoods = new Rerouter_1.Page('rfpageTrainNotEnoughGoods', [
    { x: 160, y: 51, r: 60, g: 70, b: 105 },
    { x: 486, y: 153, r: 52, g: 158, b: 228 },
    { x: 30, y: 35, r: 88, g: 24, b: 29 },
    { x: 10, y: 44, r: 66, g: 37, b: 25 },
    { x: 6, y: 72, r: 86, g: 96, b: 78 },
    { x: 234, y: 300, r: 12, g: 167, b: 223 },
], { x: 220, y: 300 });
exports.rfpageBattleVictoryButNeedTap = new Rerouter_1.Page('rfpageBattleVictoryButNeedTap', [
    { x: 230, y: 49, r: 49, g: 134, b: 214 },
    { x: 224, y: 58, r: 231, g: 182, b: 41 },
    { x: 254, y: 59, r: 123, g: 190, b: 255 },
    { x: 329, y: 27, r: 214, g: 44, b: 66 },
    { x: 371, y: 56, r: 198, g: 223, b: 222 },
    { x: 410, y: 68, r: 49, g: 138, b: 214 },
    { x: 26, y: 332, r: 11, g: 1, b: 1 },
    { x: 10, y: 338, r: 40, g: 30, b: 22 },
    { x: 48, y: 336, r: 14, g: 2, b: 2 },
    { x: 304, y: 324, r: 181, g: 181, b: 181 }, // for rerouter v2, "Tap to continue"
], { x: 230, y: 49 });
exports.rfpageBattleFinished = new Rerouter_1.Page('rfpageBattleFinished', [
    { x: 56, y: 331, r: 247, g: 89, b: 24 },
    { x: 584, y: 332, r: 8, g: 166, b: 222 },
    { x: 606, y: 24, r: 57, g: 169, b: 231 },
], { x: 605, y: 322 });
exports.rfpageArenaBattleDefeat = new Rerouter_1.Page('rfpageArenaBattleDefeat', [
    { x: 618, y: 24, r: 56, g: 165, b: 231 },
    { x: 611, y: 28, r: 255, g: 255, b: 255 },
    { x: 550, y: 70, r: 12, g: 167, b: 223 },
    { x: 563, y: 67, r: 231, g: 246, b: 252 },
    { x: 243, y: 34, r: 168, g: 191, b: 228 },
    { x: 249, y: 46, r: 150, g: 167, b: 167 },
    { x: 385, y: 58, r: 46, g: 46, b: 46 },
    { x: 360, y: 56, r: 198, g: 198, b: 198 },
    { x: 593, y: 276, r: 56, g: 47, b: 49 },
    { x: 610, y: 323, r: 12, g: 167, b: 223 },
    { x: 518, y: 314, r: 243, g: 90, b: 28 },
], { x: 600, y: 320 });
// export const rfpageBattling = new Page('rfpageBattling', [
//   { x: 284, y: 17, r: 145, g: 219, b: 143 },
//   { x: 351, y: 16, r: 77, g: 32, b: 12 },
// ]);
// Hide as: 983700920016 just logged a route conflict when in Task: "towerOfSweetChaos", names: ["rfpageBattleFinished","rfpageDefeatWithGotoKingdom"]
// export const rfpageDefeatWithGotoKingdom = new Page(
//   'rfpageDefeatWithGotoKingdom',
//   [
//     { x: 81, y: 314, r: 247, g: 89, b: 24 },
//     { x: 85, y: 175, r: 231, g: 231, b: 231 },
//     { x: 92, y: 232, r: 222, g: 146, b: 74 },
//     { x: 243, y: 58, r: 70, g: 93, b: 107 },
//     { x: 294, y: 58, r: 41, g: 44, b: 41 },
//   ],
//   { x: 81, y: 314 }
// );
// export const rfpageTropicalRaids = new Page(
//   'rfpageTropicalRaids',
//   [
//     { x: 612, y: 18, r: 56, g: 167, b: 231 },
//     { x: 521, y: 16, r: 0, g: 193, b: 255 },
//     { x: 425, y: 10, r: 136, g: 204, b: 170 },
//     { x: 431, y: 17, r: 246, g: 243, b: 226 },
//     { x: 433, y: 28, r: 139, g: 207, b: 173 },
//     { x: 341, y: 20, r: 199, g: 166, b: 93 },
//     { x: 53, y: 111, r: 62, g: 38, b: 21 },
//     { x: 41, y: 115, r: 214, g: 198, b: 190 },
//   ],
//   { x: 612, y: 18 }
// );
exports.pageBattleFinishedWithSunbeds = [
    { x: 491, y: 322, r: 12, g: 167, b: 223 },
    { x: 537, y: 324, r: 239, g: 74, b: 117 },
    { x: 553, y: 331, r: 60, g: 180, b: 6 },
    { x: 310, y: 26, r: 222, g: 48, b: 70 },
    { x: 330, y: 28, r: 204, g: 37, b: 60 },
];
exports.pageBattleFinishedWithNextLv = [
    { x: 589, y: 333, r: 121, g: 207, b: 12 },
    { x: 388, y: 334, r: 12, g: 167, b: 223 },
    { x: 490, y: 333, r: 12, g: 167, b: 223 },
    { x: 58, y: 334, r: 243, g: 90, b: 28 },
];
exports.pageWinBountyAndFinish = [
    { x: 607, y: 332, r: 12, g: 167, b: 223 },
    { x: 488, y: 320, r: 25, g: 2, b: 6 },
    { x: 417, y: 319, r: 25, g: 5, b: 6 },
    { x: 74, y: 332, r: 243, g: 90, b: 28 },
];
exports.pageBattleFinishedWithoutNextLv = [
    { x: 466, y: 324, r: 252, g: 252, b: 252 },
    { x: 464, y: 331, r: 8, g: 166, b: 222 },
    { x: 309, y: 25, r: 228, g: 52, b: 71 },
    { x: 320, y: 25, r: 255, g: 255, b: 132 },
    { x: 330, y: 25, r: 228, g: 52, b: 74 },
    { x: 401, y: 323, r: 26, g: 4, b: 12 },
];
exports.pageBattleFinishedWithMVPCookie = [
    { x: 328, y: 29, r: 201, g: 33, b: 52 },
    { x: 375, y: 53, r: 198, g: 223, b: 222 },
    { x: 413, y: 69, r: 49, g: 138, b: 214 },
    { x: 624, y: 334, r: 40, g: 30, b: 22 },
    { x: 544, y: 333, r: 17, g: 3, b: 3 },
];
exports.pageBattleFinishedWithMVPCookieWithExit = [
    { x: 609, y: 320, r: 8, g: 166, b: 222 },
    { x: 509, y: 334, r: 247, g: 89, b: 24 },
    { x: 374, y: 55, r: 203, g: 223, b: 222 },
    { x: 409, y: 67, r: 54, g: 139, b: 214 },
];
exports.pageBattleTowerOfSweetChaosVictory = [
    { x: 549, y: 322, r: 148, g: 219, b: 57 },
    { x: 222, y: 60, r: 231, g: 182, b: 41 },
    { x: 209, y: 59, r: 38, g: 121, b: 198 },
    { x: 256, y: 59, r: 123, g: 190, b: 255 },
];
// export const rfpageBattleFinishedWithSunbeds = new Page('rfpageBattleFinishedWithSunbeds', pageBattleFinishedWithSunbeds, {
//   x: 491,
//   y: 322,
// });
exports.rfpageFoundOctopus = new Rerouter_1.Page('rfpageFoundOctopus', [
    { x: 500, y: 330, r: 8, g: 166, b: 222 },
    { x: 360, y: 243, r: 229, g: 18, b: 50 },
], { x: 500, y: 330 });
exports.rfpageInKingdomConstructionShop = new Rerouter_1.Page('rfpageInKingdomConstructionShop', [
    { x: 624, y: 19, r: 33, g: 85, b: 123 },
    { x: 20, y: 12, r: 181, g: 8, b: 33 },
    { x: 11, y: 24, r: 99, g: 40, b: 41 },
    { x: 28, y: 27, r: 255, g: 223, b: 247 },
    { x: 330, y: 15, r: 178, g: 8, b: 33 },
    { x: 179, y: 340, r: 156, g: 101, b: 74 },
    { x: 194, y: 335, r: 255, g: 255, b: 255 },
], {
    x: 624,
    y: 19,
});
exports.rfpageKingdomDecorating = new Rerouter_1.Page('rfpageKingdomDecorating', [
    { x: 619, y: 12, r: 57, g: 169, b: 231 },
    { x: 42, y: 23, r: 99, g: 174, b: 49 },
    { x: 33, y: 25, r: 48, g: 100, b: 14 },
    { x: 33, y: 81, r: 255, g: 255, b: 255 },
    { x: 20, y: 222, r: 57, g: 69, b: 107 },
    { x: 33, y: 212, r: 255, g: 255, b: 255 },
], { x: 619, y: 12 });
exports.rfpageGuildDecorShop = new Rerouter_1.Page('rfpageGuildDecorShop', [
    { x: 30, y: 25, r: 162, g: 101, b: 59 },
    { x: 93, y: 22, r: 255, g: 255, b: 255 },
    { x: 5, y: 50, r: 170, g: 163, b: 194 },
    { x: 10, y: 68, r: 243, g: 245, b: 255 },
    { x: 71, y: 339, r: 135, g: 124, b: 160 },
    { x: 554, y: 338, r: 74, g: 63, b: 87 },
    { x: 553, y: 329, r: 78, g: 62, b: 98 },
], { x: 619, y: 12 });
exports.rfpageBattleFinishedWithNextLv = new Rerouter_1.Page('rfpageBattleFinishedWithNextLv', exports.pageBattleFinishedWithNextLv, {
    x: 589,
    y: 333,
});
// export const rfpageWinBountyAndFinish = new Page('rfpageWinBountyAndFinish', pageWinBountyAndFinish, pageWinBountyAndFinish[0]);
// export const rfpageBattleFinishedWithoutNextLv = new Page('rfpageBattleFinishedWithoutNextLv', pageBattleFinishedWithoutNextLv, { x: 466, y: 324 });
// export const rfpageBattleFinishedWithMVPCookie = new Page('rfpageBattleFinishedWithMVPCookie', pageBattleFinishedWithMVPCookie, { x: 333, y: 298 });
exports.rfpageBattleFinishedWithMVPCookieWithExit = new Rerouter_1.Page('rfpageBattleFinishedWithMVPCookieWithExit', exports.pageBattleFinishedWithMVPCookieWithExit, exports.pageBattleFinishedWithMVPCookieWithExit[0]);
exports.rfpageInTowerOfSweetChaos = new Rerouter_1.Page('rfpageInTowerOfSweetChaos', [
    { x: 611, y: 21, r: 57, g: 166, b: 231 },
    { x: 497, y: 17, r: 255, g: 207, b: 0 },
    { x: 407, y: 15, r: 0, g: 195, b: 255 },
    { x: 340, y: 18, r: 253, g: 63, b: 115 },
    { x: 19, y: 59, r: 255, g: 255, b: 255 },
], { x: 611, y: 21 });
exports.rfpageToSCConfirmTrayJump = new Rerouter_1.Page('rfpageToSCConfirmTrayJump', [
    { x: 44, y: 325, r: 109, g: 64, b: 122 },
    { x: 36, y: 318, r: 110, g: 23, b: 36 },
    { x: 32, y: 323, r: 110, g: 9, b: 25 },
    { x: 359, y: 313, r: 121, g: 207, b: 12 },
    { x: 386, y: 317, r: 231, g: 185, b: 190 },
    { x: 463, y: 11, r: 55, g: 166, b: 231 },
    { x: 463, y: 16, r: 255, g: 255, b: 255 },
    { x: 436, y: 25, r: 134, g: 35, b: 51 },
    { x: 349, y: 31, r: 255, g: 255, b: 255 },
    { x: 435, y: 216, r: 219, g: 163, b: 170 },
    { x: 318, y: 98, r: 255, g: 153, b: 170 },
], { x: 351, y: 314 });
exports.rfpageToSCTrayJumpNeedMoreKey = new Rerouter_1.Page('rfpageToSCTrayJumpNeedMoreKey', [
    { x: 443, y: 97, r: 55, g: 166, b: 231 },
    { x: 437, y: 97, r: 255, g: 255, b: 255 },
    { x: 344, y: 159, r: 52, g: 158, b: 228 },
    { x: 326, y: 178, r: 255, g: 41, b: 66 },
    { x: 322, y: 179, r: 160, g: 58, b: 254 },
    { x: 317, y: 187, r: 197, g: 42, b: 61 },
    { x: 352, y: 237, r: 191, g: 84, b: 241 },
    { x: 355, y: 311, r: 60, g: 103, b: 6 },
    { x: 33, y: 330, r: 34, g: 8, b: 8 },
]);
exports.rfpageReadyToBattleToSC = new Rerouter_1.Page('rfpageReadyToBattleToSC', [
    { x: 491, y: 330, r: 165, g: 4, b: 41 },
    { x: 518, y: 334, r: 123, g: 207, b: 8 },
    { x: 606, y: 321, r: 123, g: 207, b: 8 },
    { x: 338, y: 17, r: 175, g: 32, b: 66 },
    { x: 423, y: 127, r: 151, g: 47, b: 79 },
    { x: 426, y: 191, r: 89, g: 51, b: 56 },
], { x: 590, y: 327 });
exports.rfpageReadyToBattleToSCTimeJump = new Rerouter_1.Page('rfpageReadyToBattleToSCTimeJump', [
    { x: 614, y: 325, r: 123, g: 207, b: 8 },
    { x: 489, y: 325, r: 247, g: 219, b: 49 },
    { x: 624, y: 307, r: 57, g: 69, b: 107 },
    { x: 338, y: 12, r: 88, g: 0, b: 8 },
    { x: 432, y: 221, r: 82, g: 48, b: 57 },
    { x: 421, y: 116, r: 84, g: 27, b: 42 },
], { x: 590, y: 327 });
// export const rfpageBattleTowerOfSweetChaosVictory = new Page(
//   'rfpageBattleTowerOfSweetChaosVictory',
//   pageBattleTowerOfSweetChaosVictory,
//   pageBattleTowerOfSweetChaosVictory[0]
// );
exports.rfpageCanEquipTopping = new Rerouter_1.Page('rfpageCanEquipTopping', [
    { x: 400, y: 266, r: 121, g: 207, b: 12 },
    { x: 267, y: 160, r: 233, g: 182, b: 131 },
    { x: 294, y: 264, r: 12, g: 167, b: 223 },
    { x: 389, y: 162, r: 199, g: 181, b: 170 },
], { x: 400, y: 266 });
exports.rfpageCanEquipTopping2 = new Rerouter_1.Page('rfpageCanEquipTopping2', [
    { x: 397, y: 267, r: 123, g: 207, b: 8 },
    { x: 277, y: 163, r: 255, g: 255, b: 186 },
    { x: 265, y: 165, r: 198, g: 182, b: 173 },
    { x: 265, y: 165, r: 198, g: 182, b: 173 },
    { x: 252, y: 77, r: 57, g: 69, b: 107 },
], { x: 397, y: 267 });
// Mainly in guild alliance
exports.rfpageCanEquipTopping3 = new Rerouter_1.Page('rfpageCanEquipTopping3', [
    { x: 407, y: 275, r: 123, g: 207, b: 8 },
    { x: 299, y: 275, r: 8, g: 166, b: 222 },
    { x: 276, y: 154, r: 255, g: 251, b: 164 },
    { x: 276, y: 159, r: 232, g: 165, b: 96 },
    { x: 288, y: 156, r: 226, g: 226, b: 226 },
    { x: 262, y: 155, r: 198, g: 182, b: 173 },
], { x: 407, y: 275 });
exports.rfpageNotSelectTeamLeader = new Rerouter_1.Page('rfpageNotSelectTeamLeader', [
    { x: 318, y: 49, r: 255, g: 212, b: 0 },
    { x: 306, y: 64, r: 255, g: 209, b: 0 },
    { x: 329, y: 63, r: 239, g: 165, b: 4 },
    { x: 306, y: 85, r: 223, g: 145, b: 69 },
    { x: 327, y: 85, r: 223, g: 144, b: 70 },
    { x: 344, y: 86, r: 36, g: 46, b: 64 },
    { x: 370, y: 86, r: 60, g: 70, b: 105 },
    { x: 407, y: 234, r: 219, g: 207, b: 199 },
    { x: 403, y: 274, r: 121, g: 207, b: 12 },
    { x: 294, y: 273, r: 12, g: 167, b: 223 },
], { x: 369, y: 275 });
exports.rfpageAddMoreCookies = new Rerouter_1.Page('rfpageAddMoreCookies', [
    { x: 304, y: 253, r: 12, g: 167, b: 223 },
    { x: 168, y: 331, r: 60, g: 103, b: 6 },
    { x: 152, y: 180, r: 65, g: 65, b: 53 },
    { x: 131, y: 203, r: 65, g: 66, b: 52 },
    { x: 101, y: 235, r: 65, g: 68, b: 53 },
    { x: 176, y: 242, r: 97, g: 75, b: 33 },
], { x: 304, y: 253 });
exports.rfpageBattlePaused = new Rerouter_1.Page('rfpageBattlePaused', [
    { x: 307, y: 200, r: 253, g: 253, b: 251 },
    { x: 621, y: 26, r: 56, g: 165, b: 227 },
    { x: 613, y: 23, r: 35, g: 85, b: 114 },
    { x: 278, y: 160, r: 12, g: 165, b: 219 },
    { x: 288, y: 157, r: 241, g: 241, b: 239 },
    { x: 293, y: 201, r: 241, g: 90, b: 28 },
]);
exports.rfpageInGacha = new Rerouter_1.Page('rfpageInGacha', [
    { x: 619, y: 18, r: 255, g: 255, b: 255 },
    { x: 626, y: 18, r: 62, g: 164, b: 232 },
    { x: 521, y: 14, r: 0, g: 192, b: 255 },
    { x: 407, y: 19, r: 255, g: 209, b: 0 },
    { x: 21, y: 14, r: 117, g: 54, b: 40 },
    { x: 37, y: 24, r: 74, g: 58, b: 58 },
    { x: 59, y: 266, r: 17, g: 21, b: 29 },
    { x: 58, y: 218, r: 17, g: 21, b: 29 },
], { x: 619, y: 18 });
exports.rfpageInTowerOfRecords = new Rerouter_1.Page('rfpageInTowerOfRecords', [
    { x: 618, y: 23, r: 255, g: 255, b: 255 },
    { x: 106, y: 23, r: 39, g: 36, b: 32 },
    { x: 92, y: 20, r: 114, g: 112, b: 110 },
    { x: 16, y: 14, r: 179, g: 179, b: 179 },
    { x: 4, y: 18, r: 35, g: 34, b: 33 },
]);
exports.rfpageInCandyHouse = new Rerouter_1.Page('rfpageInCandyHouse', [
    { x: 268, y: 240, r: 127, g: 241, b: 205 },
    { x: 316, y: 236, r: 212, g: 212, b: 212 },
    { x: 316, y: 239, r: 58, g: 58, b: 58 },
]);
exports.rfpageNotEnoughGnomeBuilders = new Rerouter_1.Page('rfpageNotEnoughGnomeBuilders', [
    { x: 381, y: 319, r: 190, g: 1, b: 36 },
    { x: 381, y: 325, r: 254, g: 254, b: 253 },
    { x: 386, y: 327, r: 255, g: 221, b: 240 },
    { x: 465, y: 79, r: 58, g: 165, b: 231 },
]);
//rgb(166,104,65)
exports.rfpageInProduction = new Rerouter_1.Page('rfpageInProduction', [
    { x: 17, y: 44, r: 165, g: 105, b: 66 },
    { x: 84, y: 42, r: 178, g: 103, b: 66 },
    { x: 26, y: 30, r: 126, g: 73, b: 41 },
]);
exports.rfpageInMagicLab = new Rerouter_1.Page('rfpageInMagicLab', [
    { x: 409, y: 16, r: 255, g: 203, b: 0 },
    { x: 527, y: 19, r: 0, g: 134, b: 255 },
    { x: 18, y: 46, r: 123, g: 89, b: 140 },
    { x: 81, y: 47, r: 123, g: 89, b: 140 },
    { x: 27, y: 30, r: 115, g: 85, b: 140 },
]);
exports.rfpageNotEnoughStockInProduction = new Rerouter_1.Page('rfpageNotEnoughStockInProduction', [
    { x: 428, y: 98, r: 56, g: 167, b: 231 },
    { x: 345, y: 104, r: 60, g: 70, b: 105 },
    { x: 370, y: 176, r: 243, g: 233, b: 223 },
    { x: 349, y: 247, r: 121, g: 207, b: 12 },
    { x: 73, y: 31, r: 59, g: 33, b: 21 },
    { x: 23, y: 48, r: 83, g: 52, b: 31 },
]
// rfpageNotEnoughStockInProduction cannot simply tap off, as need to go next production building
// { x: 428, y: 98 }
);
exports.rfpageCancelProduction = new Rerouter_1.Page('rfpageCancelProduction', [
    { x: 443, y: 97, r: 57, g: 166, b: 231 },
    { x: 436, y: 97, r: 255, g: 255, b: 255 },
    { x: 390, y: 105, r: 57, g: 69, b: 107 },
    { x: 408, y: 241, r: 8, g: 166, b: 222 },
    { x: 296, y: 243, r: 8, g: 166, b: 222 },
    { x: 20, y: 45, r: 166, g: 104, b: 63 },
    { x: 22, y: 108, r: 166, g: 104, b: 63 },
    { x: 73, y: 34, r: 124, g: 69, b: 44 },
], { x: 443, y: 97 });
// Items like "Homemade Cheese" has too long name causing timer change to new line
exports.rfpageCancelProductionLongItemName = new Rerouter_1.Page('rfpageCancelProductionLongItemName', [
    { x: 74, y: 31, r: 64, g: 36, b: 23 },
    { x: 207, y: 50, r: 60, g: 70, b: 105 },
    { x: 200, y: 159, r: 5, g: 133, b: 255 },
    { x: 387, y: 204, r: 12, g: 167, b: 223 },
    { x: 204, y: 188, r: 241, g: 231, b: 224 },
    { x: 202, y: 199, r: 44, g: 78, b: 107 },
    { x: 202, y: 244, r: 34, g: 38, b: 71 },
    { x: 453, y: 32, r: 52, g: 159, b: 228 },
], { x: 453, y: 32 });
exports.rfpageCancelMultipleProduction = new Rerouter_1.Page('rfpageCancelMultipleProduction', [
    { x: 442, y: 94, r: 34, g: 85, b: 115 },
    { x: 404, y: 244, r: 8, g: 166, b: 222 },
    { x: 303, y: 246, r: 8, g: 166, b: 222 },
    { x: 430, y: 238, r: 222, g: 207, b: 198 },
    { x: 20, y: 45, r: 166, g: 104, b: 63 },
    { x: 22, y: 108, r: 166, g: 104, b: 63 },
    { x: 73, y: 34, r: 124, g: 69, b: 44 },
], { x: 442, y: 94 });
exports.rfpageNotEnoughPurityCrystals = new Rerouter_1.Page('rfpageNotEnoughPurityCrystals', [
    { x: 435, y: 96, r: 255, g: 255, b: 255 },
    { x: 344, y: 104, r: 60, g: 70, b: 105 },
    { x: 343, y: 160, r: 52, g: 158, b: 228 },
    { x: 325, y: 174, r: 255, g: 254, b: 255 },
    { x: 311, y: 184, r: 254, g: 254, b: 255 },
    { x: 300, y: 177, r: 207, g: 193, b: 182 },
    { x: 342, y: 254, r: 191, g: 84, b: 241 },
    { x: 402, y: 256, r: 219, g: 207, b: 199 },
    { x: 71, y: 35, r: 50, g: 36, b: 66 },
]);
exports.rfpageInCookieActivityDashboard = new Rerouter_1.Page('rfpageInCookieActivityDashboard', [
    { x: 247, y: 331, r: 56, g: 74, b: 107 },
    { x: 28, y: 18, r: 229, g: 158, b: 76 },
    { x: 558, y: 339, r: 239, g: 190, b: 41 },
], { x: 400, y: 337 });
exports.rfpageInProductionDashboard = new Rerouter_1.Page('rfpageInProductionDashboard', [
    { x: 408, y: 330, r: 56, g: 74, b: 107 },
    { x: 540, y: 341, r: 123, g: 207, b: 8 },
    { x: 27, y: 16, r: 206, g: 32, b: 49 },
], { x: 14, y: 48 });
// In kingdom villiage, stock is full could be 1) has expand and blue cross on upper right or 2) only OK, no cross
exports.rfpageStockIsFull = new Rerouter_1.Page('rfpageStockIsFull', [
    { x: 374, y: 103, r: 60, g: 70, b: 105 },
    { x: 320, y: 83, r: 107, g: 48, b: 49 },
    { x: 320, y: 93, r: 132, g: 16, b: 8 },
    { x: 321, y: 108, r: 241, g: 229, b: 216 },
    { x: 344, y: 244, r: 121, g: 207, b: 12 },
    { x: 344, y: 210, r: 243, g: 233, b: 223 },
]);
// Case not exist for now
exports.rfpageBountiesAt2ndSlot = new Rerouter_1.Page('rfpageBountiesAt2ndSlot', [
    { x: 242, y: 68, r: 255, g: 255, b: 255 },
    { x: 347, y: 102, r: 198, g: 65, b: 0 },
    { x: 328, y: 112, r: 206, g: 150, b: 66 },
    { x: 294, y: 130, r: 222, g: 147, b: 96 },
    { x: 231, y: 138, r: 253, g: 234, b: 74 },
]);
// Most general case, 1. world exploration/PVP 2. super mayhem
exports.rfpageBountiesAt3rdSlot = new Rerouter_1.Page('rfpageBountiesAt3rdSlot', [
    { x: 595, y: 86, r: 148, g: 73, b: 33 },
    { x: 588, y: 152, r: 173, g: 122, b: 66 },
    { x: 585, y: 177, r: 24, g: 12, b: 8 },
]);
// Perhaps with Cooklie Odysses and super mayhem not finished
// export const pageBountiesAt4rdSlot = new Page('pageBountiesAt4rdSlot', [
//   // TODO
// ]);
exports.rfpageSelectAdvanture = new Rerouter_1.Page('rfpageSelectAdvanture', [
    { x: 620, y: 11, r: 57, g: 166, b: 231 },
    { x: 585, y: 21, r: 222, g: 174, b: 74 },
    { x: 514, y: 16, r: 239, g: 174, b: 99 },
    { x: 425, y: 21, r: 0, g: 138, b: 255 },
    { x: 26, y: 28, r: 159, g: 85, b: 28 },
    { x: 25, y: 12, r: 255, g: 255, b: 255 },
    { x: 17, y: 26, r: 80, g: 115, b: 187 },
    { x: 160, y: 311, r: 29, g: 36, b: 48 },
]);
exports.rfpageDragonTotalDamage = new Rerouter_1.Page('rfpageDragonTotalDamage', [
    { x: 427, y: 243, r: 231, g: 215, b: 222 },
    { x: 410, y: 247, r: 156, g: 0, b: 49 },
    { x: 260, y: 268, r: 255, g: 255, b: 255 },
    { x: 555, y: 311, r: 89, g: 22, b: 45 },
], { x: 427, y: 243 });
exports.rfpageRedValvetDragonWon = new Rerouter_1.Page('rfpageRedValvetDragonWon', [
    { x: 289, y: 238, r: 239, g: 28, b: 57 },
    { x: 358, y: 233, r: 222, g: 16, b: 41 },
    { x: 426, y: 236, r: 231, g: 216, b: 223 },
], { x: 289, y: 238 });
exports.rfpageDragonHasExtraTime = new Rerouter_1.Page('rfpageDragonHasExtraTime', [
    { x: 405, y: 281, r: 121, g: 207, b: 12 },
    { x: 304, y: 280, r: 12, g: 167, b: 223 },
    { x: 608, y: 333, r: 60, g: 103, b: 6 },
    { x: 516, y: 330, r: 6, g: 83, b: 111 },
    { x: 128, y: 333, r: 6, g: 83, b: 111 },
], { x: 405, y: 281 });
exports.pageToSCTeamsNotMeetRequirement = [
    { x: 343, y: 244, r: 123, g: 207, b: 8 },
    { x: 337, y: 22, r: 77, g: 15, b: 25 },
    { x: 287, y: 21, r: 21, g: 3, b: 5 },
    { x: 496, y: 318, r: 33, g: 6, b: 10 },
];
exports.rfpageHallOfAncientHeros = new Rerouter_1.Page('rfpageHallOfAncientHeros', [
    { x: 611, y: 18, r: 255, g: 255, b: 255 },
    { x: 524, y: 14, r: 255, g: 255, b: 243 },
    { x: 522, y: 27, r: 238, g: 132, b: 228 },
    { x: 514, y: 6, r: 107, g: 139, b: 108 },
    { x: 478, y: 22, r: 239, g: 106, b: 213 },
    { x: 314, y: 45, r: 170, g: 205, b: 250 },
    { x: 167, y: 38, r: 240, g: 240, b: 220 },
    { x: 6, y: 124, r: 239, g: 70, b: 89 },
    { x: 7, y: 17, r: 255, g: 255, b: 255 },
    { x: 43, y: 19, r: 80, g: 77, b: 77 },
    { x: 66, y: 19, r: 201, g: 200, b: 200 },
], { x: 611, y: 18 });
exports.rfpageCookieKingdomIsNotResponding = new Rerouter_1.Page('rfpageCookieKingdomIsNotResponding', [
    { x: 399, y: 209, r: 238, g: 238, b: 238 },
    { x: 182, y: 167, r: 238, g: 238, b: 238 },
    { x: 359, y: 184, r: 238, g: 238, b: 238 },
    { x: 281, y: 211, r: 238, g: 238, b: 238 },
    { x: 280, y: 186, r: 162, g: 162, b: 162 },
    { x: 214, y: 157, r: 227, g: 227, b: 227 },
    { x: 242, y: 157, r: 31, g: 31, b: 31 },
    { x: 393, y: 217, r: 142, g: 202, b: 197 },
], { x: 399, y: 209 });
exports.rfpageCookieKingdomIsNotResponding2 = new Rerouter_1.Page('rfpageCookieKingdomIsNotResponding2', [
    { x: 478, y: 221, r: 238, g: 238, b: 238 },
    { x: 252, y: 190, r: 238, g: 238, b: 238 },
    { x: 146, y: 189, r: 238, g: 238, b: 238 },
    { x: 155, y: 157, r: 238, g: 238, b: 238 },
    { x: 220, y: 156, r: 87, g: 87, b: 87 },
    { x: 325, y: 160, r: 100, g: 100, b: 100 },
], { x: 478, y: 221 });
exports.rfpageCookieKingdomHasStopped = new Rerouter_1.Page('rfpageCookieKingdomHasStopped', [
    { x: 484, y: 205, r: 0, g: 150, b: 136 },
    { x: 478, y: 205, r: 238, g: 238, b: 238 },
    { x: 440, y: 172, r: 238, g: 238, b: 238 },
    { x: 402, y: 169, r: 57, g: 57, b: 57 },
], { x: 484, y: 205 });
exports.rfpageInCookieHead = new Rerouter_1.Page('rfpageInCookieHead', [
    { x: 610, y: 21, r: 57, g: 166, b: 231 },
    { x: 300, y: 93, r: 235, g: 235, b: 235 },
    { x: 38, y: 52, r: 130, g: 131, b: 132 },
    { x: 12, y: 20, r: 141, g: 150, b: 167 },
    { x: 12, y: 27, r: 21, g: 32, b: 47 },
]);
// export const rfpagePurchaseDiamond = new Page('rfpagePurchaseDiamond', [
//   { x: 435, y: 105, r: 56, g: 167, b: 231 },
//   { x: 310, y: 87, r: 21, g: 206, b: 232 },
//   { x: 317, y: 109, r: 154, g: 83, b: 55 },
//   { x: 344, y: 174, r: 121, g: 207, b: 12 },
//   { x: 288, y: 114, r: 112, g: 228, b: 233 },
// ]);
exports.rfpageGooglePlaystoreHasStopped = new Rerouter_1.Page('rfpageGooglePlaystoreHasStopped', [
    { x: 485, y: 207, r: 10, g: 153, b: 140 },
    { x: 147, y: 170, r: 238, g: 238, b: 238 },
    { x: 263, y: 172, r: 238, g: 238, b: 238 },
    { x: 327, y: 172, r: 238, g: 238, b: 238 },
    { x: 418, y: 171, r: 238, g: 238, b: 238 },
], { x: 485, y: 207 });
// This window can change language
// Marked as confused with rfpageNotEnoughItemToBuyThis and we have rfpageDownloadDataAndVoiceOverUnchecked
// export const pageNewDataPackAvailable = [
//   { x: 358, y: 265, r: 123, g: 205, b: 8 },
//   { x: 373, y: 219, r: 8, g: 165, b: 219 },
//   { x: 210, y: 190, r: 255, g: 255, b: 255 },
//   { x: 258, y: 83, r: 57, g: 69, b: 106 },
//   { x: 246, y: 125, r: 153, g: 147, b: 139 },
// ];
// export const rfpageNewDataPackAvailable = new Page('rfpageNewDataPackAvailable', pageNewDataPackAvailable, pageNewDataPackAvailable[0]);
// Marked as confused with rfpageNotEnoughItemToBuyThis
// export const pageNewDataPackDownloadFailed = [
//   { x: 350, y: 245, r: 123, g: 205, b: 8 },
//   { x: 342, y: 107, r: 57, g: 69, b: 106 },
//   { x: 264, y: 245, r: 221, g: 205, b: 195 },
// ];
// export const rfpageNewDataPackDownloadFailed = new Page('rfpageNewDataPackDownloadFailed', pageNewDataPackDownloadFailed, pageNewDataPackDownloadFailed[0]);
// If already choose language in pageNewDataPackAvailable (don't use as looks like purchase stuff with diamond, read the text instead)
// export const pageNewDataPackAvaiableNoLanguage = [
//   { x: 366, y: 252, r: 123, g: 205, b: 8 },
//   { x: 398, y: 254, r: 221, g: 205, b: 195 },
//   { x: 263, y: 254, r: 147, g: 217, b: 57 },
//   { x: 246, y: 254, r: 221, g: 205, b: 195 },
//   { x: 341, y: 96, r: 255, g: 255, b: 255 },
//   { x: 284, y: 99, r: 253, g: 253, b: 251 },
// ];
// export const rfpageNewDataPackAvaiableNoLanguage = new Page(
//   'rfpageNewDataPackAvaiableNoLanguage',
//   pageNewDataPackAvaiableNoLanguage,
//   pageNewDataPackAvaiableNoLanguage[0]
// );
exports.rfpageDownloadNewDataPakIsAvailable = new Rerouter_1.Page('rfpageDownloadNewDataPakIsAvailable', [
    { x: 368, y: 254, r: 123, g: 207, b: 8 },
    { x: 441, y: 99, r: 57, g: 69, b: 107 },
    { x: 346, y: 251, r: 255, g: 255, b: 255 },
], { x: 368, y: 254 });
// Replaced by rfpageGeneralMessageWindow check
// export const rfpageNotifyQuitWindow = new Page(
//   'rfpageNotifyQuitWindow',
//   [
//     { x: 301, y: 250, r: 8, g: 166, b: 222 },
//     { x: 374, y: 98, r: 57, g: 69, b: 107 },
//     { x: 404, y: 250, r: 123, g: 207, b: 8 },
//     { x: 425, y: 250, r: 222, g: 207, b: 198 },
//   ],
//   { x: 301, y: 250 }
// );
// Seems outdated, and confused with timejump in tosc
// export const rfpageKingdomPassAds = new Page(
//   'rfpageKingdomPassAds',
//   [
//     { x: 349, y: 286, r: 123, g: 207, b: 8 },
//     { x: 250, y: 15, r: 42, g: 8, b: 15 },
//     { x: 323, y: 18, r: 45, g: 33, b: 1 },
//     { x: 427, y: 19, r: 0, g: 23, b: 45 },
//   ],
//   { x: 349, y: 286 }
// );
exports.rfpageInKingdomPass = new Rerouter_1.Page('rfpageInKingdomPass', [
    { x: 618, y: 341, r: 82, g: 211, b: 0 },
    { x: 193, y: 19, r: 255, g: 223, b: 0 },
    { x: 393, y: 16, r: 0, g: 195, b: 255 },
    { x: 484, y: 16, r: 255, g: 255, b: 255 },
], { x: 618, y: 341 });
exports.rfpageKingdomPassItemCollected = new Rerouter_1.Page('rfpageKingdomPassItemCollected', [
    { x: 616, y: 343, r: 149, g: 149, b: 149 },
    { x: 193, y: 19, r: 255, g: 223, b: 0 },
    { x: 393, y: 16, r: 0, g: 195, b: 255 },
    { x: 484, y: 16, r: 255, g: 255, b: 255 },
], { x: 616, y: 17 });
exports.rfpageWorldChat = new Rerouter_1.Page('rfpageWorldChat', [
    { x: 22, y: 22, r: 41, g: 97, b: 148 },
    { x: 31, y: 10, r: 135, g: 152, b: 192 },
    { x: 137, y: 12, r: 41, g: 69, b: 115 },
    { x: 58, y: 336, r: 255, g: 255, b: 255 },
    { x: 18, y: 343, r: 52, g: 64, b: 89 },
], { x: 22, y: 81 });
exports.rfpageInFriendsList = new Rerouter_1.Page('rfpageInFriendsList', [
    { x: 23, y: 90, r: 255, g: 227, b: 0 },
    { x: 14, y: 70, r: 135, g: 152, b: 192 },
    { x: 13, y: 47, r: 52, g: 64, b: 89 },
    { x: 187, y: 351, r: 57, g: 69, b: 107 },
    { x: 234, y: 350, r: 57, g: 69, b: 107 },
], { x: 390, y: 335 });
exports.rfpageInShop = new Rerouter_1.Page('rfpageInShop', [
    { x: 521, y: 18, r: 8, g: 125, b: 255 },
    { x: 405, y: 20, r: 255, g: 224, b: 0 },
    { x: 61, y: 18, r: 19, g: 19, b: 26 },
    { x: 9, y: 18, r: 19, g: 19, b: 26 },
    { x: 13, y: 19, r: 91, g: 91, b: 95 },
    { x: 41, y: 24, r: 147, g: 147, b: 149 },
]);
exports.rfpageGameSettings = new Rerouter_1.Page('rfpageGameSettings', [
    { x: 494, y: 267, r: 255, g: 255, b: 255 },
    { x: 494, y: 269, r: 35, g: 48, b: 63 },
    { x: 581, y: 18, r: 0, g: 0, b: 0 },
    { x: 549, y: 16, r: 244, g: 233, b: 211 },
    { x: 515, y: 21, r: 233, g: 163, b: 90 },
    { x: 610, y: 11, r: 163, g: 198, b: 235 },
    { x: 495, y: 131, r: 40, g: 55, b: 73 },
    { x: 494, y: 142, r: 255, g: 255, b: 255 },
], { x: 612, y: 19 });
// Introduced in Aug 9 2023 update
exports.rfpageTrialGroundIntro = new Rerouter_1.Page('rfpageTrialGroundIntro', [
    { x: 613, y: 22, r: 2, g: 6, b: 8 },
    { x: 549, y: 159, r: 121, g: 207, b: 12 },
    { x: 549, y: 249, r: 121, g: 207, b: 12 },
    { x: 18, y: 337, r: 16, g: 48, b: 59 },
    { x: 53, y: 323, r: 67, g: 65, b: 63 },
    { x: 88, y: 331, r: 3, g: 44, b: 59 },
    { x: 599, y: 288, r: 19, g: 33, b: 62 },
], { x: 615, y: 22 });
// Introduced in Sep 26 2023 update
exports.rfpageErrorBusterIntro = new Rerouter_1.Page('rfpageErrorBusterIntro', [
    { x: 610, y: 22, r: 4, g: 11, b: 15 },
    { x: 521, y: 20, r: 1, g: 35, b: 67 },
    { x: 341, y: 21, r: 66, g: 56, b: 10 },
    { x: 327, y: 19, r: 63, g: 37, b: 10 },
    { x: 247, y: 24, r: 24, g: 64, b: 43 },
    { x: 351, y: 233, r: 255, g: 243, b: 238 },
    { x: 504, y: 336, r: 32, g: 54, b: 4 },
    { x: 71, y: 50, r: 52, g: 37, b: 8 },
    { x: 31, y: 325, r: 66, g: 62, b: 50 },
], { x: 610, y: 22 });
var rfpageFirstItemEnabled = new Rerouter_1.Page('rfpageFirstItemEnabled', [{ x: 596, y: 120, r: 121, g: 207, b: 12 }], { x: 596, y: 120 });
var rfpageSecondItemEnabled = new Rerouter_1.Page('rfpageSecondItemEnabled', [{ x: 596, y: 228, r: 121, g: 207, b: 12 }], { x: 596, y: 228 });
var rfpageThirdItemEnabled = new Rerouter_1.Page('rfpageThirdItemEnabled', [{ x: 596, y: 333, r: 121, g: 207, b: 12 }], { x: 596, y: 333 });
var rfpageFourthItemEnabled = new Rerouter_1.Page('rfpageFourthItemEnabled', [{ x: 599, y: 128, r: 121, g: 207, b: 12 }], { x: 599, y: 128 });
var rfpageFifthItemEnabled = new Rerouter_1.Page('rfpageFifthItemEnabled', [{ x: 596, y: 232, r: 121, g: 207, b: 12 }], { x: 596, y: 232 });
var rfpageSixItemEnabled = new Rerouter_1.Page('rfpageSixItemEnabled', [{ x: 597, y: 339, r: 121, g: 207, b: 12 }], { x: 597, y: 339 });
exports.productMapping = {
    1: rfpageFirstItemEnabled,
    2: rfpageSecondItemEnabled,
    3: rfpageThirdItemEnabled,
    4: rfpageThirdItemEnabled,
    5: rfpageFourthItemEnabled,
    6: rfpageFifthItemEnabled,
    7: rfpageSixItemEnabled,
};
exports.magicLabPointMapping = {
    1: { x: 418, y: 112 },
    2: { x: 471, y: 113 },
    3: { x: 532, y: 114 },
    4: { x: 584, y: 114 },
    5: { x: 418, y: 173 },
    6: { x: 471, y: 172 },
    7: { x: 532, y: 173 },
    8: { x: 584, y: 173 }, // 0 is 8
};
exports.groupPageMaterialProdMenu = new Rerouter_1.GroupPage('groupPageMaterialProdMenu', [
    rfpageWoodFarm,
    rfpageBeanFarm,
    rfpageSugarFarm,
    rfpagePowderFarm,
    rfpageBarryFarm,
    rfpageMilkFarm,
    rfpageCottomFarm,
]);
var rfpageToolShop = new Rerouter_1.Page('rfpageToolShop', [
    { x: 420, y: 191, r: 178, g: 16, b: 13 },
    { x: 414, y: 75, r: 135, g: 143, b: 170 },
    { x: 413, y: 84, r: 183, g: 190, b: 211 },
]);
var rfpageIsJammery = new Rerouter_1.Page('rfpageIsJammery', [
    { x: 490, y: 83, r: 0, g: 178, b: 206 },
    { x: 440, y: 89, r: 19, g: 114, b: 129 },
    { x: 430, y: 88, r: 247, g: 243, b: 222 },
]);
var rfpageIsCarpentryShop = new Rerouter_1.Page('rfpageIsCarpentryShop', [
    { x: 494, y: 83, r: 140, g: 86, b: 57 },
    { x: 517, y: 87, r: 165, g: 105, b: 66 },
    { x: 433, y: 73, r: 88, g: 46, b: 30 },
    { x: 420, y: 81, r: 214, g: 146, b: 115 },
    { x: 424, y: 64, r: 84, g: 3, b: 3 },
]);
var rfpageIsJampieDiner = new Rerouter_1.Page('rfpageIsJampieDiner', [
    { x: 535, y: 84, r: 210, g: 36, b: 57 },
    { x: 493, y: 83, r: 0, g: 224, b: 231 },
    { x: 414, y: 81, r: 217, g: 48, b: 77 },
    { x: 432, y: 73, r: 220, g: 149, b: 99 },
]);
var rfpageIsBakery = new Rerouter_1.Page('rfpageIsBakery', [
    { x: 496, y: 82, r: 184, g: 174, b: 155 },
    { x: 539, y: 86, r: 176, g: 83, b: 11 },
    { x: 439, y: 75, r: 173, g: 82, b: 24 },
    { x: 423, y: 70, r: 198, g: 116, b: 63 },
    { x: 424, y: 99, r: 255, g: 219, b: 123 },
]);
var rfpageIsFlowerShop = new Rerouter_1.Page('rfpageIsFlowerShop', [
    { x: 418, y: 80, r: 255, g: 89, b: 165 },
    { x: 413, y: 95, r: 8, g: 150, b: 8 },
    { x: 431, y: 86, r: 214, g: 0, b: 82 },
    { x: 490, y: 86, r: 197, g: 39, b: 41 },
    { x: 538, y: 82, r: 165, g: 85, b: 41 },
]);
exports.groupPageGoodsProdMenu = new Rerouter_1.GroupPage('groupPageGoodsProdMenu', [
    rfpageToolShop,
    rfpageIsJammery,
    rfpageIsCarpentryShop,
    rfpageIsJampieDiner,
    rfpageIsBakery,
    rfpageIsFlowerShop,
]);


/***/ }),

/***/ "./src/scriptConfig.ts":
/*!*****************************!*\
  !*** ./src/scriptConfig.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.defaultWishes = exports.config = exports.defaultConfig = void 0;
var types_1 = __webpack_require__(/*! ./types */ "./src/types.ts");
exports.defaultConfig = {
    sleep: 240,
    sleepAnimate: 800,
    sleepWhenDoubleLoginInMinutes: 30,
    // Sample TEST long ID
    // account: 'moonminv35moonminv35moonminv35moonminv35moonminv35moonminv35moonminv35@gmail.com',
    account: 'default_xrobotmon_account@gmail.com',
    password: '',
    materialsTarget: 2000,
    goodsTarget: 320,
    productSafetyStock: 10,
    skipMagicLabProduction: false,
    magicLabProductIndex: 1,
    autoCollectMailIntervalInMins: 120,
    autoCollectFountainIntervalInMins: 40,
    autoCollectTrainIntervalInMins: 20,
    autoSendHotAirBallonIntervalInMins: 40,
    isHotAirBallonGotoEp4: false,
    ballonKeepCurrentDestination: false,
    autoCollectDailyReward: true,
    autoFulfillWishesIntervalInMins: 10,
    alwaysFulfillWishes: false,
    wishingTreeSafetyStock: 10,
    wishingTreeMaxFillingMins: 8,
    wishingTreeRefreshGoldenWishes: true,
    wishingTreeForceFulfillGoldWishes: false,
    autoHandleEventWishingTreeAmounts: 0,
    autoPvPIntervalInMins: 0,
    autoPvPTargetScoreLimit: 1000000,
    autoPvPPurchaseAncientCookie: true,
    worksBeforeCollectCandy: 40,
    autoUpgradeCandyHouse: true,
    helpTapGreenCheck: true,
    autoCollectTropicalIslandsIntervalInMins: 40,
    autoGuildAllianceBattle: true,
    autoAllianceUseTimeJumpers: false,
    autoGuildClaimNewLand: false,
    autoGuildBattleDragon: false,
    autoHandleBountiesIntervalInMins: 180,
    autoBountiesCheckBluePowder: true,
    autoLabResearch: true,
    autoResearchKingdom: true,
    autoResearchCookies: true,
    autoLabUseAuroraMaterial: true,
    autoHandleTradeHabor: true,
    autoBalanceAuroraStocks: true,
    autoShopInSeasideMarket: true,
    autoBuyCaramelStuff: true,
    autoBuyRadiantShardsInHabor: true,
    autoBuySeaFairy: true,
    autoBuyEpicSoulEssence: true,
    autoBuyLegendSoulEssence: true,
    autoBuyGuildRelic: true,
    axeStockTo400: false,
    autoSuperMayhemIntervalInMins: 0,
    autoSuperMayhemTargetScoreLimit: 1000000,
    autoHandleTowerOfSweetChaos: true,
    autoHandleCollectCookieOdysseyMission: true,
    buildTowardsTheLeft: true,
    isTestAccount: false,
    isNewKingdomCheckRequired: true,
    isSendPlayingRequired: true,
    deviceId: 'testing',
    jobFailedCount: 4,
    jobFailedBeforeGetCandy: 3,
    productionBuildingChecked: 0,
    productionDashboardEnabled: true,
    currentProductionBuilding: 'NONE',
    lastNetworkIssueOccurTime: 0,
    networkIssueCount: 0,
    networkIssueCountThreasHold: 20,
    lastGotoProduction: 0,
    lastCollectCandyTime: 0,
    lastCollectMail: 0,
    lastCollectFountain: 0,
    lastCollectTrain: 0,
    lastSendHotAirBallon: 0,
    lastCollectDailyReward: 0,
    lastFulfillWishes: 0,
    lastAutoHandleEventWishingTree: 0,
    lastAutoPvP: 0,
    lastAutoSuperMayhem: 0,
    battleMaxLoops: 3,
    lastCollectTropicalIsland: 0,
    lastAutoGuildBattle: 0,
    lastAutoHandleBounties: 0,
    lastLabResearch: 0,
    lastHandleTradeHabor: 0,
    lastAutoHandleTowerOfSweetChaos: 0,
    lastAutoHandleCollectCookieOdysseyMission: 0,
    lastTryResolveGreenChecks: 0,
    lastFreezeCheckScreenShot: null,
    lastFreezeCheckScreenShotTime: Date.now(),
    run: true,
    isXR: true,
    findProductionTimes: 4,
    wishRefreshThreashold: 5,
    searchHouseCount: 0,
    keepProduceUntilWoodEnough: true,
    isMaintainanceMode: false,
    loginRetryMaxTimes: 2,
    loginRetryCount: 0,
    tryRestartGameCount: 0,
    tryRestartGameLimit: 5,
    needToSendLoginSuccess: true,
    needToSendPlaying: true,
    licenseId: '',
    userId: '',
    stock_axe: 60,
    stock_pickaxe: 60,
    stock_saw: 60,
    stock_shovel: 60,
    stock_stack: 60,
    stock_tongs: 60,
    stock_hammer: 60,
    stock_jellybeanJam: 60,
    stock_jellyJam: 60,
    stock_toffeeJam: 60,
    stock_pomegranateJam: 60,
    stock_sparkleberryJam: 60,
    stock_pineconeBirdyToy: 60,
    stock_acornLamp: 60,
    stock_cuckooClock: 60,
    stock_dreamcatcher: 60,
    stock_heartyRye: 60,
    stock_tartJampie: 60,
    stock_ginkgoFocaccia: 60,
    stock_glazedDonuts: 60,
    stock_flyffyCastella: 60,
    stock_goldenCroissant: 60,
    stock_hotJellyStew: 60,
    stock_bearJellyBurger: 60,
    stock_candyPasta: 60,
    stock_fluffyOmurice: 60,
    stock_jellyDeluxePizza: 60,
    stock_fancyJellybeanMeal: 60,
    stock_biscuitPlanter: 60,
    stock_shinyGlass: 60,
    stock_gleamyBead: 60,
    stock_colorfulBowl: 60,
    stock_candyFlower: 60,
    stock_happyPlanter: 60,
    stock_candyBouquet: 60,
    stock_lollipopFlowerBasket: 60,
    stock_bellFlowerBouquet: 60,
    stock_glitteringYogurtWeeath: 60,
    stock_cream: 60,
    stock_butter: 60,
    stock_homemadeCheese: 60,
    stock_jellybeanLatte: 60,
    stock_bubblyBoba: 60,
    stock_sweetberryJuicy: 60,
    stock_cloudPillow: 60,
    stock_bearJellyToy: 60,
    stock_pitayaDragonToy: 60,
    stock_creamRootBeer: 60,
    stock_redberryJuice: 60,
    stock_vintageRootBottle: 60,
    stock_spookyMuffin: 60,
    stock_strawberryCake: 60,
    stock_partyCake: 60,
    stock_glazedRing: 60,
    stock_rubyberryBrooch: 40,
    stock_bearJellyCrown: 40,
};
exports.config = exports.defaultConfig;
exports.defaultWishes = [
    {
        id: 0,
        refreshPnt: { x: 149, y: 74 },
        unfoldPnt: { x: 163, y: 160 },
        fulfillPnt: { x: 183, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 162, y: 200 },
            1: { x: 198, y: 200 },
            2: { x: 162, y: 235 },
            3: { x: 198, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
    {
        id: 1,
        refreshPnt: { x: 260, y: 74 },
        unfoldPnt: { x: 275, y: 160 },
        fulfillPnt: { x: 295, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 275, y: 200 },
            1: { x: 312, y: 200 },
            2: { x: 275, y: 235 },
            3: { x: 312, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
    {
        id: 2,
        refreshPnt: { x: 374, y: 74 },
        unfoldPnt: { x: 390, y: 160 },
        fulfillPnt: { x: 400, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 390, y: 200 },
            1: { x: 425, y: 200 },
            2: { x: 390, y: 235 },
            3: { x: 425, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
    {
        id: 3,
        refreshPnt: { x: 490, y: 74 },
        unfoldPnt: { x: 500, y: 160 },
        fulfillPnt: { x: 520, y: 283 },
        status: types_1.WishStatus.unknown,
        requirementIconPnts: {
            0: { x: 508, y: 200 },
            1: { x: 545, y: 200 },
            2: { x: 508, y: 235 },
            3: { x: 545, y: 235 },
        },
        failedCount: 0,
        requireFulfilled: 0,
        golden: false,
    },
];


/***/ }),

/***/ "./src/storage.ts":
/*!************************!*\
  !*** ./src/storage.ts ***!
  \************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.globalStorage = void 0;
exports.globalStorage = {
    botStatus: {
        battleStarted: 0,
    },
};


/***/ }),

/***/ "./src/tasks.ts":
/*!**********************!*\
  !*** ./src/tasks.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TASKS = void 0;
var TASKS;
(function (TASKS) {
    TASKS["maintainanceMode"] = "maintainanceMode";
    TASKS["login"] = "login";
    TASKS["production"] = "production";
    TASKS["collectMail"] = "collectMail";
    TASKS["collectKingdomPass"] = "collectKingdomPass";
    TASKS["sendFriendReward"] = "sendFriendReward";
    TASKS["getInShopFreeDailyPack"] = "getInShopFreeDailyPack";
    TASKS["getGachaDailyFreePack"] = "getGachaDailyFreePack";
    TASKS["hotAirBallon"] = "hotAirBallon";
    TASKS["train"] = "train";
    TASKS["wishingTree"] = "wishingTree";
    TASKS["fountain"] = "fountain";
    TASKS["pvp"] = "pvp";
    TASKS["pvpPurchaseAncientCookie"] = "pvpPurchaseAncientCookie";
    TASKS["superMayhem"] = "superMayhem";
    TASKS["tropicalIslandShip"] = "tropicalIslandShip";
    TASKS["tropicalIslandSunbed"] = "tropicalIslandSunbed";
    TASKS["tropicalIslandClearBubble"] = "tropicalIslandClearBubble";
    TASKS["bounties"] = "bounties";
    TASKS["gnomeLab"] = "gnomeLab";
    TASKS["haborShopInSeaMarket"] = "haborShopInSeaMarket";
    TASKS["haborShopInShellGallery"] = "haborShopInShellGallery";
    TASKS["haborSendShip"] = "haborSendShip";
    TASKS["towerOfSweetChaos"] = "towerOfSweetChaos";
    // CollectCookieOdyssey = 'CollectCookieOdyssey',
    TASKS["resolveGreenChecks"] = "resolveGreenChecks";
    TASKS["guildCheckin"] = "guildCheckin";
    TASKS["guildExpandLand"] = "guildExpandLand";
    TASKS["guildBattleDragon"] = "guildBattleDragon";
    TASKS["guildBattleAlliance"] = "guildBattleAlliance";
    TASKS["findAndTapCandy"] = "findAndTapCandy";
    TASKS["upgradeCandyHouse"] = "upgradeCandyHouse";
})(TASKS = exports.TASKS || (exports.TASKS = {}));


/***/ }),

/***/ "./src/tasks/bounties.ts":
/*!*******************************!*\
  !*** ./src/tasks/bounties.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addBountiesTask = exports.addBountiesRoutes = exports.rfpageReadyToBattleBounty = exports.rfpageInOneOfTheBounties = exports.rfpageInBounties = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
exports.rfpageInBounties = new Rerouter_1.Page('rfpageInBounties', [
    { x: 591, y: 11, r: 41, g: 16, b: 21 },
    { x: 205, y: 5, r: 126, g: 84, b: 98 },
    { x: 19, y: 21, r: 222, g: 222, b: 222 },
    { x: 81, y: 24, r: 250, g: 250, b: 250 },
    { x: 165, y: 20, r: 92, g: 70, b: 57 },
    { x: 561, y: 336, r: 47, g: 76, b: 109 },
    { x: 515, y: 340, r: 70, g: 48, b: 35 },
    { x: 8, y: 276, r: 217, g: 211, b: 108 },
]);
exports.rfpageInOneOfTheBounties = new Rerouter_1.Page('rfpageInOneOfTheBounty', [
    { x: 533, y: 327, r: 121, g: 207, b: 12 },
    { x: 622, y: 329, r: 207, g: 237, b: 255 },
    { x: 614, y: 314, r: 227, g: 155, b: 65 },
    { x: 171, y: 39, r: 174, g: 167, b: 152 },
    { x: 627, y: 305, r: 231, g: 154, b: 66 },
]);
exports.rfpageReadyToBattleBounty = new Rerouter_1.Page('rfpageReadyToBattleBounty', [
    { x: 612, y: 321, r: 121, g: 207, b: 12 },
    { x: 91, y: 12, r: 106, g: 71, b: 50 },
    { x: 87, y: 18, r: 247, g: 247, b: 247 },
    { x: 520, y: 19, r: 6, g: 127, b: 254 },
    { x: 407, y: 19, r: 255, g: 209, b: 0 },
    { x: 159, y: 331, r: 121, g: 207, b: 12 },
    { x: 71, y: 329, r: 12, g: 167, b: 223 },
    { x: 60, y: 23, r: 255, g: 255, b: 255 },
    { x: 13, y: 20, r: 95, g: 56, b: 43 },
], { x: 612, y: 321 });
// const rfpageNeedRefillBounty = new Page(
//   'rfpageNeedRefillBounty',
//   [
//     { x: 427, y: 82, r: 57, g: 166, b: 231 },
//     { x: 317, y: 76, r: 132, g: 130, b: 99 },
//     { x: 323, y: 81, r: 115, g: 70, b: 58 },
//     { x: 343, y: 92, r: 57, g: 69, b: 107 },
//     { x: 309, y: 264, r: 0, g: 195, b: 255 },
//   ],
//   { x: 432, y: 82 }
// );
var rfpageNeedRefillBountyInChooseLevel = new Rerouter_1.Page('rfpageNeedRefillBountyInChooseLevel', [
    { x: 309, y: 265, r: 5, g: 129, b: 254 },
    { x: 292, y: 253, r: 150, g: 217, b: 60 },
    { x: 347, y: 253, r: 121, g: 207, b: 12 },
    { x: 281, y: 221, r: 215, g: 102, b: 100 },
    { x: 257, y: 222, r: 243, g: 233, b: 223 },
    { x: 301, y: 90, r: 60, g: 70, b: 105 },
    { x: 320, y: 72, r: 118, g: 123, b: 95 },
    { x: 192, y: 28, r: 54, g: 57, b: 42 },
    { x: 159, y: 13, r: 40, g: 24, b: 26 },
    { x: 225, y: 54, r: 113, g: 99, b: 73 },
    { x: 625, y: 307, r: 113, g: 77, b: 33 },
], { x: 432, y: 82 });
var rfpageCannotRefillBountyAnymore = new Rerouter_1.Page('rfpageCannotRefillBountyAnymore', [
    { x: 345, y: 244, r: 123, g: 207, b: 8 },
    { x: 192, y: 29, r: 57, g: 59, b: 46 },
    { x: 190, y: 41, r: 49, g: 30, b: 24 },
    { x: 215, y: 14, r: 33, g: 18, b: 23 },
    { x: 189, y: 28, r: 57, g: 58, b: 43 },
    { x: 217, y: 51, r: 115, g: 99, b: 74 },
    { x: 205, y: 55, r: 49, g: 30, b: 24 },
], { x: 345, y: 244 });
var bountyStatus = {
    hasBountiesLeft: true,
    bountyCount: 0,
};
function addBountiesRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInBounties.name),
        match: exports.rfpageInBounties,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageInBounties");
            if (!bountyStatus['hasBountiesLeft']) {
                (0, utils_1.logs)(context.task.name, "bounty finished");
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            }
            var foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconBountiesGreenEnter);
            foundResults.sort((0, helper_1.dynamicSort)('x'));
            var bountyCount = Object.keys(foundResults).length > 2 ? 4 : Object.keys(foundResults).length;
            if (bountyCount === 0) {
                (0, utils_1.logs)(context.task.name, "cannot find bounty entry button, skipping task");
                (0, utils_1.sendKeyBack)();
                finishRound(true);
            }
            bountyStatus['bountyCount'] = bountyCount;
            Rerouter_1.rerouter.screen.tap({ x: foundResults[0].x + 40, y: foundResults[0].y + 10 });
            return;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInOneOfTheBounties.name),
        match: exports.rfpageInOneOfTheBounties,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            if (!bountyStatus['hasBountiesLeft']) {
                // logs(context.task.name, `bounty finished, leave this page`);
                (0, utils_1.sendKeyBack)();
            }
            (0, utils_1.logs)(context.task.name, "about to start handleBounties, send running");
            (0, utils_1.sendEventRunning)();
            var i = 0;
            var bountyCount = bountyStatus['bountyCount'];
            var bounties = [];
            for (var bountyIdx = 0; bountyIdx < bountyCount; bountyIdx++) {
                // When there are only one bounty (Sunday), it gets all types of powder thus nothing to OCR
                var powder = bountyCount === 1 ? 0 : (0, helper_1.ocrNumberInRect)({ x: 454, y: 10, w: 50, h: 18 }, ICONS.wNumbers);
                var bountyLevel = bountyCount === 1 ? 12 : countBountyLevel();
                if (bountyCount !== 1 && scriptConfig_1.config.autoBountiesCheckBluePowder) {
                    var rtn = bountyCheckIfGetBluePowder();
                    powder = rtn[0];
                    bountyLevel = rtn[1];
                }
                if (powder !== -1) {
                    bounties.push({
                        index: bountyIdx,
                        // entryPnt: bountyEntryPnt,
                        powderStock: powder,
                        level: bountyLevel,
                    });
                }
                Rerouter_1.rerouter.screen.tap({ x: 435, y: 178 }); // Goto right bounty
                Rerouter_1.Utils.sleep(1500);
            }
            bounties.sort((0, helper_1.dynamicSort)('level'));
            // console.log('sorted level bounties: ', JSON.stringify(bounties, ['index', 'level', 'powderStock']));
            bounties = bounties.filter(function (bounty) {
                return bounty.level === bounties[0].level;
            });
            bounties.sort((0, helper_1.dynamicSort)('powderStock'));
            (0, utils_1.logs)(context.task.name, "rfpageInOneOfTheBounties sorted & filtered level bounties: ".concat(JSON.stringify(bounties, ['index', 'level', 'powderStock'])));
            if (bounties.length === 0) {
                (0, utils_1.logs)(context.task.name, "No bounties can be run, skipping, bounties: ".concat(JSON.stringify(bounties)));
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            }
            var targetBounty = bounties[0];
            for (i = 0; i < bountyCount; i++) {
                if (targetBounty['level'] === 6) {
                    Rerouter_1.rerouter.screen.tap({ x: 40, y: 135 }); // Goto left bounty
                    Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                }
                var gotBountyLevel = countBountyLevel();
                var gotMaterialStock = bountyCount === 1 ? 0 : (0, helper_1.ocrNumberInRect)({ x: 454, y: 10, w: 50, h: 18 }, ICONS.wNumbers);
                if (gotBountyLevel === targetBounty.level && gotMaterialStock === targetBounty.powderStock) {
                    (0, utils_1.logs)(context.task.name, "found it, level, stock: ".concat(gotBountyLevel, ", ").concat(gotMaterialStock));
                    Rerouter_1.rerouter.screen.tap({ x: 530, y: 330 });
                    Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                    break;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "wrong, ".concat(gotBountyLevel, ", ").concat(gotMaterialStock, ", ").concat(gotBountyLevel === targetBounty.level, ", ").concat(gotMaterialStock === targetBounty.powderStock));
                    Rerouter_1.rerouter.screen.tap({ x: 435, y: 178 });
                    Rerouter_1.Utils.sleep(1500);
                }
            }
        },
    });
    // rerouter.addRoute({
    //   path: `/${rfpageNeedRefillBounty.name}`,
    //   match: rfpageNeedRefillBounty,
    //   action: (context, image, matched, finishRound) => {
    //     if (context.task.name !== TASKS.bounties) {
    //       sendKeyBack();
    //       return;
    //     }
    //     logs(context.task.name, `rfpageNeedRefillBounty, cannot battle bounty as no more runs left so finishRound`);
    //     rerouter.goNext(rfpageNeedRefillBounty);
    //     sendEventRunning();
    //     sendCounter(context.task.name, context.path, {});
    //     finishRound(true);
    //   },
    // });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageNeedRefillBountyInChooseLevel.name),
        match: rfpageNeedRefillBountyInChooseLevel,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageNeedRefillBountyInChooseLevel, cannot battle bounty as no more runs left so finishRound");
            Rerouter_1.rerouter.goNext(rfpageNeedRefillBountyInChooseLevel);
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageCannotRefillBountyAnymore.name),
        match: rfpageCannotRefillBountyAnymore,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.bounties) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageCannotRefillBountyAnymore, cannot battle bounty as no more runs left so finishRound");
            Rerouter_1.rerouter.goNext(rfpageCannotRefillBountyAnymore);
            (0, utils_1.sendEventRunning)();
            finishRound(true);
        },
    });
    (0, helper_1.passiveAddRoute)([exports.rfpageReadyToBattleBounty]);
}
exports.addBountiesRoutes = addBountiesRoutes;
function addBountiesTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.bounties,
        maxTaskDuring: 15 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoHandleBountiesIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(bountyStatus, {
                hasBountiesLeft: true,
                bountyCount: 0,
            });
        },
    });
}
exports.addBountiesTask = addBountiesTask;
var bountyLevelX = 20;
var bountyLevelYRange = [60, 84, 119, 158, 190, 230, 260, 296, 333];
function countBountyLevel() {
    for (var j = 0; j < bountyLevelYRange.length; j++) {
        if (Rerouter_1.rerouter.screen.isSameColor({ x: bountyLevelX, y: bountyLevelYRange[j], r: 205, g: 66, b: 36 })) {
            return j + 4; // first one in list is Lv.4
        }
    }
    return -1;
}
function bountyCheckIfGetBluePowder() {
    var lastPowder = (0, helper_1.ocrNumberInRect)({ x: 454, y: 10, w: 50, h: 18 }, ICONS.wNumbers);
    var bountyLevel = countBountyLevel();
    if (bountyLevel > 6) {
        Rerouter_1.rerouter.screen.tap({ x: 40, y: 135 });
        Rerouter_1.Utils.sleep(2000);
        var bluePower = (0, helper_1.ocrNumberInRect)({ x: 454, y: 10, w: 50, h: 18 }, ICONS.wNumbers);
        // console.log('Check if we need to get blue powder: ', bluePower, lastPowder);
        if (bluePower < lastPowder && bluePower < 350) {
            return [bluePower, 6];
        }
    }
    for (var j = 0; j < bountyLevelYRange.length; j++) {
        Rerouter_1.rerouter.screen.tap({ x: bountyLevelX, y: bountyLevelYRange[j] });
        Rerouter_1.Utils.sleep(300);
    }
    return [lastPowder, bountyLevel];
}


/***/ }),

/***/ "./src/tasks/fountain.ts":
/*!*******************************!*\
  !*** ./src/tasks/fountain.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addFountainTask = exports.addFountainRoutes = exports.fountainStatus = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var rfpageInCookieCastle = new Rerouter_1.Page('rfpageInCookieCastle', [
    { x: 521, y: 18, r: 8, g: 125, b: 255 },
    { x: 406, y: 17, r: 255, g: 215, b: 0 },
    { x: 105, y: 339, r: 53, g: 35, b: 44 },
    { x: 94, y: 321, r: 36, g: 60, b: 97 },
    { x: 56, y: 315, r: 39, g: 100, b: 60 },
], { x: 615, y: 20 });
var rfpageInFountain = new Rerouter_1.Page('rfpageInFountain', [
    { x: 505, y: 305, r: 121, g: 207, b: 12 },
    { x: 569, y: 310, r: 219, g: 207, b: 199 },
    { x: 368, y: 23, r: 60, g: 70, b: 105 },
    { x: 526, y: 67, r: 255, g: 85, b: 66 },
], { x: 505, y: 305 });
var rfpageFountain3rdRawEmpty = new Rerouter_1.Page('rfpageFountain3rdRawEmpty', [
    { x: 505, y: 305, r: 121, g: 207, b: 12 },
    { x: 569, y: 310, r: 219, g: 207, b: 199 },
    { x: 368, y: 23, r: 60, g: 70, b: 105 },
    { x: 526, y: 67, r: 255, g: 85, b: 66 },
    { x: 379, y: 234, r: 247, g: 235, b: 222 },
    { x: 428, y: 237, r: 247, g: 235, b: 222 },
    { x: 493, y: 236, r: 247, g: 235, b: 222 },
], { x: 505, y: 305 });
exports.fountainStatus = {
    justWentToCookieHead: false,
};
function addFountainRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInCookieCastle.name),
        match: rfpageInCookieCastle,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.fountain) {
                (0, utils_1.logs)(context.task.name, "rfpageInCookieCastle, leave because current task is not fountain, but: ".concat(context.task.name));
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'tap back to leave rfpageInCookieCastle');
            (0, utils_1.sendKeyBack)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInFountain.name),
        match: rfpageInFountain,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.fountain && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                (0, utils_1.logs)(context.task.name, 'rfpageInFountain, but not TASKS.fountain or TASKS.resolveGreenChecks so send back');
                (0, utils_1.sendKeyBack)();
                return;
            }
            // 3rd raw is empty, fountain is pretty clean
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageFountain3rdRawEmpty, image)) {
                (0, utils_1.logs)(context.task.name, 'rfpageFountain3rdRawEmpty 3rd raw empty, set task complete');
                Rerouter_1.rerouter.screen.tap({ x: 500, y: 310 }); // tap Claim
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageInFountain and collect it');
            Rerouter_1.rerouter.screen.tap({ x: 500, y: 310 }); // tap Claim
            (0, utils_1.sendEventRunning)();
            finishRound(true); // 如果可以正確辨識收成功，這個可以刪除，否則是用水池偏空當作有收成功
        },
    });
}
exports.addFountainRoutes = addFountainRoutes;
function addFountainTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.fountain,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectFountainIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(exports.fountainStatus, {
                justWentToCookieHead: false,
            });
        },
    });
}
exports.addFountainTask = addFountainTask;


/***/ }),

/***/ "./src/tasks/gnomeLab.ts":
/*!*******************************!*\
  !*** ./src/tasks/gnomeLab.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addGnomeLabTasks = exports.addGnomeLabRoutes = exports.rfpageNotEnoughItemsForResearch = exports.rfpageNotEnoughAuroraItemForReserch = exports.rfpageResearchComplete = exports.rfpageCanTapResearch = exports.rfpageInGnomeLab = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
// Gnome lab
exports.rfpageInGnomeLab = new Rerouter_1.Page('rfpageInGnomeLab', [
    { x: 15, y: 11, r: 211, g: 9, b: 35 },
    { x: 25, y: 21, r: 255, g: 223, b: 244 },
    { x: 328, y: 15, r: 169, g: 8, b: 36 },
    { x: 308, y: 28, r: 16, g: 12, b: 8 },
]);
exports.rfpageCanTapResearch = new Rerouter_1.Page('rfpageCanTapResearch', [
    { x: 276, y: 318, r: 121, g: 207, b: 12 },
    { x: 220, y: 317, r: 54, g: 62, b: 95 },
    { x: 398, y: 315, r: 54, g: 62, b: 95 },
], { x: 276, y: 318 });
exports.rfpageResearchComplete = new Rerouter_1.Page('rfpageResearchComplete', [
    { x: 432, y: 62, r: 24, g: 81, b: 115 },
    { x: 326, y: 14, r: 93, g: 4, b: 16 },
    { x: 407, y: 20, r: 104, g: 77, b: 0 },
    { x: 419, y: 260, r: 215, g: 241, b: 157 },
    { x: 425, y: 102, r: 247, g: 235, b: 222 },
    { x: 354, y: 200, r: 255, g: 243, b: 0 },
], { x: 432, y: 62 });
exports.rfpageNotEnoughAuroraItemForReserch = new Rerouter_1.Page('rfpageNotEnoughAuroraItemForReserch', [
    { x: 434, y: 96, r: 255, g: 255, b: 255 },
    { x: 22, y: 21, r: 127, g: 108, b: 122 },
    { x: 13, y: 11, r: 95, g: 1, b: 17 },
    { x: 4, y: 16, r: 7, g: 0, b: 0 },
    { x: 292, y: 235, r: 189, g: 85, b: 247 },
    { x: 350, y: 251, r: 0, g: 182, b: 255 },
], { x: 434, y: 96 });
// Tools, etc
exports.rfpageNotEnoughItemsForResearch = new Rerouter_1.Page('rfpageNotEnoughItemsForResearch', [
    { x: 435, y: 95, r: 255, g: 255, b: 255 },
    { x: 303, y: 250, r: 8, g: 125, b: 255 },
    { x: 287, y: 247, r: 123, g: 207, b: 16 },
    { x: 261, y: 245, r: 222, g: 207, b: 198 },
    { x: 305, y: 100, r: 57, g: 69, b: 107 },
    { x: 22, y: 20, r: 127, g: 102, b: 122 },
]);
var gnomeLabStatus = {
    kingdomSearchCount: 0,
    cookieSearchCount: 0,
    searchLimit: 12,
    targetImageIndex: 0,
    needResearchKingdom: scriptConfig_1.config.autoResearchKingdom,
    needResearchCookie: scriptConfig_1.config.autoResearchCookies,
};
function addGnomeLabRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInGnomeLab.name),
        match: exports.rfpageInGnomeLab,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            var rfpageAlreadyResearching = new Rerouter_1.Page('rfpageAlreadyResearching', [
                { x: 47, y: 69, r: 237, g: 237, b: 229 },
                { x: 159, y: 67, r: 117, g: 223, b: 0 },
            ]);
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageAlreadyResearching, image)) {
                (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, Already researching, skipping handleInGnomeLab");
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                finishRound(true);
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, handleInGnomeLab in gnome lab, send running");
            sendEvent('running', '');
            (0, utils_1.logs)(context.task.name, "rfpageInGnomeLab, kingdomSearchCount: ".concat(gnomeLabStatus.kingdomSearchCount, ", targetImageInde: ").concat(gnomeLabStatus.targetImageIndex));
            // TODO： 極光產品檢查還沒做
            if (scriptConfig_1.config.autoResearchKingdom) {
                Rerouter_1.rerouter.screen.tap({ x: 200, y: 340 });
                handleResearchInGnomeLab(finishRound, ICONS.iconsGnomeLabKingdom, 0.94);
            }
            if (scriptConfig_1.config.autoResearchCookies) {
                Rerouter_1.rerouter.screen.tap({ x: 310, y: 340 });
                handleResearchInGnomeLab(finishRound, ICONS.iconsGnomeLabCookies, 0.9);
            }
            return;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageCanTapResearch.name),
        match: exports.rfpageCanTapResearch,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab) {
                (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, start researching and finishRound");
            Rerouter_1.rerouter.goNext(exports.rfpageCanTapResearch);
            if (Rerouter_1.rerouter.waitScreenForMatchingPage(exports.rfpageNotEnoughAuroraItemForReserch, 2000)) {
                (0, utils_1.logs)(context.task.name, "rfpageNotEnoughAuroraItemForReserch, cannot research this one");
                (0, utils_1.sendKeyBack)();
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                (0, utils_1.sendKeyBack)();
            }
            else {
                (0, utils_1.logs)(context.task.name, "start researching and finish round");
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageNotEnoughAuroraItemForReserch.name),
        match: exports.rfpageNotEnoughAuroraItemForReserch,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab) {
                (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageNotEnoughAuroraItemForReserch, skip and finishRound");
            Rerouter_1.rerouter.goNext(exports.rfpageNotEnoughAuroraItemForReserch);
            (0, utils_1.sendKeyBack)();
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageNotEnoughItemsForResearch.name),
        match: exports.rfpageNotEnoughItemsForResearch,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.gnomeLab) {
                (0, utils_1.logs)(context.task.name, "rfpageCanTapResearch, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageNotEnoughItemsForResearch, skip and finishRound");
            Rerouter_1.rerouter.goNext(exports.rfpageNotEnoughItemsForResearch);
            (0, utils_1.sendKeyBack)();
            finishRound(true);
        },
    });
}
exports.addGnomeLabRoutes = addGnomeLabRoutes;
function addGnomeLabTasks() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.gnomeLab,
        maxTaskDuring: 15 * CONSTANTS.minuteInMs,
        minRoundInterval: 15 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(gnomeLabStatus, {
                kingdomSearchCount: 0,
                cookieSearchCount: 0,
                searchLimit: 12,
                targetImageIndex: 0,
                needResearchKingdom: scriptConfig_1.config.autoResearchKingdom,
                needResearchCookie: scriptConfig_1.config.autoResearchCookies,
            });
        },
    });
}
exports.addGnomeLabTasks = addGnomeLabTasks;
function handleResearchInGnomeLab(finishRound, targetIconList, threashold) {
    for (var i = 0; i < 12; i++) {
        for (var imageIdx = 0; imageIdx < targetIconList.length; imageIdx++) {
            var foundResults = (0, helper_1.findSpecificIconInScreen)(targetIconList[imageIdx]);
            console.log('>', i, imageIdx, targetIconList[imageIdx].name, JSON.stringify(foundResults));
            for (var j = 0; j < Object.keys(foundResults).length; j++) {
                Rerouter_1.rerouter.screen.tap(foundResults[j]);
                if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupPageLabResult', [
                    exports.rfpageCanTapResearch,
                    exports.rfpageNotEnoughAuroraItemForReserch,
                    exports.rfpageNotEnoughItemsForResearch,
                    exports.rfpageResearchComplete,
                ]), 3000)) {
                    if (Rerouter_1.rerouter.isPageMatch(exports.rfpageCanTapResearch)) {
                        (0, utils_1.logs)(tasks_1.TASKS.gnomeLab, "rfpageCanTapResearch, tap it");
                        Rerouter_1.rerouter.goNext(exports.rfpageCanTapResearch);
                        if (Rerouter_1.rerouter.waitScreenForMatchingPage(exports.rfpageNotEnoughAuroraItemForReserch, 3000)) {
                            (0, utils_1.logs)(tasks_1.TASKS.gnomeLab, "rfpageNotEnoughAuroraItemForReserch, back");
                            (0, utils_1.sendKeyBack)();
                            Rerouter_1.Utils.sleep(1000);
                            (0, utils_1.sendKeyBack)();
                        }
                        else {
                            (0, utils_1.sendKeyBack)();
                            finishRound(true);
                        }
                        return;
                    }
                    else {
                        (0, utils_1.logs)(tasks_1.TASKS.gnomeLab, "rfpageInGnomeLab, cannot tap this one, continue: ".concat(Rerouter_1.rerouter.getCurrentMatchNames()));
                        (0, utils_1.sendKeyBack)();
                        Rerouter_1.rerouter.waitScreenForMatchingPage(exports.rfpageInGnomeLab, 2000);
                    }
                }
            }
        }
        (0, helper_1.swipeFromToPoint)({ x: 600, y: 234 }, { x: -200, y: 234 }, 5, undefined, exports.rfpageInGnomeLab);
    }
}


/***/ }),

/***/ "./src/tasks/guild.ts":
/*!****************************!*\
  !*** ./src/tasks/guild.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addGuildBattleAllianceTask = exports.addGuildBattleDragonTask = exports.addGuildCheckinTask = exports.addGuildRoutes = exports.rfpageCookieAllianceSelectCampaignsNoMuseum = exports.rfpageCookieAllianceSelectCampaignsMuseum = exports.rfpageTallyingfightDragon = exports.rfpageReadyToFightDragon = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var helper_2 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var rfpageInGuildLand = new Rerouter_1.Page('rfpageInGuildLand', [
    { x: 445, y: 329, r: 74, g: 61, b: 154 },
    { x: 212, y: 329, r: 173, g: 150, b: 198 },
    { x: 163, y: 327, r: 107, g: 32, b: 49 },
    { x: 144, y: 326, r: 231, g: 207, b: 214 },
    { x: 107, y: 324, r: 225, g: 213, b: 198 },
    { x: 41, y: 303, r: 217, g: 146, b: 99 },
    { x: 19, y: 267, r: 206, g: 195, b: 247 },
]);
var rfpageSeachToJoinGuild = new Rerouter_1.Page('rfpageSeachToJoinGuild', [
    { x: 7, y: 130, r: 135, g: 152, b: 192 },
    { x: 25, y: 31, r: 189, g: 197, b: 211 },
    { x: 138, y: 23, r: 59, g: 61, b: 123 },
    { x: 280, y: 349, r: 69, g: 70, b: 109 },
    { x: 465, y: 331, r: 116, g: 77, b: 37 },
    { x: 419, y: 319, r: 75, g: 10, b: 6 },
    { x: 422, y: 18, r: 3, g: 62, b: 126 },
    { x: 516, y: 331, r: 132, g: 103, b: 39 },
]);
var rfpageInputGuildWelcomeText = new Rerouter_1.Page('rfpageInputGuildWelcomeText', [
    { x: 434, y: 105, r: 57, g: 166, b: 231 },
    { x: 420, y: 107, r: 57, g: 69, b: 107 },
    { x: 439, y: 209, r: 247, g: 235, b: 222 },
    { x: 438, y: 235, r: 222, g: 207, b: 198 },
    { x: 358, y: 240, r: 123, g: 207, b: 8 },
    { x: 28, y: 272, r: 86, g: 86, b: 89 },
    { x: 26, y: 321, r: 76, g: 76, b: 76 },
    { x: 160, y: 326, r: 25, g: 3, b: 9 },
    { x: 214, y: 334, r: 40, g: 34, b: 53 },
    { x: 155, y: 332, r: 56, g: 12, b: 18 },
], { x: 434, y: 105 });
var rfpageInGuildBeacon = new Rerouter_1.Page('rfpageInGuildBeacon', [
    { x: 519, y: 317, r: 123, g: 207, b: 8 },
    { x: 393, y: 86, r: 255, g: 209, b: 0 },
    { x: 302, y: 82, r: 223, g: 223, b: 223 },
    { x: 232, y: 291, r: 68, g: 58, b: 103 },
    { x: 207, y: 161, r: 246, g: 238, b: 246 },
    { x: 99, y: 105, r: 203, g: 209, b: 213 },
    { x: 159, y: 268, r: 220, g: 223, b: 227 },
], { x: 516, y: 322 });
// const rfpageGuildBeaconLevelUp = new Page(
//   'rfpageGuildBeaconLevelUp',
//   [
//     { x: 525, y: 320, r: 123, g: 207, b: 8 },
//     { x: 608, y: 319, r: 49, g: 60, b: 90 },
//     { x: 380, y: 261, r: 107, g: 198, b: 247 },
//     { x: 347, y: 290, r: 222, g: 223, b: 231 },
//     { x: 391, y: 86, r: 255, g: 211, b: 0 },
//     { x: 569, y: 88, r: 74, g: 75, b: 77 },
//     { x: 215, y: 279, r: 216, g: 219, b: 223 },
//   ],
//   { x: 477, y: 321 }
// );
var rfPageGuildBeaconIsClear = new Rerouter_1.Page('rfPageGuildBeaconIsClear', [
    { x: 600, y: 25, r: 255, g: 255, b: 255 },
    { x: 365, y: 29, r: 57, g: 69, b: 107 },
    { x: 391, y: 85, r: 255, g: 211, b: 0 },
    { x: 435, y: 254, r: 181, g: 178, b: 198 },
    { x: 522, y: 320, r: 120, g: 120, b: 120 },
    { x: 559, y: 326, r: 49, g: 60, b: 90 },
    { x: 511, y: 186, r: 255, g: 255, b: 255 },
], { x: 600, y: 25 });
var rfpageBattleDragon = new Rerouter_1.Page('rfpageBattleDragon', [
    { x: 409, y: 20, r: 255, g: 204, b: 0 },
    { x: 524, y: 20, r: 0, g: 139, b: 255 },
    { x: 317, y: 22, r: 218, g: 227, b: 240 },
    { x: 223, y: 29, r: 192, g: 201, b: 237 },
    { x: 37, y: 103, r: 171, g: 153, b: 220 },
    { x: 24, y: 71, r: 237, g: 237, b: 229 },
], { x: 600, y: 25 });
exports.rfpageReadyToFightDragon = new Rerouter_1.Page('rfpageReadyToFightDragon', [
    { x: 493, y: 325, r: 134, g: 233, b: 253 },
    { x: 108, y: 335, r: 123, g: 207, b: 8 },
    { x: 323, y: 12, r: 233, g: 156, b: 244 },
    { x: 41, y: 195, r: 251, g: 226, b: 237 },
    { x: 610, y: 194, r: 12, g: 167, b: 223 },
    { x: 38, y: 231, r: 107, g: 122, b: 201 },
], { x: 493, y: 325 });
exports.rfpageTallyingfightDragon = new Rerouter_1.Page('rfpageTallyingfightDragon', [
    { x: 493, y: 325, r: 61, g: 104, b: 6 },
    { x: 516, y: 317, r: 166, g: 168, b: 66 },
    { x: 108, y: 335, r: 123, g: 207, b: 8 },
    { x: 323, y: 12, r: 233, g: 156, b: 244 },
    { x: 41, y: 195, r: 251, g: 226, b: 237 },
    { x: 610, y: 194, r: 12, g: 167, b: 223 },
], { x: 493, y: 325 });
var rfpageDragonRemainHealth = new Rerouter_1.Page('rfpageDragonRemainHealth', [
    { x: 368, y: 233, r: 132, g: 65, b: 255 },
    { x: 153, y: 334, r: 1, g: 31, b: 41 },
    { x: 79, y: 334, r: 42, g: 15, b: 4 },
], { x: 572, y: 330 });
exports.rfpageCookieAllianceSelectCampaignsMuseum = new Rerouter_1.Page('rfpageCookieAllianceSelectCampaignsMuseum', [
    { x: 340, y: 14, r: 126, g: 195, b: 204 },
    { x: 331, y: 21, r: 25, g: 25, b: 67 },
    { x: 250, y: 16, r: 109, g: 102, b: 255 },
    { x: 250, y: 20, r: 144, g: 139, b: 243 },
    { x: 256, y: 88, r: 186, g: 154, b: 215 },
    { x: 9, y: 329, r: 36, g: 43, b: 51 },
    { x: 21, y: 60, r: 255, g: 255, b: 255 },
    { x: 10, y: 54, r: 7, g: 16, b: 33 },
    { x: 207, y: 325, r: 102, g: 83, b: 170 },
    { x: 195, y: 318, r: 215, g: 169, b: 126 },
    { x: 140, y: 323, r: 102, g: 83, b: 170 },
    { x: 117, y: 310, r: 175, g: 95, b: 24 },
    { x: 48, y: 318, r: 215, g: 234, b: 234 },
]);
exports.rfpageCookieAllianceSelectCampaignsNoMuseum = new Rerouter_1.Page('rfpageCookieAllianceSelectCampaignsNoMuseum', [
    { x: 340, y: 14, r: 126, g: 195, b: 204 },
    { x: 331, y: 21, r: 25, g: 25, b: 67 },
    { x: 250, y: 16, r: 109, g: 102, b: 255 },
    { x: 250, y: 20, r: 144, g: 139, b: 243 },
    { x: 256, y: 88, r: 186, g: 154, b: 215 },
    { x: 64, y: 319, r: 102, g: 83, b: 170 },
    { x: 83, y: 319, r: 205, g: 227, b: 233 },
    { x: 130, y: 320, r: 102, g: 83, b: 170 },
    { x: 149, y: 312, r: 221, g: 136, b: 52 },
    { x: 161, y: 318, r: 255, g: 237, b: 116 },
    { x: 9, y: 329, r: 36, g: 43, b: 51 },
]);
var groupPageAllianceSelectStage = new Rerouter_1.GroupPage('groupPageAllianceSelectStage', [
    exports.rfpageCookieAllianceSelectCampaignsMuseum,
    exports.rfpageCookieAllianceSelectCampaignsNoMuseum,
]);
var rfpageInCookieAlliance = new Rerouter_1.Page('rfpageInCookieAlliance', [
    { x: 351, y: 332, r: 181, g: 74, b: 206 },
    { x: 170, y: 334, r: 121, g: 207, b: 12 },
    { x: 71, y: 332, r: 12, g: 167, b: 223 },
    { x: 330, y: 20, r: 96, g: 92, b: 225 },
    { x: 252, y: 16, r: 126, g: 109, b: 237 },
    { x: 250, y: 21, r: 146, g: 145, b: 243 },
    { x: 9, y: 81, r: 63, g: 58, b: 62 },
]);
var rfpageInCookieAllianceSkipIntro = new Rerouter_1.Page('rfpageInCookieAllianceSkipIntro', [
    { x: 523, y: 16, r: 0, g: 51, b: 67 },
    { x: 409, y: 18, r: 67, g: 54, b: 0 },
    { x: 334, y: 13, r: 56, g: 49, b: 59 },
    { x: 333, y: 23, r: 64, g: 63, b: 66 },
    { x: 249, y: 22, r: 38, g: 39, b: 64 },
    { x: 250, y: 13, r: 22, g: 15, b: 47 },
    { x: 16, y: 21, r: 61, g: 61, b: 61 },
    { x: 71, y: 21, r: 67, g: 67, b: 67 },
    { x: 64, y: 11, r: 23, g: 19, b: 14 },
], { x: 49, y: 336 } // tap Edit to skip
);
// Mark as conflict with login page
// const rfpageInCookieAllianceSkipIntroInTeamSetup = new Page(
//   'rfpageInCookieAllianceSkipIntroInTeamSetup',
//   [
//     { x: 600, y: 90, r: 64, g: 24, b: 7 },
//     { x: 603, y: 114, r: 32, g: 54, b: 3 },
//     { x: 608, y: 143, r: 3, g: 44, b: 59 },
//     { x: 606, y: 197, r: 3, g: 44, b: 59 },
//     { x: 94, y: 259, r: 3, g: 44, b: 59 },
//     { x: 613, y: 279, r: 1, g: 1, b: 2 },
//     { x: 619, y: 13, r: 14, g: 42, b: 60 },
//   ],
//   { x: 619, y: 13 } // tap X to skip
// );
var rfpageInCookieAllianceSkipIntroBeaconValor = new Rerouter_1.Page('rfpageInCookieAllianceSkipIntroBeaconValor', [
    { x: 336, y: 16, r: 57, g: 50, b: 59 },
    { x: 250, y: 14, r: 26, g: 22, b: 58 },
    { x: 249, y: 21, r: 38, g: 37, b: 64 },
    { x: 213, y: 252, r: 150, g: 217, b: 60 },
    { x: 429, y: 256, r: 121, g: 207, b: 12 },
    { x: 348, y: 270, r: 250, g: 185, b: 9 },
    { x: 219, y: 273, r: 243, g: 201, b: 0 },
    { x: 160, y: 264, r: 236, g: 226, b: 244 },
], { x: 219, y: 273 } // tap 7D
);
var rfpageNoAllianceTicket = new Rerouter_1.Page('rfpageNoAllianceTicket', [
    { x: 244, y: 252, r: 49, g: 190, b: 231 },
    { x: 327, y: 77, r: 156, g: 144, b: 217 },
    { x: 317, y: 100, r: 244, g: 235, b: 231 },
    { x: 355, y: 256, r: 0, g: 198, b: 255 },
    { x: 334, y: 22, r: 85, g: 80, b: 109 },
]);
var rfpageNoAllianceTicket2 = new Rerouter_1.Page('rfpageNoAllianceTicket2', [
    { x: 248, y: 278, r: 12, g: 167, b: 223 },
    { x: 355, y: 282, r: 0, g: 193, b: 255 },
    { x: 318, y: 154, r: 181, g: 169, b: 219 },
    { x: 343, y: 126, r: 52, g: 159, b: 227 },
]);
var rfpageAllianceSteupTeam = new Rerouter_1.Page('rfpageAllianceSteupTeam', [
    { x: 619, y: 18, r: 255, g: 255, b: 255 },
    { x: 606, y: 90, r: 247, g: 89, b: 24 },
    { x: 603, y: 112, r: 123, g: 207, b: 8 },
    { x: 608, y: 139, r: 0, g: 150, b: 214 },
    { x: 610, y: 168, r: 0, g: 150, b: 214 },
    { x: 507, y: 129, r: 134, g: 17, b: 158 },
]);
var rfpageAllianceBeaconIsOff = new Rerouter_1.Page('rfpageAllianceBeaconIsOff', [
    { x: 215, y: 198, r: 94, g: 102, b: 153 },
    { x: 202, y: 201, r: 209, g: 226, b: 248 },
    { x: 209, y: 198, r: 99, g: 109, b: 156 },
]);
var rfpageAllianceTeamSetup = new Rerouter_1.Page('rfpageAllianceTeamSetup', [
    { x: 618, y: 19, r: 255, g: 255, b: 255 },
    { x: 490, y: 8, r: 12, g: 18, b: 33 },
    { x: 407, y: 17, r: 44, g: 20, b: 25 },
    { x: 224, y: 7, r: 127, g: 77, b: 70 },
    { x: 24, y: 15, r: 255, g: 255, b: 255 },
    { x: 21, y: 226, r: 83, g: 102, b: 157 },
    { x: 11, y: 283, r: 19, g: 13, b: 11 },
], { x: 618, y: 19 });
var rfpageAllianceAddMoreCookie = new Rerouter_1.Page('rfpageAllianceAddMoreCookie', [
    { x: 407, y: 250, r: 121, g: 207, b: 12 },
    { x: 297, y: 253, r: 12, g: 167, b: 223 },
    { x: 275, y: 136, r: 110, g: 107, b: 104 },
    { x: 252, y: 135, r: 46, g: 46, b: 46 },
    { x: 335, y: 23, r: 41, g: 41, b: 66 },
    { x: 603, y: 311, r: 26, g: 45, b: 3 },
    { x: 488, y: 328, r: 36, g: 32, b: 7 },
    { x: 37, y: 144, r: 57, g: 22, b: 0 },
    { x: 65, y: 93, r: 12, g: 19, b: 37 },
]);
var rfpageBeaconOfValor = new Rerouter_1.Page('rfpageBeaconOfValor', [
    { x: 338, y: 13, r: 32, g: 58, b: 85 },
    { x: 334, y: 23, r: 199, g: 190, b: 236 },
    { x: 248, y: 13, r: 88, g: 62, b: 186 },
    { x: 249, y: 21, r: 146, g: 142, b: 244 },
    { x: 153, y: 123, r: 219, g: 147, b: 75 },
    { x: 142, y: 129, r: 245, g: 233, b: 88 },
    { x: 346, y: 274, r: 255, g: 209, b: 0 },
    { x: 430, y: 270, r: 60, g: 181, b: 8 },
], { x: 346, y: 274 });
var rfpageCannotLightBeacon = new Rerouter_1.Page('rfpageCannotLightBeacon', [
    { x: 436, y: 284, r: 0, g: 134, b: 189 },
    { x: 261, y: 112, r: 114, g: 80, b: 44 },
    { x: 261, y: 226, r: 118, g: 82, b: 50 },
    { x: 250, y: 192, r: 83, g: 87, b: 104 },
    { x: 197, y: 104, r: 107, g: 142, b: 198 },
]);
var rfpageLightBeaconReminder = new Rerouter_1.Page('rfpageLightBeaconReminder', [
    { x: 301, y: 250, r: 8, g: 166, b: 222 },
    { x: 403, y: 248, r: 123, g: 207, b: 8 },
    { x: 333, y: 19, r: 49, g: 38, b: 75 },
    { x: 187, y: 166, r: 104, g: 111, b: 122 },
]);
// A very long text down below saying fight already started, cannot light beacon, need to be closed
var rfpageStartedFightingSoCannotStartBeacon = new Rerouter_1.Page('rfpageStartedFightingSoCannotStartBeacon', [
    { x: 473, y: 23, r: 255, g: 255, b: 255 },
    { x: 191, y: 82, r: 227, g: 165, b: 82 },
    { x: 197, y: 183, r: 219, g: 147, b: 77 },
    { x: 184, y: 185, r: 242, g: 213, b: 49 },
    { x: 179, y: 312, r: 55, g: 62, b: 96 },
], { x: 473, y: 23 });
// Choose the 2nd alliance reward, need to add tap ({x: 620, y: 22}) when not enough tickets
var rfpageAllianceReward = new Rerouter_1.Page('rfpageAllianceReward', [
    { x: 397, y: 243, r: 189, g: 150, b: 82 },
    { x: 257, y: 41, r: 19, g: 29, b: 6 },
    { x: 310, y: 22, r: 29, g: 6, b: 8 },
    { x: 374, y: 46, r: 41, g: 45, b: 45 },
    { x: 422, y: 76, r: 12, g: 31, b: 49 },
    { x: 618, y: 20, r: 255, g: 255, b: 255 },
], { x: 397, y: 243 });
// Conflict with rfpageBattleFinished
// const rfpageAllianceResults = new Page(
//   'rfpageAllianceResults',
//   [
//     { x: 612, y: 333, r: 8, g: 166, b: 222 },
//     { x: 259, y: 57, r: 66, g: 136, b: 202 },
//     { x: 329, y: 26, r: 222, g: 48, b: 74 },
//     { x: 368, y: 49, r: 198, g: 223, b: 222 },
//     { x: 76, y: 336, r: 247, g: 89, b: 24 },
//     { x: 188, y: 333, r: 8, g: 166, b: 222 },
//     { x: 319, y: 41, r: 149, g: 149, b: 60 }, // differntiate with rfpageWinBountyAndFinish
//   ],
//   { x: 612, y: 333 }
// );
var rfpageCannotRefilAllianceTicketToday = new Rerouter_1.Page('rfpageCannotRefilAllianceTicketToday', [
    { x: 345, y: 275, r: 121, g: 207, b: 12 },
    { x: 331, y: 129, r: 52, g: 159, b: 227 },
    { x: 306, y: 147, r: 69, g: 52, b: 160 },
    { x: 333, y: 24, r: 126, g: 124, b: 127 },
    { x: 218, y: 74, r: 60, g: 70, b: 105 },
]);
var rfpageSelectStartingTeam = new Rerouter_1.Page('rfpageSelectStartingTeam', [
    { x: 260, y: 29, r: 140, g: 88, b: 230 },
    { x: 160, y: 63, r: 107, g: 101, b: 222 },
    { x: 399, y: 107, r: 255, g: 200, b: 0 },
    { x: 488, y: 306, r: 0, g: 150, b: 214 },
    { x: 613, y: 325, r: 30, g: 52, b: 3 },
]);
var rfpageKeepBattleByOrderNotCheckWhenStart = new Rerouter_1.Page('rfpageKeepBattleByOrderNotCheckWhenStart', [
    { x: 145, y: 311, r: 239, g: 235, b: 239 },
    { x: 135, y: 303, r: 30, g: 19, b: 52 },
    { x: 140, y: 274, r: 49, g: 32, b: 90 },
], { x: 145, y: 311 });
var rfpageKeepBattleByOrderNotCheck = new Rerouter_1.Page('rfpageKeepBattleByOrderNotCheck', [
    { x: 146, y: 323, r: 237, g: 233, b: 235 },
    { x: 153, y: 254, r: 49, g: 40, b: 98 },
    { x: 149, y: 270, r: 147, g: 129, b: 235 },
], { x: 146, y: 323 });
var groupPageTeamSelection = new Rerouter_1.GroupPage('groupPageTeamSelection', [
    rfpageSelectStartingTeam,
    rfpageKeepBattleByOrderNotCheck,
    rfpageKeepBattleByOrderNotCheckWhenStart,
]);
var guildBattleDragonStatus = {
    bossIdx: 0,
};
var guildBattleAllianceStatus = {
    needIgniteBeacon: true,
    collectGuildRewardCount: 0,
};
function addGuildRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageSeachToJoinGuild.name),
        match: rfpageSeachToJoinGuild,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageSeachToJoinGuild, tap to friend, send back and finishRound");
            if (context.task.name === tasks_1.TASKS.guildCheckin || context.task.name === tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            }
            Rerouter_1.rerouter.screen.tap({ x: 20, y: 88 });
            Rerouter_1.Utils.sleep(1000);
            (0, utils_1.sendKeyBack)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInGuildLand.name),
        match: rfpageInGuildLand,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 5) !== 'guild') {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageInGuildLand, handle it");
            switch (context.task.name) {
                case tasks_1.TASKS.guildCheckin:
                    Rerouter_1.rerouter.screen.tap({ x: 315, y: 217 }); // tap center guild level up trophy
                    Rerouter_1.Utils.sleep(2000);
                    break;
                case tasks_1.TASKS.guildExpandLand:
                    // rerouter.screen.tap({ x: 315, y: 217 });
                    // Utils.sleep(2000);
                    break;
                case tasks_1.TASKS.guildBattleDragon:
                    Rerouter_1.rerouter.screen.tap({ x: 150, y: 328 }); // tap dragon icon
                    Rerouter_1.Utils.sleep(2000);
                    break;
                case tasks_1.TASKS.guildBattleAlliance:
                    Rerouter_1.rerouter.screen.tap({ x: 200, y: 330 }); // tap alliance icon
                    Rerouter_1.Utils.sleep(5000);
                    break;
                default:
                    // TODO: will fail when resume battle
                    console.log('I am rfpageInGuildLand, panic and donno what to do');
                    (0, helper_1.saveImageToDisk)('guildland-no-task');
                // ii++;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInGuildBeacon.name),
        match: rfpageInGuildBeacon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.guildCheckin) {
                (0, utils_1.logs)(context.task.name, "in rfpageInGuildBeacon, finishRound");
                Rerouter_1.rerouter.goNext(rfpageInGuildBeacon);
                (0, utils_1.sendEventRunning)();
                finishRound(true);
            }
            (0, utils_1.sendKeyBack)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfPageGuildBeaconIsClear.name),
        match: rfPageGuildBeaconIsClear,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.guildCheckin) {
                (0, utils_1.logs)(context.task.name, "in rfPageGuildBeaconIsClear, finishRound");
                Rerouter_1.rerouter.goNext(rfPageGuildBeaconIsClear);
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
            }
            (0, utils_1.sendKeyBack)();
        },
    });
    // Guild dragon
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageBattleDragon.name),
        match: rfpageBattleDragon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in ".concat(context.path, ", handle it"));
            var guildBossesEntryPoints = [
                { x: 113, y: 202, r: 123, g: 207, b: 8 },
                { x: 312, y: 205, r: 123, g: 207, b: 8 },
                { x: 505, y: 204, r: 123, g: 207, b: 8 }, // right
            ];
            if (guildBattleDragonStatus.bossIdx >= guildBossesEntryPoints.length) {
                guildBattleDragonStatus.bossIdx = 0;
            }
            (0, utils_1.logs)(context.task.name, "Try to fight boss: ".concat(guildBattleDragonStatus.bossIdx));
            var bossEntryPoint = guildBossesEntryPoints[guildBattleDragonStatus.bossIdx];
            Rerouter_1.rerouter.screen.tap(bossEntryPoint);
            guildBattleDragonStatus.bossIdx++;
            return;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageReadyToFightDragon.name),
        match: exports.rfpageReadyToFightDragon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            Rerouter_1.rerouter.goNext(exports.rfpageReadyToFightDragon);
            Rerouter_1.Utils.sleep(6000);
            if (Rerouter_1.rerouter.isPageMatch(exports.rfpageReadyToFightDragon)) {
                (0, utils_1.logs)(context.task.name, "Still in rfpageReadyToFightDragon 6 secs after tapped Battle!, no more dragon ticket, finish round");
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageTallyingfightDragon.name),
        match: exports.rfpageTallyingfightDragon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleDragon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "found rfpageTallyingfightDragon, no need to battle dragon, finish round");
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    // Guild alliance battle
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageStartedFightingSoCannotStartBeacon.name),
        match: rfpageStartedFightingSoCannotStartBeacon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            Rerouter_1.rerouter.screen.tap({ x: 372, y: 287 });
            Rerouter_1.Utils.sleep(2000);
            if (Rerouter_1.rerouter.isPageMatch(rfpageStartedFightingSoCannotStartBeacon)) {
                (0, utils_1.logs)(context.task.name, "rfpageStartedFightingSoCannotStartBeacon, stop trying to ignite beacon");
                guildBattleAllianceStatus.needIgniteBeacon = false;
                Rerouter_1.rerouter.goNext(rfpageStartedFightingSoCannotStartBeacon);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(groupPageAllianceSelectStage.name),
        match: groupPageAllianceSelectStage,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "In groupPageAllianceSelectStage, start guild alliance battle");
            for (var i = 0; i < 10; i++) {
                Rerouter_1.rerouter.screen.tap({ x: 560, y: 350 - 25 * i });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                if (!Rerouter_1.rerouter.isPageMatch(groupPageAllianceSelectStage)) {
                    (0, utils_1.logs)(context.task.name, "Left rfpageCookieAllianceSelectCampaigns, start battling");
                    return;
                }
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInCookieAlliance.name),
        match: rfpageInCookieAlliance,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "start guild alliance battle");
            if (guildBattleAllianceStatus.needIgniteBeacon && Rerouter_1.rerouter.isPageMatchImage(rfpageAllianceBeaconIsOff, image)) {
                Rerouter_1.rerouter.screen.tap({ x: 215, y: 198 });
                return;
            }
            Rerouter_1.rerouter.screen.tap({ x: 515, y: 324 });
            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(groupPageTeamSelection.name),
        match: groupPageTeamSelection,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "found groupPageTeamSelection, handle it");
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageSelectStartingTeam, image)) {
                (0, utils_1.logs)(context.task.name, "found rfpageSelectStartingTeam, tap all from top");
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 70 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 113 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 165 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 215 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                Rerouter_1.rerouter.screen.tap({ x: 470, y: 267 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                return;
            }
            else if (Rerouter_1.rerouter.isPageMatchImage(rfpageKeepBattleByOrderNotCheck, image)) {
                (0, utils_1.logs)(context.task.name, "handle rfpageKeepBattleByOrderNotCheck, tap and wait 8 secs");
                Rerouter_1.rerouter.goNext(rfpageKeepBattleByOrderNotCheck);
                Rerouter_1.Utils.sleep(8000);
                return;
            }
            else if (Rerouter_1.rerouter.isPageMatchImage(rfpageKeepBattleByOrderNotCheckWhenStart, image)) {
                (0, utils_1.logs)(context.task.name, "handle rfpageKeepBattleByOrderNotCheckWhenStart, tap and wait 8 secs");
                Rerouter_1.rerouter.goNext(rfpageKeepBattleByOrderNotCheckWhenStart);
                Rerouter_1.Utils.sleep(8000);
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageCannotRefilAllianceTicketToday.name),
        match: rfpageCannotRefilAllianceTicketToday,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "found rfpageCannotRefilAllianceTicketToday, finish round");
            Rerouter_1.rerouter.screen.tap({ x: 282, y: 276 });
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageAllianceAddMoreCookie.name),
        match: rfpageAllianceAddMoreCookie,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.guildBattleAlliance) {
                (0, utils_1.logs)(context.task.name, "found rfpageAllianceAddMoreCookie, tap cancel");
                Rerouter_1.rerouter.screen.tap({ x: 264, y: 250 });
                return;
            }
            (0, utils_1.logs)(context.task.name, "found rfpageAllianceAddMoreCookie, tap Start");
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 250 });
            (0, utils_1.sendEventRunning)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInCookieAllianceSkipIntro.name),
        match: rfpageInCookieAllianceSkipIntro,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "found rfpageInCookieAllianceSkipIntro, try to resolve it by tapping SKIP");
            Rerouter_1.rerouter.screen.tap({ x: 608, y: 26 });
            sleep(3000);
            if (Rerouter_1.rerouter.isPageMatch(rfpageInCookieAllianceSkipIntro)) {
                (0, utils_1.logs)(context.task.name, "still in rfpageInCookieAllianceSkipIntro, try to resolve it by Edit { x: 46, y: 336 }");
                Rerouter_1.rerouter.screen.tap({ x: 46, y: 336 });
                sleep(3000);
            }
            if (Rerouter_1.rerouter.isPageMatch(rfpageInCookieAllianceSkipIntro)) {
                (0, utils_1.logs)(context.task.name, "still in rfpageInCookieAllianceSkipIntro, try to resolve it by beacon { x: 46, y: 336 }");
                Rerouter_1.rerouter.screen.tap({ x: 242, y: 199 });
                sleep(3000);
            }
            if (Rerouter_1.rerouter.isPageMatch(rfpageInCookieAllianceSkipIntro)) {
                (0, utils_1.logs)(context.task.name, "still in rfpageInCookieAllianceSkipIntro, try to resolve it by Artifacts { x: 395, y: 332 }");
                Rerouter_1.rerouter.screen.tap({ x: 395, y: 332 });
                sleep(3000);
            }
            (0, utils_1.sendEventRunning)();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageAllianceReward.name),
        match: rfpageAllianceReward,
        action: function (context, image, matched, finishRound) {
            if (guildBattleAllianceStatus.collectGuildRewardCount > 10) {
                (0, utils_1.logs)(context.task.name, "found rfpageAllianceReward, tap close as collectGuildRewardCount: ".concat(guildBattleAllianceStatus.collectGuildRewardCount));
                Rerouter_1.rerouter.screen.tap({ x: 620, y: 20 });
                (0, utils_1.sendEventRunning)();
                finishRound(true);
                return;
            }
            guildBattleAllianceStatus.collectGuildRewardCount++;
            (0, utils_1.logs)(context.task.name, "found rfpageAllianceReward, tap it and collectGuildRewardCount: ".concat(guildBattleAllianceStatus.collectGuildRewardCount));
            Rerouter_1.rerouter.screen.tap({ x: 282, y: 276 });
            (0, utils_1.sendEventRunning)();
            finishRound(true);
        },
    });
    (0, helper_2.passiveAddRoute)([
        rfpageInputGuildWelcomeText,
        // rfpageGuildBeaconLevelUp,
        rfpageDragonRemainHealth,
        // rfpageAllianceResults,
        rfpageAllianceTeamSetup,
        rfpageBeaconOfValor,
        // rfpageInCookieAllianceSkipIntroInTeamSetup,
        rfpageInCookieAllianceSkipIntroBeaconValor,
    ]);
}
exports.addGuildRoutes = addGuildRoutes;
function addGuildCheckinTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.guildCheckin,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addGuildCheckinTask = addGuildCheckinTask;
function addGuildBattleDragonTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.guildBattleDragon,
        maxTaskDuring: 10 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_2.assign)(guildBattleDragonStatus, {
                bossIdx: 0,
            });
        },
    });
}
exports.addGuildBattleDragonTask = addGuildBattleDragonTask;
function addGuildBattleAllianceTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.guildBattleAlliance,
        maxTaskDuring: 40 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_2.assign)(guildBattleAllianceStatus, {
                needIgniteBeacon: true,
                collectGuildRewardCount: 0,
            });
        },
    });
}
exports.addGuildBattleAllianceTask = addGuildBattleAllianceTask;


/***/ }),

/***/ "./src/tasks/hotAirBallon.ts":
/*!***********************************!*\
  !*** ./src/tasks/hotAirBallon.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addHotAirBallonTask = exports.addHotAirBallonRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var rfpageInHotAirBallon = new Rerouter_1.Page('rfpageInHotAirBallon', [
    { x: 270, y: 330, r: 255, g: 211, b: 0 },
    { x: 158, y: 331, r: 12, g: 167, b: 223 },
    { x: 184, y: 312, r: 223, g: 175, b: 97 },
    { x: 331, y: 312, r: 142, g: 88, b: 65 },
    { x: 565, y: 84, r: 255, g: 251, b: 235 },
]);
var rfpageBallonFlyingDock = new Rerouter_1.Page('rfpageBallonFlyingDock', [
    { x: 611, y: 17, r: 57, g: 166, b: 231 },
    { x: 213, y: 15, r: 50, g: 21, b: 37 },
    { x: 250, y: 51, r: 255, g: 255, b: 255 },
    { x: 269, y: 51, r: 217, g: 217, b: 217 },
    { x: 346, y: 50, r: 40, g: 6, b: 21 },
    { x: 129, y: 23, r: 43, g: 6, b: 26 },
    { x: 37, y: 51, r: 6, g: 14, b: 3 },
], { x: 616, y: 17 });
var rfpageChooseBallonDestination = new Rerouter_1.Page('rfpageChooseBallonDestination', [
    { x: 285, y: 15, r: 208, g: 161, b: 89 },
    { x: 319, y: 7, r: 91, g: 61, b: 45 },
    { x: 352, y: 18, r: 210, g: 162, b: 89 },
    { x: 616, y: 15, r: 56, g: 165, b: 231 },
]);
var rfpageBallonMapEp4 = new Rerouter_1.Page('rfpageBallonMapEp4', [
    { x: 611, y: 204, r: 236, g: 228, b: 255 },
    { x: 9, y: 37, r: 56, g: 33, b: 19 },
    { x: 40, y: 120, r: 129, g: 229, b: 81 },
], { x: 610, y: 230 });
var hotAirBallonStatus = {
    changeMapFinished: false,
};
function addHotAirBallonRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInHotAirBallon.name),
        match: rfpageInHotAirBallon,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon) {
                (0, utils_1.logs)(context.task.name, "rfpageInHotAirBallon, task is ".concat(context.task.name, " but not TASKS.hotAirBallon or TASKS.resolveGreenChecks so send back"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageInHotAirBallon, choose next step');
            if (hotAirBallonStatus['changeMapFinished']) {
                Rerouter_1.rerouter.screen.tap({ x: 258, y: 330 }); // tap Auto
                Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                Rerouter_1.rerouter.screen.tap({ x: 575, y: 330 }); // tap Start
                (0, utils_1.logs)(context.task.name, "rfpageInHotAirBallon, start new ballon trip, ep4: ".concat(scriptConfig_1.config.isHotAirBallonGotoEp4));
                (0, helper_1.sendCounter)(context.task.name, rfpageInHotAirBallon.name, {});
                finishRound(true);
            }
            else {
                Rerouter_1.rerouter.screen.tap({ x: 412, y: 330 }); // tap Change
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageBallonFlyingDock.name),
        match: rfpageBallonFlyingDock,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon && context.task.name !== tasks_1.TASKS.resolveGreenChecks) {
                (0, utils_1.logs)(context.task.name, "rfpageBallonFlyingDock, skip as current task is ".concat(context.task.name));
                Rerouter_1.rerouter.goNext(rfpageBallonFlyingDock); // close this screen
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageBallonFlyingDock, ballon is flying, finish task');
            Rerouter_1.rerouter.goNext(rfpageBallonFlyingDock); // close this screen
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageChooseBallonDestination.name),
        match: rfpageChooseBallonDestination,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.hotAirBallon) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageChooseBallonDestination, goto ep4: ".concat(scriptConfig_1.config.isHotAirBallonGotoEp4));
            if (scriptConfig_1.config.isHotAirBallonGotoEp4) {
                (0, utils_1.logs)(context.task.name, "rfpageChooseBallonDestination, go to first");
                (0, helper_1.scrollLeftALot)({ x: 30, y: 151 });
                (0, helper_1.scrollLeftALot)({ x: 30, y: 151 });
                (0, helper_1.scrollLeftALot)({ x: 30, y: 151 });
                Rerouter_1.rerouter.goNext(rfpageBallonMapEp4); // tap EP4 map
                hotAirBallonStatus['changeMapFinished'] = true;
                return;
            }
            else {
                (0, utils_1.logs)(context.task.name, "rfpageChooseBallonDestination, go to end");
                // scroll to right most and find the last map
                (0, helper_1.scrollRightALot)({ x: 618, y: 151 });
                (0, helper_1.scrollRightALot)({ x: 618, y: 151 });
                (0, helper_1.scrollRightALot)({ x: 618, y: 151 });
                for (var i = 0; i < 4; i++) {
                    for (var xLocation = 550; xLocation >= 100; xLocation -= 125) {
                        for (var yLocation = 140; yLocation <= 260; yLocation += 120) {
                            Rerouter_1.rerouter.screen.tap({ x: xLocation, y: yLocation });
                            if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageInHotAirBallon, 2000)) {
                                hotAirBallonStatus['changeMapFinished'] = true;
                                (0, utils_1.logs)(context.task.name, "ballon destination choosed successfully, i, x, y = ".concat(i, ", ").concat(xLocation, ", ").concat(yLocation));
                                return;
                            }
                        }
                    }
                    tapDown(30, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
                    moveTo(250, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
                    moveTo(620, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
                    tapUp(620, 268, 40, 0);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 3);
                }
            }
        },
    });
}
exports.addHotAirBallonRoutes = addHotAirBallonRoutes;
function addHotAirBallonTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.hotAirBallon,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoSendHotAirBallonIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(hotAirBallonStatus, {
                changeMapFinished: false,
            });
        },
    });
}
exports.addHotAirBallonTask = addHotAirBallonTask;


/***/ }),

/***/ "./src/tasks/login.ts":
/*!****************************!*\
  !*** ./src/tasks/login.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkLoginFailedMaxReached = exports.addLoginRoutes = exports.rfpageEnterTwoPasswordsLongId = exports.rfpageTermsOfServiceLongWindow = exports.rfpageTermsOfServiceWindowRedroid = exports.rfpageTermsOfServiceWindow = exports.rfpageChooseLoginMethodRedroid = exports.rfpageChooseLoginMethod2 = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var __1 = __webpack_require__(/*! ../.. */ "./index.js");
var rfpageAnnouncement = new Rerouter_1.Page('rfpageAnnouncement', [
    { x: 224, y: 19, r: 85, g: 18, b: 32 },
    { x: 310, y: 21, r: 89, g: 81, b: 0 },
    { x: 610, y: 19, r: 56, g: 167, b: 231 },
    { x: 619, y: 19, r: 255, g: 255, b: 255 },
    { x: 628, y: 18, r: 56, g: 167, b: 231 },
    { x: 59, y: 219, r: 54, g: 64, b: 87 },
    { x: 71, y: 317, r: 54, g: 64, b: 87 },
    { x: 19, y: 114, r: 63, g: 0, b: 9 },
    { x: 25, y: 321, r: 75, g: 75, b: 75 },
], { x: 610, y: 19 });
// Check for gears in login page via pixel matching
var rfpageInLoginPageWithGearAndVideo = new Rerouter_1.Page('rfpageInLoginPageWithGearAndVideo', [
    { x: 621, y: 13, r: 233, g: 233, b: 235 },
    { x: 622, y: 16, r: 3, g: 4, b: 9 },
    { x: 597, y: 16, r: 233, g: 235, b: 239 },
    { x: 593, y: 16, r: 4, g: 6, b: 11 },
    { x: 590, y: 17, r: 233, g: 235, b: 239 },
    { x: 594, y: 23, r: 14, g: 14, b: 25 },
]);
// const rfpageInputAge = new Page(
//   'rfpageInputAge',
//   [
//     { x: 366, y: 278, r: 254, g: 94, b: 0 },
//     { x: 320, y: 154, r: 50, g: 50, b: 50 },
//     { x: 319, y: 161, r: 255, g: 255, b: 255 },
//     { x: 287, y: 69, r: 60, g: 60, b: 60 },
//     { x: 335, y: 66, r: 99, g: 99, b: 99 },
//     { x: 253, y: 213, r: 254, g: 94, b: 0 },
//     { x: 252, y: 231, r: 255, g: 255, b: 255 },
//   ],
//   { x: 366, y: 278 }
// );
// Update 2023.9.26
var rfpageInputAge = new Rerouter_1.Page('rfpageInputAge', [
    { x: 378, y: 225, r: 255, g: 126, b: 71 },
    { x: 229, y: 193, r: 255, g: 126, b: 71 },
    { x: 246, y: 218, r: 255, g: 126, b: 71 },
    { x: 309, y: 231, r: 255, g: 255, b: 255 },
    { x: 403, y: 158, r: 112, g: 115, b: 124 },
    { x: 406, y: 162, r: 255, g: 255, b: 255 },
    { x: 235, y: 158, r: 196, g: 197, b: 202 },
], { x: 323, y: 228 });
var rfpageChooseLoginMethod = new Rerouter_1.Page('rfpageChooseLoginMethod', [
    { x: 139, y: 233, r: 255, g: 95, b: 0 },
    { x: 165, y: 197, r: 0, g: 0, b: 0 },
    { x: 148, y: 153, r: 244, g: 154, b: 25 },
    { x: 347, y: 166, r: 177, g: 204, b: 58 },
    { x: 356, y: 196, r: 59, g: 89, b: 152 },
    { x: 126, y: 234, r: 255, g: 255, b: 255 },
], { x: 139, y: 233 });
// Smaller icons (Android 7), not updated for 5 options
exports.rfpageChooseLoginMethod2 = new Rerouter_1.Page('rfpageChooseLoginMethod2', [
    { x: 138, y: 229, r: 255, g: 95, b: 0 },
    { x: 138, y: 198, r: 0, g: 0, b: 0 },
    { x: 138, y: 155, r: 234, g: 89, b: 77 },
    { x: 347, y: 162, r: 177, g: 204, b: 58 },
    { x: 342, y: 195, r: 59, g: 89, b: 152 },
], { x: 138, y: 229 });
exports.rfpageChooseLoginMethodRedroid = new Rerouter_1.Page('rfpageChooseLoginMethodRedroid', [
    { x: 144, y: 229, r: 255, g: 95, b: 0 },
    { x: 145, y: 198, r: 0, g: 0, b: 0 },
    { x: 144, y: 156, r: 238, g: 123, b: 114 },
    { x: 148, y: 161, r: 62, g: 130, b: 241 },
    { x: 256, y: 235, r: 255, g: 255, b: 255 },
    { x: 352, y: 160, r: 177, g: 204, b: 58 },
    { x: 358, y: 190, r: 255, g: 255, b: 255 },
    { x: 345, y: 195, r: 59, g: 89, b: 152 },
], { x: 138, y: 229 });
var rfpageEnterEmail = new Rerouter_1.Page('rfpageEnterEmail', [
    { x: 298, y: 53, r: 60, g: 60, b: 60 },
    { x: 320, y: 53, r: 223, g: 223, b: 223 },
    { x: 322, y: 99, r: 245, g: 245, b: 245 },
    { x: 357, y: 97, r: 70, g: 70, b: 70 },
    { x: 362, y: 98, r: 255, g: 255, b: 255 },
    { x: 368, y: 98, r: 255, g: 255, b: 255 },
    { x: 391, y: 124, r: 255, g: 255, b: 255 },
], { x: 298, y: 53 });
var rfpageTermsOfServices = new Rerouter_1.Page('rfpageTermsOfServices', [
    { x: 447, y: 230, r: 255, g: 255, b: 255 },
    { x: 43, y: 257, r: 96, g: 24, b: 22 },
    { x: 181, y: 257, r: 95, g: 24, b: 22 },
    { x: 31, y: 289, r: 92, g: 67, b: 18 },
    { x: 203, y: 285, r: 90, g: 65, b: 16 },
    { x: 161, y: 329, r: 37, g: 8, b: 13 },
    { x: 246, y: 230, r: 255, g: 255, b: 255 },
    { x: 179, y: 132, r: 255, g: 255, b: 255 },
], { x: 447, y: 230 });
// TOS page will change when login page change
// Nox: cookie v1.15
exports.rfpageTermsOfServiceWindow = new Rerouter_1.Page('rfpageTermsOfServiceWindow', [
    { x: 448, y: 230, r: 171, g: 220, b: 216 },
    { x: 469, y: 240, r: 255, g: 255, b: 255 },
    { x: 159, y: 116, r: 255, g: 255, b: 255 },
    { x: 471, y: 116, r: 255, g: 255, b: 255 },
    { x: 158, y: 243, r: 255, g: 255, b: 255 },
], { x: 448, y: 230 });
exports.rfpageTermsOfServiceWindowRedroid = new Rerouter_1.Page('rfpageTermsOfServiceWindowRedroid', [
    { x: 479, y: 230, r: 255, g: 255, b: 255 },
    { x: 484, y: 230, r: 0, g: 133, b: 119 },
    { x: 489, y: 229, r: 255, g: 255, b: 255 },
    { x: 349, y: 229, r: 255, g: 255, b: 255 },
    { x: 353, y: 227, r: 0, g: 133, b: 119 },
    { x: 365, y: 231, r: 217, g: 237, b: 235 },
    { x: 394, y: 230, r: 255, g: 255, b: 255 },
    { x: 147, y: 133, r: 255, g: 255, b: 255 },
    { x: 168, y: 129, r: 33, g: 33, b: 33 },
    { x: 214, y: 135, r: 255, g: 255, b: 255 },
    { x: 271, y: 135, r: 108, g: 108, b: 108 },
    { x: 254, y: 171, r: 255, g: 255, b: 255 },
], { x: 483, y: 230 });
// Memu: cookie v1.16
var rfpageTermsOfServicesMemu = new Rerouter_1.Page('rfpageTermsOfServicesMemu', [
    { x: 479, y: 238, r: 66, g: 66, b: 66 },
    { x: 482, y: 238, r: 107, g: 158, b: 153 },
    { x: 484, y: 222, r: 66, g: 66, b: 66 },
    { x: 486, y: 110, r: 66, g: 66, b: 66 },
    { x: 148, y: 123, r: 66, g: 66, b: 66 },
    { x: 171, y: 117, r: 255, g: 255, b: 255 },
    { x: 172, y: 205, r: 66, g: 66, b: 66 },
    { x: 229, y: 206, r: 254, g: 254, b: 254 },
], { x: 479, y: 238 });
exports.rfpageTermsOfServiceLongWindow = new Rerouter_1.Page('rfpageTermsOfServiceLongWindow', [
    { x: 585, y: 234, r: 255, g: 255, b: 255 },
    { x: 599, y: 233, r: 255, g: 255, b: 255 },
    { x: 552, y: 234, r: 158, g: 160, b: 165 },
    { x: 494, y: 233, r: 255, g: 255, b: 255 },
    // { x: 57, y: 185, r: 242, g: 242, b: 242 },
    // { x: 593, y: 235, r: 150, g: 153, b: 159 },
    { x: 456, y: 233, r: 255, g: 255, b: 255 },
    { x: 54, y: 128, r: 36, g: 36, b: 36 },
    { x: 38, y: 132, r: 255, g: 255, b: 255 },
], { x: 585, y: 234 });
var rfpageCannotFindLoginInfo = new Rerouter_1.Page('rfpageCannotFindLoginInfo', [
    { x: 316, y: 243, r: 82, g: 136, b: 5 },
    { x: 323, y: 242, r: 254, g: 254, b: 254 },
    { x: 332, y: 243, r: 123, g: 207, b: 8 },
    { x: 305, y: 242, r: 123, g: 207, b: 8 },
    { x: 300, y: 242, r: 123, g: 207, b: 8 },
    { x: 343, y: 243, r: 123, g: 207, b: 8 },
    { x: 201, y: 106, r: 57, g: 69, b: 107 },
    { x: 422, y: 95, r: 57, g: 69, b: 107 },
    { x: 438, y: 106, r: 57, g: 69, b: 107 },
    { x: 383, y: 177, r: 215, g: 205, b: 195 },
    { x: 377, y: 178, r: 231, g: 220, b: 209 },
    { x: 371, y: 178, r: 231, g: 220, b: 209 },
    { x: 243, y: 180, r: 80, g: 80, b: 80 },
], { x: 316, y: 243 });
// v1.15
// Marked as confused with rfpageNotEnoughItemToBuyThis and we have rfpageDownloadDataAndVoiceOverUnchecked
// export const rfpageCanDownloadResources = new Page(
//   'rfpageCanDownloadResources',
//   [
//     { x: 346, y: 240, r: 121, g: 207, b: 12 },
//     { x: 420, y: 237, r: 219, g: 207, b: 199 },
//     { x: 418, y: 172, r: 243, g: 233, b: 223 },
//     { x: 412, y: 103, r: 60, g: 70, b: 105 },
//     { x: 219, y: 98, r: 60, g: 70, b: 105 },
//     { x: 221, y: 250, r: 219, g: 207, b: 199 },
//     { x: 380, y: 100, r: 57, g: 69, b: 107 },
//     { x: 319, y: 102, r: 57, g: 69, b: 107 },
//     { x: 292, y: 108, r: 57, g: 69, b: 107 },
//   ],
//   { x: 346, y: 240 }
// );
// v2.0.1
var rfpageDownloadDataAndVoiceOver = new Rerouter_1.Page('rfpageDownloadDataAndVoiceOver', [
    { x: 207, y: 192, r: 39, g: 204, b: 0 },
    { x: 372, y: 216, r: 12, g: 167, b: 223 },
    { x: 445, y: 218, r: 12, g: 167, b: 223 },
    { x: 430, y: 81, r: 60, g: 70, b: 105 },
    { x: 214, y: 195, r: 255, g: 255, b: 255 },
    { x: 443, y: 216, r: 12, g: 167, b: 223 },
    { x: 285, y: 269, r: 121, g: 207, b: 12 },
], { x: 207, y: 192 });
var rfpageDownloadDataAndVoiceOverUnchecked = new Rerouter_1.Page('rfpageDownloadDataAndVoiceOverUnchecked', [
    { x: 207, y: 192, r: 255, g: 255, b: 255 },
    { x: 372, y: 216, r: 12, g: 167, b: 223 },
    { x: 445, y: 218, r: 12, g: 167, b: 223 },
    { x: 430, y: 81, r: 60, g: 70, b: 105 },
    { x: 214, y: 195, r: 255, g: 255, b: 255 },
    { x: 443, y: 216, r: 12, g: 167, b: 223 },
    { x: 285, y: 269, r: 121, g: 207, b: 12 },
], { x: 317, y: 264 });
// v2.0.1 has 'New data pak is available'
var rfpageServerSelection = new Rerouter_1.Page('rfpageServerSelection', [
    { x: 351, y: 260, r: 121, g: 207, b: 12 },
    { x: 428, y: 261, r: 12, g: 167, b: 223 },
    { x: 442, y: 242, r: 60, g: 70, b: 105 },
    { x: 422, y: 234, r: 44, g: 47, b: 62 },
    { x: 324, y: 54, r: 101, g: 137, b: 231 },
    { x: 302, y: 64, r: 117, g: 186, b: 100 },
    { x: 278, y: 81, r: 254, g: 254, b: 254 },
], { x: 351, y: 260 });
var rfpageEnterTwoPasswords = new Rerouter_1.Page('rfpageEnterTwoPasswords', [
    { x: 243, y: 307, r: 255, g: 255, b: 255 },
    { x: 377, y: 229, r: 200, g: 200, b: 200 },
    { x: 367, y: 176, r: 255, g: 255, b: 255 },
    { x: 371, y: 50, r: 60, g: 60, b: 60 },
    { x: 319, y: 53, r: 230, g: 230, b: 230 },
    { x: 236, y: 149, r: 195, g: 195, b: 195 },
    { x: 236, y: 183, r: 194, g: 194, b: 194 },
    { x: 243, y: 303, r: 200, g: 200, b: 200 },
], { x: 243, y: 307 });
exports.rfpageEnterTwoPasswordsLongId = new Rerouter_1.Page('rfpageEnterTwoPasswordsLongId', [
    { x: 243, y: 307, r: 255, g: 255, b: 255 },
    { x: 377, y: 229, r: 200, g: 200, b: 200 },
    { x: 367, y: 176, r: 255, g: 255, b: 255 },
    { x: 371, y: 50, r: 60, g: 60, b: 60 },
    { x: 319, y: 53, r: 230, g: 230, b: 230 },
    { x: 236, y: 161, r: 185, g: 185, b: 185 },
    { x: 236, y: 195, r: 185, g: 185, b: 185 },
    { x: 243, y: 303, r: 200, g: 200, b: 200 },
], { x: 243, y: 307 });
var rfpageEnterpassword = new Rerouter_1.Page('rfpageEnterpassword', [
    { x: 370, y: 150, r: 255, g: 255, b: 255 },
    { x: 227, y: 112, r: 125, g: 125, b: 125 },
    { x: 235, y: 112, r: 84, g: 84, b: 84 },
    { x: 239, y: 114, r: 255, g: 255, b: 255 },
    { x: 368, y: 110, r: 84, g: 84, b: 84 },
    { x: 404, y: 188, r: 200, g: 200, b: 200 },
    { x: 227, y: 170, r: 255, g: 255, b: 255 },
], { x: 370, y: 150 });
var rfpageEnterpasswordFinished = new Rerouter_1.Page('rfpageEnterpasswordFinished', [
    { x: 370, y: 150, r: 255, g: 255, b: 255 },
    { x: 227, y: 112, r: 125, g: 125, b: 125 },
    { x: 235, y: 112, r: 84, g: 84, b: 84 },
    { x: 239, y: 114, r: 255, g: 255, b: 255 },
    { x: 368, y: 110, r: 84, g: 84, b: 84 },
]);
var rfpageEnterPasswordLongId = new Rerouter_1.Page('rfpageEnterPasswordLongId', [
    { x: 370, y: 161, r: 255, g: 255, b: 255 },
    { x: 227, y: 127, r: 125, g: 125, b: 125 },
    { x: 234, y: 124, r: 207, g: 207, b: 207 },
    { x: 229, y: 110, r: 255, g: 255, b: 255 },
    { x: 230, y: 110, r: 120, g: 120, b: 120 },
    { x: 227, y: 183, r: 255, g: 255, b: 255 },
], { x: 370, y: 161 });
var groupPageEnterPassword = new Rerouter_1.GroupPage('groupPageEnterPassword', [rfpageEnterpassword, rfpageEnterPasswordLongId], rfpageEnterPasswordLongId.next);
// Check if wrong password set. Any red string in this area means wrong password
var pageEnteredPassword = [
    { x: 370, y: 155, r: 255, g: 255, b: 255 },
    { x: 301, y: 115, r: 255, g: 255, b: 255 },
    { x: 387, y: 53, r: 60, g: 60, b: 60 },
    { x: 298, y: 53, r: 60, g: 60, b: 60 },
    { x: 322, y: 52, r: 60, g: 60, b: 60 },
];
var loginTaskStatus = {
    loginRetryCount: 0,
};
function addLoginRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInputAge.name),
        match: rfpageInputAge,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'input rfpageInputAge');
            Rerouter_1.rerouter.screen.tap({ x: 285 + Math.random() * 35, y: 190 });
            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
            Rerouter_1.rerouter.goNext(rfpageInputAge);
            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 150 });
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageChooseLoginMethod.name),
        match: rfpageChooseLoginMethod,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.maintainanceMode) {
                (0, utils_1.logs)(context.task.name, 'maintainanceMode, do nothing and sleep 60s');
                Rerouter_1.Utils.sleep(60000);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'input rfpageChooseLoginMethod');
            Rerouter_1.rerouter.goNext(rfpageChooseLoginMethod);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageChooseLoginMethodRedroid.name),
        match: exports.rfpageChooseLoginMethodRedroid,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.maintainanceMode) {
                (0, utils_1.logs)(context.task.name, 'maintainanceMode, do nothing and sleep 60s');
                Rerouter_1.Utils.sleep(60000);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'input rfpageChooseLoginMethodRedroid');
            Rerouter_1.rerouter.goNext(exports.rfpageChooseLoginMethodRedroid);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageEnterEmail.name),
        match: rfpageEnterEmail,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.maintainanceMode) {
                (0, utils_1.logs)(context.task.name, 'maintainanceMode, do nothing and sleep 60s');
                Rerouter_1.Utils.sleep(60000);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'input email');
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 150 });
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            (0, utils_1.logs)(context.task.name, "typing email ".concat(scriptConfig_1.config.account));
            typing(scriptConfig_1.config.account, 1000);
            Rerouter_1.Utils.sleep(4000); // sleep must equal to typing
            typing('\n', 500);
            Rerouter_1.Utils.sleep(1000);
            var incorrectEmailFormat = {
                name: 'incorrectEmailFormat',
                x: 222,
                y: 166,
                width: 172,
                height: 12,
                targetY: 6,
                lookingForColor: { r: 226, g: 86, b: 86 },
                targetColorCount: 44,
                targetColorThreashold: 3,
            };
            var registerWithSocialPlatformMessageScreen = {
                name: 'registerWithSocialPlatformMessageScreen',
                x: 225,
                y: 162,
                width: 75,
                height: 13,
                targetY: 8,
                lookingForColor: { r: 244, g: 191, b: 191 },
                targetColorCount: 21,
                targetColorThreashold: 3,
            };
            if ((0, helper_1.checkScreenMessage)(incorrectEmailFormat, rfpageEnterEmail)) {
                (0, utils_1.logs)(context.task.name, 'reported incorrectEmailFormat so handle it');
                checkLoginFailedMaxReached();
            }
            else if ((0, helper_1.checkScreenMessage)(registerWithSocialPlatformMessageScreen, rfpageEnterEmail)) {
                (0, utils_1.logs)(context.task.name, 'reported registerWithSocialPlatformMessageScreen so handle it');
                checkLoginFailedMaxReached();
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(groupPageEnterPassword.name),
        match: groupPageEnterPassword,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'input password');
            if (scriptConfig_1.config.password.length < 8 || scriptConfig_1.config.password.length > 21) {
                (0, utils_1.logs)(context.task.name, "incorrect password length, should between 8 to 20, but got ".concat(scriptConfig_1.config.password.length));
                sendEvent('gameStatus', 'login-failed');
                (0, utils_1.logs)('groupPageEnterPassword', "Max retry count reached, login failed");
                __1.cookieKingdom.stop();
                return true;
            }
            Rerouter_1.rerouter.goNext(rfpageEnterPasswordLongId);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            typing(scriptConfig_1.config.password, 1000);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            typing('\n', 500);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            Rerouter_1.rerouter.screen.tap({ x: 370, y: 190 });
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            var wrongPasswordMessageScreen = {
                name: 'wrongPasswordMessageScreen',
                x: 225,
                y: 162,
                width: 75,
                height: 13,
                targetY: 6,
                lookingForColor: { r: 230, g: 100, b: 100 },
                targetColorCount: 18,
                targetColorThreashold: 2,
            };
            var wrongPasswordMessageScreenWithLongId = {
                name: 'wrongPasswordMessageScreenWithLongId',
                x: 225,
                y: 175,
                width: 75,
                height: 13,
                targetY: 6,
                lookingForColor: { r: 244, g: 100, b: 100 },
                targetColorCount: 25,
                targetColorThreashold: 2,
            };
            if ((0, helper_1.checkScreenMessage)(wrongPasswordMessageScreen, rfpageEnterpasswordFinished)) {
                (0, utils_1.logs)(context.task.name, 'reported wrongPasswordMessageScreen so handle it');
                checkLoginFailedMaxReached();
            }
            if ((0, helper_1.checkScreenMessage)(wrongPasswordMessageScreenWithLongId, rfpageEnterPasswordLongId)) {
                (0, utils_1.logs)(context.task.name, 'reported wrongPasswordMessageScreenWithLongId so handle it');
                checkLoginFailedMaxReached();
            }
            // TODO: send fail to login event
            (0, helper_1.sendCounter)(context.task.name, groupPageEnterPassword.name, {});
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageEnterTwoPasswords.name),
        match: rfpageEnterTwoPasswords,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'rfpageEnterTwoPasswords, this is a new Devister account, stopping');
            sendEvent('gameStatus', 'new-account');
            __1.cookieKingdom.stop();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageEnterTwoPasswordsLongId.name),
        match: exports.rfpageEnterTwoPasswordsLongId,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'rfpageEnterTwoPasswordsLongId, this is a new Devister account, stopping');
            sendEvent('gameStatus', 'new-account');
            __1.cookieKingdom.stop();
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInLoginPageWithGearAndVideo.name),
        match: rfpageInLoginPageWithGearAndVideo,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, 'tapping (575, 22) until the game start every 3 secs');
            Rerouter_1.rerouter.screen.tap({ x: 575, y: 22 });
            Rerouter_1.Utils.sleep(3000);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageAnnouncement.name),
        match: rfpageAnnouncement,
        action: function (context, image, matched, finishRound) {
            if (scriptConfig_1.config.needToSendLoginSuccess) {
                (0, utils_1.logs)(context.task.name, 'have not send login-success, send it');
                sendEvent('gameStatus', 'login-succeeded');
                (0, utils_1.sendEventRunning)();
                scriptConfig_1.config.needToSendLoginSuccess = false;
                (0, helper_1.sendCounter)('login', context.path, {});
            }
            if (scriptConfig_1.config.needToSendPlaying) {
                Rerouter_1.Utils.sleep(3000);
                (0, utils_1.logs)(context.task.name, 'have not send needToSendPlaying, send it');
                sendEvent('gameStatus', 'playing');
                scriptConfig_1.config.needToSendPlaying = false;
            }
            Rerouter_1.rerouter.goNext(rfpageAnnouncement);
        },
    });
    //   rerouter.addRoute({
    //     path: `/${rfpageCanDownloadResources.name}`,
    //     match: rfpageCanDownloadResources,
    //     action: (context, image, matched, finishRound) => {
    //       if (rerouter.isPageMatchImage(rfpageNotEnoughItemToBuyThis, image)) {
    //         logs(context.task.name, 'confused rfpageCanDownloadResources vs rfpageNotEnoughItemToBuyThis, send back twice');
    //         sendKeyBack();
    //         Utils.sleep(config.sleep);
    //         sendKeyBack();
    //         return;
    //       }
    //       logs(context.task.name, 'rfpageCanDownloadResources, go next');
    //       rerouter.goNext(rfpageCanDownloadResources);
    //     },
    //   });
    (0, helper_1.passiveAddRoute)([
        rfpageTermsOfServices,
        exports.rfpageTermsOfServiceWindow,
        rfpageTermsOfServicesMemu,
        exports.rfpageTermsOfServiceWindowRedroid,
        exports.rfpageTermsOfServiceLongWindow,
        rfpageCannotFindLoginInfo,
        rfpageDownloadDataAndVoiceOver,
        rfpageDownloadDataAndVoiceOverUnchecked,
        rfpageServerSelection,
    ]);
}
exports.addLoginRoutes = addLoginRoutes;
function checkLoginFailedMaxReached() {
    if (loginTaskStatus.loginRetryCount > scriptConfig_1.config.loginRetryMaxTimes) {
        sendEvent('gameStatus', 'login-failed');
        (0, utils_1.logs)('checkLoginFailedMaxReached', "Max retry count reached, login failed");
        __1.cookieKingdom.stop();
        return true;
    }
    else {
        loginTaskStatus.loginRetryCount++;
        (0, utils_1.logs)('checkLoginFailedMaxReached', "Restart game as not inputing login info correctly: ".concat(loginTaskStatus.loginRetryCount));
        var rtn = execute('am force-stop com.devsisters.ck');
        if (rtn == 'signal: aborted') {
            // MEmu
            execute('ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am force-stop com.devsisters.ck');
        }
        sleep(15000);
        return false;
    }
}
exports.checkLoginFailedMaxReached = checkLoginFailedMaxReached;


/***/ }),

/***/ "./src/tasks/pvpArena.ts":
/*!*******************************!*\
  !*** ./src/tasks/pvpArena.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addSuperMayhemTask = exports.addPvpArenaTask = exports.addPvpPurchaseTask = exports.addSuperMayhemRoutes = exports.addPvpArenaRoutes = exports.rfpagePvPCrystaisRefresh = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var storage_1 = __webpack_require__(/*! ../storage */ "./src/storage.ts");
var rfpageInPVPArena = new Rerouter_1.Page('rfpageInPVPArena', [
    { x: 628, y: 22, r: 55, g: 167, b: 231 },
    { x: 522, y: 18, r: 5, g: 128, b: 254 },
    { x: 458, y: 14, r: 228, g: 148, b: 40 },
    { x: 448, y: 22, r: 120, g: 38, b: 30 },
    { x: 356, y: 20, r: 239, g: 174, b: 20 },
    { x: 180, y: 119, r: 221, g: 128, b: 0 },
    { x: 22, y: 112, r: 232, g: 198, b: 132 },
    { x: 33, y: 115, r: 238, g: 190, b: 120 },
    { x: 24, y: 74, r: 255, g: 226, b: 0 },
]);
var rfpageInPVPMedalShop = new Rerouter_1.Page('rfpageInPVPMedalShop', [
    { x: 520, y: 23, r: 0, g: 179, b: 255 },
    { x: 449, y: 20, r: 210, g: 160, b: 27 },
    { x: 357, y: 17, r: 235, g: 159, b: 5 },
    { x: 92, y: 63, r: 255, g: 255, b: 255 },
    { x: 15, y: 46, r: 110, g: 110, b: 108 },
    { x: 17, y: 345, r: 28, g: 83, b: 115 },
    { x: 148, y: 315, r: 54, g: 62, b: 95 },
]);
var rfpagePVPNotEnoughMedal = new Rerouter_1.Page('rfpagePVPNotEnoughMedal', [
    { x: 292, y: 248, r: 123, g: 207, b: 8 },
    { x: 320, y: 185, r: 250, g: 210, b: 8 },
    { x: 338, y: 243, r: 123, g: 207, b: 8 },
], { x: 292, y: 248 });
var rfpagePVPArenaTeamSetup = new Rerouter_1.Page('rfpagePVPArenaTeamSetup', [
    { x: 627, y: 20, r: 54, g: 163, b: 230 },
    { x: 598, y: 88, r: 243, g: 90, b: 28 },
    { x: 598, y: 116, r: 121, g: 207, b: 12 },
    { x: 606, y: 139, r: 12, g: 167, b: 223 },
    { x: 602, y: 168, r: 12, g: 167, b: 223 },
    { x: 25, y: 17, r: 128, g: 128, b: 128 },
    { x: 457, y: 267, r: 110, g: 121, b: 165 },
    { x: 530, y: 263, r: 12, g: 167, b: 223 },
    { x: 609, y: 257, r: 239, g: 191, b: 44 },
    { x: 617, y: 20, r: 255, g: 255, b: 255 },
], { x: 617, y: 20 });
var rfpagePVPArenaReadyToBattlePage = new Rerouter_1.Page('rfpagePVPArenaReadyToBattlePage', [
    { x: 529, y: 14, r: 0, g: 196, b: 255 },
    { x: 449, y: 11, r: 242, g: 208, b: 106 },
    { x: 445, y: 24, r: 243, g: 199, b: 98 },
    { x: 359, y: 14, r: 252, g: 192, b: 32 },
    { x: 507, y: 330, r: 125, g: 69, b: 14 },
    { x: 543, y: 337, r: 121, g: 207, b: 12 },
    { x: 160, y: 334, r: 121, g: 207, b: 12 },
    { x: 76, y: 336, r: 12, g: 167, b: 223 },
    { x: 26, y: 81, r: 240, g: 175, b: 0 },
], { x: 502, y: 326 });
exports.rfpagePvPCrystaisRefresh = new Rerouter_1.Page('rfpagePvPCrystaisRefresh', [
    { x: 243, y: 100, r: 57, g: 69, b: 107 },
    { x: 324, y: 78, r: 255, g: 255, b: 255 },
    { x: 443, y: 92, r: 57, g: 166, b: 231 },
    { x: 402, y: 134, r: 247, g: 235, b: 222 },
    { x: 351, y: 250, r: 123, g: 207, b: 8 },
    { x: 408, y: 251, r: 222, g: 207, b: 198 },
], { x: 436, y: 90 });
var rfpagePvPNoArenaTicket = new Rerouter_1.Page('rfpagePvPNoArenaTicket', [
    { x: 496, y: 27, r: 255, g: 255, b: 255 },
    { x: 484, y: 26, r: 56, g: 167, b: 231 },
    { x: 317, y: 84, r: 243, g: 157, b: 69 },
    { x: 454, y: 161, r: 4, g: 151, b: 211 },
    { x: 457, y: 231, r: 4, g: 151, b: 211 },
    { x: 458, y: 303, r: 219, g: 207, b: 199 },
]);
var rfpageInSuperMayhem = new Rerouter_1.Page('rfpageInSuperMayhem', [
    { x: 451, y: 11, r: 255, g: 29, b: 134 },
    { x: 448, y: 19, r: 231, g: 207, b: 235 },
    { x: 353, y: 19, r: 255, g: 225, b: 76 },
    { x: 34, y: 135, r: 206, g: 132, b: 66 },
    { x: 32, y: 189, r: 197, g: 162, b: 184 },
]);
var rfpageNoMayhemTicket = new Rerouter_1.Page('rfpageNoMayhemTicket', [
    { x: 354, y: 283, r: 5, g: 126, b: 254 },
    { x: 391, y: 278, r: 121, g: 207, b: 12 },
    { x: 301, y: 275, r: 12, g: 167, b: 223 },
    { x: 344, y: 128, r: 52, g: 158, b: 228 },
    { x: 321, y: 137, r: 255, g: 29, b: 135 },
    { x: 319, y: 147, r: 254, g: 248, b: 254 },
    { x: 331, y: 11, r: 127, g: 14, b: 67 },
    { x: 407, y: 20, r: 125, g: 96, b: 5 },
    { x: 523, y: 19, r: 2, g: 66, b: 127 },
    { x: 510, y: 321, r: 120, g: 52, b: 86 },
    { x: 484, y: 331, r: 75, g: 108, b: 30 },
], { x: 269, y: 277 });
var rfpageSuperMayhemReadyToBattle = new Rerouter_1.Page('rfpageSuperMayhemReadyToBattle', [
    { x: 548, y: 329, r: 123, g: 207, b: 8 },
    { x: 505, y: 325, r: 255, g: 251, b: 255 },
    { x: 270, y: 334, r: 123, g: 207, b: 8 },
    { x: 304, y: 218, r: 255, g: 223, b: 24 },
], { x: 550, y: 325 });
var rfpageSuperMayhemReadyToBattleIntro = new Rerouter_1.Page('rfpageSuperMayhemReadyToBattleIntro', [
    { x: 609, y: 24, r: 4, g: 11, b: 15 },
    { x: 524, y: 17, r: 0, g: 52, b: 67 },
    { x: 405, y: 18, r: 67, g: 55, b: 0 },
    { x: 327, y: 21, r: 52, g: 48, b: 55 },
    { x: 86, y: 5, r: 33, g: 18, b: 23 },
    { x: 166, y: 13, r: 57, g: 66, b: 65 },
    { x: 214, y: 336, r: 32, g: 54, b: 3 },
    { x: 185, y: 334, r: 3, g: 44, b: 59 },
    { x: 501, y: 329, r: 132, g: 57, b: 109 },
    { x: 548, y: 320, r: 32, g: 54, b: 3 },
], { x: 606, y: 26 });
var rfpageInSuperMayhemIntro = new Rerouter_1.Page('rfpageInSuperMayhemIntro', [
    { x: 606, y: 26, r: 3, g: 2, b: 3 },
    { x: 405, y: 174, r: 255, g: 243, b: 238 },
    { x: 248, y: 164, r: 219, g: 209, b: 205 },
    { x: 524, y: 24, r: 3, g: 49, b: 67 },
    { x: 451, y: 12, r: 67, g: 8, b: 35 },
    { x: 449, y: 19, r: 61, g: 54, b: 62 },
    { x: 354, y: 15, r: 60, g: 47, b: 21 },
    { x: 282, y: 13, r: 15, g: 25, b: 46 },
    { x: 31, y: 135, r: 57, g: 36, b: 13 },
], { x: 606, y: 26 });
// TODO: page is wrong
var rfpageBattleTargetCanRefresh = new Rerouter_1.Page('rfpageBattleTargetCanRefresh', [
    { x: 532, y: 306, r: 12, g: 166, b: 223 },
    { x: 522, y: 304, r: 255, g: 255, b: 255 },
    { x: 541, y: 303, r: 12, g: 166, b: 223 },
    { x: 188, y: 328, r: 56, g: 167, b: 231 },
    { x: 18, y: 323, r: 56, g: 167, b: 231 },
    { x: 35, y: 78, r: 255, g: 221, b: 16 },
    { x: 25, y: 78, r: 255, g: 232, b: 0 },
    { x: 178, y: 118, r: 204, g: 119, b: 17 },
    { x: 28, y: 114, r: 251, g: 235, b: 199 },
    { x: 615, y: 302, r: 12, g: 166, b: 223 },
]);
var pvpStatus = {
    0: {
        battled: false,
        xy: { x: 288, y: 176 },
    },
    1: {
        battled: false,
        xy: { x: 418, y: 176 },
    },
    2: {
        battled: false,
        xy: { x: 548, y: 176 },
    },
    3: {
        battled: false,
        xy: { x: 430, y: 176 },
    },
    4: {
        battled: false,
        xy: { x: 560, y: 176 },
    },
};
function addPvpArenaRoutes() {
    // TASKS.pvpPurchaseAncientCookie
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInPVPMedalShop.name),
        match: rfpageInPVPMedalShop,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageInPVPMedalShop");
            if (context.task.name !== tasks_1.TASKS.pvpPurchaseAncientCookie) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            // Part of the rfpageInPVPMedalShop page
            var rfpagePVPAncientCookieSoldout = new Rerouter_1.Page('rfpagePVPAncientCookieSoldout', [
                { x: 86, y: 109, r: 206, g: 20, b: 24 },
                { x: 38, y: 131, r: 206, g: 20, b: 24 },
            ]);
            var rfpagePVPSuperEpicCookieSoldout = new Rerouter_1.Page('rfpagePVPSuperEpicCookieSoldout', [
                { x: 118, y: 127, r: 220, g: 23, b: 24 },
                { x: 170, y: 112, r: 206, g: 20, b: 24 },
                { x: 164, y: 98, r: 74, g: 76, b: 87 },
            ]);
            if (!Rerouter_1.rerouter.isPageMatchImage(rfpagePVPAncientCookieSoldout, image)) {
                Rerouter_1.rerouter.screen.tap({ x: 57, y: 125 });
                Rerouter_1.Utils.sleep(1000);
                Rerouter_1.rerouter.screen.tap({ x: 317, y: 260 });
                Rerouter_1.Utils.sleep(2000);
                (0, utils_1.logs)(context.task.name, "Purchased ancient cookie successfully");
            }
            else {
                (0, utils_1.logs)(context.task.name, "ancient cookie already sold out");
            }
            if (!Rerouter_1.rerouter.isPageMatchImage(rfpagePVPSuperEpicCookieSoldout, image)) {
                Rerouter_1.rerouter.screen.tap({ x: 145, y: 125 });
                Rerouter_1.Utils.sleep(1000);
                Rerouter_1.rerouter.screen.tap({ x: 317, y: 260 });
                Rerouter_1.Utils.sleep(2000);
                (0, utils_1.logs)(context.task.name, "Purchased super epic cookie successfully");
            }
            else {
                (0, utils_1.logs)(context.task.name, "super epic cookie already sold out");
            }
            (0, utils_1.sendKeyBack)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpagePVPNotEnoughMedal.name),
        match: rfpagePVPNotEnoughMedal,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.pvpPurchaseAncientCookie) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpagePVPNotEnoughMedal, Need more medals, skipping");
            Rerouter_1.rerouter.goNext(rfpagePVPNotEnoughMedal);
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    // TASKS.pvp
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInPVPArena.name),
        match: rfpageInPVPArena,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 3) !== tasks_1.TASKS.pvp) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageInPVPArena");
            switch (context.task.name) {
                case tasks_1.TASKS.pvp:
                    for (var i in pvpStatus) {
                        (0, utils_1.logs)(context.task.name, "rfpageInPVPArena, checking #".concat(i, " so tap ").concat(JSON.stringify(pvpStatus[i].xy), " and battled: ").concat(pvpStatus[i].battled));
                        if (!pvpStatus[i].battled) {
                            if (+i > 2) {
                                (0, helper_1.swipeFromToPoint)({ x: 600, y: 182 }, { x: 0, y: 182 }, 6);
                            }
                            storage_1.globalStorage.botStatus.battleStarted = 0;
                            Rerouter_1.rerouter.screen.tap(pvpStatus[i].xy);
                            pvpStatus[i].battled = true;
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            return;
                        }
                    }
                    if (Rerouter_1.rerouter.isPageMatch(rfpageBattleTargetCanRefresh)) {
                        (0, utils_1.logs)(context.task.name, "Tap PVP refresh");
                        Rerouter_1.rerouter.screen.tap({ x: 543, y: 303 });
                        Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                        return;
                    }
                    else {
                        (0, utils_1.logs)(context.task.name, "Cannot tap PVP refresh, job done");
                        (0, utils_1.sendEventRunning)();
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                case tasks_1.TASKS.pvpPurchaseAncientCookie:
                    Rerouter_1.rerouter.screen.tap({ x: 178, y: 118 });
                    break;
                default:
                    (0, utils_1.logs)(context.task.name, "rfpageInPVPArena, leave because current task is not pvp related, but: ".concat(context.task.name));
                    (0, utils_1.sendKeyBack)();
                    return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpagePvPNoArenaTicket.name),
        match: rfpagePvPNoArenaTicket,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.pvp) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpagePvPNoArenaTicket, send back and finish task");
            (0, utils_1.sendKeyBack)();
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpagePVPArenaReadyToBattlePage.name),
        match: rfpagePVPArenaReadyToBattlePage,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.pvp) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpagePVPArenaReadyToBattlePage, tap it");
            var ce = getCEs({ x: 496, y: 72, w: 70, h: 16 });
            if (ce < scriptConfig_1.config.autoPvPTargetScoreLimit && ce !== 0) {
                (0, utils_1.logs)(context.task.name, "Battle with ce ".concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoPvPTargetScoreLimit));
                Rerouter_1.rerouter.goNext(rfpagePVPArenaReadyToBattlePage); // tap Battle
                if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpagePVPArenaReadyToBattlePage, 2000)) {
                    return;
                }
            }
            else {
                (0, utils_1.logs)(context.task.name, "Not to battle with ce ".concat(ce, ", target exceed limit: ").concat(scriptConfig_1.config.autoPvPTargetScoreLimit));
                (0, utils_1.sendKeyBack)();
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpagePvPCrystaisRefresh.name),
        match: exports.rfpagePvPCrystaisRefresh,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpagePvPCrystaisRefresh, send back and finish round");
            (0, utils_1.sendKeyBack)();
            finishRound(true);
        },
    });
}
exports.addPvpArenaRoutes = addPvpArenaRoutes;
function addSuperMayhemRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInSuperMayhem.name),
        match: rfpageInSuperMayhem,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.superMayhem) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            var rfpageSuperMayhemCanRefresh = new Rerouter_1.Page('rfpageSuperMayhemCanRefresh', [
                { x: 516, y: 327, r: 255, g: 255, b: 255 },
                { x: 528, y: 326, r: 86, g: 82, b: 105 },
                { x: 541, y: 330, r: 153, g: 153, b: 153 },
                { x: 568, y: 330, r: 199, g: 199, b: 199 },
            ]);
            (0, utils_1.logs)(context.task.name, "in rfpageInSuperMayhem");
            var battleY = [75, 160, 250];
            var scores = (0, helper_1.getMayhemScores)();
            (0, utils_1.logs)(context.task.name, "super mayhem scores: ".concat(JSON.stringify(scores)));
            for (var i = 0; i < scores.length; i++) {
                var ce = scores[i];
                if (ce < scriptConfig_1.config.autoSuperMayhemTargetScoreLimit && ce !== 0) {
                    if (!Rerouter_1.rerouter.screen.isSameColor({ x: 590, y: battleY[i], r: 121, g: 207, b: 16 })) {
                        (0, utils_1.logs)(context.task.name, "Already Battled with ".concat(i, ", ce ").concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoSuperMayhemTargetScoreLimit));
                        continue;
                    }
                    (0, utils_1.logs)(context.task.name, "Battle with ".concat(i, ", ce ").concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoSuperMayhemTargetScoreLimit));
                    Rerouter_1.rerouter.screen.tap({ x: 590, y: battleY[i] }); // tap Battle
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageSuperMayhemReadyToBattle, 3000)) {
                        Rerouter_1.rerouter.goNext(rfpageSuperMayhemReadyToBattle);
                        storage_1.globalStorage.botStatus.battleStarted = 0;
                        return;
                    }
                    (0, utils_1.logs)(context.task.name, "Failed to find rfpageSuperMayhemReadyToBattle in 3 secs, skipping this one");
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Not to battle with ".concat(i, ", ce ").concat(ce, ", target limit: ").concat(scriptConfig_1.config.autoSuperMayhemTargetScoreLimit));
                }
            }
            if (Rerouter_1.rerouter.isPageMatch(rfpageSuperMayhemCanRefresh)) {
                (0, utils_1.logs)(context.task.name, "Tap Super mayhem refresh");
                Rerouter_1.rerouter.screen.tap({ x: 532, y: 329 });
            }
            else {
                (0, utils_1.logs)(context.task.name, "Cannot tap Super mayhem refresh, job done");
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageNoMayhemTicket.name),
        match: rfpageNoMayhemTicket,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.superMayhem) {
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageNoMayhemTicket, send back and finish task");
            (0, utils_1.sendKeyBack)();
            (0, utils_1.sendEventRunning)();
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
        },
    });
    (0, helper_1.passiveAddRoute)([
        // Marked as page conflict in fountain when stock is full ["rfpageInSuperMayhemIntro","rfpageStockIsFull"]
        // rfpageInSuperMayhemIntro,
        rfpageSuperMayhemReadyToBattleIntro,
        rfpagePVPArenaTeamSetup,
    ]);
}
exports.addSuperMayhemRoutes = addSuperMayhemRoutes;
function addPvpPurchaseTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.pvpPurchaseAncientCookie,
        maxTaskDuring: 4 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoPvPIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addPvpPurchaseTask = addPvpPurchaseTask;
function addPvpArenaTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.pvp,
        maxTaskDuring: 9 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoPvPIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(pvpStatus, {
                0: {
                    battled: false,
                    xy: { x: 288, y: 176 },
                },
                1: {
                    battled: false,
                    xy: { x: 418, y: 176 },
                },
                2: {
                    battled: false,
                    xy: { x: 548, y: 176 },
                },
                3: {
                    battled: false,
                    xy: { x: 430, y: 176 },
                },
                4: {
                    battled: false,
                    xy: { x: 560, y: 176 },
                },
            });
        },
    });
}
exports.addPvpArenaTask = addPvpArenaTask;
function addSuperMayhemTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.superMayhem,
        maxTaskDuring: 9 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoSuperMayhemIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addSuperMayhemTask = addSuperMayhemTask;
function getCEs(rect) {
    var img = getScreenshot();
    var croppedImage1 = cropImage(img, rect.x, rect.y, rect.w, rect.h);
    var value1 = +(0, helper_1.recognizeWishingTreeRequirements)(ICONS.numberImagesPvP, croppedImage1, 7, 0.75, 0.7) || 0;
    releaseImage(croppedImage1);
    releaseImage(img);
    return value1;
}


/***/ }),

/***/ "./src/tasks/tradeHabor.ts":
/*!*********************************!*\
  !*** ./src/tasks/tradeHabor.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addShellGalleryTask = exports.addSeasideMarketTask = exports.addSendHaborShipTask = exports.addTradeHaborRoutes = exports.rfpageShellShopNotEnoughShell = exports.rfpageConfirmBuyEpicSoulEssence = exports.rfpageConfirmBuyGuildRelics = exports.rfpageConfirmBuyLegendSoulStone = exports.rfpageNotEnoughItemToBuyThis = exports.rfpageMarketItemDetail = exports.rfpageInTradeHabor = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var types_1 = __webpack_require__(/*! ../types */ "./src/types.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
exports.rfpageInTradeHabor = new Rerouter_1.Page('rfpageInTradeHabor', [
    { x: 314, y: 18, r: 247, g: 254, b: 203 },
    { x: 404, y: 20, r: 243, g: 232, b: 12 },
    { x: 519, y: 21, r: 0, g: 178, b: 255 },
    { x: 34, y: 222, r: 255, g: 235, b: 206 },
    // { x: 96, y: 229, r: 132, g: 120, b: 32 },  // got from Memu
    { x: 106, y: 219, r: 220, g: 117, b: 0 },
    { x: 613, y: 261, r: 57, g: 166, b: 231 },
]);
var rfpageShipInHabor = new Rerouter_1.Page('rfpageShipInHabor', [
    { x: 418, y: 212, r: 55, g: 34, b: 22 },
    { x: 609, y: 211, r: 176, g: 133, b: 66 },
    { x: 585, y: 229, r: 123, g: 78, b: 44 },
]);
var rfpageNoShipInHabor = new Rerouter_1.Page('rfpageNoShipInHabor', [
    { x: 246, y: 66, r: 255, g: 12, b: 82 },
    { x: 233, y: 88, r: 249, g: 242, b: 212 },
    { x: 255, y: 138, r: 126, g: 114, b: 41 },
]);
var rfpageCanLoadThisItem = new Rerouter_1.Page('rfpageCanLoadThisItem', [
    { x: 424, y: 201, r: 59, g: 205, b: 0 },
    { x: 351, y: 246, r: 123, g: 207, b: 8 },
    { x: 414, y: 242, r: 222, g: 207, b: 198 },
    { x: 433, y: 309, r: 57, g: 69, b: 107 },
], { x: 434, y: 50 });
var rfpageLoadTooMuchWarning = new Rerouter_1.Page('rfpageLoadTooMuchWarning', [
    { x: 400, y: 252, r: 123, g: 207, b: 8 },
    { x: 304, y: 253, r: 8, g: 166, b: 222 },
    { x: 436, y: 288, r: 27, g: 33, b: 51 },
    { x: 260, y: 55, r: 28, g: 34, b: 53 },
]);
var rfpageInSeasideMarket = new Rerouter_1.Page('rfpageInSeasideMarket', [
    { x: 617, y: 21, r: 255, g: 255, b: 255 },
    { x: 566, y: 183, r: 114, g: 76, b: 32 },
    { x: 256, y: 121, r: 101, g: 151, b: 23 },
    { x: 280, y: 5, r: 206, g: 227, b: 49 },
    { x: 178, y: 117, r: 247, g: 52, b: 90 },
]);
var rfpageFreeRefreshSeasideMarket = new Rerouter_1.Page('rfpageFreeRefreshSeasideMarket', [
    { x: 510, y: 333, r: 155, g: 155, b: 155 },
    { x: 504, y: 333, r: 172, g: 146, b: 126 },
    { x: 498, y: 333, r: 148, g: 120, b: 111 },
    { x: 494, y: 333, r: 175, g: 148, b: 117 },
]);
var rfpageNeedDiamondRefreshMarket = new Rerouter_1.Page('rfpageNeedDiamondRefreshMarket', [
    { x: 426, y: 110, r: 57, g: 169, b: 231 },
    { x: 305, y: 102, r: 255, g: 255, b: 255 },
    { x: 363, y: 118, r: 57, g: 69, b: 107 },
    { x: 297, y: 124, r: 33, g: 44, b: 66 },
], { x: 426, y: 110 });
exports.rfpageMarketItemDetail = new Rerouter_1.Page('rfpageMarketItemDetail', [
    { x: 384, y: 261, r: 205, g: 194, b: 186 },
    { x: 376, y: 236, r: 222, g: 207, b: 198 },
    { x: 378, y: 204, r: 247, g: 235, b: 222 },
    { x: 366, y: 84, r: 57, g: 69, b: 107 },
    { x: 447, y: 87, r: 57, g: 170, b: 231 },
    { x: 261, y: 15, r: 103, g: 113, b: 24 },
    { x: 214, y: 51, r: 90, g: 59, b: 33 },
], { x: 348, y: 265 });
exports.rfpageNotEnoughItemToBuyThis = new Rerouter_1.Page('rfpageNotEnoughItemToBuyThis', [
    { x: 441, y: 95, r: 181, g: 198, b: 209 },
    { x: 378, y: 108, r: 57, g: 69, b: 107 },
    { x: 340, y: 159, r: 9, g: 67, b: 86 },
    { x: 429, y: 132, r: 247, g: 235, b: 222 },
    { x: 447, y: 126, r: 127, g: 121, b: 123 },
    { x: 298, y: 7, r: 109, g: 116, b: 28 },
    { x: 105, y: 26, r: 8, g: 48, b: 28 },
    { x: 585, y: 87, r: 119, g: 125, b: 119 },
], { x: 434, y: 95 });
var rfpageInShellShop = new Rerouter_1.Page('rfpageInShellShop', [
    { x: 609, y: 22, r: 57, g: 166, b: 231 },
    { x: 323, y: 28, r: 247, g: 181, b: 243 },
    { x: 272, y: 28, r: 200, g: 212, b: 214 },
    { x: 254, y: 12, r: 231, g: 199, b: 156 },
]);
exports.rfpageConfirmBuyLegendSoulStone = new Rerouter_1.Page('rfpageConfirmBuyLegendSoulStone', [
    { x: 154, y: 315, r: 60, g: 103, b: 6 },
    { x: 89, y: 314, r: 124, g: 94, b: 119 },
    { x: 245, y: 86, r: 57, g: 69, b: 107 },
    { x: 235, y: 242, r: 222, g: 207, b: 198 },
    { x: 318, y: 15, r: 125, g: 103, b: 117 },
    { x: 410, y: 19, r: 127, g: 95, b: 4 },
    { x: 287, y: 16, r: 119, g: 111, b: 117 },
    { x: 271, y: 30, r: 99, g: 105, b: 103 },
    { x: 334, y: 260, r: 121, g: 207, b: 12 },
], { x: 334, y: 260 });
exports.rfpageConfirmBuyGuildRelics = new Rerouter_1.Page('rfpageConfirmBuyGuildRelics', [
    { x: 337, y: 67, r: 155, g: 95, b: 43 },
    { x: 325, y: 77, r: 207, g: 122, b: 64 },
    { x: 319, y: 18, r: 121, g: 97, b: 118 },
    { x: 369, y: 89, r: 60, g: 70, b: 105 },
    { x: 362, y: 318, r: 113, g: 117, b: 111 },
    { x: 424, y: 317, r: 60, g: 103, b: 6 },
    { x: 364, y: 84, r: 60, g: 70, b: 105 },
], { x: 319, y: 236 });
var rfpageConfirmBuyLegendSoulEssence = new Rerouter_1.Page('rfpageConfirmBuyLegendSoulEssence', [
    { x: 344, y: 255, r: 121, g: 207, b: 12 },
    { x: 307, y: 261, r: 249, g: 189, b: 238 },
    { x: 330, y: 77, r: 249, g: 249, b: 249 },
    { x: 321, y: 95, r: 218, g: 182, b: 235 },
    { x: 275, y: 84, r: 60, g: 70, b: 105 },
    { x: 317, y: 19, r: 124, g: 114, b: 107 },
], { x: 302, y: 254 });
exports.rfpageConfirmBuyEpicSoulEssence = new Rerouter_1.Page('rfpageConfirmBuyEpicSoulEssence', [
    { x: 326, y: 184, r: 228, g: 218, b: 209 },
    { x: 312, y: 263, r: 202, g: 202, b: 224 },
    { x: 353, y: 255, r: 113, g: 194, b: 11 },
    { x: 327, y: 81, r: 239, g: 207, b: 233 },
    { x: 320, y: 91, r: 239, g: 32, b: 159 },
    { x: 345, y: 92, r: 34, g: 43, b: 60 },
], { x: 312, y: 253 });
exports.rfpageShellShopNotEnoughShell = new Rerouter_1.Page('rfpageShellShopNotEnoughShell', [
    { x: 351, y: 243, r: 121, g: 207, b: 12 },
    { x: 320, y: 180, r: 246, g: 200, b: 229 },
    { x: 327, y: 194, r: 248, g: 180, b: 243 },
    { x: 337, y: 183, r: 207, g: 193, b: 182 },
    { x: 342, y: 158, r: 52, g: 158, b: 228 },
    { x: 318, y: 107, r: 60, g: 70, b: 105 },
    { x: 271, y: 32, r: 102, g: 103, b: 95 },
    { x: 257, y: 14, r: 113, g: 98, b: 76 },
    { x: 38, y: 7, r: 109, g: 78, b: 94 },
]);
var seasideMarketStatus = {
    needPullToRightHead: true,
    rareItems: [],
    rightSlideCount: 0,
    rightSlideLimit: scriptConfig_1.config.autoShopInSeasideMarket ? 5 : 0,
    needToBuyRadiantShard: scriptConfig_1.config.autoBuyRadiantShardsInHabor,
    purchaseIndex: 0,
    foundResults: undefined,
    foundIndex: 0,
    nowHave: 0,
};
if (scriptConfig_1.config.autoBalanceAuroraStocks) {
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[0]);
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[1]);
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[2]);
}
if (scriptConfig_1.config.autoBuyCaramelStuff) {
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[3]);
    seasideMarketStatus.rareItems.push(types_1.seasideStockRect[4]);
}
var shellGalleryStatus = {
    autoBuySeaFairy: scriptConfig_1.config.autoBuySeaFairy,
    autoBuyEpicSoulEssence: scriptConfig_1.config.autoBuyEpicSoulEssence,
    autoBuyLegendSoulEssence: scriptConfig_1.config.autoBuyLegendSoulEssence,
    autoBuyGuildRelic: scriptConfig_1.config.autoBuyGuildRelic,
};
function addTradeHaborRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageInTradeHabor.name),
        match: exports.rfpageInTradeHabor,
        action: function (context, image, matched, finishRound) {
            if (context.task.name === tasks_1.TASKS.findAndTapCandy) {
                (0, utils_1.logs)(context.task.name, "rfpageInTradeHabor, but current task is ".concat(context.task.name, ", need to start over"));
                (0, utils_1.sendKeyBack)();
                // TODO: if findAndTapCandy moved, need to changed
                // cookieKingdom!.taskStatus[TASKS.findAndTapCandy]['needGotoHead'] = true;
                return;
            }
            else if (context.task.name.substring(0, 5) !== 'habor') {
                (0, utils_1.logs)(context.task.name, "rfpageInTradeHabor, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageInTradeHabor");
            switch (context.task.name) {
                case tasks_1.TASKS.haborSendShip:
                    if (Rerouter_1.rerouter.isPageMatchImage(rfpageNoShipInHabor, image)) {
                        (0, utils_1.logs)(context.task.name, "No ship in habor, finish ".concat(context.task.name));
                        (0, utils_1.sendEventRunning)();
                        (0, helper_1.sendCounter)(context.task.name, context.path, {});
                        finishRound(true);
                        return;
                    }
                    var i = 0;
                    var shipInHabor = true;
                    for (i = 0; i < 5 && shipInHabor; i++) {
                        for (var xPixel = i === 0 ? 55 : 200; xPixel < 620; xPixel += 60) {
                            Rerouter_1.rerouter.screen.tap({ x: xPixel, y: 318 });
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                            if (Rerouter_1.rerouter.isPageMatch(rfpageCanLoadThisItem)) {
                                (0, utils_1.logs)(context.task.name, "can load the item at x: ".concat(xPixel));
                                Rerouter_1.rerouter.screen.tap({ x: 408, y: 202 }); // tap Max
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleep);
                                Rerouter_1.rerouter.screen.tap({ x: 342, y: 240 }); // tap load
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            }
                            if (Rerouter_1.rerouter.isPageMatch(rfpageLoadTooMuchWarning)) {
                                Rerouter_1.rerouter.screen.tap({ x: 270, y: 252 }); // Cancel ship confirm
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 270, y: 200 }); // tap minus icon
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 320, y: 240 }); // tap load
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            }
                            if (Rerouter_1.rerouter.isPageMatch(rfpageLoadTooMuchWarning)) {
                                //Even one item is too much
                                Rerouter_1.rerouter.screen.tap({ x: 270, y: 252 }); // Cancel ship confirm
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 434, y: 50 }); // tap close icon
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap({ x: 320, y: 240 }); // tap load
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 2);
                            }
                            if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageNoShipInHabor, 3000)) {
                                (0, utils_1.logs)(context.task.name, "Send the ship successfully");
                                shipInHabor = false;
                                break;
                            }
                        }
                        if (Rerouter_1.rerouter.isPageMatch(rfpageNoShipInHabor)) {
                            break;
                        }
                        (0, helper_1.swipeFromToPoint)({ x: 629, y: 319 }, { x: 200, y: 319 }, 5);
                    }
                    return;
                case tasks_1.TASKS.haborShopInSeaMarket:
                    Rerouter_1.rerouter.screen.tap({ x: 95, y: 230 });
                    return;
                case tasks_1.TASKS.haborShopInShellGallery:
                    Rerouter_1.rerouter.screen.tap({ x: 32, y: 226 });
                    return;
                default:
                    console.log('donno what to do in rfpageInTradeHabor, send back');
                    (0, utils_1.sendKeyBack)();
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInSeasideMarket.name),
        match: rfpageInSeasideMarket,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.haborShopInSeaMarket) {
                (0, utils_1.logs)(context.task.name, "rfpageInSeasideMarket, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "In seaside marketing, send running, task status is: ".concat(JSON.stringify(seasideMarketStatus)));
            (0, utils_1.sendEventRunning)();
            var marketSearchArea = { x: 0, y: 180, w: 630, h: 140 };
            if (Rerouter_1.rerouter.isPageMatch(rfpageFreeRefreshSeasideMarket)) {
                Rerouter_1.rerouter.screen.tap({ x: 543, y: 336 }); // market free refresh, no need to pull to the head of the list as refresh will reset the list
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageNeedDiamondRefreshMarket, 3000)) {
                    Rerouter_1.rerouter.goNext(rfpageNeedDiamondRefreshMarket);
                    Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                }
            }
            else if (seasideMarketStatus.needPullToRightHead) {
                // swipe to start of the list
                (0, helper_1.swipeFromToPoint)({ x: 0, y: 234 }, { x: 4000, y: 234 }, 6, undefined, rfpageInSeasideMarket);
                seasideMarketStatus.needPullToRightHead = false;
            }
            var rfpage1stAuroraSoldOut = new Rerouter_1.Page('rfpage1stAuroraSoldOut', [{ x: 59, y: 262, r: 206, g: 20, b: 24 }]);
            var rfpage2ndAuroraSoldOut = new Rerouter_1.Page('rfpage2ndAuroraSoldOut', [{ x: 150, y: 257, r: 239, g: 24, b: 24 }]);
            var rfpage3rdAuroraSoldOut = new Rerouter_1.Page('rfpage3rdAuroraSoldOut', [{ x: 247, y: 260, r: 206, g: 20, b: 24 }]);
            var rfpageCarmelMapMax = new Rerouter_1.Page('rfpageCarmelMapMax', [
                { x: 339, y: 291, r: 196, g: 130, b: 72 },
                { x: 333, y: 289, r: 157, g: 91, b: 36 },
                { x: 324, y: 294, r: 148, g: 219, b: 57 },
            ]);
            var rfpageCarmeScopeMax = new Rerouter_1.Page('rfpageCarmeScopeMax', [
                { x: 431, y: 291, r: 255, g: 166, b: 73 },
                { x: 423, y: 296, r: 138, g: 199, b: 178 },
                { x: 416, y: 294, r: 148, g: 215, b: 57 },
            ]);
            // Remove sold out aurora items
            // TODO: double confirm
            if (scriptConfig_1.config.autoBalanceAuroraStocks && seasideMarketStatus.rareItems.length > 0) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpage1stAuroraSoldOut, image)) {
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 66; });
                }
                if (Rerouter_1.rerouter.isPageMatchImage(rfpage2ndAuroraSoldOut, image)) {
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 158; });
                }
                if (Rerouter_1.rerouter.isPageMatchImage(rfpage3rdAuroraSoldOut, image)) {
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 253; });
                }
            }
            // Market will remove Carmel map/scope back from the shopping list if it is fulled
            if (scriptConfig_1.config.autoBuyCaramelStuff && seasideMarketStatus.rareItems.length > 0) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageCarmelMapMax, image)) {
                    // seamarketState.rareItems = seamarketState.rareItems.filter(obj => obj.x !== 346);
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 346; });
                }
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageCarmeScopeMax, image)) {
                    // seamarketState.rareItems = seamarketState.rareItems.filter(obj => obj.x !== 439);
                    seasideMarketStatus.rareItems = seasideMarketStatus.rareItems.filter(function (obj) { return obj.x !== 439; });
                }
            }
            if (seasideMarketStatus.rareItems.length > 0) {
                console.log('>> considerPurchaseSeasideMarket:', considerPurchaseSeasideMarket(seasideMarketStatus.rareItems.shift()));
                return;
            }
            if (seasideMarketStatus.needToBuyRadiantShard) {
                (0, utils_1.logs)(context.task.name, 'Purchasing radiant shard');
                Rerouter_1.rerouter.screen.tap({ x: 540, y: 270 });
                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                Rerouter_1.rerouter.screen.tap({ x: 315, y: 265 });
                Rerouter_1.Utils.sleep(2000);
                seasideMarketStatus.needToBuyRadiantShard = false;
            }
            // for i = rightSlideCount < rightSlideLimit
            // for j = purchaseIndex < Object.keys(ICONS.iconSeasideMarketItems)
            // for k = foundIndex < Object.keys(foundResults)
            console.log('>> 1, consider slide to right', JSON.stringify(seasideMarketStatus));
            if (seasideMarketStatus.rightSlideCount >= seasideMarketStatus.rightSlideLimit) {
                (0, utils_1.logs)(context.task.name, "Jobs finish");
                (0, utils_1.sendKeyBack)();
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            console.log('>> 2, loop through shopping list', JSON.stringify(seasideMarketStatus));
            if (seasideMarketStatus.purchaseIndex >= Object.keys(ICONS.iconSeasideMarketItems).length) {
                seasideMarketStatus.rightSlideCount++;
                seasideMarketStatus.purchaseIndex = 0;
                (0, helper_1.swipeFromToPoint)({ x: 600, y: 234 }, { x: 0, y: 234 }, 6, undefined, rfpageInSeasideMarket);
                sleep(2000);
                seasideMarketStatus.foundResults = undefined;
                return;
            }
            console.log('>> 3, go find next item as seasideMarketStatus.foundResults finished', JSON.stringify(seasideMarketStatus));
            if (seasideMarketStatus.foundResults && seasideMarketStatus.foundIndex >= Object.keys(seasideMarketStatus.foundResults).length) {
                seasideMarketStatus.purchaseIndex++;
                seasideMarketStatus.foundResults = undefined;
                return;
            }
            if (seasideMarketStatus.foundResults === undefined || Object.keys(seasideMarketStatus.foundResults).length === 0) {
                console.log('>> 3.1, look for next item in shopping list', JSON.stringify(seasideMarketStatus));
                for (var i = seasideMarketStatus.purchaseIndex; i < Object.keys(ICONS.iconSeasideMarketItems).length; i++) {
                    console.log('>> 3.2, checking item: ', i, JSON.stringify(seasideMarketStatus));
                    seasideMarketStatus.foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketItems[i], marketSearchArea);
                    seasideMarketStatus.foundIndex = 0;
                    seasideMarketStatus.purchaseIndex = i;
                    if (Object.keys(seasideMarketStatus.foundResults).length > 0) {
                        console.log('>> 3.3 found ith item', JSON.stringify(seasideMarketStatus));
                        break;
                    }
                }
                if (Object.keys(seasideMarketStatus.foundResults).length === 0) {
                    return;
                }
            }
            console.log(">> 4 consider to purchase ".concat(ICONS.iconSeasideMarketItems[seasideMarketStatus.purchaseIndex].name, ", state: ").concat(JSON.stringify(seasideMarketStatus), ", result: ").concat(considerPurchaseSeasideMarket({
                x: marketSearchArea.x + seasideMarketStatus.foundResults[seasideMarketStatus.foundIndex].x,
                y: 282,
                w: 62,
                h: 18,
            })));
            sleep(1000);
            seasideMarketStatus.foundIndex++;
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageMarketItemDetail.name),
        match: exports.rfpageMarketItemDetail,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 5) !== 'habor') {
                (0, utils_1.logs)(context.task.name, "rfpageInSeasideMarket, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageMarketItemDetail, handle it");
            // 讀這個東西現在有多少
            var targetItemAmount = (0, helper_1.ocrNumberInRect)({ x: 330, y: 154, w: 28, h: 14 }, ICONS.bNumbers);
            if (targetItemAmount === -1) {
                (0, utils_1.logs)(context.task.name, "About to purchase ".concat(ICONS.iconSeasideMarketItems[seasideMarketStatus.purchaseIndex].name, " but found ").concat(targetItemAmount, " (OCR failure), skip this one"));
                (0, utils_1.sendKeyBack)();
            }
            // 與手上相比
            var itemType = checkIfNeedSkipThisSpecialItems();
            (0, utils_1.logs)('rfpageMarketItemDetail', "Considering trade ".concat(seasideMarketStatus.nowHave, " (type '").concat(itemType, "') for ").concat(targetItemAmount));
            if (itemType === types_1.SeasideMarketItemType.mustSkip) {
                (0, utils_1.logs)('rfpageMarketItemDetail', "The required item is a SeasideMarketItemType.mustSkip, skip this one");
                (0, utils_1.sendKeyBack)();
                return;
            }
            else if (itemType === types_1.SeasideMarketItemType.compareAmount) {
                if (seasideMarketStatus.nowHave > targetItemAmount) {
                    (0, utils_1.logs)('rfpageMarketItemDetail', "Decided to use ".concat(seasideMarketStatus.nowHave, " to buy ").concat(targetItemAmount));
                    Rerouter_1.rerouter.goNext(exports.rfpageMarketItemDetail);
                    sleep(1000);
                    return;
                }
                else {
                    (0, utils_1.logs)('rfpageMarketItemDetail', "Decided NOT to use ".concat(seasideMarketStatus.nowHave, " to buy ").concat(targetItemAmount));
                    Rerouter_1.rerouter.screen.tap({ x: 438, y: 90 }); // close the window
                    return;
                }
            }
            else if (itemType === types_1.SeasideMarketItemType.buyAnyway) {
                (0, utils_1.logs)('rfpageMarketItemDetail', "Decided to use ".concat(seasideMarketStatus.nowHave, " to buy ").concat(targetItemAmount, " (buyAnyway)"));
                Rerouter_1.rerouter.goNext(exports.rfpageMarketItemDetail);
                sleep(1000);
                return;
            }
            else {
                (0, utils_1.logs)(context.task.name, "Don't do anything as cannot resolve itemType");
                (0, utils_1.sendKeyBack)();
                return;
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageNotEnoughItemToBuyThis.name),
        match: exports.rfpageNotEnoughItemToBuyThis,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageNotEnoughItemToBuyThis, send back twice");
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInShellShop.name),
        match: rfpageInShellShop,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== 'haborShopInShellGallery') {
                (0, utils_1.logs)(context.task.name, "rfpageInShellShop, but current task is ".concat(context.task.name, ", skipping"));
                (0, utils_1.sendKeyBack)();
                return;
            }
            var rfpageLegendarySoldOut = new Rerouter_1.Page('rfpageLegendarySoldOut', [
                { x: 84, y: 226, r: 207, g: 22, b: 24 },
                { x: 148, y: 196, r: 207, g: 22, b: 24 },
            ]);
            if (shellGalleryStatus.autoBuySeaFairy) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageLegendarySoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased legendary cookie successfully");
                    shellGalleryStatus.autoBuySeaFairy = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing legendary cookie");
                    Rerouter_1.rerouter.screen.tap({ x: 80, y: 313 });
                    return;
                }
            }
            var rfpageRelicSoldOut = new Rerouter_1.Page('rfpageRelicSoldOut', [
                { x: 414, y: 242, r: 126, g: 0, b: 1 },
                { x: 393, y: 253, r: 207, g: 22, b: 24 },
                { x: 407, y: 262, r: 107, g: 107, b: 107 },
                { x: 398, y: 285, r: 139, g: 139, b: 139 },
            ]);
            if (shellGalleryStatus.autoBuyGuildRelic) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageRelicSoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased guild relic successfully");
                    shellGalleryStatus.autoBuyGuildRelic = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing guild relic");
                    Rerouter_1.rerouter.screen.tap({ x: 360, y: 313 });
                    return;
                }
            }
            var rfpageLegendSoulEssenceSoldOut = new Rerouter_1.Page('rfpageLegendSoulEssenceSoldOut', [
                { x: 292, y: 118, r: 205, g: 22, b: 27 },
                { x: 277, y: 140, r: 246, g: 255, b: 255 },
            ]);
            if (shellGalleryStatus.autoBuyLegendSoulEssence) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageLegendSoulEssenceSoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased legend soul essence successfully");
                    shellGalleryStatus.autoBuyLegendSoulEssence = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing legend soul essence");
                    Rerouter_1.rerouter.screen.tap({ x: 270, y: 192 });
                    return;
                }
            }
            var rfpageEpicSoulEssenceSoldOut = new Rerouter_1.Page('rfpageEpicSoulEssenceSoldOut', [
                { x: 293, y: 241, r: 206, g: 20, b: 24 },
                { x: 274, y: 263, r: 247, g: 138, b: 247 },
            ]);
            if (shellGalleryStatus.autoBuyEpicSoulEssence) {
                if (Rerouter_1.rerouter.isPageMatchImage(rfpageEpicSoulEssenceSoldOut, image)) {
                    (0, utils_1.logs)(context.task.name, "Purchased epic soul essence successfully");
                    shellGalleryStatus.autoBuyEpicSoulEssence = false;
                }
                else {
                    (0, utils_1.logs)(context.task.name, "Purchasing epic soul essence");
                    Rerouter_1.rerouter.screen.tap({ x: 310, y: 277 });
                    return;
                }
            }
            (0, helper_1.sendCounter)(context.task.name, context.path, {});
            finishRound(true);
            (0, utils_1.sendKeyBack)();
            (0, utils_1.sendEventRunning)();
            (0, utils_1.logs)(context.task.name, "".concat(context.path, " finishRound"));
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(exports.rfpageShellShopNotEnoughShell.name),
        match: exports.rfpageShellShopNotEnoughShell,
        action: function (context, image, matched, finishRound) {
            (0, utils_1.logs)(context.task.name, "in rfpageShellShopNotEnoughShell, send back twice and finishRound");
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(1500);
            finishRound(true);
        },
    });
    (0, helper_1.passiveAddRoute)([exports.rfpageConfirmBuyLegendSoulStone, exports.rfpageConfirmBuyGuildRelics, rfpageConfirmBuyLegendSoulEssence, exports.rfpageConfirmBuyEpicSoulEssence]);
}
exports.addTradeHaborRoutes = addTradeHaborRoutes;
function addSendHaborShipTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.haborSendShip,
        maxTaskDuring: 10 * CONSTANTS.minuteInMs,
        minRoundInterval: 120 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addSendHaborShipTask = addSendHaborShipTask;
function addSeasideMarketTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.haborShopInSeaMarket,
        maxTaskDuring: 15 * CONSTANTS.minuteInMs,
        minRoundInterval: 120 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(seasideMarketStatus, {
                needPullToRightHead: true,
                rareItems: [],
                rightSlideCount: 0,
                rightSlideLimit: scriptConfig_1.config.autoShopInSeasideMarket ? 5 : 0,
                needToBuyRadiantShard: scriptConfig_1.config.autoBuyRadiantShardsInHabor,
                purchaseIndex: 0,
                foundResults: undefined,
                foundIndex: 0,
                nowHave: 0,
            });
            if (scriptConfig_1.config.autoBalanceAuroraStocks) {
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[0]);
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[1]);
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[2]);
            }
            if (scriptConfig_1.config.autoBuyCaramelStuff) {
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[3]);
                seasideMarketStatus.rareItems.push(types_1.seasideStockRect[4]);
            }
        },
    });
}
exports.addSeasideMarketTask = addSeasideMarketTask;
function addShellGalleryTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.haborShopInShellGallery,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: 180 * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(shellGalleryStatus, {
                autoBuySeaFairy: scriptConfig_1.config.autoBuySeaFairy,
                autoBuyEpicSoulEssence: scriptConfig_1.config.autoBuyEpicSoulEssence,
                autoBuyLegendSoulEssence: scriptConfig_1.config.autoBuyLegendSoulEssence,
                autoBuyGuildRelic: scriptConfig_1.config.autoBuyGuildRelic,
            });
        },
    });
}
exports.addShellGalleryTask = addShellGalleryTask;
function considerPurchaseSeasideMarket(target) {
    var newStock = (0, helper_1.ocrStocksInRect)(target, ICONS.numberAuroraStockInTradeBird);
    var newStock2 = (0, helper_1.ocrStockAndReqInRect)(target, ICONS.numberAuroraStockInTradeBird);
    (0, utils_1.logs)('haborShopInSeaMarket', "considerPurchaseSeasideMarket, ocr1 got '".concat(newStock, "', ocr2 got '").concat(newStock2, "', target area: '").concat(JSON.stringify(target), "'"));
    if (newStock > 50) {
        (0, utils_1.logs)('haborShopInSeaMarket', "Try to buy as ".concat(newStock, " > 50"));
        seasideMarketStatus.nowHave = newStock;
        Rerouter_1.rerouter.screen.tap(target);
        return true;
    }
    (0, utils_1.logs)('haborShopInSeaMarket', "skip as OCR failed / condition not met");
    return false;
}
function checkIfNeedSkipThisSpecialItems() {
    if (!Rerouter_1.rerouter.isPageMatch(exports.rfpageMarketItemDetail)) {
        (0, utils_1.logs)('checkSeasideMarketSpecialItems', "Skip as we are not in rfpageMarketItemDetail");
        return types_1.SeasideMarketItemType.others;
    }
    var itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailBeans, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.mustSkip;
    }
    itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailAuroraCompass, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.compareAmount;
    }
    itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailAuroraColumn, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.compareAmount;
    }
    itemFound = (0, helper_1.findSpecificIconInScreen)(ICONS.iconSeasideMarketDetailAuroraBrick, { x: 288, y: 266, w: 60, h: 40 });
    if (itemFound.length > 0) {
        return types_1.SeasideMarketItemType.compareAmount;
    }
    return types_1.SeasideMarketItemType.buyAnyway;
}


/***/ }),

/***/ "./src/tasks/tropicalIsland.ts":
/*!*************************************!*\
  !*** ./src/tasks/tropicalIsland.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addTropicalIslandTasks = exports.addTropicalIslandRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var rfpageInTropicalIsland = new Rerouter_1.Page('rfpageInTropicalIsland', [
    { x: 38, y: 333, r: 255, g: 97, b: 173 },
    { x: 49, y: 323, r: 239, g: 77, b: 140 },
    { x: 62, y: 341, r: 44, g: 81, b: 118 },
]);
var rfpageReadyToClearRedSword = new Rerouter_1.Page('rfpageReadyToClearRedSword', [
    { x: 531, y: 324, r: 121, g: 207, b: 12 },
    { x: 456, y: 28, r: 241, g: 53, b: 60 },
    { x: 494, y: 23, r: 252, g: 246, b: 216 },
    { x: 572, y: 327, r: 60, g: 70, b: 105 },
], { x: 531, y: 324 });
var rfpageBattleToClearSodaIsland = new Rerouter_1.Page('rfpageBattleToClearSodaIsland', [
    { x: 601, y: 326, r: 121, g: 207, b: 12 },
    { x: 623, y: 313, r: 60, g: 70, b: 105 },
    { x: 573, y: 84, r: 254, g: 253, b: 251 },
    { x: 165, y: 335, r: 121, g: 207, b: 12 },
    { x: 297, y: 83, r: 82, g: 215, b: 0 },
    { x: 426, y: 74, r: 255, g: 36, b: 33 },
], { x: 601, y: 326 });
var rfpageEmptySunbedsListInMiddle = new Rerouter_1.Page('rfpageEmptySunbedsListInMiddle', [
    { x: 217, y: 60, r: 133, g: 231, b: 74 },
    { x: 229, y: 132, r: 44, g: 46, b: 60 },
    { x: 247, y: 52, r: 57, g: 69, b: 107 },
    { x: 226, y: 82, r: 165, g: 60, b: 90 },
    { x: 428, y: 19, r: 2, g: 67, b: 127 },
    { x: 47, y: 328, r: 119, g: 40, b: 67 },
], { x: 437, y: 57 });
var tropicalIslandStatus = {
    iconRedExclamationCount: 0,
};
function addTropicalIslandRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInTropicalIsland.name),
        match: rfpageInTropicalIsland,
        action: function (context, image, matched, finishRound) {
            if (context.task.name.substring(0, 14) !== 'tropicalIsland') {
                (0, utils_1.sendKeyBack)();
                return;
            }
            switch (context.task.name) {
                case tasks_1.TASKS.tropicalIslandShip:
                    (0, utils_1.logs)(context.task.name, "in rfpageInTropicalIsland, check the ship status");
                    var rfpageCanClaimResource = new Rerouter_1.Page('rfpageCanClaimResource', [
                        { x: 307, y: 333, r: 123, g: 207, b: 8 },
                        { x: 363, y: 331, r: 123, g: 207, b: 8 },
                        { x: 33, y: 332, r: 255, g: 100, b: 176 },
                    ], { x: 360, y: 333 });
                    if (Rerouter_1.rerouter.isPageMatchImage(rfpageCanClaimResource, image)) {
                        Rerouter_1.rerouter.goNext(rfpageCanClaimResource);
                        (0, utils_1.logs)(context.task.name, "successfully collected island resource");
                    }
                    else {
                        (0, utils_1.logs)(context.task.name, "more resources are on the way");
                    }
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                    (0, utils_1.sendEventRunning)();
                    return;
                case tasks_1.TASKS.tropicalIslandSunbed:
                    (0, utils_1.logs)(context.task.name, "check sunbed");
                    var rfpageSunbedsWithFinishedCookies = new Rerouter_1.Page('rfpageSunbedsWithFinishedCookies', [
                        { x: 52, y: 323, r: 238, g: 68, b: 119 },
                        { x: 61, y: 336, r: 44, g: 77, b: 110 },
                        { x: 61, y: 303, r: 255, g: 0, b: 0 },
                    ], { x: 52, y: 323 });
                    var rfpageFreeAllCrispyCookie = new Rerouter_1.Page('rfpageFreeAllCrispyCookie', [
                        { x: 341, y: 316, r: 123, g: 207, b: 8 },
                        { x: 376, y: 313, r: 49, g: 60, b: 90 },
                        { x: 223, y: 85, r: 255, g: 101, b: 173 },
                    ], { x: 341, y: 316 });
                    var rfpageHasNoCrispyCookie = new Rerouter_1.Page('rfpageHasNoCrispyCookie', [
                        { x: 425, y: 111, r: 44, g: 46, b: 60 },
                        { x: 422, y: 132, r: 44, g: 46, b: 60 },
                    ]);
                    (0, utils_1.logs)(context.task.name, "collecting sunbed cookies, this will wait 4 secs for the cookie list to show up");
                    Rerouter_1.rerouter.goNext(rfpageSunbedsWithFinishedCookies);
                    // Waiting is required, as the cookie list shows up with a delay
                    if (Rerouter_1.rerouter.waitScreenForMatchingPage(new Rerouter_1.GroupPage('groupInSunbed', [rfpageFreeAllCrispyCookie, rfpageHasNoCrispyCookie]), 4000)) {
                        if (Rerouter_1.rerouter.isPageMatch(rfpageFreeAllCrispyCookie)) {
                            Rerouter_1.rerouter.goNext(rfpageFreeAllCrispyCookie);
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                            (0, utils_1.logs)(context.task.name, "successfully collect sunbed cookies");
                        }
                    }
                    else if (Rerouter_1.rerouter.isPageMatch(rfpageEmptySunbedsListInMiddle)) {
                        (0, utils_1.logs)(context.task.name, "sun bed cookie list is empty");
                        Rerouter_1.rerouter.goNext(rfpageEmptySunbedsListInMiddle);
                    }
                    (0, utils_1.logs)(context.task.name, "finish collecting cookies");
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
                    (0, utils_1.sendEventRunning)();
                    return;
                case tasks_1.TASKS.tropicalIslandClearBubble:
                    var foundResults = void 0;
                    var i = 0;
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconGreenCheckedWhiteBackground);
                    (0, utils_1.logs)(context.task.name, "handle iconGreenCheckedWhiteBackground, found ".concat(Object.keys(foundResults).length, " of them"));
                    if (Object.keys(foundResults).length > 0) {
                        for (i = 0; i < Object.keys(foundResults).length; i++) {
                            Rerouter_1.rerouter.screen.tap(foundResults[i]);
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                        }
                    }
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconRedExclamation);
                    if (tropicalIslandStatus['iconRedExclamationCount'] < Object.keys(foundResults).length) {
                        (0, utils_1.logs)(context.task.name, "handle iconRedExclamation, found ".concat(Object.keys(foundResults).length, " of them"));
                        if (Object.keys(foundResults).length > 0) {
                            for (i = 0; i < Object.keys(foundResults).length; i++) {
                                Rerouter_1.rerouter.screen.tap(foundResults[i]);
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                Rerouter_1.rerouter.screen.tap(foundResults[i]);
                                Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate);
                                tropicalIslandStatus['iconRedExclamationCount']++;
                                return;
                            }
                        }
                    }
                    // Clear hammers
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconIslandHammer);
                    (0, utils_1.logs)(context.task.name, "handle iconIslandHammer, found ".concat(Object.keys(foundResults).length, " of them"));
                    if (Object.keys(foundResults).length > 0) {
                        for (i = 0; i < Object.keys(foundResults).length; i++) {
                            Rerouter_1.rerouter.screen.tap(foundResults[i]);
                            Rerouter_1.Utils.sleep(scriptConfig_1.config.sleepAnimate * 3);
                            Rerouter_1.rerouter.screen.tap({ x: 324, y: 263 }); // Tab build
                            if (!Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageInTropicalIsland, 4000)) {
                                (0, utils_1.logs)(context.task.name, "Not enough resource to build island, skipping");
                                (0, utils_1.sendKeyBack)();
                                (0, utils_1.sendKeyBack)();
                            }
                            else {
                                (0, utils_1.logs)(context.task.name, "Build hammer successfully");
                            }
                        }
                    }
                    // Clear battles
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconRedSword);
                    (0, utils_1.logs)(context.task.name, "handle iconRedSword, found ".concat(Object.keys(foundResults).length, " of them: ").concat(JSON.stringify(foundResults)));
                    if (Object.keys(foundResults).length > 0) {
                        (0, utils_1.sendEventRunning)();
                        Rerouter_1.rerouter.screen.tap({ x: foundResults[i].x + 10, y: foundResults[i].y + 10 });
                        return;
                    }
                    foundResults = (0, helper_1.findSpecificIconInScreen)(ICONS.iconWhiteSword);
                    (0, utils_1.logs)(context.task.name, "handle iconWhiteSword, found ".concat(Object.keys(foundResults).length, " of them"));
                    if (Object.keys(foundResults).length > 0) {
                        // rerouter.screen.tap(foundResults[i]);
                        Rerouter_1.rerouter.screen.tap({ x: foundResults[i].x + 10, y: foundResults[i].y + 10 });
                        return;
                    }
                    (0, utils_1.logs)(context.task.name, "Finish tropical island");
                    (0, utils_1.sendKeyBack)();
                    (0, utils_1.sendEventRunning)();
                    (0, helper_1.sendCounter)(context.task.name, context.path, {});
                    finishRound(true);
            }
        },
    });
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageBattleToClearSodaIsland.name),
        match: rfpageBattleToClearSodaIsland,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.tropicalIslandClearBubble) {
                (0, utils_1.logs)(context.task.name, "in rfpageBattleToClearSodaIsland, send back as this is not my task");
                (0, utils_1.sendKeyBack)();
                return;
            }
            (0, utils_1.logs)(context.task.name, "in rfpageBattleToClearSodaIsland, start battle");
            Rerouter_1.rerouter.goNext(rfpageBattleToClearSodaIsland);
            return;
        },
    });
    (0, helper_1.passiveAddRoute)([rfpageReadyToClearRedSword, rfpageEmptySunbedsListInMiddle]);
}
exports.addTropicalIslandRoutes = addTropicalIslandRoutes;
function addTropicalIslandTasks() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.tropicalIslandShip,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectTropicalIslandsIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.tropicalIslandSunbed,
        maxTaskDuring: 3 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectTropicalIslandsIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
    });
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.tropicalIslandClearBubble,
        maxTaskDuring: 30 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoCollectTropicalIslandsIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(tropicalIslandStatus, {
                iconRedExclamationCount: 0,
            });
        },
    });
}
exports.addTropicalIslandTasks = addTropicalIslandTasks;


/***/ }),

/***/ "./src/tasks/wishingTree.ts":
/*!**********************************!*\
  !*** ./src/tasks/wishingTree.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addWishingTreeTask = exports.addWishingTreeRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var tasks_1 = __webpack_require__(/*! ../tasks */ "./src/tasks.ts");
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var scriptConfig_1 = __webpack_require__(/*! ../scriptConfig */ "./src/scriptConfig.ts");
var helper_1 = __webpack_require__(/*! ../helper */ "./src/helper.ts");
var types_1 = __webpack_require__(/*! ../types */ "./src/types.ts");
var ICONS = __importStar(__webpack_require__(/*! ../icons */ "./src/icons.ts"));
var rfpageInWishingTree = new Rerouter_1.Page('rfpageInWishingTree', [
    { x: 157, y: 29, r: 107, g: 56, b: 82 },
    { x: 235, y: 35, r: 255, g: 0, b: 81 },
    { x: 348, y: 22, r: 255, g: 40, b: 123 },
    { x: 412, y: 18, r: 255, g: 190, b: 8 },
    { x: 523, y: 15, r: 0, g: 195, b: 255 },
]);
var rfpageNotEnoughForTree = new Rerouter_1.Page('rfpageNotEnoughForTree', [
    { x: 445, y: 97, r: 57, g: 166, b: 231 },
    { x: 437, y: 97, r: 255, g: 255, b: 255 },
    { x: 397, y: 112, r: 57, g: 69, b: 107 },
    { x: 252, y: 142, r: 191, g: 183, b: 174 },
    { x: 247, y: 140, r: 80, g: 80, b: 80 },
    { x: 253, y: 15, r: 127, g: 22, b: 61 },
    { x: 60, y: 18, r: 41, g: 18, b: 28 },
    { x: 64, y: 41, r: 20, g: 32, b: 66 },
    { x: 8, y: 24, r: 49, g: 30, b: 94 },
    { x: 524, y: 20, r: 0, g: 69, b: 127 },
], { x: 442, y: 97 });
var rfpageCheckWishingTreeStock = new Rerouter_1.Page('rfpageCheckWishingTreeStock', [
    { x: 355, y: 302, r: 121, g: 207, b: 12 },
    { x: 244, y: 46, r: 60, g: 70, b: 105 },
    { x: 257, y: 21, r: 127, g: 12, b: 46 },
    { x: 410, y: 18, r: 127, g: 94, b: 4 },
    { x: 6, y: 25, r: 50, g: 31, b: 93 },
]);
var wishingTreeStatus = {
    records: {
        opened: 0,
        golden: 0,
        fulfilled: 0,
        notEnoughAndSkip: 0,
        goldenAndSkip: 0,
    },
};
var wishes = __spreadArray([], scriptConfig_1.defaultWishes, true);
function addWishingTreeRoutes() {
    Rerouter_1.rerouter.addRoute({
        path: "/".concat(rfpageInWishingTree.name),
        match: rfpageInWishingTree,
        action: function (context, image, matched, finishRound) {
            if (context.task.name !== tasks_1.TASKS.wishingTree) {
                (0, utils_1.logs)(context.task.name, "rfpageInWishingTree, leave because current task is not wishing tree, but: ".concat(context.task.name));
                Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 }); // tap X
                return;
            }
            (0, utils_1.logs)(context.task.name, "rfpageInWishingTree, start working");
            var rfpageAllWishingDailyRewardCollected = new Rerouter_1.Page('rfpageAllWishingDailyRewardCollected', [
                { x: 59, y: 242, r: 247, g: 247, b: 247 },
                { x: 60, y: 256, r: 138, g: 138, b: 138 },
            ]);
            if (Rerouter_1.rerouter.isPageMatchImage(rfpageAllWishingDailyRewardCollected, image) && !scriptConfig_1.config.alwaysFulfillWishes) {
                (0, utils_1.logs)(context.task.name, "rfpageInWishingTree, All wish fulfilled, skipping and send running");
                (0, utils_1.sendEventRunning)();
                Rerouter_1.rerouter.screen.tap({ x: 618, y: 20 }); // tap X
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            var refreshing = 0;
            for (var i in wishes) {
                var wish = wishes[i];
                var records = wishingTreeStatus.records;
                var result = getStatusOfGivenWish(wish, wishingTreeStatus.records, scriptConfig_1.config.wishingTreeRefreshGoldenWishes);
                wish = result['wish'];
                records = result['records'];
                console.log('handling wish', i, JSON.stringify(wish));
                if (wish.status === 'refresh') {
                    refreshing++;
                    continue;
                }
                else if (wish.status === 'opened') {
                    result = checkToSendSpecificWish(wish, records, scriptConfig_1.config.wishingTreeSafetyStock);
                    wish = result['wish'];
                    records = result['records'];
                    console.log('handled wish', i, JSON.stringify(wish));
                }
                wishingTreeStatus.records = records;
                Rerouter_1.Utils.sleep(CONSTANTS.sleep);
            }
            console.log('>>> Wising tree records', JSON.stringify(wishingTreeStatus.records));
            var rfpageCollectTreeReward = new Rerouter_1.Page('rfpageCollectTreeReward', [{ x: 85, y: 289, r: 44, g: 203, b: 8 }]);
            if (Rerouter_1.rerouter.isPageMatch(rfpageCollectTreeReward)) {
                console.log('Daily reward collected');
                Rerouter_1.rerouter.screen.tap({ x: 60, y: 255 });
                Rerouter_1.Utils.sleep(2000);
                Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageInWishingTree, 8000);
                // waitUntilSeePage(pageInWishingTree, 8, pageCollectTreeReward);
            }
            if (refreshing === 4) {
                console.log('All wishes are refreshing, jobs done here');
                (0, utils_1.sendEventRunning)();
                (0, helper_1.sendCounter)(context.task.name, context.path, {});
                finishRound(true);
                return;
            }
            (0, utils_1.logs)(context.task.name, 'rfpageInWishingTree, continue working next loop');
            (0, utils_1.sendEventRunning)();
        },
    });
    (0, helper_1.passiveAddRoute)([rfpageNotEnoughForTree]);
}
exports.addWishingTreeRoutes = addWishingTreeRoutes;
function addWishingTreeTask() {
    Rerouter_1.rerouter.addTask({
        name: tasks_1.TASKS.wishingTree,
        maxTaskDuring: 4 * CONSTANTS.minuteInMs,
        minRoundInterval: scriptConfig_1.config.autoFulfillWishesIntervalInMins * CONSTANTS.minuteInMs,
        forceStop: true,
        beforeRoute: function () {
            (0, helper_1.assign)(wishingTreeStatus, {
                records: {
                    opened: 0,
                    golden: 0,
                    fulfilled: 0,
                    notEnoughAndSkip: 0,
                    goldenAndSkip: 0,
                },
            });
            var wishes = __spreadArray([], scriptConfig_1.defaultWishes, true);
        },
    });
}
exports.addWishingTreeTask = addWishingTreeTask;
function getStatusOfGivenWish(wish, records, refreshGolden) {
    if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 255, g: 249, b: 203 })) {
        wish.status = types_1.WishStatus.opened;
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 246, g: 210, b: 135 }, 15)) {
        Rerouter_1.rerouter.screen.tap(wish.unfoldPnt);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 2);
        wish.status = types_1.WishStatus.opened;
        records['opened']++;
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 193, g: 160, b: 111 })) {
        wish.status = types_1.WishStatus.refresh;
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 255, g: 222, b: 41 })) {
        // Folded golden wish
        wish.golden = true;
        records['golden']++;
        if (refreshGolden) {
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "refresh as it is an unfolded golden wish: ".concat(JSON.stringify(wish)));
            wish.status = types_1.WishStatus.refresh;
        }
        else {
            Rerouter_1.rerouter.screen.tap(wish.unfoldPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            wish.status = types_1.WishStatus.opened;
            records['opened']++;
        }
    }
    else if ((0, helper_1.isSameColorAtPnt)(wish.refreshPnt, { r: 255, g: 247, b: 123 })) {
        // Expended golden wish
        wish.golden = true;
        if (refreshGolden) {
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "refresh as it is an unfolded golden wish: ".concat(JSON.stringify(wish)));
            wish.status = types_1.WishStatus.refresh;
            records['goldenAndSkip']++;
        }
        else {
            wish.status = types_1.WishStatus.opened;
        }
    }
    return { wish: wish, records: records };
}
function checkToSendSpecificWish(wish, records, safetySotck) {
    if (Rerouter_1.rerouter.isPageMatch(rfpageNotEnoughForTree)) {
        (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "checkToSendSpecificWish found pageNotEnoughForTree, tap to close that");
        Rerouter_1.rerouter.goNext(rfpageNotEnoughForTree);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate);
    }
    var stocks = [];
    for (var pntIdx in wish.requirementIconPnts) {
        var reqPnt = wish.requirementIconPnts[pntIdx];
        if ((+pntIdx > 0 && (0, helper_1.isSameColorAtPnt)(reqPnt, { r: 255, g: 249, b: 203 })) || (0, helper_1.isSameColorAtPnt)(reqPnt, { r: 255, g: 255, b: 142 })) {
            console.log('This point has no item, skipping:', pntIdx, JSON.stringify(reqPnt));
            continue;
        }
        for (var i = 0; i < 3; i++) {
            console.log("tapped point ".concat(pntIdx, ", (").concat(JSON.stringify(reqPnt), ") and wait for rfpageCheckWishingTreeStock"));
            Rerouter_1.rerouter.screen.tap(reqPnt);
            if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageCheckWishingTreeStock, 2000)) {
                break;
            }
        }
        if (Rerouter_1.rerouter.isPageMatch(rfpageInWishingTree)) {
            (0, utils_1.logs)('checkToSendSpecificWish', 'skip this point as cannot get into rfpageCheckWishingTreeStock');
            continue;
        }
        var ocrResult = '';
        if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageCheckWishingTreeStock, 7000, 1)) {
            // Use this to collect stock info
            var img = getScreenshot();
            var cImg1 = cropImage(img, 325, 110, 40, 15);
            ocrResult = (0, helper_1.recognizeWishingTreeRequirements)(ICONS.numberImagesWishingTree, cImg1, 12, 0.92, 0.7);
            releaseImage(cImg1);
            releaseImage(img);
        }
        if (!Rerouter_1.rerouter.isPageMatch(rfpageInWishingTree)) {
            (0, utils_1.sendKeyBack)();
            Rerouter_1.Utils.sleep(CONSTANTS.sleep);
        }
        Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageInWishingTree, 7000, 1);
        // waitUntilSeePage(pageInWishingTree, 7, pageCheckWishingTreeStock, null, 3);
        ocrResult = ocrResult.trim();
        var stockAndReq = [];
        if (ocrResult.length === 0) {
            // do nothing
        }
        else if (ocrResult.indexOf('/') === -1) {
            stockAndReq = [ocrResult.substr(0, ocrResult.length - 1), ocrResult.substr(ocrResult.length - 1, 1)];
        }
        else {
            stockAndReq = ocrResult.split('/');
        }
        stockAndReq[0] = parseInt(stockAndReq[0], 10);
        stockAndReq[1] = parseInt(stockAndReq[1], 10);
        stocks[pntIdx] = {
            stock: stockAndReq[0],
            need: stockAndReq[1],
        };
        if (stockAndReq.length === 0 || stockAndReq[0] === null) {
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "OCR failed, skip this one, pntIdx, stockAndReq: ".concat(pntIdx, ", ").concat(JSON.stringify(stockAndReq)));
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleep);
            wish.status = types_1.WishStatus.refresh;
            return { wish: wish, records: records };
        }
        if (stockAndReq[0] - stockAndReq[1] < safetySotck) {
            (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "Skip this one as the stock ".concat(stockAndReq[0], " is lower than config ").concat(safetySotck, ", need ").concat(stockAndReq[1]));
            Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
            Rerouter_1.Utils.sleep(CONSTANTS.sleep);
            wish.status = types_1.WishStatus.refresh;
            return { wish: wish, records: records };
        }
    }
    (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "Stock is enough, fulfill this wish, ".concat(JSON.stringify(wish), ", ").concat(JSON.stringify(stocks)));
    Rerouter_1.rerouter.screen.tap(wish.fulfillPnt);
    Rerouter_1.Utils.sleep(CONSTANTS.sleep);
    if (Rerouter_1.rerouter.waitScreenForMatchingPage(rfpageNotEnoughForTree, 2000)) {
        (0, utils_1.logs)(tasks_1.TASKS.wishingTree, "wish ".concat(wish.id, " tapped but not enough stock (wrong ocr?), refresh it'"));
        Rerouter_1.rerouter.goNext(rfpageNotEnoughForTree);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepAnimate * 2);
        Rerouter_1.rerouter.screen.tap(wish.refreshPnt);
        Rerouter_1.Utils.sleep(CONSTANTS.sleep);
        wish.status = types_1.WishStatus.refresh;
        return { wish: wish, records: records };
    }
    console.log('wish ', wish.id, ' is fulfilled');
    records['fulfilled']++;
    return { wish: wish, records: records };
}


/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.searchHosePaths = exports.Directions = exports.goodsLocationRect = exports.seasideStockRect = exports.SeasideMarketItemType = exports.Advantures = exports.WishStatus = exports.Icon = void 0;
var Icon = /** @class */ (function () {
    function Icon(name, base64String, thres, next, back) {
        if (thres === void 0) { thres = 0.9; }
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        this.name = name;
        this.base64String = base64String;
        this.thres = thres;
        this.next = next;
        this.back = back;
    }
    Icon.prototype.loadImage = function () {
        this.image = getImageFromBase64(this.base64String);
    };
    Icon.prototype.releaseImage = function () {
        releaseImage(this.image);
    };
    return Icon;
}());
exports.Icon = Icon;
var WishStatus;
(function (WishStatus) {
    WishStatus["opened"] = "opened";
    WishStatus["refresh"] = "refresh";
    WishStatus["unknown"] = "unknown";
})(WishStatus = exports.WishStatus || (exports.WishStatus = {}));
var Advantures;
(function (Advantures) {
    Advantures["bounties"] = "bounties";
    Advantures["pvp"] = "pvp";
    Advantures["guild"] = "guild";
    Advantures["towerOfSweetChaos"] = "towerOfSweetChaos";
    Advantures["superMayhem"] = "superMayhem";
    Advantures["tropicalIsland"] = "tropicalIsland";
    Advantures["cookieAlliance"] = "cookieAlliance";
})(Advantures = exports.Advantures || (exports.Advantures = {}));
var SeasideMarketItemType;
(function (SeasideMarketItemType) {
    SeasideMarketItemType["mustSkip"] = "mustSkip";
    SeasideMarketItemType["compareAmount"] = "compareAmount";
    SeasideMarketItemType["buyAnyway"] = "buyAnyway";
    SeasideMarketItemType["others"] = "others";
})(SeasideMarketItemType = exports.SeasideMarketItemType || (exports.SeasideMarketItemType = {}));
exports.seasideStockRect = {
    0: { x: 66, y: 282, w: 60, h: 18 },
    1: { x: 158, y: 282, w: 60, h: 18 },
    2: { x: 253, y: 282, w: 60, h: 18 },
    3: { x: 346, y: 282, w: 60, h: 18 },
    4: { x: 439, y: 282, w: 60, h: 18 },
};
exports.goodsLocationRect = {
    1: { x: 431, y: 101, w: 22, h: 12 },
    2: { x: 431, y: 209, w: 22, h: 12 },
    3: { x: 431, y: 315, w: 22, h: 12 },
    4: { x: 431, y: 106, w: 22, h: 12 },
    5: { x: 431, y: 213, w: 22, h: 12 },
    6: { x: 431, y: 319, w: 22, h: 12 },
    shovel: { x: 432, y: 317, w: 22, h: 16 },
};
exports.Directions = Object.freeze({
    NE: { x: -480, y: 245 },
    NW: { x: 460, y: 255 },
    SE: { x: -460, y: -255 },
    SW: { x: 480, y: -245 },
    S: { x: 0, y: -250 },
    SS: { x: 0, y: -350 },
    N: { x: 0, y: 250 },
    NN: { x: 0, y: 350 },
    E: { x: -460, y: 0 },
    EE: { x: -560, y: 0 },
    W: { x: 460, y: 0 },
    WW: { x: 560, y: 0 },
});
exports.searchHosePaths = {
    0: [
        exports.Directions.SS,
        exports.Directions.S,
        exports.Directions.EE,
        exports.Directions.N,
        exports.Directions.E,
        exports.Directions.E,
        exports.Directions.E,
        exports.Directions.E,
        exports.Directions.N,
        exports.Directions.W,
        exports.Directions.W,
        exports.Directions.W,
        exports.Directions.W,
    ],
    1: [exports.Directions.EE, exports.Directions.SS, exports.Directions.E, exports.Directions.W, exports.Directions.W, exports.Directions.W, exports.Directions.N, exports.Directions.E, exports.Directions.W, exports.Directions.W],
    2: [exports.Directions.EE, exports.Directions.EE, exports.Directions.SS, exports.Directions.EE, exports.Directions.S, exports.Directions.W, exports.Directions.W, exports.Directions.W, exports.Directions.N],
};


/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sendEventRunning = exports.sendKeyBack = exports.logs = exports.padZero = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
function padZero(num) {
    return num < 10 ? "0".concat(num) : "".concat(num);
}
exports.padZero = padZero;
function logs(activity, message) {
    var date = new Date(Rerouter_1.Utils.getTaiwanTime());
    console.log("[".concat(padZero(date.getMonth() + 1), "-").concat(padZero(date.getDate()), "T").concat(padZero(date.getHours()), ":").concat(padZero(date.getMinutes()), ":").concat(padZero(date.getSeconds()), "], ").concat(activity, ", ").concat(message));
}
exports.logs = logs;
function sendKeyBack() {
    console.log('send a back');
    keycode('KEYCODE_BACK', 100);
}
exports.sendKeyBack = sendKeyBack;
function sendEventRunning() {
    sendEvent('running', '');
}
exports.sendEventRunning = sendEventRunning;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/
/************************************************************************/
/******/
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./index.ts");
/******/
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7QUNBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsYUFBYSxtQkFBTyxDQUFDLGdFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxvRUFBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLGdFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyw4REFBYTtBQUNsQyxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUM3QmE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLE9BQU87QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLEdBQUcsZ0JBQWdCO0FBQ25DLGVBQWUsbUJBQU8sQ0FBQyw0REFBVTtBQUNqQyxlQUFlLG1CQUFPLENBQUMsNERBQVU7QUFDakMsY0FBYyxtQkFBTyxDQUFDLDBEQUFTO0FBQy9CLG1CQUFPLENBQUMsNEVBQTBCO0FBQ2xDLG1CQUFPLENBQUMsa0ZBQTZCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsaUNBQWlDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSxvQ0FBb0M7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDRCQUE0QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyxtQ0FBbUM7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QUFDO1FBQ3JCLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxLQUFLLEdBQUcsS0FBSyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDdkMsSUFBSSxNQUFNLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDM0MsSUFBSSxNQUFNLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7SUFFM0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDckMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ1YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRVYsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM5QixNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxNQUFNLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEdBQUcsTUFBTSxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUQsMkVBQTJFO1FBQzNFLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNaO0lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaEMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ1gsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFF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QyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtTQUN4QyxDQUFDO1FBQ0YsSUFBSSxlQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1NBQ3pDLENBQUM7UUFDRixJQUFJLGVBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7WUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7WUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7U0FDeEMsQ0FBQztRQUNGLElBQUksZUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtTQUN6QyxDQUFDO1FBQ0YsSUFBSSxlQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1NBQ3hDLENBQUM7S0FDSCxDQUFDLENBQUM7SUFDSCxJQUFJLFlBQVksR0FBRyxtQkFBUSxDQUFDLGFBQWEsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQ25FLGlJQUFpSTtJQUNqSSxPQUFPLFlBQVksQ0FBQyxNQUFNLENBQUM7QUFDN0IsQ0FBQztBQXJDRCxvRUFxQ0M7QUFFRCxTQUFnQixzQkFBc0IsQ0FDcEMsRUFBVSxFQUNWLFNBQWUsRUFDZixTQUFlLEVBQ2YsU0FBZSxFQUNmLGdCQUF3QixFQUN4QixXQUFtQjtJQUVuQixJQUFNLGFBQWEsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3pJLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztJQUN2QixJQUFJLEtBQUssR0FBRztRQUNWLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDVCxPQUFPLEVBQUUsQ0FBQyxDQUFDO0tBQ1osQ0FBQztJQUNGLElBQUksS0FBSyxHQUFHO1FBQ1YsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUNULE9BQU8sRUFBRSxDQUFDLENBQUM7S0FDWixDQUFDO0lBRUYsSUFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekQsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7UUFDaEIsT0FBTztZQUNMLEVBQUUsRUFBRSxFQUFFO1lBQ04sYUFBYSxFQUFFLGFBQWE7WUFDNUIsZ0JBQWdCLEVBQUUsZ0JBQWdCO1lBQ2xDLDRCQUE0QixFQUFFLENBQUMsQ0FBQztZQUNoQyxVQUFVLEVBQUUsVUFBVTtZQUN0QixjQUFjLEVBQUUsS0FBSztZQUNyQixLQUFLLEVBQUUsS0FBSztZQUNaLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUM7U0FDckIsQ0FBQztLQUNIO0lBRUQsSUFBSSxZQUFZLEdBQUcsdUJBQXVCLENBQUMsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUNuRSxxRUFBcUU7SUFDckUsSUFBSSxZQUFZLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtRQUM3QixPQUFPO1lBQ0wsRUFBRSxFQUFFLEVBQUU7WUFDTixhQUFhLEVBQUUsYUFBYTtZQUM1QixnQkFBZ0IsRUFBRSxnQkFBZ0I7WUFDbEMsNEJBQTRCLEVBQUUsS0FBSyxHQUFHLGdCQUFnQjtZQUN0RCxVQUFVLEVBQUUsVUFBVTtZQUN0QixjQUFjLEVBQUUsS0FBSztZQUNyQixLQUFLLEVBQUUsS0FBSztZQUNaLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUM7U0FDckIsQ0FBQztLQUNIO0lBRUQsS0FBSyxHQUFHO1FBQ04sS0FBSyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdCLENBQUM7SUFFRixJQUFJLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1FBQzNCLEtBQUssR0FBRztZQUNOLEtBQUssRUFBRSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUIsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM3QixDQUFDO1FBQ0YsVUFBVSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsV0FBVyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsV0FBVyxDQUFDO0tBQ2pIO1NBQU07UUFDTCxVQUFVLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxXQUFXLENBQUM7S0FDOUQ7SUFFRCxPQUFPO1FBQ0wsRUFBRSxFQUFFLEVBQUU7UUFDTixhQUFhLEVBQUUsYUFBYTtRQUM1QixnQkFBZ0IsRUFBRSxnQkFBZ0I7UUFDbEMsNEJBQTRCLEVBQUUsS0FBSyxHQUFHLGdCQUFnQjtRQUN0RCxVQUFVLEVBQUUsVUFBVTtRQUN0QixjQUFjLEVBQUUsS0FBSztRQUNyQixLQUFLLEVBQUUsS0FBSztRQUNaLElBQUksRUFBRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsaURBQWlEO0tBQzVHLENBQUM7QUFDSixDQUFDO0FBekVELHdEQXlFQztBQUVELFNBQWdCLGlCQUFpQixDQUFDLFdBQW1CLEVBQUUsV0FBbUIsRUFBRSxhQUFzQjtJQUNoRyxJQUFNLGFBQWEsR0FBcUM7UUFDdEQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtRQUNuQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1FBQ25DLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDbkMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtRQUN4QyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1FBQ25DLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDbkMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtLQUNwQyxDQUFDO0lBQ0YsSUFBTSxZQUFZLEdBQThCO1FBQzlDLENBQUMsRUFBRSxFQUFFO1FBQ0wsQ0FBQyxFQUFFLEdBQUc7UUFDTixDQUFDLEVBQUUsR0FBRztRQUNOLENBQUMsRUFBRSxHQUFHO1FBQ04sQ0FBQyxFQUFFLEVBQUU7UUFDTCxDQUFDLEVBQUUsR0FBRztRQUNOLENBQUMsRUFBRSxHQUFHO0tBQ1AsQ0FBQztJQUVGLHFEQUFxRDtJQUNyRCxJQUFJLGFBQWEsR0FBRyxlQUFlLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN0RSxJQUFJLGFBQWEsS0FBSyxDQUFDLENBQUMsRUFBRTtRQUN4QixnQkFBSSxFQUFDLG1CQUFtQixFQUFFLGdDQUFnQyxDQUFDLENBQUM7UUFFNUQsd0JBQXdCLEVBQUUsQ0FBQztRQUMzQixhQUFhLEdBQUcsZUFBZSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEUsSUFBSSxhQUFhLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDO1lBQ3ZELE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDWDtLQUNGO0lBRUQsSUFBSSxlQUFlLEdBQW9DO1FBQ3JELENBQUMsRUFBRSxzQkFBc0IsQ0FDdkIsQ0FBQyxFQUNELGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFDaEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQzVDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUM1QyxXQUFXLEVBQ1gsV0FBVyxDQUNaO0tBQ0YsQ0FBQztJQUVGLEtBQWMsVUFBTSxFQUFOLE1BQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFOLGNBQU0sRUFBTixJQUFNLEVBQUU7UUFBakIsSUFBSSxDQUFDO1FBQ1IsSUFBSSxDQUFDLG1CQUFRLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNsRCxNQUFNO1NBQ1A7UUFFRCxlQUFlLENBQUMsQ0FBQyxDQUFDLEdBQUcsc0JBQXNCLENBQ3pDLENBQUMsRUFDRCxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQ2hCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUM1QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFDNUMsV0FBVyxFQUNYLFdBQVcsQ0FDWixDQUFDO0tBQ0g7SUFFRCxJQUFJLGNBQWMsR0FBRyw0QkFBNEIsRUFBRSxDQUFDO0lBQ3BELElBQU0sY0FBYyxHQUFHLG1CQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQzVFLElBQU0sY0FBYyxHQUFHLGNBQWMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUM7SUFDNUYsZ0JBQUksRUFBQyxtQkFBbUIsRUFBRSxZQUFLLGNBQWMsa0JBQVEsY0FBYyxnREFBc0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBRSxDQUFDLENBQUM7SUFFNUksSUFBSSxjQUFjLEtBQUssZUFBZSxFQUFFO1FBQ3RDLGdCQUFJLEVBQUMsbUJBQW1CLEVBQUUsbUNBQTRCLGNBQWMsQ0FBRSxDQUFDLENBQUM7UUFFeEUsZ0JBQWdCLEVBQUUsQ0FBQztRQUVuQixJQUFJLG1CQUFRLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNqRCxlQUFlLENBQUMsQ0FBQyxDQUFDLEdBQUcsc0JBQXNCLENBQ3pDLENBQUMsRUFDRCxhQUFhLENBQUMsUUFBUSxDQUFDLEVBQ3ZCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUNoQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFDaEMsV0FBVyxFQUNYLFdBQVcsQ0FDWixDQUFDO1NBQ0g7S0FDRjtJQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsQ0FBQztJQUN2QyxJQUFJLGNBQWMsS0FBSyxnQkFBZ0IsSUFBSSxjQUFjLEtBQUssZ0JBQWdCLEVBQUU7UUFDOUUsa0JBQWtCLEVBQUUsQ0FBQztLQUN0QjtTQUFNO1FBQ0wsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxnQ0FBZ0M7UUFDL0YsZ0JBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDbEI7SUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLGtDQUFrQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztJQUNqRixLQUFjLFVBQVMsRUFBVCxNQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQVQsY0FBUyxFQUFULElBQVMsRUFBRTtRQUFwQixJQUFJLENBQUM7UUFDUixJQUFJLENBQUMsbUJBQVEsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2xELE1BQU07U0FDUDtRQUNELGVBQWUsQ0FBQyxDQUFDLENBQUMsR0FBRyxzQkFBc0IsQ0FDekMsQ0FBQyxFQUNELGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFDaEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQzVDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUM1QyxXQUFXLEVBQ1gsV0FBVyxDQUNaLENBQUM7S0FDSDtJQUNELGdCQUFJLEVBQUMsbUJBQW1CLEVBQUUsWUFBSyxjQUFjLGtCQUFRLGNBQWMsZ0RBQXNDLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUUsQ0FBQyxDQUFDO0lBRTVJLElBQUksY0FBYyxLQUFLLGdCQUFnQixJQUFJLGFBQWEsRUFBRTtRQUN4RCxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO1FBQzFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyw0QkFBNEIsR0FBRyxhQUFhLEdBQUcsR0FBRyxDQUFDO0tBQ3ZFO0lBRUQsSUFBSSxhQUFhLEdBQW9DLEVBQUUsQ0FBQztJQUN4RCxJQUFJLGtCQUFrQixHQUFvQyxFQUFFLENBQUM7SUFFN0Qsb0JBQW9CO0lBQ3BCLEtBQUssSUFBSSxHQUFHLElBQUksZUFBZSxFQUFFO1FBQy9CLElBQUksZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFO1lBQ25FLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDM0M7S0FDRjtJQUVELHVDQUF1QztJQUN2QyxLQUFLLElBQUksR0FBRyxJQUFJLGVBQWUsRUFBRTtRQUMvQixJQUFJLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEdBQUcsV0FBVyxFQUFFO1lBQzVDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxHQUFHLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNoRDtLQUNGO0lBRUQsSUFBSSxjQUFjLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBRyxJQUFJLG9CQUFhLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBbkIsQ0FBbUIsQ0FBQyxDQUFDO0lBQ2hGLElBQUksbUJBQW1CLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxhQUFHLElBQUkseUJBQWtCLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBeEIsQ0FBd0IsQ0FBQyxDQUFDO0lBQy9GLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLDhCQUE4QixDQUFDLENBQUMsQ0FBQztJQUNqRSxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLDhCQUE4QixDQUFDLENBQUMsQ0FBQzs0QkFDM0QsR0FBRztRQUNaLElBQU0sU0FBUyxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUMsaUJBQU8sSUFBSSxjQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxFQUEzQixDQUEyQixDQUFDLENBQUM7UUFDOUUsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNkLGNBQWMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDMUI7O0lBSkgsS0FBa0IsVUFBbUIsRUFBbkIsMkNBQW1CLEVBQW5CLGlDQUFtQixFQUFuQixJQUFtQjtRQUFoQyxJQUFNLEdBQUc7Z0JBQUgsR0FBRztLQUtiO0lBQ0QsZ0JBQUksRUFBQyxtQkFBbUIsRUFBRSxhQUFNLGNBQWMsa0JBQVEsY0FBYyxrREFBd0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBRSxDQUFDLENBQUM7SUFFOUksSUFBTSxnQkFBZ0IsR0FBRyxJQUFJLGVBQUksQ0FDL0Isa0JBQWtCLEVBQ2xCO1FBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7S0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0lBQ0YsS0FBSyxJQUFJLEVBQUUsSUFBSSxjQUFjLEVBQUU7UUFDN0IsSUFBSSxJQUFJLEdBQUcsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTlCLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQ3hCLFNBQVM7U0FDVjtRQUVELElBQUksSUFBSSxDQUFDLDhCQUE4QixDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQzVDLGlHQUFpRztZQUNqRyxTQUFTO1NBQ1Y7UUFFRCxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1lBQzFCLGdCQUFJLEVBQUMsbUJBQW1CLEVBQUUsdUNBQXVDLENBQUMsQ0FBQztZQUNuRSxRQUFRO1NBQ1Q7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQ3ZCLGdCQUFJLEVBQUMsbUJBQW1CLEVBQUUsdURBQWdELEVBQUUsQ0FBRSxDQUFDLENBQUM7WUFDaEYsU0FBUztTQUNWO1FBRUQsZ0JBQUksRUFBQyxtQkFBbUIsRUFBRSxzQkFBZSxJQUFJLENBQUMsSUFBSSxDQUFDLG1CQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsaUJBQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQUssSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBRSxDQUFDLENBQUM7UUFFckksUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDbEIsS0FBSyxDQUFDLENBQUM7WUFDUCxLQUFLLENBQUMsQ0FBQztZQUNQLEtBQUssQ0FBQztnQkFDSix3QkFBd0IsRUFBRSxDQUFDO2dCQUMzQix3QkFBd0IsRUFBRSxDQUFDO2dCQUMzQixtQkFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xELE1BQU07WUFDUixLQUFLLENBQUM7Z0JBQ0osd0JBQXdCLEVBQUUsQ0FBQztnQkFDM0Isd0JBQXdCLEVBQUUsQ0FBQztnQkFDM0IsZ0JBQWdCLEVBQUUsQ0FBQztnQkFDbkIsbUJBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNsRCxNQUFNO1lBQ1IsS0FBSyxDQUFDLENBQUM7WUFDUCxLQUFLLENBQUMsQ0FBQztZQUNQLEtBQUssQ0FBQztnQkFDSix3QkFBd0IsRUFBRSxDQUFDO2dCQUMzQix3QkFBd0IsRUFBRSxDQUFDO2dCQUMzQixrQkFBa0IsRUFBRSxDQUFDO2dCQUNyQixtQkFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xELE1BQU07U0FDVDtRQUVELEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDdEMsSUFBSSxXQUFXLEdBQUcsNEJBQTRCLEVBQUUsQ0FBQztZQUNqRCxJQUFJLG1CQUFRLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxFQUFFO2dCQUNoRSxnQkFBSSxFQUFDLG1CQUFtQixFQUFFLHdDQUF3QyxDQUFDLENBQUM7Z0JBQ3BFLG1CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQ3ZDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLElBQUksQ0FBQztnQkFDNUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNYLE1BQU07YUFDUDtpQkFBTSxJQUFJLG1CQUFRLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7Z0JBQ2pELGdCQUFJLEVBQUMsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztnQkFDOUMsbUJBQVEsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztnQkFDbEMsTUFBTTthQUNQO1lBQ0QsSUFBSSxXQUFXLEtBQUssQ0FBQyxFQUFFO2dCQUNyQixnQkFBSSxFQUFDLG1CQUFtQixFQUFFLGtDQUEyQixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUUsQ0FBQyxDQUFDO2dCQUNuRSxPQUFPLFdBQVcsQ0FBQzthQUNwQjtZQUVELEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNiO1FBRUQsMENBQTBDO0tBQzNDO0lBRUQsT0FBTyw0QkFBNEIsRUFBRSxDQUFDO0FBQ3hDLENBQUM7QUFoT0QsOENBZ09DO0FBRUQsU0FBZ0IsY0FBYyxDQUFDLFNBQWEsRUFBRSxVQUF1QixFQUFFLFlBQWtCO0lBQ3ZGLElBQUksV0FBVyxHQUFHO1FBQ2hCLE9BQU8sRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtRQUMxQixNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7S0FDM0IsQ0FBQztJQUVGLElBQUksVUFBVSxLQUFLLElBQUksSUFBSSxtQkFBUSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsRUFBRTtRQUMzRCxnQkFBSSxFQUFDLGdCQUFnQixFQUFFLDBCQUFtQixVQUFVLENBQUMsSUFBSSxvQkFBaUIsQ0FBQyxDQUFDO1FBQzVFLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxJQUFJLENBQUMsR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9GLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFL0YsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUM3QixJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUN2RCxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7SUFFZCxJQUFJLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxZQUFZLENBQUMsRUFBRTtRQUNyRSxxQ0FBcUM7UUFDckMsT0FBTyxJQUFJLENBQUM7S0FDYjtTQUFNLElBQUksbUJBQVEsQ0FBQyxXQUFXLENBQUMsK0JBQWtCLENBQUMsRUFBRTtRQUNuRCxPQUFPLENBQUMsR0FBRyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7UUFDaEUsT0FBTyxLQUFLLENBQUM7S0FDZDtTQUFNO1FBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0tBQ3hDO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBNUJELHdDQTRCQztBQUVELFNBQVMsNEJBQTRCLENBQUMsTUFBZSxFQUFFLFdBQW1CLEVBQUUsS0FBZTtJQUN6RixJQUFJLE1BQU0sR0FBWSxFQUFFLENBQUM7SUFDekIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssUUFBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFqQixDQUFpQixDQUFDLENBQUM7NEJBRWhDLEtBQUs7UUFDWixJQUFJLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQUM7WUFDNUIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xGLElBQUksUUFBUSxHQUFHLFFBQVEsR0FBRyxXQUFXLENBQUM7WUFDdEMsSUFBSSxRQUFRLElBQUksS0FBSyxFQUFFO2dCQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFTLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLDhCQUFvQixJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUMsQ0FBQzthQUNwRjtZQUNELE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDcEI7O0lBWkgsS0FBa0IsVUFBTSxFQUFOLGlCQUFNLEVBQU4sb0JBQU0sRUFBTixJQUFNO1FBQW5CLElBQUksS0FBSztnQkFBTCxLQUFLO0tBYWI7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsU0FBUyxVQUFVLENBQUMsTUFBZSxFQUFFLE1BQWU7SUFDbEQsSUFBSSxZQUFZLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFDLElBQUksUUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUExQixDQUEwQixDQUFDLEVBQTdDLENBQTZDLENBQUMsQ0FBQztJQUNyRixJQUFJLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQUMsSUFBSSxRQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQTFCLENBQTBCLENBQUMsRUFBN0MsQ0FBNkMsQ0FBQyxDQUFDO0lBQ3JGLHVDQUFXLFlBQVksU0FBSyxZQUFZLFFBQUU7QUFDNUMsQ0FBQztBQUVELHlCQUF5QjtBQUN6Qiw2QkFBNkI7QUFDN0IsU0FBZ0IsbUJBQW1CO0lBQ2pDLElBQUksbUJBQVEsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEVBQUU7UUFDbEQsZ0JBQUksRUFBQyxxQkFBcUIsRUFBRSxvREFBb0QsQ0FBQyxDQUFDO1FBQ2xGLHVCQUFXLEdBQUUsQ0FBQztRQUNkLGdCQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ25CO0lBRUQsd0JBQXdCO0lBQ3hCLElBQUksWUFBWSxHQUFHLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3RCxJQUFJLGVBQWUsR0FBRyw0QkFBNEIsQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDckUsaUlBQWlJO0lBRWpJLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzdDLGdCQUFJLEVBQUMscUJBQXFCLEVBQUUsd0RBQXdELENBQUMsQ0FBQztLQUN2RjtTQUFNO1FBQ0wsaUNBQWlDO1FBQ2pDLElBQUksR0FBQyxHQUFHLENBQUMsQ0FBQztRQUNWLE9BQU8sR0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDM0QsSUFBSSxlQUFlLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxlQUFlLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxlQUFlLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxlQUFlLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRTtnQkFDdEgsZ0JBQUksRUFBQyxxQkFBcUIsRUFBRSx1REFBZ0QsZUFBZSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsZUFBSyxlQUFlLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQywyQkFBd0IsQ0FBQyxDQUFDO2dCQUNuSixHQUFDLEVBQUUsQ0FBQztnQkFDSixTQUFTO2FBQ1Y7WUFFRCxnQkFBSSxFQUFDLHFCQUFxQixFQUFFLG9CQUFhLGVBQWUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLGVBQUssZUFBZSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsa0JBQVEsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBRSxDQUFDLENBQUM7WUFDakksbUJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLGVBQWUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxlQUFlLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7WUFFbEYsSUFBSSxtQkFBUSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxrQkFBa0IsRUFBRSxJQUFJLENBQUMsRUFBRTtnQkFDdEUsZ0JBQUksRUFBQyxxQkFBcUIsRUFBRSxzRUFBc0UsQ0FBQyxDQUFDO2dCQUNwRyxPQUFPLElBQUksQ0FBQzthQUNiO1lBRUQsZUFBZSxHQUFHLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM1RCxnQkFBSSxFQUFDLHFCQUFxQixFQUFFLHlCQUFrQixHQUFDLGVBQUssSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBRSxDQUFDLENBQUM7WUFDdkYsR0FBQyxFQUFFLENBQUM7U0FDTDtLQUNGO0lBRUQsc0VBQXNFO0lBQ3RFLEtBQUssSUFBSSxHQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUMsR0FBRyxDQUFDLEVBQUUsR0FBQyxFQUFFLEVBQUU7UUFDMUIsZUFBZSxHQUFHLDRCQUE0QixDQUFDLHdCQUF3QixDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQy9HLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQXNDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1lBQ3JGLE1BQU07U0FDUDtRQUNELGVBQWUsR0FBRyw0QkFBNEIsQ0FBQyx3QkFBd0IsQ0FBQyxLQUFLLENBQUMsMkJBQTJCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNoSCxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUMzQyxPQUFPLENBQUMsR0FBRyxDQUFDLHVDQUF1QyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztZQUN0RixNQUFNO1NBQ1A7UUFDRCxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDWjtJQUNELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzdDLGdCQUFJLEVBQUMscUJBQXFCLEVBQUUsNEVBQTRFLENBQUMsQ0FBQztRQUMxRyxPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ1YsT0FBTyxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEVBQUU7UUFDOUMsSUFBSSxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRTtZQUN0SCxnQkFBSSxFQUNGLHFCQUFxQixFQUNyQixxRUFBOEQsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBSyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQywyQkFBd0IsQ0FDcEksQ0FBQztZQUNGLENBQUMsRUFBRSxDQUFDO1lBQ0osU0FBUztTQUNWO1FBRUQsZ0JBQUksRUFDRixxQkFBcUIsRUFDckIsNkNBQXNDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQUssZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLGtCQUFRLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUUsQ0FDbEksQ0FBQztRQUNGLG1CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFL0UsSUFBSSxtQkFBUSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxrQkFBa0IsRUFBRSxJQUFJLENBQUMsRUFBRTtZQUN0RSxnQkFBSSxFQUNGLHFCQUFxQixFQUNyQiwwQ0FBbUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBSyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsNkNBQTBDLENBQ2hJLENBQUM7WUFDRixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsQ0FBQyxFQUFFLENBQUM7S0FDTDtJQUVELGdCQUFJLEVBQUMscUJBQXFCLEVBQUUsNkNBQTZDLENBQUMsQ0FBQztJQUMzRSxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUF0RkQsa0RBc0ZDO0FBRUQsU0FBZ0IsZUFBZSxDQUFDLFNBQWtCLEVBQUUsR0FBVztJQUM3RCxTQUFTLEdBQUcsU0FBUyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDOUQsSUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsZ0JBQUssQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLElBQU0sUUFBUSxHQUFHLFVBQUcsbUJBQU8sRUFBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDLGNBQUksbUJBQU8sRUFBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsY0FBSSxtQkFBTyxFQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxjQUFJLG1CQUFPLEVBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLGNBQUksbUJBQU8sRUFDOUksSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUNsQixjQUFJLFNBQVMsU0FBTSxDQUFDO0lBRXJCLElBQUksR0FBRyxLQUFLLFNBQVMsRUFBRTtRQUNyQixnQkFBSSxFQUFDLGlCQUFpQixFQUFFLHVEQUFnRCxRQUFRLENBQUUsQ0FBQyxDQUFDO1FBQ3BGLElBQUksR0FBRyxHQUFHLGFBQWEsRUFBRSxDQUFDO1FBQzFCLHlCQUF5QjtRQUN6Qix1REFBdUQ7UUFDdkQsdUNBQXVDO1FBQ3ZDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsd0NBQXdDLEdBQUcsUUFBUSxDQUFDLENBQUM7UUFDcEUsU0FBUyxDQUFDLEdBQUcsRUFBRSwwQkFBMEIsR0FBRyxRQUFRLENBQUMsQ0FBQztRQUN0RCxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDbkI7U0FBTTtRQUNMLGdCQUFJLEVBQUMsaUJBQWlCLEVBQUUsK0JBQXdCLFFBQVEsQ0FBRSxDQUFDLENBQUM7UUFDNUQsU0FBUyxDQUFDLEdBQUcsRUFBRSx3Q0FBd0MsR0FBRyxRQUFRLENBQUMsQ0FBQztRQUNwRSxTQUFTLENBQUMsR0FBRyxFQUFFLDBCQUEwQixHQUFHLFFBQVEsQ0FBQyxDQUFDO0tBQ3ZEO0FBQ0gsQ0FBQztBQXJCRCwwQ0FxQkM7QUFFRCxTQUFnQixnQkFBZ0I7SUFDOUIsZUFBZSxFQUFFLENBQUM7SUFDbEIsSUFBSSxxQkFBTSxDQUFDLE9BQU8sS0FBSyxxQ0FBcUMsRUFBRTtRQUM1RCxnQkFBSSxFQUFDLGtCQUFrQixFQUFFLCtFQUErRSxDQUFDLENBQUM7UUFDMUcsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0tBQ3RDO1NBQU07UUFDTCxnQkFBSSxFQUFDLGtCQUFrQixFQUFFLDZGQUE2RixDQUFDLENBQUM7UUFDeEgsdUJBQVcsR0FBRSxDQUFDO0tBQ2Y7QUFDSCxDQUFDO0FBVEQsNENBU0M7QUFFRCxTQUFnQixlQUFlO0lBQzdCLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO0lBQ2xFLElBQUksR0FBRyxLQUFLLGVBQWUsRUFBRTtRQUMzQixPQUFPLENBQUMsR0FBRyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7UUFDbkUsT0FBTyxDQUFDLG9EQUFvRCxDQUFDLENBQUM7UUFDOUQsT0FBTyxDQUFDLDBDQUEwQyxDQUFDLENBQUM7UUFDcEQsT0FBTyxDQUFDLCtDQUErQyxDQUFDLENBQUM7UUFDekQsT0FBTyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7UUFDL0QsT0FBTyxDQUFDLDBDQUEwQyxDQUFDLENBQUM7UUFDcEQsT0FBTyxDQUFDLGlEQUFpRCxDQUFDLENBQUM7S0FDNUQ7SUFDRCxJQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsZ0ZBQWdGLENBQUMsQ0FBQztJQUMzRyxJQUFJLE9BQU8sS0FBSyxTQUFTLEVBQUU7UUFDekIsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsaUVBQWlFLENBQUMsQ0FBQztRQUV0RixLQUFLLElBQUksR0FBRyxJQUFJLEtBQUssRUFBRTtZQUNyQixJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDaEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDeEIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLDBDQUEwQyxDQUFDO2FBQ3pEO2lCQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO2dCQUN0RCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcseUNBQXlDLENBQUM7YUFDeEQ7aUJBQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBQ3pELE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3hCLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyw0Q0FBNEMsQ0FBQzthQUMzRDtpQkFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsOEJBQThCLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDcEUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDeEIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLHVEQUF1RCxDQUFDO2FBQ3RFO2lCQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO2dCQUNoRSxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsbURBQW1ELENBQUM7YUFDbEU7U0FDRjtRQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUUsU0FBUyxDQUFDLGdGQUFnRixFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ25KO1NBQU07UUFDTCwwREFBMEQ7UUFDMUQsSUFBTSxjQUFjLEdBQUcsaWFBUXBCLENBQUM7UUFDSixPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixFQUFFLFNBQVMsQ0FBQyxnRkFBZ0YsRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO0tBQ3JKO0lBRUQsT0FBTyxDQUFDLHdEQUF3RCxDQUFDLENBQUM7QUFDcEUsQ0FBQztBQW5ERCwwQ0FtREM7QUFFRCxTQUFnQixXQUFXLENBQUksTUFBUztJQUFFLGlCQUF3QjtTQUF4QixVQUF3QixFQUF4QixxQkFBd0IsRUFBeEIsSUFBd0I7UUFBeEIsZ0NBQXdCOztJQUNoRSxLQUFtQixVQUFPLEVBQVAsbUJBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU8sRUFBRTtRQUF2QixJQUFJLE1BQU07UUFDYixLQUFLLElBQUksR0FBRyxJQUFJLE1BQU0sRUFBRTtZQUN0QixJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLFNBQVMsRUFBRTtnQkFDakYsTUFBWSxDQUFDLEdBQWMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQWUsQ0FBQzthQUMzRDtTQUNGO0tBQ0Y7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBVEQsa0NBU0M7QUFFRCxTQUFnQiwwQkFBMEIsQ0FBQyxRQUFnQixFQUFFLEtBQVksRUFBRSxXQUFxRDtJQUM5SCxJQUFNLDBCQUEwQixHQUFHLElBQUksZUFBSSxDQUFDLDRCQUE0QixFQUFFO1FBQ3hFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0tBQ3pDLENBQUMsQ0FBQztJQUVILElBQUksQ0FBQyxtQkFBUSxDQUFDLFdBQVcsQ0FBQywwQkFBMEIsQ0FBQyxFQUFFO1FBQ3JELE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxJQUFJLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxpQ0FBaUMsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUMsRUFBRTtRQUMzRyxnQkFBSSxFQUFDLFFBQVEsRUFBRSw4RUFBOEUsQ0FBQyxDQUFDO1FBQy9GLG1CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEMsT0FBTyxJQUFJLENBQUM7S0FDYjtTQUFNLElBQUksa0JBQWtCLENBQUMsY0FBYyxDQUFDLHdDQUF3QyxFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxFQUFFO1FBQ3pILGdCQUFJLEVBQUMsUUFBUSxFQUFFLHdHQUF3RyxDQUFDLENBQUM7UUFDekgsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLHFCQUFNLENBQUMsNkJBQTZCLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0QsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2IsNEJBQWdCLEdBQUUsQ0FBQztZQUNuQixnQkFBSSxFQUFDLDRCQUE0QixFQUFFLGdDQUF5QixDQUFDLGNBQUkscUJBQU0sQ0FBQyw2QkFBNkIsd0JBQXFCLENBQUMsQ0FBQztTQUM3SDtRQUNELE9BQU8sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdEIsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUVELElBQ0Usa0JBQWtCLENBQUMsY0FBYyxDQUFDLDRCQUE0QixFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQztRQUNsRyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsNEJBQTRCLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLEVBQ2xHO1FBQ0EsZ0JBQUksRUFBQyxRQUFRLEVBQUUsbUlBQW1JLENBQUMsQ0FBQztRQUNwSixJQUFJLFFBQVEsS0FBSyxhQUFLLENBQUMsaUJBQWlCLEVBQUU7WUFDeEMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ25CO1FBQ0QsdUJBQVcsR0FBRSxDQUFDO1FBQ2QsZ0JBQUssQ0FBQyxLQUFLLENBQUMscUJBQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNqQyx1QkFBVyxHQUFFLENBQUM7UUFDZCxPQUFPLElBQUksQ0FBQztLQUNiO1NBQU0sSUFBSSxrQkFBa0IsQ0FBQyxjQUFjLENBQUMseUJBQXlCLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDMUcsZ0JBQUksRUFBQyxRQUFRLEVBQUUsNkVBQTZFLENBQUMsQ0FBQztRQUM5RixtQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNaLE9BQU8sSUFBSSxDQUFDO0tBQ2I7U0FBTSxJQUFJLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxnQ0FBZ0MsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUMsRUFBRTtRQUNqSCxJQUFJLFFBQVEsS0FBSyxhQUFLLENBQUMsR0FBRyxFQUFFO1lBQzFCLGdCQUFJLEVBQUMsUUFBUSxFQUFFLHdGQUF3RixDQUFDLENBQUM7WUFDekcsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2xCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxnQkFBSSxFQUFDLFFBQVEsRUFBRSw2RUFBNkUsQ0FBQyxDQUFDO1FBQzlGLG1CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEMsT0FBTyxJQUFJLENBQUM7S0FDYjtTQUFNLElBQUksa0JBQWtCLENBQUMsY0FBYyxDQUFDLDJCQUEyQixFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxFQUFFO1FBQzVHLElBQUksUUFBUSxLQUFLLGFBQUssQ0FBQyx5QkFBeUIsRUFBRTtZQUNoRCxnQkFBSSxFQUFDLFFBQVEsRUFBRSxrRkFBa0YsQ0FBQyxDQUFDO1lBQ25HLG1CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDeEMsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELGdCQUFJLEVBQUMsUUFBUSxFQUFFLG9HQUFvRyxDQUFDLENBQUM7UUFDckgsbUJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUN4QyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsT0FBTyxJQUFJLENBQUM7S0FDYjtTQUFNLElBQUksa0JBQWtCLENBQUMsY0FBYyxDQUFDLGlDQUFpQyxFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxFQUFFO1FBQ2xILElBQUksUUFBUSxLQUFLLGFBQUssQ0FBQyxRQUFRLEVBQUU7WUFDL0IsZ0JBQUksRUFBQyxRQUFRLEVBQUUsMkZBQTJGLENBQUMsQ0FBQztZQUM1RyxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ3hDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQixPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsZ0JBQUksRUFBQyxRQUFRLEVBQUUsK0ZBQStGLENBQUMsQ0FBQztRQUNoSCxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sSUFBSSxDQUFDO0tBQ2I7U0FBTSxJQUFJLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxnQkFBZ0IsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUMsRUFBRTtRQUNqRyxJQUFJLFFBQVEsS0FBSyxhQUFLLENBQUMsUUFBUSxFQUFFO1lBQy9CLGdCQUFJLEVBQUMsUUFBUSxFQUFFLHNFQUFzRSxDQUFDLENBQUM7WUFDdkYsbUJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztZQUN4QyxPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsZ0JBQUksRUFBQyxRQUFRLEVBQUUsa0ZBQWtGLENBQUMsQ0FBQztRQUNuRyxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixPQUFPLElBQUksQ0FBQztLQUNiO1NBQU0sSUFBSSxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsd0NBQXdDLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDekgsSUFBSSxRQUFRLEtBQUssYUFBSyxDQUFDLFdBQVcsRUFBRTtZQUNsQyxnQkFBSSxFQUFDLFFBQVEsRUFBRSxnR0FBZ0csQ0FBQyxDQUFDO1lBQ2pILFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQixPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsZ0JBQUksRUFBQyxRQUFRLEVBQUUscUZBQXFGLENBQUMsQ0FBQztRQUN0RyxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sSUFBSSxDQUFDO0tBQ2I7U0FBTSxJQUNMLGtCQUFrQixDQUFDLGNBQWMsQ0FBQywyQkFBMkIsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUM7UUFDakcsa0JBQWtCLENBQUMsY0FBYyxDQUFDLHNCQUFzQixFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxFQUM1RjtRQUNBLGdCQUFJLEVBQUMsUUFBUSxFQUFFLHlFQUF5RSxDQUFDLENBQUM7UUFDMUYsbUJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUN4QyxPQUFPLElBQUksQ0FBQztLQUNiO1NBQU0sSUFBSSxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsMENBQTBDLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDM0gsZ0JBQUksRUFBQyxRQUFRLEVBQUUsdUZBQXVGLENBQUMsQ0FBQztRQUN4RyxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sSUFBSSxDQUFDO0tBQ2I7U0FBTSxJQUFJLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUMsRUFBRTtRQUN2SCxnQkFBSSxFQUFDLFFBQVEsRUFBRSxtRkFBbUYsQ0FBQyxDQUFDO1FBQ3BHLG1CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEMsT0FBTyxJQUFJLENBQUM7S0FDYjtTQUFNLElBQUksa0JBQWtCLENBQUMsY0FBYyxDQUFDLG1DQUFtQyxFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxFQUFFO1FBQ3BILGdCQUFJLEVBQUMsUUFBUSxFQUFFLGdGQUFnRixDQUFDLENBQUM7UUFDakcsbUJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUN4QyxPQUFPLElBQUksQ0FBQztLQUNiO1NBQU0sSUFBSSxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsNENBQTRDLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDN0gsZ0JBQUksRUFBQyxRQUFRLEVBQUUsNkZBQTZGLENBQUMsQ0FBQztRQUM5RyxtQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sSUFBSSxDQUFDO0tBQ2I7U0FBTSxJQUFJLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyw2QkFBNkIsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUMsRUFBRTtRQUM5RyxnQkFBSSxFQUFDLFFBQVEsRUFBRSw2RkFBNkYsQ0FBQyxDQUFDO1FBQzlHLG1CQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEMsT0FBTyxJQUFJLENBQUM7S0FDYjtTQUFNLElBQUksa0JBQWtCLENBQUMsY0FBYyxDQUFDLDhCQUE4QixFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxFQUFFO1FBQy9HLGdCQUFJLEVBQUMsUUFBUSxFQUFFLDJFQUEyRSxDQUFDLENBQUM7UUFDNUYsbUJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUN4QyxPQUFPLElBQUksQ0FBQztLQUNiO1NBQU0sSUFBSSxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsdUNBQXVDLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxDQUFDLEVBQUU7UUFDeEgsZ0JBQUksRUFBQyxRQUFRLEVBQUUsb0dBQW9HLENBQUMsQ0FBQztRQUNySCxnQkFBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDdEIsbUJBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUN4Qyx3REFBd0Q7UUFDeEQsaUhBQWlIO1FBQ2pILE9BQU8sSUFBSSxDQUFDO0tBQ2I7U0FBTSxJQUNMLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxpQkFBaUIsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUM7UUFDdkYsa0JBQWtCLENBQUMsY0FBYyxDQUFDLGtCQUFrQixFQUFFLDBCQUEwQixFQUFFLEtBQUssQ0FBQztRQUN4RixrQkFBa0IsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxDQUFDO1FBQ3hGLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyx3QkFBd0IsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLENBQUMsRUFDOUY7UUFDQSxnQkFBSSxFQUFDLFFBQVEsRUFBRSxnSUFBZ0ksQ0FBQyxDQUFDO1FBQ2pKLHVCQUFXLEdBQUUsQ0FBQztRQUNkLGdCQUFLLENBQUMsS0FBSyxDQUFDLHFCQUFNLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxlQUFlLENBQUMsd0JBQXdCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDakQsSUFBSSxxQkFBTSxDQUFDLE9BQU8sS0FBSyxxQ0FBcUMsRUFBRTtRQUM1RCxnQkFBSSxFQUFDLFFBQVEsRUFBRSwrRUFBK0UsQ0FBQyxDQUFDO1FBQ2hHLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztLQUN0QztTQUFNO1FBQ0wsZ0JBQUksRUFBQyxRQUFRLEVBQUUsNkZBQTZGLENBQUMsQ0FBQztRQUM5Ryx1QkFBVyxHQUFFLENBQUM7S0FDZjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQWhLRCxnRUFnS0M7QUFFRCxTQUFnQixlQUFlLENBQUMsSUFBWTtJQUMxQyxvQ0FBb0M7SUFDcEMsSUFBTSxpQkFBaUIsR0FBRyxJQUFJLGVBQUksQ0FBQyxnQkFBZ0IsRUFBRTtRQUNuRCxXQUFXO1FBQ1gsNkNBQTZDO1FBQzdDLDBDQUEwQztRQUUxQyxvQkFBb0I7UUFDcEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7S0FDeEMsQ0FBQyxDQUFDO0lBQ0gsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGVBQUksQ0FBQyxvQkFBb0IsRUFBRTtRQUN4RCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtLQUMxQyxDQUFDLENBQUM7SUFDSCxJQUFNLGdCQUFnQixHQUFHLElBQUksZUFBSSxDQUFDLGtCQUFrQixFQUFFO1FBQ3BELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1FBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0tBQzFDLENBQUMsQ0FBQztJQUNILElBQU0sb0JBQW9CLEdBQUcsSUFBSSxlQUFJLENBQUMsc0JBQXNCLEVBQUU7UUFDNUQsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7S0FDdkMsQ0FBQyxDQUFDO0lBQ0gsSUFBTSwwQkFBMEIsR0FBRyxJQUFJLGVBQUksQ0FBQyxzQkFBc0IsRUFBRTtRQUNsRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtLQUN4QyxDQUFDLENBQUM7SUFDSCxJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUFDLHlCQUF5QixFQUFFO1FBQ2xFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0tBQzFDLENBQUMsQ0FBQztJQUVILElBQU0seUJBQXlCLEdBQUcsSUFBSSxlQUFJLENBQUMsMkJBQTJCLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3RJLElBQU0sNEJBQTRCLEdBQUcsSUFBSSxlQUFJLENBQUMsOEJBQThCLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQzlJLElBQU0sNkJBQTZCLEdBQUcsSUFBSSxlQUFJLENBQUMsK0JBQStCLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBRWhKLElBQU0sdUJBQXVCLEdBQUcsSUFBSSxlQUFJLENBQUMseUJBQXlCLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUs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QUN6Z0MsSUFBSSxPQUFPLEdBQ1QsczVCQUFzNUIsQ0FBQztBQUN6NUIsSUFBSSxPQUFPLEdBQ1QsczVCQUFzNUIsQ0FBQztBQUN6NUIsSUFBSSxPQUFPLEdBQ1QsazZCQUFrNkIsQ0FBQztBQUNyNkIsSUFBSSxPQUFPLEdBQ1QsczZCQUFzNkIsQ0FBQztBQUN6NkIsSUFBSSxPQUFPLEdBQ1QsODZCQUE4NkIsQ0FBQztBQUNqN0IsSUFBSSxPQUFPLEdBQ1QsazZCQUFrNkIsQ0FBQztBQUNyNkIsSUFBSSxPQUFPLEdBQ1QsODVCQUE4NUIsQ0FBQztBQUNqNkIsSUFBSSxPQUFPLEdBQ1QsazZCQUFrNkIsQ0FBQztBQUNyNkIsSUFBSSxPQUFPLEdBQ1QsczZCQUFzNkIsQ0FBQztBQUN6NkIsSUFBSSxPQUFPLEdBQ1QsazZCQUFrNkIsQ0FBQztBQUNyNkIsSUFBSSxPQUFPLEdBQ1QsMDZCQUEwNkIsQ0FBQztBQUM3NkIsSUFBSSxPQUFPLEdBQ1QsazZCQUFrNkIsQ0FBQztBQUNyNkIsSUFBSSxPQUFPLEdBQ1QsczZCQUFzNkIsQ0FBQztBQUN6NkIsSUFBSSxPQUFPLEdBQ1QsczZCQUFzNkIsQ0FBQztBQUN6NkIsSUFBSSxPQUFPLEdBQ1QsczZCQUFzNkIsQ0FBQztBQUN6NkIsSUFBSSxPQUFPLEdBQ1QsMDZCQUEwNkIsQ0FBQztBQUM3NkIsSUFBSSxPQUFPLEdBQ1QsMC9CQUEwL0IsQ0FBQztBQUM3L0IsSUFBSSxPQUFPLEdBQ1QsczZCQUFzNkIsQ0FBQztBQUN6NkIsSUFBSSxPQUFPLEdBQ1QsazZCQUFrNkIsQ0FBQztBQUNyNkIsSUFBSSxPQUFPLEdBQ1QsODZCQUE4NkIsQ0FBQztBQUNqN0IsSUFBSSxPQUFPLEdBQ1QsczVCQUFzNUIsQ0FBQztBQUN6NUIsSUFBSSxPQUFPLEdBQ1QsMDVCQUEwNUIsQ0FBQztBQUM3NUIsSUFBSSxPQUFPLEdBQ1QsMDdCQUEwN0IsQ0FBQztBQUM3N0IsSUFBSSxPQUFPLEdBQ1QsODZCQUE4NkIsQ0FBQztBQUVwNkIsd0JBQWdCLEdBQUc7SUFDOUIsSUFBSSxZQUFJLENB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QUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0lBQzVCLElBQUksWUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDO0NBQzdCLENBQUM7QUFFVyxnQkFBUSxHQUFHO0lBQ3RCLElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCwwNUJBQTA1QixFQUMxNUIsR0FBRyxDQUNKO0lBQ0QsSUFBSSxZQUFJLENBQ04sR0FBRyxFQUNILGs1QkFBazVCLEVBQ2w1QixHQUFHLENBQ0o7SUFDRCxJQUFJLFlBQUksQ0FDTixHQUFHLEVBQ0gsMDVCQUEwNUIsRUFDMTVCLEdBQUcsQ0FDSjtJQUNELElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCwwNUJBQTA1QixFQUMxNUIsR0FBRyxDQUNKO0lBQ0QsSUFBSSxZQUFJLENBQ04sR0FBRyxFQUNILGs2QkFBazZCLEVBQ2w2QixHQUFHLENBQ0o7SUFDRCxJQUFJLFlBQUksQ0FDTixHQUFHLEVBQ0gsODVCQUE4NUIsRUFDOTVCLEdBQUcsQ0FDSjtJQUNELElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCw4NkJBQTg2QixFQUM5NkIsR0FBRyxDQUNKO0lBQ0QsSUFBSSxZQUFJLENBQ04sR0FBRyxFQUNILDg1QkFBODVCLEVBQzk1QixHQUFHLENBQ0o7SUFDRCxJQUFJLFlBQUksQ0FDTixHQUFHLEVBQ0gsazZCQUFrNkIsRUFDbDZCLEdBQUcsQ0FDSjtJQUNELElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCwwNUJBQTA1QixFQUMxNUIsR0FBRyxDQUNKO0lBQ0QsSUFBSSxZQUFJLENBQ04sR0FBRyxFQUNILHM2QkFBczZCLEVBQ3Q2QixHQUFHLENBQ0o7SUFDRCxJQUFJLFlBQUksQ0FDTixHQUFHLEVBQ0gsODVCQUE4NUIsRUFDOTVCLEdBQUcsQ0FDSjtDQUNGLENBQUM7QUFFVyxnQkFBUSxHQUFHO0lBQ3RCLElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCwwOUJBQTA5QixFQUMxOUIsR0FBRyxDQUNKO0lBQ0QsSUFBSSxZQUFJLENBQ04sR0FBRyxFQUNILGs5QkFBazlCLEVBQ2w5QixHQUFHLENBQ0o7SUFDRCxJQUFJLFlBQUksQ0FDTixHQUFHLEVBQ0gsODhCQUE4OEIsRUFDOThCLEdBQUcsQ0FDSjtJQUNELElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCxzOUJBQXM5QixFQUN0OUIsR0FBRyxDQUNKO0lBQ0QsSUFBSSxZQUFJLENBQ04sR0FBRyxFQUNILDg4QkFBODhCLEVBQzk4QixHQUFHLENBQ0o7SUFDRCxJQUFJLFlBQUksQ0FDTixHQUFHLEVBQ0gsazlCQUFrOUIsRUFDbDlCLEdBQUcsQ0FDSjtJQUNELElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCwwOUJBQTA5QixFQUMxOUIsR0FBRyxDQUNKO0lBQ0QsSUFBSSxZQUFJLENBQ04sR0FBRyxFQUNILHM5QkFBczlCLEVBQ3Q5QixHQUFHLENBQ0o7SUFDRCxJQUFJLFlBQUksQ0FDTixHQUFHLEVBQ0gsMDlCQUEwOUIsRUFDMTlCLEdBQUcsQ0FDSjtJQUNELElBQUksWUFBSSxDQUNOLEdBQUcsRUFDSCxrOUJBQWs5QixFQUNsOUIsR0FBRyxDQUNKO0NBQ0YsQ0FBQztBQUVXLDhCQUFzQixHQUFHO0lBQ3BDLElBQUksWUFBSSxDQUNOLG1CQUFtQixFQUNuQixzOURBQXM5RCxFQUN0OUQsSUFBSSxDQUNMO0lBQ0QsSUFBSSxZQUFJLENBQ04sc0JBQXNCLEVBQ3RCLDBrRkFBMGtGLEVBQzFrRixJQUFJLENBQ0w7SUFDRCxJQUFJLFlBQUksQ0FDTixxQkFBcUIsRUFDckIsOHBGQUE4cEYsRUFDOXBGLElBQUksQ0FDTDtJQUNELElBQUksWUFBSSxDQUNOLGtCQUFrQixFQUNsQiwwM0ZBQTAzRixFQUMxM0YsSUFBSSxDQUNMO0lBQ0QsSUFBSSxZQUFJLENBQ04scUJBQXFCLEVBQ3JCLGt1RUFBa3VFLEVBQ2x1RSxJQUFJLENBQ0w7SUFDRCxJQUFJLFlBQUksQ0FDTixxQkFBcUIsRUFDckIsMHFFQUEwcUUsRUFDMXFFLElBQUksQ0FDTDtJQUNELElBQUksWUFBSSxDQUNOLHFCQUFxQixFQUNyQixzMUVBQXMxRSxFQUN0MUUsSUFBSSxDQUNMO0lBQ0QsSUFBSSxZQUFJLENBQ04sb0JBQW9CLEVBQ3BCLDgwRkFBODBGLEVBQzkwRixJQUFJLENBQ0w7SUFDRCxJQUFJLFlBQUksQ0FDTix1QkFBdUIsRUFDdkIsMHlFQUEweUUsRUFDMXlFLElBQUksQ0FDTDtJQUNELElBQUksWUFBSSxDQUNOLHVCQUF1QixFQUN2QixrNUVBQWs1RSxFQUNsNUUsSUFBSSxDQUNMO0lBQ0QsSUFBSSxZQUFJLENBQ04saUJBQWlCLEVBQ2pCLDBtRUFBMG1FLEVBQzFtRSxJQUFJLENBQ0w7SUFDRCxJQUFJLFlBQUksQ0FDTixtQkFBbUIsRUFDbkIsOHpHQUE4ekcsRUFDOXpHLElBQUksQ0FDTDtJQUNELElBQUksWUFBSSxDQUNOLGtCQUFrQixFQUNsQiwwK0VBQTArRSxFQUMxK0UsSUFBSSxDQUNMO0lBQ0QsSUFBSSxZQUFJLENBQ04sZ0JBQWdCLEVBQ2hCLHMrRkFBcytGLEVBQ3QrRixJQUFJLENBQ0w7SUFDRCxJQUFJLFlBQUksQ0FDTixlQUFlLEVBQ2YsODlGQUE4OUYsRUFDOTlGLElBQUksQ0FDTDtJQUNELElBQUksWUFBSSxDQUNOLE1BQU0sRUFDTixrMkRBQWsyRCxFQUNsMkQsSUFBSSxDQUNMO0lBQ0QsSUFBSSxZQUFJLENBQ04sUUFBUSxFQUNSLGsxRkFBazFGLEVBQ2wxRixJQUFJLENBQ0w7Q0FDRixDQUFDO0FBRUYsbUJBQW1CO0FBQ04sK0JBQXVCLEdBQUcsSUFBSSxZQUFJLENBQzdDLHlCQUF5QixFQUN6QixrdENBQWt0QyxFQUNsdEMsSUFBSSxDQUNMLENBQUM7QUFDVyw4QkFBc0IsR0FBRyxJQUFJLFlBQUksQ0FDNUMseUJBQXlCLEVBQ3pCLDA2REFBMDZELEVBQzE2RCxJQUFJLENBQ0wsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0FDcDFCVyxtQ0FBMkIsR0FBa0I7SUFDeEQsSUFBSSxFQUFFLDZCQUE2QjtJQUNuQyxDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxFQUFFO0lBQ0wsS0FBSyxFQUFFLEdBQUc7SUFDVixNQUFNLEVBQUUsRUFBRTtJQUVWLE9BQU8sRUFBRSxFQUFFO0lBQ1gsZUFBZSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDM0MsZ0JBQWdCLEVBQUUsRUFBRTtJQUNwQixxQkFBcUIsRUFBRSxDQUFDO0NBQ3pCLENBQUM7QUFDVyw4QkFBc0IsR0FBa0I7SUFDbkQsSUFBSSxFQUFFLHdCQUF3QjtJQUM5QixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sS0FBSyxFQUFFLEdBQUc7SUFDVixNQUFNLEVBQUUsRUFBRTtJQUVWLE9BQU8sRUFBRSxDQUFDO0lBQ1YsZUFBZSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDM0MsZ0JBQWdCLEVBQUUsRUFBRTtJQUNwQixxQkFBcUIsRUFBRSxDQUFDO0NBQ3pCLENBQUM7QUFFRix1REFBdUQ7QUFDdkQsa0NBQWtDO0FBQ2xDLFlBQVk7QUFDWixZQUFZO0FBQ1osZ0JBQWdCO0FBQ2hCLGVBQWU7QUFFZixnQkFBZ0I7QUFDaEIsOENBQThDO0FBQzlDLDBCQUEwQjtBQUMxQiw4QkFBOEI7QUFDOUIsS0FBSztBQUVMLG9FQUFvRTtBQUNwRSwrQ0FBK0M7QUFDL0MsWUFBWTtBQUNaLFlBQVk7QUFDWixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBRWhCLGdCQUFnQjtBQUNoQixpREFBaUQ7QUFDakQsMEJBQTBCO0FBQzFCLDhCQUE4QjtBQUM5QixLQUFLO0FBRVEsc0NBQThCLEdBQWtCO0lBQzNELElBQUksRUFBRSxnQ0FBZ0M7SUFDdEMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLENBQUM7SUFFVCxPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBRVcsaUNBQXlCLEdBQWtCO0lBQ3RELElBQUksRUFBRSwyQkFBMkI7SUFDakMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBRUYsOEVBQThFO0FBQ2pFLCtDQUF1QyxHQUFrQjtJQUNwRSxJQUFJLEVBQUUseUNBQXlDO0lBQy9DLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixLQUFLLEVBQUUsR0FBRztJQUNWLE1BQU0sRUFBRSxFQUFFO0lBRVYsT0FBTyxFQUFFLENBQUM7SUFDVixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxnQkFBZ0IsRUFBRSxFQUFFO0lBQ3BCLHFCQUFxQixFQUFFLENBQUM7Q0FDekIsQ0FBQztBQUVGLHNFQUFzRTtBQUN0RSxpREFBaUQ7QUFDakQsWUFBWTtBQUNaLFlBQVk7QUFDWixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBRWhCLGdCQUFnQjtBQUNoQiw4Q0FBOEM7QUFDOUMsMEJBQTBCO0FBQzFCLDhCQUE4QjtBQUM5QixLQUFLO0FBRVEseUNBQWlDLEdBQWtCO0lBQzlELElBQUksRUFBRSxtQ0FBbUM7SUFDekMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBRVcsZ0RBQXdDLEdBQWtCO0lBQ3JFLElBQUksRUFBRSwwQ0FBMEM7SUFDaEQsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBRVcseUJBQWlCLEdBQWtCO0lBQzlDLElBQUksRUFBRSxtQkFBbUI7SUFDekIsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBQ1csMEJBQWtCLEdBQWtCO0lBQy9DLElBQUksRUFBRSxvQkFBb0I7SUFDMUIsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBRVcsMEJBQWtCLEdBQWtCO0lBQy9DLElBQUksRUFBRSxvQkFBb0I7SUFDMUIsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBQ1csZ0NBQXdCLEdBQWtCO0lBQ3JELElBQUksRUFBRSwwQkFBMEI7SUFDaEMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBRVcsbUNBQTJCLEdBQWtCO0lBQ3hELElBQUksRUFBRSw2QkFBNkI7SUFDbkMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBQ1csb0NBQTRCLEdBQWtCO0lBQ3pELElBQUksRUFBRSw4QkFBOEI7SUFDcEMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBQ1csb0NBQTRCLEdBQWtCO0lBQ3pELElBQUksRUFBRSw4QkFBOEI7SUFDcEMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBRVcsd0NBQWdDLEdBQWtCO0lBQzdELElBQUksRUFBRSxrQ0FBa0M7SUFDeEMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLENBQUM7SUFFVCxPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNDLGdCQUFnQixFQUFFLEdBQUc7SUFDckIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBQ0Ysb0NBQW9DO0FBQ3ZCLHlDQUFpQyxHQUFHO0lBQy9DLElBQUksRUFBRSxtQ0FBbUM7SUFDekMsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLEtBQUssRUFBRSxHQUFHO0lBQ1YsTUFBTSxFQUFFLEVBQUU7SUFFVixPQUFPLEVBQUUsQ0FBQztJQUNWLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIscUJBQXFCLEVBQUUsQ0FBQztDQUN6QixDQUFDO0FBQ1csd0JBQWdCLEdBQUc7SUFDOUIsSUFBSSxFQUFFLGtCQUFrQjtJQUN4QixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sS0FBSyxFQUFFLEdBQUc7SUFDVixNQUFNLEVBQUUsRUFBRTtJQUVWLE9BQU8sRUFBRSxDQUFDO0lBQ1YsZUFBZSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsZ0JBQWdCLEVBQUUsRUFBRTtJQUNwQixxQkFBcUIsRUFBRSxDQUFDO0NBQ3pCLENBQUM7QUFFVyxnREFBd0MsR0FBRztJQUN0RCxJQUFJLEVBQUUsMENBQTBDO0lBQ2hELENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixLQUFLLEVBQUUsR0FBRztJQUNWLE1BQU0sRUFBRSxFQUFFO0lBRVYsT0FBTyxFQUFFLENBQUM7SUFDVixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMzQyxnQkFBZ0IsRUFBRSxFQUFFO0lBQ3BCLHFCQUFxQixFQUFFLENBQUM7Q0FDekIsQ0FBQztBQUNGLDBIQUEwSDtBQUM3RyxrREFBMEMsR0FBRztJQUN4RCxJQUFJLEVBQUUsNENBQTRDO0lBQ2xELENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixLQUFLLEVBQUUsR0FBRztJQUNWLE1BQU0sRUFBRSxFQUFFO0lBRVYsT0FBTyxFQUFFLENBQUM7SUFDVixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMzQyxnQkFBZ0IsRUFBRSxFQUFFO0lBQ3BCLHFCQUFxQixFQUFFLENBQUM7Q0FDekIsQ0FBQztBQUNGLHlGQUF5RjtBQUM1RSw4Q0FBc0MsR0FBRztJQUNwRCxJQUFJLEVBQUUsd0NBQXdDO0lBQzlDLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixLQUFLLEVBQUUsR0FBRztJQUNWLE1BQU0sRUFBRSxFQUFFO0lBRVYsT0FBTyxFQUFFLENBQUM7SUFDVixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMzQyxnQkFBZ0IsRUFBRSxHQUFHO0lBQ3JCLHFCQUFxQixFQUFFLENBQUM7Q0FDekIsQ0FBQztBQUNGLDZLQUE2SztBQUNoSyxvREFBNEMsR0FBRztJQUMxRCxJQUFJLEVBQUUsOENBQThDO0lBQ3BELENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixLQUFLLEVBQUUsR0FBRztJQUNWLE1BQU0sRUFBRSxDQUFDO0lBRVQsT0FBTyxFQUFFLENBQUM7SUFDVixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMzQyxnQkFBZ0IsRUFBRSxFQUFFO0lBQ3BCLHFCQUFxQixFQUFFLENBQUM7Q0FDekIsQ0FBQztBQUVGLGlHQUFpRztBQUNwRixxQ0FBNkIsR0FBRztJQUMzQyxJQUFJLEVBQUUsK0JBQStCO0lBQ3JDLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixLQUFLLEVBQUUsR0FBRztJQUNWLE1BQU0sRUFBRSxFQUFFO0lBRVYsT0FBTyxFQUFFLENBQUM7SUFDVixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxnQkFBZ0IsRUFBRSxFQUFFO0lBQ3BCLHFCQUFxQixFQUFFLENBQUM7Q0FDekIsQ0FBQztBQUVGLGlGQUFpRjtBQUNwRSwyQ0FBbUMsR0FBRztJQUNqRCxJQUFJLEVBQUUscUNBQXFDO0lBQzNDLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixLQUFLLEVBQUUsR0FBRztJQUNWLE1BQU0sRUFBRSxDQUFDO0lBRVQsT0FBTyxFQUFFLENBQUM7SUFDVixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMzQyxnQkFBZ0IsRUFBRSxHQUFHO0lBQ3JCLHFCQUFxQixFQUFFLENBQUM7Q0FDekIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7OztBQ2hWRiw4RkFBK0M7QUFFL0MsSUFBTSxjQUFjLEdBQUcsSUFBSSxlQUFJLENBQzdCLGdCQUFnQixFQUNoQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLHNEQUFzRDtJQUN0RCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixJQUFNLGNBQWMsR0FBRyxJQUFJLGVBQUksQ0FDN0IsZ0JBQWdCLEVBQ2hCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsSUFBTSxlQUFlLEdBQUcsSUFBSSxlQUFJLENBQzlCLGlCQUFpQixFQUNqQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNGLElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxlQUFJLENBQy9CLGtCQUFrQixFQUNsQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNGLElBQU0sZUFBZSxHQUFHLElBQUksZUFBSSxDQUM5QixpQkFBaUIsRUFDakI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDRixJQUFNLGNBQWMsR0FBRyxJQUFJLGVBQUksQ0FDN0IsZ0JBQWdCLEVBQ2hCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsSUFBTSxnQkFBZ0IsR0FBRyxJQUFJLGVBQUksQ0FDL0Isa0JBQWtCLEVBQ2xCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRVcsOEJBQXNCLEdBQUcsSUFBSSxlQUFJLENBQUMsd0JBQXdCLEVBQUU7SUFDdkUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBQ1UsOEJBQXNCLEdBQUcsSUFBSSxlQUFJLENBQzVDLHdCQUF3QixFQUN4QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNXLHFDQUE2QixHQUFHLElBQUksZUFBSSxDQUNuRCwrQkFBK0IsRUFDL0I7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFFVyx5QkFBaUIsR0FBRztJQUMvQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxDQUFDO0FBRVcseUJBQWlCLEdBQUc7SUFDL0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsQ0FBQztBQUVXLDZCQUFxQixHQUFHLElBQUksZUFBSSxDQUMzQyx1QkFBdUIsRUFDdkI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUNyQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFVyxtQ0FBMkIsR0FBRztJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUN6QyxDQUFDO0FBQ1cscUNBQTZCLEdBQUcsSUFBSSxlQUFJLENBQUMsK0JBQStCLEVBQUUsbUNBQTJCLEVBQUUsbUNBQTJCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUV2SSw2Q0FBcUMsR0FBRyxJQUFJLGVBQUksQ0FBQyx1Q0FBdUMsRUFBRTtJQUNyRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN4QyxDQUFDLENBQUM7QUFDVSxxQ0FBNkIsR0FBRyxJQUFJLGVBQUksQ0FDbkQsK0JBQStCLEVBQy9CO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRVcsOEJBQXNCLEdBQUcsSUFBSSxlQUFJLENBQzVDLHdCQUF3QixFQUN4QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3ZDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVXLDZCQUFxQixHQUFHLElBQUksZUFBSSxDQUMzQyx1QkFBdUIsRUFDdkI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFFRix3Q0FBd0M7QUFDM0IsdUNBQStCLEdBQUcsSUFBSSxlQUFJLENBQUMsaUNBQWlDLEVBQUU7SUFDekYsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBRVUsZ0NBQXdCLEdBQUcsSUFBSSxlQUFJLENBQUMsMEJBQTBCLEVBQUU7SUFDM0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdEMsQ0FBQyxDQUFDO0FBRVUsNEJBQW9CLEdBQUcsSUFBSSxlQUFJLENBQzFDLHNCQUFzQixFQUN0QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNXLGlDQUF5QixHQUFHLElBQUksZUFBSSxDQUMvQywyQkFBMkIsRUFDM0I7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFVyxxQ0FBNkIsR0FBRyxJQUFJLGVBQUksQ0FDbkQsK0JBQStCLEVBQy9CO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxxQ0FBcUM7Q0FDbEYsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ1csNEJBQW9CLEdBQUcsSUFBSSxlQUFJLENBQzFDLHNCQUFzQixFQUN0QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVB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RUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsQ0FBQztBQUNXLDhCQUFzQixHQUFHO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLENBQUM7QUFDVyx1Q0FBK0IsR0FBRztJQUM3QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxDQUFDO0FBQ1csdUNBQStCLEdBQUc7SUFDN0MsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDdEMsQ0FBQztBQUNXLCtDQUF1QyxHQUFHO0lBQ3JELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLENBQUM7QUFFVywwQ0FBa0MsR0FBRztJQUNoRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxDQUFDO0FBQ0YsOEhBQThIO0FBQzlILFlBQVk7QUFDWixZQUFZO0FBQ1osTUFBTTtBQUVPLDBCQUFrQixHQUFHLElBQUksZUFBSSxDQUN4QyxvQkFBb0IsRUFDcEI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyx1Q0FBK0IsR0FBRyxJQUFJLGVBQUksQ0FDckQsaUNBQWlDLEVBQ2pDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRDtJQUNFLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEVBQUU7Q0FDTixDQUNGLENBQUM7QUFDVywrQkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FDN0MseUJBQXlCLEVBQ3pCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ1csNEJBQW9CLEdBQUcsSUFBSSxlQUFJLENBQzFDLHNCQUFzQixFQUN0QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUVXLHNDQUE4QixHQUFHLElBQUksZUFBSSxDQUFDLGdDQUFnQyxFQUFFLG9DQUE0QixFQUFFO0lBQ3JILENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7Q0FDUCxDQUFDLENBQUM7QUFDSCxtSUFBbUk7QUFDbkksdUpBQXVKO0FBQ3ZKLHVKQUF1SjtBQUMxSSxpREFBeUMsR0FBRyxJQUFJLGVBQUksQ0FDL0QsMkNBQTJDLEVBQzNDLCtDQUF1QyxFQUN2QywrQ0FBdUMsQ0FBQyxDQUFDLENBQUMsQ0FDM0MsQ0FBQztBQUVXLGlDQUF5QixHQUFHLElBQUksZUFBSSxDQUMvQywyQkFBMkIsRUFDM0I7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFDVyxpQ0FBeUIsR0FBRyxJQUFJLGVBQUksQ0FDL0MsMkJBQTJCLEVBQzNCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ1cscUNBQTZCLEdBQUcsSUFBSSxlQUFJLENBQUMsK0JBQStCLEVBQUU7SUFDckYsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDckMsQ0FBQyxDQUFDO0FBRVUsK0JBQXVCLEdBQUcsSUFBSSxlQUFJLENBQzdDLHlCQUF5QixFQUN6QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFD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QyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsMkJBQTJCO0FBQ2QsOEJBQXNCLEdBQUcsSUFBSSxlQUFJLENBQzVDLHdCQUF3QixFQUN4QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVXLGlDQUF5QixHQUFHLElBQUksZUFBSSxDQUMvQywyQkFBMkIsRUFDM0I7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFVyw0QkFBb0IsR0FBRyxJQUFJLGVBQUksQ0FDMUMsc0JBQXNCLEVBQ3RCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRVcsMEJBQWtCLEdBQUcsSUFBSSxlQUFJLENBQUMsb0JBQW9CLEVBQUU7SUFDL0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDekMsQ0FBQyxDQUFDO0FBRVUscUJBQWEsR0FBRyxJQUFJLGVBQUksQ0FDbkMsZUFBZSxFQUNmO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdkMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBRVcsOEJBQXNCLEdBQUcsSUFBSSxlQUFJLENBQUMsd0JBQXdCLEVBQUU7SUFDdkUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDckMsQ0FBQyxDQUFDO0FBRVUsMEJBQWtCLEdBQUcsSUFBSSxlQUFJLENBQUMsb0JBQW9CLEVBQUU7SUFDL0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsQ0FBQyxDQUFDO0FBRVUsb0NBQTRCLEdBQUcsSUFBSSxlQUFJLENBQUMsOEJBQThCLEVBQUU7SUFDbkYsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsQ0FBQyxDQUFDO0FBRUgsaUJBQWlCO0FBQ0osMEJBQWtCLEdBQUcsSUFBSSxlQUFJLENBQUMsb0JBQW9CLEVBQUU7SUFDL0QsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdkMsQ0FBQyxDQUFDO0FBQ1Usd0JBQWdCLEdBQUcsSUFBSSxlQUFJLENBQUMsa0JBQWtCLEVBQUU7SUFDM0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsQ0FBQyxDQUFDO0FBQ1Usd0NBQWdDLEdBQUcsSUFBSSxlQUFJLENBQ3RELGtDQUFrQyxFQUNsQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3RDO0FBQ0QsaUdBQWlHO0FBQ2pHLG9CQUFvQjtDQUNyQixDQUFDO0FBQ1csOEJBQXNCLEdBQUcsSUFBSSxlQUFJLENBQzVDLHdCQUF3QixFQUN4QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3ZDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNGLGtGQUFrRjtBQUNyRSwwQ0FBa0MsR0FBRyxJQUFJLGVBQUksQ0FDeEQsb0NBQW9DLEVBQ3BDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ1csc0NBQThCLEdBQUcsSUFBSSxlQUFJLENBQ3BELGdDQUFnQyxFQUNoQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3ZDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNXLHFDQUE2QixHQUFHLElBQUksZUFBSSxDQUFDLCtCQUErQixFQUFFO0lBQ3JGLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3RDLENBQUMsQ0FBQztBQUVVLHVDQUErQixHQUFHLElBQUksZUFBSSxDQUNyRCxpQ0FBaUMsRUFDakM7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyxtQ0FBMkIsR0FBRyxJQUFJLGVBQUksQ0FDakQsNkJBQTZCLEVBQzdCO0lBQ0Us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Q0FBQyx5QkFBeUIsRUFBRTtJQUN6RSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUN2QyxDQUFDLENBQUM7QUFFSCw2REFBNkQ7QUFDN0QsMkVBQTJFO0FBQzNFLFlBQVk7QUFDWixNQUFNO0FBRU8sNkJBQXFCLEdBQUcsSUFBSSxlQUFJLENBQUMsdUJBQXVCLEVBQUU7SUFDckUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsQ0FBQyxDQUFDO0FBRVUsK0JBQXVCLEdBQUcsSUFBSSxlQUFJLENBQzdDLHlCQUF5QixFQUN6QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVXLGdDQUF3QixHQUFHLElBQUksZUFBSSxDQUM5QywwQkFBMEIsRUFDMUI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyxnQ0FBd0IsR0FBRyxJQUFJLGVBQUksQ0FDOUMsMEJBQTBCLEVBQzFCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRVcsdUNBQStCLEdBQUc7SUFDN0MsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdkMsQ0FBQztBQUVXLGdDQUF3QixHQUFHLElBQUksZUFBSSxDQUM5QywwQkFBMEIsRUFDMUI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFFVywwQ0FBa0MsR0FBRyxJQUFJLGVBQUksQ0FDeEQsb0NBQW9DLEVBQ3BDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRVcsMkNBQW1DLEdBQUcsSUFBSSxlQUFJLENBQ3pELHFDQUFxQyxFQUNyQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFB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QUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyxzQ0FBOEIsR0FBRyxJQUFJLGVBQUksQ0FDcEQsZ0NBQWdDLEVBQ2hDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBRVcsdUJBQWUsR0FBRyxJQUFJLGVBQUksQ0FDckMsaUJBQWlCLEVBQ2pCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdkMsRUFDRCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNqQixDQUFDO0FBQ1csMkJBQW1CLEdBQUcsSUFBSSxlQUFJLENBQ3pDLHFCQUFxQixFQUNyQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVXLG9CQUFZLEdBQUcsSUFBSSxlQUFJLENBQUMsY0FBYyxFQUFFO0lBQ25ELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFB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RSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNGLG1DQUFtQztBQUN0Qiw4QkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FDNUMsd0JBQXdCLEVBQ3hCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdkMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBRUYsSUFBTSxzQkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDbkksSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDckksSUFBTSxzQkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDbkksSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDckksSUFBTSxzQkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDbkksSUFBTSxvQkFBb0IsR0FBRyxJQUFJLGVBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxD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R0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDckMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSxtQkFBbUIsR0FBRyxJQUFJLGVBQUksQ0FBQyxxQkFBcUIsRUFBRTtJQUMxRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFB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RSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsQ0FBQyxDQUFDO0FBQ1UsZ0NBQXdCLEdBQUcsSUFBSSxlQUFJLENBQUMsd0JBQXdCLEVBQUU7SUFDekUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBQ1UsaUNBQXlCLEdBQUcsSUFBSSxlQUFJLENBQy9DLDJCQUEyQixFQUMzQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3RDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNGLDJDQUEyQztBQUMzQyw4QkFBOEI7QUFDOUIsTUFBTTtBQUNOLGdEQUFnRDtBQUNoRCxnREFBZ0Q7QUFDaEQsK0NBQStDO0FBQy9DLCtDQUErQztBQUMvQyxnREFBZ0Q7QUFDaEQsT0FBTztBQUNQLHNCQUFzQjtBQUN0QixLQUFLO0FBQ0wsSUFBTSxtQ0FBbUMsR0FBRyxJQUFJLGVBQUksQ0FDbEQscUNBQXFDLEVBQ3JDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ0YsSUFBTSwrQkFBK0IsR0FBRyxJQUFJLGVBQUksQ0FDOUMsaUNBQWlDLEVBQ2pDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxF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QUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0NBQ3RDLENBQUMsQ0FBQztBQUNVLDRCQUFvQixHQUFHLElBQUksZUFBSSxDQUMxQyxzQkFBc0IsRUFDdEI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyw4QkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FDNUMsd0JBQXdCLEVBQ3hCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ1csMkNBQW1DLEdBQUcsSUFBSSxlQUFJLENBQ3pELHFDQUFxQyxFQUNyQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFF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RSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLENBQUMsQ0FBQztBQUNILElBQU0sc0JBQXNCLEdBQUcsSUFBSSxlQUFJLENBQUMsd0JBQXdCLEVBQUU7SUFDaEUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSwyQkFBMkIsR0FBRyxJQUFJLGVBQUksQ0FDMUMsNkJBQTZCLEVBQzdCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsSUFBTSxtQkFBbUIsR0FBRyxJQUFJLGVBQUksQ0FDbEMscUJBQXFCLEVBQ3JCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsNkNBQTZDO0FBQzdDLGdDQUFnQztBQUNoQyxNQUFNO0FBQ04sZ0RBQWdEO0FBQ2hELCtDQUErQztBQUMvQyxrREFBa0Q7QUFDbEQsa0RBQWtEO0FBQ2xELCtDQUErQztBQUMvQyw4Q0FBOEM7QUFDOUMsa0RBQWtEO0FBQ2xELE9BQU87QUFDUCx1QkFBdUI7QUFDdkIsS0FBSztBQUNMLElBQU0sd0JBQXdCLEdBQUcsSUFBSSxlQUFJLENBQ3ZDLDBCQUEwQixFQUMxQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNGLElBQU0sa0JBQWtCLEdBQUcsSUFBSSxlQUFJLENBQ2pDLG9CQUFvQixFQUNwQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNXLGdDQUF3QixHQUFHLElBQUksZUFBSSxDQUM5QywwQkFBMEIsRUFDMUI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyxpQ0FBeUIsR0FBRyxJQUFJLGVBQUksQ0FDL0MsMkJBQTJCLEVBQzNCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsSUFBTSx3QkFBd0IsR0FBRyxJQUFJLGVBQUksQ0FDdkMsMEJBQTBCLEVBQzFCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDdEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRVcsaURBQXlDLEdBQUcsSUFBSSxlQUFJLENBQUMsMkNBQTJDLEVBQUU7SUFDN0csRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBQ1UsbURBQTJDLEdBQUcsSUFBSSxlQUFJLENBQUMsNkNBQTZDLEVBQUU7SUFDakgsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdEMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSw0QkFBNEIsR0FBRyxJQUFJLG9CQUFTLENBQUMsOEJBQThCLEVBQUU7SUFDakYsaURBQXlDO0lBQ3pDLG1EQUEyQztDQUM1QyxDQUFDLENBQUM7QUFFSCxJQUFNLHNCQUFzQixHQUFHLElBQUksZUFBSSxDQUFDLHdCQUF3QixFQUFFO0lBQ2hFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3JDLENBQUMsQ0FBQztBQUNILElBQU0sK0JBQStCLEdBQUcsSUFBSSxlQUFJLENBQzlDLGlDQUFpQyxFQUNqQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3RDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxtQkFBbUI7Q0FDdEMsQ0FBQztBQUNGLG1DQUFtQztBQUNuQywrREFBK0Q7QUFDL0Qsa0RBQWtEO0FBQ2xELE1BQU07QUFDTiw2Q0FBNkM7QUFDN0MsOENBQThDO0FBQzlDLDhDQUE4QztBQUM5Qyw4Q0FBOEM7QUFDOUMsNkNBQTZDO0FBQzdDLDRDQUE0QztBQUM1Qyw4Q0FBOEM7QUFDOUMsT0FBTztBQUNQLHVDQUF1QztBQUN2QyxLQUFLO0FBRUwsSUFBTSwwQ0FBMEMsR0FBRyxJQUFJLGVBQUksQ0FDekQsNENBQTRDLEVBQzVDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLFNBQVM7Q0FDN0IsQ0FBQztBQUVGLElBQU0sc0JBQXNCLEdBQUcsSUFBSSxlQUFJLENBQUMsd0JBQXdCLEVBQUU7SUFDaEUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FBQyx5QkFBeUIsRUFBRTtJQUNsRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxDQUFDLENBQUM7QUFDSCxJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUFDLHlCQUF5QixFQUFFO0lBQ2xFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLENBQUMsQ0FBQztBQUNILElBQU0seUJBQXlCLEdBQUcsSUFBSSxlQUFJLENBQUMsMkJBQTJCLEVBQUU7SUFDdEUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FDdEMseUJBQXlCLEVBQ3pCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdkMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ0YsSUFBTSwyQkFBMkIsR0FBRyxJQUFJLGVBQUksQ0FBQyw2QkFBNkIsRUFBRTtJQUMxRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN0QyxDQUFDLENBQUM7QUFFSCxJQUFNLG1CQUFtQixHQUFHLElBQUksZUFBSSxDQUNsQyxxQkFBcUIsRUFDckI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDRixJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUFDLHlCQUF5QixFQUFFO0lBQ2xFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLENBQUMsQ0FBQztBQUVILElBQU0seUJBQXlCLEdBQUcsSUFBSSxlQUFJLENBQUMsMkJBQTJCLEVBQUU7SUFDdEUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsQ0FBQyxDQUFDO0FBQ0gsbUdBQW1HO0FBQ25HLElBQU0sd0NBQXdDLEdBQUcsSUFBSSxlQUFJLENBQ3ZELDBDQUEwQyxFQUMxQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFH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eEMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSx3QkFBd0IsR0FBRyxJQUFJLGVBQUksQ0FBQywwQkFBMEIsRUFBRTtJQUNwRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUN2QyxDQUFDLENBQUM7QUFDSCxJQUFNLHdDQUF3QyxHQUFHLElBQUksZUFBSSxDQUN2RCwwQ0FBMEMsRUFDMUM7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUs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RSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0NBQ3BDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNGLElBQU0sNkJBQTZCLEdBQUcsSUFBSSxlQUFJLENBQUMsK0JBQStCLEVBQUU7SUFDOUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMs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QUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFD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RUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDRixJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUN0Qyx5QkFBeUIsRUFDekI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDRix1REFBdUQ7QUFDMUMsZ0NBQXdCLEdBQUcsSUFBSSxlQUFJLENBQzlDLDBCQUEwQixFQUMxQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNXLHNDQUE4QixHQUFHLElBQUksZUFBSSxDQUNwRCxnQ0FBZ0MsRUFDaEM7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixJQUFNLGdCQUFnQixHQUFHLElBQUksZUFBSSxDQUMvQixrQkFBa0IsRUFDbEI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFDRixJQUFNLHFCQUFxQixHQUFHLElBQUksZUFBSSxDQUNwQyx1QkFBdUIsRUFDdkI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDRiw4Q0FBOEM7QUFDOUMsb0JBQW9CO0FBQ1Asa0NBQTBCLEdBQUcsSUFBSSxlQUFJLENBQ2hELDRCQUE0QixFQUM1QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNXLHlDQUFpQyxHQUFHLElBQUksZUFBSSxDQUN2RCxtQ0FBbUMsRUFDbkM7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDRixxQkFBcUI7QUFDckIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLGVBQUksQ0FDeEMsMkJBQTJCLEVBQzNCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ1csc0NBQThCLEdBQUcsSUFBSSxlQUFJLENBQ3BELGdDQUFnQyxFQUNoQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLDZDQUE2QztJQUM3Qyw4Q0FBOEM7SUFDOUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLGVBQUksQ0FDeEMsMkJBQTJCLEVBQzNCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsUUFBUTtBQUNSLDJHQUEyRztBQUMzRyxzREFBc0Q7QUFDdEQsa0NBQWtDO0FBQ2xDLE1BQU07QUFDTixpREFBaUQ7QUFDakQsa0RBQWtEO0FBQ2xELGtEQUFrRDtBQUNsRCxnREFBZ0Q7QUFDaEQsK0NBQStDO0FBQy9DLGtEQUFrRDtBQUNsRCxnREFBZ0Q7QUFDaEQsZ0RBQWdEO0FBQ2hELGdEQUFnRDtBQUNoRCxPQUFPO0FBQ1AsdUJBQXVCO0FBQ3ZCLEtBQUs7QUFDTCxTQUFTO0FBQ1QsSUFBTSw4QkFBOEIsR0FBRyxJQUFJLGVBQUksQ0FDN0MsZ0NBQWdDLEVBQ2hDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsSUFBTSx1Q0FBdUMsR0FBRyxJQUFJLGVBQUksQ0FDdEQseUNBQXlDLEVBQ3pDO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YseUNBQXlDO0FBQ3pDLElBQU0scUJBQXFCLEdBQUcsSUFBSSxlQUFJLENBQ3BDLHVCQUF1QixFQUN2QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0sdUJBQXVCLEdBQUcsSUFBSSxlQUFJLENBQ3RDLHlCQUF5QixFQUN6QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNXLHFDQUE2QixHQUFHLElBQUksZUFBSSxDQUNuRCwrQkFBK0IsRUFDL0I7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixJQUFNLG1CQUFtQixHQUFHLElBQUksZUFBSSxDQUNsQyxxQkFBcUIsRUFDckI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDRixJQUFNLDJCQUEyQixHQUFHLElBQUksZUFBSSxDQUFDLDZCQUE2QixFQUFFO0lBQzFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLENBQUMsQ0FBQztBQUNILElBQU0seUJBQXlCLEdBQUcsSUFBSSxlQUFJLENBQ3hDLDJCQUEyQixFQUMzQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFD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RUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDdkMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSxvQkFBb0IsR0FBRyxJQUFJLGVBQUksQ0FBQyxzQkFBc0IsRUFBRTtJQUM1RCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxDQUFDLENBQUM7QUFDSCxJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUN0Qyx5QkFBeUIsRUFDekI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUN0Qyx5QkFBeUIsRUFDekI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFDRixJQUFNLCtCQUErQixHQUFHLElBQUksZUFBSSxDQUM5QyxpQ0FBaUMsRUFDakM7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyxnQ0FBd0IsR0FBRyxJQUFJLGVBQUksQ0FDOUMsMEJBQTBCLEVBQzFCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ0YsSUFBTSxzQkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FBQyx3QkFBd0IsRUFBRTtJQUNoRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxDQUFDLENBQUM7QUFDSCxJQUFNLG1CQUFtQixHQUFHLElBQUksZUFBSSxDQUFDLHFCQUFxQixFQUFFO0lBQzFELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLENBQUMsQ0FBQztBQUNILElBQU0sb0JBQW9CLEdBQUcsSUFBSSxlQUFJLENBQ25DLHNCQUFzQixFQUN0QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNGLElBQU0sOEJBQThCLEdBQUcsSUFBSSxlQUFJLENBQzdDLGdDQUFnQyxFQUNoQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNGLElBQU0sbUNBQW1DLEdBQUcsSUFBSSxlQUFJLENBQ2xELHFDQUFxQyxFQUNyQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0NBQ3ZDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUNGLElBQU0sd0JBQXdCLEdBQUcsSUFBSSxlQUFJLENBQ3ZDLDBCQUEwQixFQUMxQjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ25DLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3ZDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUVGLHNCQUFzQjtBQUN0QixJQUFNLDRCQUE0QixHQUFHLElBQUksZUFBSSxDQUFDLDhCQUE4QixFQUFFO0lBQzVFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMs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QUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLDhEQUE4RDtJQUM5RCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxDQUFDLENBQUM7QUFDSCxJQUFNLGlCQUFpQixHQUFHLElBQUksZUFBSSxDQUFDLG1CQUFtQixFQUFFO0lBQ3RELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3pDLENBQUMsQ0FBQztBQUNILElBQU0sbUJBQW1CLEdBQUcsSUFBSSxlQUFJLENBQUMscUJBQXFCLEVBQUU7SUFDMUQsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBQ0gsSUFBTSxxQkFBcUIsR0FBRyxJQUFJLGVBQUksQ0FDcEMsdUJBQXVCLEVBQ3ZCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBQ0YsSUFBTSx3QkFBd0IsR0FBRyxJQUFJLGVBQUksQ0FBQywwQkFBMEIsRUFBRTtJQUNwRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxDQUFDLENBQUM7QUFDSCxJQUFNLHFCQUFxQixHQUFHLElBQUksZUFBSSxDQUFDLHVCQUF1QixFQUFFO0lBQzlELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3pDLENBQUMsQ0FBQztBQUNILElBQU0sOEJBQThCLEdBQUcsSUFBSSxlQUFJLENBQUMsZ0NBQWdDLEVBQUU7SUFDaEYsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FD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LENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFDRixJQUFNLGlCQUFpQixHQUFHLElBQUksZUFBSSxDQUFDLG1CQUFtQixFQUFFO0lBQ3RELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLENBQUMsQ0FBQztBQUVVLHVDQUErQixHQUFHLElBQUksZUFBSSxDQUNyRCxpQ0FBaUMsRUFDakM7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFDVyxtQ0FBMkIsR0FBRyxJQUFJLGVBQUksQ0FDakQsNkJBQTZCLEVBQzdCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ0YsSUFBTSxpQ0FBaUMsR0FBRyxJQUFJLGVBQUksQ0FDaEQsbUNBQW1DLEVBQ25DO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBQ1csdUNBQStCLEdBQUcsSUFBSSxlQUFJLENBQ3JELGlDQUFpQyxFQUNqQztJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3ZDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUNXLHFDQUE2QixHQUFHLElBQUksZUFBSSxDQUFDLCtCQUErQixFQUFFO0lBQ3JGLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVB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QUFDLHdCQUF3QixFQUFFO0lBQ2hFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3hDLENBQUMsQ0FBQztBQUNILElBQU0sMEJBQTBCLEdBQUcsSUFBSSxlQUFJLENBQ3pDLDRCQUE0QixFQUM1QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMs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LENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN4QyxDQUFDLENBQUM7QUFDSCxJQUFNLHNCQUFzQixHQUFHLElBQUksZUFBSSxDQUNyQyx3QkFBd0IsRUFDeEI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFDRixJQUFNLDJCQUEyQixHQUFHLElBQUksZUFBSSxDQUFDLDZCQUE2QixFQUFFO0lBQzFFLEVBQUUsQ0FBQyxFQUFFLEdB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RSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDbkMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNuQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ25DLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDcEMsQ0FBQztBQUVXLHlCQUFpQixHQUFxQztJQUNqRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ25DLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDbkMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNuQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ25DLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDbkMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNuQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3pDLENBQUM7QUFrQlcsa0JBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ3RDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZCLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QixFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFO0lBQ3hCLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFO0lBQ3ZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFO0lBQ3BCLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFO0lBQ3JCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNuQixFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDcEIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEIsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDckIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcs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VUVQRDtVQUNBO1VBQ0E7VUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3QvLi9pbmRleC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9SZXJvdXRlci9kaXN0L3NyYy9yZXJvdXRlci5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3Qvc3JjL3NjcmVlbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3Qvc3JjL3N0cnVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3Qvc3JjL3V0aWxzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9lcy9hcnJheS9maW5kLWluZGV4LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9lcy9vYmplY3QvYXNzaWduLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYS1jYWxsYWJsZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlcy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY2xhc3NvZi1yYXcuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jbGFzc29mLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY29weS1jb25zdHJ1Y3Rvci1wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtZ2xvYmFsLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb2N1bWVudC1hbGwuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbnRyeS11bmJpbmQuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZXhwb3J0LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZmFpbHMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLW5hdGl2ZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1uYW1lLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWNsYXVzZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1idWlsdC1pbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaGlkZGVuLWtleXMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9odG1sLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbmRleGVkLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1hcnJheS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLWNhbGxhYmxlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1mb3JjZWQuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLXB1cmUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL21ha2UtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9tYXRoLXRydW5jLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWFzc2lnbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnRpZXMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9scy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1pcy1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1rZXlzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vcmRpbmFyeS10by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vd24ta2V5cy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3BhdGguanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zaGFyZWQta2V5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2hhcmVkLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc3ltYm9sLWNvbnN0cnVjdG9yLWRldGVjdGlvbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tbGVuZ3RoLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tb2JqZWN0LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tcHJvcGVydHkta2V5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tc3RyaW5nLXRhZy1zdXBwb3J0LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdHJ5LXRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3VpZC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3VzZS1zeW1ib2wtYXMtdWlkLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdjgtcHJvdG90eXBlLWRlZmluZS1idWcuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWFrLW1hcC1iYXNpYy1kZXRlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL2luZGV4LnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvY29uc3RhbnRzLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvaGVscGVyLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvaWNvbnMudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9tZXNzYWdlV2luZG93LnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvcGFnZXMudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9zY3JpcHRDb25maWcudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9zdG9yYWdlLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3MudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9ib3VudGllcy50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL2ZvdW50YWluLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3MvZ25vbWVMYWIudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9ndWlsZC50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL2hvdEFpckJhbGxvbi50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL2xvZ2luLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3MvcHZwQXJlbmEudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy90cmFkZUhhYm9yLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3MvdHJvcGljYWxJc2xhbmQudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy93aXNoaW5nVHJlZS50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3R5cGVzLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdXRpbHMudHMiLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90ZXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL2JlZm9yZS1zdGFydHVwIiwid2VicGFjazovL3Rlc3Qvd2VicGFjay9zdGFydHVwIiwid2VicGFjazovL3Rlc3Qvd2VicGFjay9hZnRlci1zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB3aW5kb3cgPSB3aW5kb3cgfHwge307XG5cbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZlcnNpb24gPSB2b2lkIDA7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3JjL3NjcmVlblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3JjL3Jlcm91dGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zcmMvc3RydWN0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zcmMvdXRpbHNcIiksIGV4cG9ydHMpO1xuZXhwb3J0cy52ZXJzaW9uID0gMTtcbnZhciB3cml0ZUZpbGVUbXAgPSB3cml0ZUZpbGU7XG4vLyBAdHMtaWdub3JlXG53cml0ZUZpbGUgPSBmdW5jdGlvbiAocGF0aCwgY29udGVudCkge1xuICAgIHZhciBydG4gPSB3cml0ZUZpbGVUbXAocGF0aCwgY29udGVudCk7XG4gICAgZXhlY3V0ZShcImNobW9kIDc3NyBcIi5jb25jYXQocGF0aCkpO1xuICAgIHJldHVybiBydG47XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZXJvdXRlciA9IGV4cG9ydHMuUmVyb3V0ZXIgPSB2b2lkIDA7XG52YXIgc3RydWN0XzEgPSByZXF1aXJlKFwiLi9zdHJ1Y3RcIik7XG52YXIgc2NyZWVuXzEgPSByZXF1aXJlKFwiLi9zY3JlZW5cIik7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xucmVxdWlyZShcImNvcmUtanMvZXMvb2JqZWN0L2Fzc2lnblwiKTtcbnJlcXVpcmUoXCJjb3JlLWpzL2VzL2FycmF5L2ZpbmQtaW5kZXhcIik7XG52YXIgUmVyb3V0ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVyb3V0ZXIoKSB7XG4gICAgICAgIHRoaXMuZGVidWcgPSB0cnVlO1xuICAgICAgICB0aGlzLmRlZmF1bHRDb25maWcgPSBzdHJ1Y3RfMS5EZWZhdWx0Q29uZmlnVmFsdWU7XG4gICAgICAgIHRoaXMucmVyb3V0ZXJDb25maWcgPSBzdHJ1Y3RfMS5EZWZhdWx0UmVyb3V0ZXJDb25maWc7XG4gICAgICAgIHRoaXMuc2NyZWVuQ29uZmlnID0gc3RydWN0XzEuRGVmYXVsdFNjcmVlbkNvbmZpZztcbiAgICAgICAgdGhpcy5zY3JlZW4gPSBuZXcgc2NyZWVuXzEuU2NyZWVuKHRoaXMuc2NyZWVuQ29uZmlnKTtcbiAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMucm91dGVDb25mbGljdFJlY29yZCA9IFtdO1xuICAgICAgICB0aGlzLnJvdXRlcyA9IFtdO1xuICAgICAgICB0aGlzLnRhc2tzID0gW107XG4gICAgICAgIHRoaXMucm91dGVDb250ZXh0ID0gbnVsbDtcbiAgICAgICAgdGhpcy51bmtub3duUm91dGVBY3Rpb24gPSBudWxsO1xuICAgICAgICB0aGlzLnN0YXJ0QXBwUm91dGVBY3Rpb24gPSBudWxsO1xuICAgIH1cbiAgICBSZXJvdXRlci5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIE5PVEU6IHRoaXMgaXMgYW4gYW5vdGhlciB3YXkgdGhhdCByZXNldHMgUmVyb3V0ZXIsIGp1c3QgbGVhdmluZyBoZXJlIGZvciBtZW1vcnlcbiAgICAgICAgLy8gcmVyb3V0ZXJDb250YWluZXIuaW5zdGFuY2UgPSBuZXcgUmVyb3V0ZXIoKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZSBpbmNsdWRlZCAnY29yZS1qcy9lcy9vYmplY3QvYXNzaWduJ1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIG5ldyBSZXJvdXRlcigpKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlY2FsY3VsYXRlIHNvbWUgdmFsdWUgbGlrZSBkZXZpY2Ugd2lkdGggb3IgaGVpZ2h0IGluIHNjcmVlbkNvbmZpZ1xuICAgICAqL1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBzb3J0IHJvdXRlcyBieSBwcmlvcml0eVxuICAgICAgICB0aGlzLnJvdXRlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBiLnByaW9yaXR5IC0gYS5wcmlvcml0eTsgfSk7XG4gICAgICAgIC8vIGNoZWNrIGFuZCBjYWxjdWxhdGUgc2NyZWVuIGNvbmZpZ1xuICAgICAgICB2YXIgZGV2aWNlV0ggPSBnZXRTY3JlZW5TaXplKCk7XG4gICAgICAgIHZhciBtYXggPSBNYXRoLm1heChkZXZpY2VXSC53aWR0aCwgZGV2aWNlV0guaGVpZ2h0KTtcbiAgICAgICAgdmFyIG1pbiA9IE1hdGgubWluKGRldmljZVdILndpZHRoLCBkZXZpY2VXSC5oZWlnaHQpO1xuICAgICAgICB2YXIgZFdpZHRoID0gdGhpcy5zY3JlZW5Db25maWcucm90YXRpb24gPT09ICdob3Jpem9udGFsJyA/IG1heCA6IG1pbjtcbiAgICAgICAgdmFyIGRIZWlnaHQgPSB0aGlzLnNjcmVlbkNvbmZpZy5yb3RhdGlvbiA9PT0gJ3ZlcnRpY2FsJyA/IG1heCA6IG1pbjtcbiAgICAgICAgdGhpcy5zY3JlZW5Db25maWcuZGV2aWNlV2lkdGggPSB0aGlzLnNjcmVlbkNvbmZpZy5kZXZpY2VXaWR0aCB8fCBkV2lkdGg7XG4gICAgICAgIHRoaXMuc2NyZWVuQ29uZmlnLmRldmljZUhlaWdodCA9IHRoaXMuc2NyZWVuQ29uZmlnLmRldmljZUhlaWdodCB8fCBkSGVpZ2h0O1xuICAgICAgICB0aGlzLnNjcmVlbkNvbmZpZy5zY3JlZW5XaWR0aCA9IHRoaXMuc2NyZWVuQ29uZmlnLnNjcmVlbldpZHRoIHx8IGRXaWR0aDtcbiAgICAgICAgdGhpcy5zY3JlZW5Db25maWcuc2NyZWVuSGVpZ2h0ID0gdGhpcy5zY3JlZW5Db25maWcuc2NyZWVuSGVpZ2h0IHx8IGRIZWlnaHQ7XG4gICAgICAgIHRoaXMubG9nKFwic2NyZWVuV2lkdGg6IFwiLmNvbmNhdCh0aGlzLnNjcmVlbkNvbmZpZy5zY3JlZW5XaWR0aCwgXCIsIHNjcmVlbkhlaWdodDogXCIpLmNvbmNhdCh0aGlzLnNjcmVlbkNvbmZpZy5zY3JlZW5IZWlnaHQpKTtcbiAgICAgICAgdGhpcy5zY3JlZW5Db25maWcubG9nU2NyZWVuc2hvdEZvbGRlciA9IHV0aWxzXzEuVXRpbHMuam9pblBhdGhzKHRoaXMucmVyb3V0ZXJDb25maWcuc2F2ZUltYWdlUm9vdCwgdGhpcy5yZXJvdXRlckNvbmZpZy5kZXZpY2VJZCk7XG4gICAgICAgIC8vIG5ldyBzY3JlZW4gaWYgc2NyZWVuIGNvbmZpZyBjaGFuZ2VkXG4gICAgICAgIHRoaXMuc2NyZWVuID0gbmV3IHNjcmVlbl8xLlNjcmVlbih0aGlzLnNjcmVlbkNvbmZpZyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBBZGQgUm91dGVDb25maWcgdG8gUmVyb3V0ZXIgcm91dGVzLCBhZnRlciBzdGFydGluZyBSZXJvdXRlciB3aWxsIHJ1biBvdmVyIGFsbCBSb3V0ZUNvbmZpZ3MgdG8gbWF0Y2ggc2NyZWVuIGFuZCBkbyBhY3Rpb25cbiAgICAgKiBAcGFyYW0gY29uZmlnIGluZm9ybWF0aW9uIGFib3V0IGhvdyByb3V0ZSBtYXRjaCBhbmQgcm91dGUgYWN0aW9uXG4gICAgICovXG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmFkZFJvdXRlID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICAvLyBAdHMtaWdub3JlIGluY2x1ZGVkICdjb3JlLWpzL2VzL2FycmF5L2ZpbmQtaW5kZXgnXG4gICAgICAgIHZhciBleGlzdGluZ1JvdXRlSW5kZXggPSB0aGlzLnJvdXRlcy5maW5kSW5kZXgoZnVuY3Rpb24gKHJvdXRlKSB7IHJldHVybiByb3V0ZS5wYXRoID09PSBjb25maWcucGF0aDsgfSk7XG4gICAgICAgIC8vIElmIGl0IGV4aXN0cywgbG9nIGEgd2FybmluZyBhbmQgZGVjaWRlIHdoYXQgdG8gZG8gbmV4dFxuICAgICAgICBpZiAoZXhpc3RpbmdSb3V0ZUluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy53YXJuaW5nKFwiQSByb3V0ZSB3aXRoIHRoZSBwYXRoICdcIi5jb25jYXQoY29uZmlnLnBhdGgsIFwiJyBhbHJlYWR5IGV4aXN0cy4gRHVwbGljYXRlIHJvdXRlIHdpbGwgbm90IGJlIGFkZGVkLlwiKSk7XG4gICAgICAgICAgICAvLyBPcHRpb24gMTogVXBkYXRlIHRoZSBleGlzdGluZyByb3V0ZSB3aXRoIHRoZSBuZXcgY29uZmlndXJhdGlvblxuICAgICAgICAgICAgLy8gdGhpcy5yb3V0ZXNbZXhpc3RpbmdSb3V0ZUluZGV4XSA9IHRoaXMud3JhcFJvdXRlQ29uZmlnV2l0aERlZmF1bHQoY29uZmlnKTtcbiAgICAgICAgICAgIC8vIE9wdGlvbiAyOiBTaW1wbHkgcmV0dXJuIGFuZCBkb24ndCBhZGQgdGhlIG5ldyByb3V0ZVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIGl0IGRvZXNuJ3QgZXhpc3QsIHB1c2ggdGhlIG5ldyByb3V0ZVxuICAgICAgICB0aGlzLnJvdXRlcy5wdXNoKHRoaXMud3JhcFJvdXRlQ29uZmlnV2l0aERlZmF1bHQoY29uZmlnKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUZWxsIFJlcm91dGVyIHdoYXQgdG8gZG8gaWYgbm90IG1hdGNoaW5nIGFueSByb3V0ZVxuICAgICAqIEBwYXJhbSBhY3Rpb24gZnVuY3Rpb24gdG8gZG8gaWYgbm90IG1hdGNoaW5nXG4gICAgICovXG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmFkZFVua25vd25BY3Rpb24gPSBmdW5jdGlvbiAoYWN0aW9uKSB7XG4gICAgICAgIHRoaXMudW5rbm93blJvdXRlQWN0aW9uID0gYWN0aW9uO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmFkZFN0YXJ0QXBwQWN0aW9uID0gZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICB0aGlzLnN0YXJ0QXBwUm91dGVBY3Rpb24gPSBhY3Rpb247XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBBZGQgVGFza0NvbmZpZyB0byBSZXJvdXRlciB0YXNrcywgYWZ0ZXIgc3RhcnRpbmcgUmVyb3V0ZXIgd2lsbCBydW4gb3ZlciBhbGwgVGFza3MgYnkgdGFzayBjb25kaXRpb25cbiAgICAgKiBAcGFyYW0gY29uZmlnIGluZm9ybWF0aW9uIGFib3V0IGhvdyB0YXNrIHdvcmtzXG4gICAgICovXG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmFkZFRhc2sgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHRoaXMudGFza3MucHVzaCh7XG4gICAgICAgICAgICBuYW1lOiBjb25maWcubmFtZSxcbiAgICAgICAgICAgIGNvbmZpZzogdGhpcy53cmFwVGFza0NvbmZpZ1dpdGhEZWZhdWx0KGNvbmZpZyksXG4gICAgICAgICAgICBzdGFydFRpbWU6IDAsXG4gICAgICAgICAgICBsYXN0UnVuVGltZTogMCxcbiAgICAgICAgICAgIHJ1blRpbWVzOiAwLFxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIHN0YXJ0IFJlcm91dGVyIHRvIHJ1biBvdmVyIHRhc2tzIGFuZCByb3V0ZXNcbiAgICAgKiBAcGFyYW0gcGFja2FnZU5hbWVcbiAgICAgKi9cbiAgICBSZXJvdXRlci5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAocGFja2FnZU5hbWUpIHtcbiAgICAgICAgdGhpcy5yZXJvdXRlckNvbmZpZy5wYWNrYWdlTmFtZSA9IHBhY2thZ2VOYW1lO1xuICAgICAgICAvLyBjaGVjayB0YXNrc1xuICAgICAgICBpZiAodGhpcy50YXNrcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMubG9nKFwiUmVyb3V0ZXIgc3RhcnQgZmFpbGVkLCBubyB0YXNrcyAuLi5cIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIHRoaXMubG9nKFwiUmVyb3V0ZXIgc3RhcnRlZCAuLi5cIik7XG4gICAgICAgIC8vIHRhc2sgY29udHJvbGxlclxuICAgICAgICB0aGlzLnJ1bm5pbmcgPSB0cnVlO1xuICAgICAgICB0aGlzLnN0YXJ0VGFza0xvb3AoKTtcbiAgICAgICAgdGhpcy5sb2coXCJSZXJvdXRlciBzdG9wcGVkIC4uLlwiKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIHN0b3AgUmVyb3V0ZXJcbiAgICAgKi9cbiAgICBSZXJvdXRlci5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sb2coXCJSZXJvdXRlciBzdG9wIGNhbGxlZCwgdHJ5aW5nIHRvIHN0b3AgdGFzayBsb29wXCIpO1xuICAgICAgICB0aGlzLnJ1bm5pbmcgPSBmYWxzZTtcbiAgICAgICAgaWYgKHRoaXMucm91dGVDb250ZXh0ICE9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnJvdXRlQ29udGV4dC5zY3JpcHRSdW5uaW5nID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5jaGVja0luQXBwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcGFja2FnZU5hbWUgPSB1dGlsc18xLlV0aWxzLmdldEN1cnJlbnRBcHAoKVswXTtcbiAgICAgICAgaWYgKHBhY2thZ2VOYW1lID09PSB0aGlzLnJlcm91dGVyQ29uZmlnLnBhY2thZ2VOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdXRpbHNfMS5VdGlscy5pc0FwcE9uVG9wKHRoaXMucmVyb3V0ZXJDb25maWcucGFja2FnZU5hbWUpO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmNoZWNrQW5kU3RhcnRBcHAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5jaGVja0luQXBwKCkpIHtcbiAgICAgICAgICAgIHRoaXMubG9nKFwiQXBwSXNOb3RTdGFydGVkLCBzdGFydEFwcCBcIi5jb25jYXQodGhpcy5yZXJvdXRlckNvbmZpZy5wYWNrYWdlTmFtZSkpO1xuICAgICAgICAgICAgdGhpcy5zdGFydEFwcCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLnN0YXJ0QXBwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMucmVyb3V0ZXJDb25maWcucGFja2FnZU5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMubG9nKFwiUmVyb3V0ZXIgc3RhcnQgYXBwIGZhaWxlZCwgbm8gcGFja2FnZU5hbWUgLi4uXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHV0aWxzXzEuVXRpbHMuc3RhcnRBcHAodGhpcy5yZXJvdXRlckNvbmZpZy5wYWNrYWdlTmFtZSk7XG4gICAgICAgIHV0aWxzXzEuVXRpbHMuc2xlZXAodGhpcy5yZXJvdXRlckNvbmZpZy5zdGFydEFwcERlbGF5KTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5zdG9wQXBwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMucmVyb3V0ZXJDb25maWcucGFja2FnZU5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMubG9nKFwiUmVyb3V0ZXIgc3RvcCBhcHAgZmFpbGVkLCBubyBwYWNrYWdlTmFtZSAuLi5cIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdXRpbHNfMS5VdGlscy5zdG9wQXBwKHRoaXMucmVyb3V0ZXJDb25maWcucGFja2FnZU5hbWUpO1xuICAgICAgICB1dGlsc18xLlV0aWxzLnNsZWVwKDEwMDApO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLnJlc3RhcnRBcHAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc3RvcEFwcCgpO1xuICAgICAgICB0aGlzLnN0YXJ0QXBwKCk7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuZ29OZXh0ID0gZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgaWYgKHBhZ2UubmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnNjcmVlbi50YXAocGFnZS5uZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMud2FybmluZyhcIlwiLmNvbmNhdChwYWdlLm5hbWUsIFwiIGFjdGlvbiA9PSBnb05leHQsIGJ1dCBubyBuZXh0IHh5XCIpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmdvQmFjayA9IGZ1bmN0aW9uIChwYWdlKSB7XG4gICAgICAgIGlmIChwYWdlLmJhY2sgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5zY3JlZW4udGFwKHBhZ2UuYmFjayk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLndhcm5pbmcoXCJcIi5jb25jYXQocGFnZS5uYW1lLCBcIiBhY3Rpb24gPT0gZ29CYWNrLCBidXQgbm8gYmFjayB4eVwiKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5pc1BhZ2VNYXRjaCA9IGZ1bmN0aW9uIChwYWdlKSB7XG4gICAgICAgIHZhciBpbWFnZSA9IHRoaXMuc2NyZWVuLmdldEN2dERldlNjcmVlbnNob3QoKTtcbiAgICAgICAgdmFyIGlzTWF0Y2ggPSB0aGlzLmlzUGFnZU1hdGNoSW1hZ2UocGFnZSwgaW1hZ2UpO1xuICAgICAgICByZWxlYXNlSW1hZ2UoaW1hZ2UpO1xuICAgICAgICByZXR1cm4gaXNNYXRjaDtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5pc1BhZ2VNYXRjaEltYWdlID0gZnVuY3Rpb24gKHBhZ2UsIGltYWdlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgcGFnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHZhciBwID0gdGhpcy5nZXRQYWdlQnlOYW1lKHBhZ2UpO1xuICAgICAgICAgICAgaWYgKHAgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLndhcm5pbmcoXCJpc1BhZ2VNYXRjaEltYWdlIFwiLmNvbmNhdChwYWdlLCBcIiBub3QgZXhpc3RcIikpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhZ2UgPSBwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYWdlIGluc3RhbmNlb2Ygc3RydWN0XzEuUGFnZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaXNNYXRjaFBhZ2VJbXBsKGltYWdlLCBwYWdlLCB0aGlzLmRlZmF1bHRDb25maWcuUGFnZVRocmVzLCB0aGlzLmRlYnVnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBwYWdlcyA9IHRoaXMuaXNNYXRjaEdyb3VwUGFnZUltcGwoaW1hZ2UsIHBhZ2UsIHRoaXMuZGVmYXVsdENvbmZpZy5Hcm91cFBhZ2VUaHJlcywgdGhpcy5kZWJ1Zyk7XG4gICAgICAgICAgICByZXR1cm4gcGFnZXMubGVuZ3RoID4gMDtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmdldFBhZ2VzTWF0Y2ggPSBmdW5jdGlvbiAoZ3JvdXBQYWdlKSB7XG4gICAgICAgIHZhciBpbWFnZSA9IHRoaXMuc2NyZWVuLmdldEN2dERldlNjcmVlbnNob3QoKTtcbiAgICAgICAgdmFyIG1hdGNoID0gdGhpcy5nZXRQYWdlc01hdGNoSW1hZ2UoZ3JvdXBQYWdlLCBpbWFnZSwgdGhpcy5kZWZhdWx0Q29uZmlnLkdyb3VwUGFnZVRocmVzKTtcbiAgICAgICAgcmVsZWFzZUltYWdlKGltYWdlKTtcbiAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmdldFBhZ2VzTWF0Y2hJbWFnZSA9IGZ1bmN0aW9uIChncm91cFBhZ2UsIGltYWdlLCBwYXJlbnRUaHJlcywgZGVidWcpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgdmFyIHBhZ2VzID0gW107XG4gICAgICAgIHZhciB0aHJlcyA9IChfYiA9IChfYSA9IGdyb3VwUGFnZS50aHJlcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogcGFyZW50VGhyZXMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHRoaXMuZGVmYXVsdENvbmZpZy5QYWdlVGhyZXM7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBQYWdlLnBhZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGFnZSA9IGdyb3VwUGFnZS5wYWdlc1tpXTtcbiAgICAgICAgICAgIHZhciBpc1BhZ2VNYXRjaCA9IHRoaXMuaXNNYXRjaFBhZ2VJbXBsKGltYWdlLCBwYWdlLCB0aHJlcywgdGhpcy5kZWJ1Zyk7XG4gICAgICAgICAgICBpZiAoaXNQYWdlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICBwYWdlcy5wdXNoKHBhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYWdlcztcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlID0gZnVuY3Rpb24gKHBhZ2UsIHRpbWVvdXQsIG1hdGNoVGltZXMsIGludGVydmFsKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmIChtYXRjaFRpbWVzID09PSB2b2lkIDApIHsgbWF0Y2hUaW1lcyA9IDE7IH1cbiAgICAgICAgaWYgKGludGVydmFsID09PSB2b2lkIDApIHsgaW50ZXJ2YWwgPSA2MDA7IH1cbiAgICAgICAgcmV0dXJuIHV0aWxzXzEuVXRpbHMud2FpdEZvckFjdGlvbihmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5pc1BhZ2VNYXRjaChwYWdlKTsgfSwgdGltZW91dCwgbWF0Y2hUaW1lcywgaW50ZXJ2YWwpO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmlzUm91dGVNYXRjaCA9IGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICB2YXIgaW1hZ2UgPSB0aGlzLnNjcmVlbi5nZXRDdnREZXZTY3JlZW5zaG90KCk7XG4gICAgICAgIHZhciBpc01hdGNoID0gdGhpcy5pc1JvdXRlTWF0Y2hJbWFnZShyb3V0ZSwgaW1hZ2UpO1xuICAgICAgICByZWxlYXNlSW1hZ2UoaW1hZ2UpO1xuICAgICAgICByZXR1cm4gaXNNYXRjaDtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5pc1JvdXRlTWF0Y2hJbWFnZSA9IGZ1bmN0aW9uIChyb3V0ZSwgaW1hZ2UpIHtcbiAgICAgICAgdmFyIHJvdXRlQ29uZmlnID0gdGhpcy5nZXRSb3V0ZUNvbmZpZyhyb3V0ZSk7XG4gICAgICAgIGlmIChyb3V0ZUNvbmZpZyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy53YXJuaW5nKFwiaXNSb3V0ZU1hdGNoSW1hZ2UgXCIuY29uY2F0KHJvdXRlLCBcIiBub3QgZXhpc3RcIikpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmaWxsZWRSb3V0ZUNvbmZpZyA9IHRoaXMud3JhcFJvdXRlQ29uZmlnV2l0aERlZmF1bHQocm91dGVDb25maWcpO1xuICAgICAgICB2YXIgcm90YXRpb24gPSB0aGlzLnNjcmVlbi5nZXRJbWFnZVJvdGF0aW9uKGltYWdlKTtcbiAgICAgICAgdmFyIGlzTWF0Y2hlZCA9IHRoaXMuaXNNYXRjaFJvdXRlSW1wbChpbWFnZSwgcm90YXRpb24sIGZpbGxlZFJvdXRlQ29uZmlnLCAnd2FpdFNjcmVlbkZvck1hdGNoaW5nUm91dGUnKS5pc01hdGNoZWQ7XG4gICAgICAgIGlmIChpc01hdGNoZWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS53YWl0U2NyZWVuRm9yTWF0Y2hpbmdSb3V0ZSA9IGZ1bmN0aW9uIChyb3V0ZSwgdGltZW91dCwgbWF0Y2hUaW1lcywgaW50ZXJ2YWwpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKG1hdGNoVGltZXMgPT09IHZvaWQgMCkgeyBtYXRjaFRpbWVzID0gMTsgfVxuICAgICAgICBpZiAoaW50ZXJ2YWwgPT09IHZvaWQgMCkgeyBpbnRlcnZhbCA9IDYwMDsgfVxuICAgICAgICByZXR1cm4gdXRpbHNfMS5VdGlscy53YWl0Rm9yQWN0aW9uKGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLmlzUm91dGVNYXRjaChyb3V0ZSk7IH0sIHRpbWVvdXQsIG1hdGNoVGltZXMsIGludGVydmFsKTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5nZXRQYWdlQnlOYW1lID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9iID0gdGhpcy5yb3V0ZXM7IF9pIDwgX2IubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgcm91dGUgPSBfYltfaV07XG4gICAgICAgICAgICBpZiAobmFtZSA9PT0gKChfYSA9IHJvdXRlLm1hdGNoKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmFtZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcm91dGUubWF0Y2g7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuZ2V0Um91dGVDb25maWdCeVBhdGggPSBmdW5jdGlvbiAocGF0aCkge1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gdGhpcy5yb3V0ZXM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgcm91dGUgPSBfYVtfaV07XG4gICAgICAgICAgICBpZiAocGF0aCA9PT0gcm91dGUucGF0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByb3V0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5nZXRDdXJyZW50TWF0Y2hOYW1lcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGltYWdlID0gdGhpcy5zY3JlZW4uZ2V0Q3Z0RGV2U2NyZWVuc2hvdCgpO1xuICAgICAgICB2YXIgbWF0Y2hlZE5hbWVzID0gW107XG4gICAgICAgIHRoaXMucm91dGVzLmZvckVhY2goZnVuY3Rpb24gKHJvdXRlKSB7XG4gICAgICAgICAgICB2YXIgbWF0Y2ggPSByb3V0ZS5tYXRjaDtcbiAgICAgICAgICAgIGlmICgobWF0Y2ggaW5zdGFuY2VvZiBzdHJ1Y3RfMS5QYWdlICYmIF90aGlzLmlzTWF0Y2hQYWdlSW1wbChpbWFnZSwgbWF0Y2gsIF90aGlzLmRlZmF1bHRDb25maWcuUGFnZVRocmVzLCBfdGhpcy5kZWJ1ZykpIHx8XG4gICAgICAgICAgICAgICAgKG1hdGNoIGluc3RhbmNlb2Ygc3RydWN0XzEuR3JvdXBQYWdlICYmIF90aGlzLmlzTWF0Y2hHcm91cFBhZ2VJbXBsKGltYWdlLCBtYXRjaCwgX3RoaXMuZGVmYXVsdENvbmZpZy5QYWdlVGhyZXMsIF90aGlzLmRlYnVnKS5sZW5ndGggPiAwKSkge1xuICAgICAgICAgICAgICAgIG1hdGNoZWROYW1lcy5wdXNoKG1hdGNoLm5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5sb2coXCJjdXJyZW50IG1hdGNoOiBcIiwgbWF0Y2hlZE5hbWVzKTtcbiAgICAgICAgcmVsZWFzZUltYWdlKGltYWdlKTtcbiAgICAgICAgcmV0dXJuIG1hdGNoZWROYW1lcztcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5nZXRSb3V0ZUNvbmZpZyA9IGZ1bmN0aW9uIChyKSB7XG4gICAgICAgIHZhciByb3V0ZTtcbiAgICAgICAgaWYgKHR5cGVvZiByID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcm91dGUgPSB0aGlzLmdldFJvdXRlQ29uZmlnQnlQYXRoKHIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcm91dGUgPSByO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByb3V0ZTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS53cmFwUm91dGVDb25maWdXaXRoRGVmYXVsdCA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaCwgX2o7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiBjb25maWcucGF0aCxcbiAgICAgICAgICAgIGFjdGlvbjogY29uZmlnLmFjdGlvbixcbiAgICAgICAgICAgIG1hdGNoOiAoX2EgPSBjb25maWcubWF0Y2gpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG51bGwsXG4gICAgICAgICAgICBjdXN0b21NYXRjaDogKF9iID0gY29uZmlnLmN1c3RvbU1hdGNoKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBudWxsLFxuICAgICAgICAgICAgcm90YXRpb246IChfYyA9IGNvbmZpZy5yb3RhdGlvbikgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogdGhpcy5zY3JlZW5Db25maWcucm90YXRpb24sXG4gICAgICAgICAgICBzaG91bGRNYXRjaFRpbWVzOiAoX2QgPSBjb25maWcuc2hvdWxkTWF0Y2hUaW1lcykgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogdGhpcy5kZWZhdWx0Q29uZmlnLlJvdXRlQ29uZmlnU2hvdWxkTWF0Y2hUaW1lcyxcbiAgICAgICAgICAgIHNob3VsZE1hdGNoRHVyaW5nOiAoX2UgPSBjb25maWcuc2hvdWxkTWF0Y2hEdXJpbmcpICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6IHRoaXMuZGVmYXVsdENvbmZpZy5Sb3V0ZUNvbmZpZ1Nob3VsZE1hdGNoRHVyaW5nLFxuICAgICAgICAgICAgYmVmb3JlQWN0aW9uRGVsYXk6IChfZiA9IGNvbmZpZy5iZWZvcmVBY3Rpb25EZWxheSkgIT09IG51bGwgJiYgX2YgIT09IHZvaWQgMCA/IF9mIDogdGhpcy5kZWZhdWx0Q29uZmlnLlJvdXRlQ29uZmlnQmVmb3JlQWN0aW9uRGVsYXksXG4gICAgICAgICAgICBhZnRlckFjdGlvbkRlbGF5OiAoX2cgPSBjb25maWcuYWZ0ZXJBY3Rpb25EZWxheSkgIT09IG51bGwgJiYgX2cgIT09IHZvaWQgMCA/IF9nIDogdGhpcy5kZWZhdWx0Q29uZmlnLlJvdXRlQ29uZmlnQWZ0ZXJBY3Rpb25EZWxheSxcbiAgICAgICAgICAgIHByaW9yaXR5OiAoX2ggPSBjb25maWcucHJpb3JpdHkpICE9PSBudWxsICYmIF9oICE9PSB2b2lkIDAgPyBfaCA6IHRoaXMuZGVmYXVsdENvbmZpZy5Sb3V0ZUNvbmZpZ1ByaW9yaXR5LFxuICAgICAgICAgICAgZGVidWc6IChfaiA9IGNvbmZpZy5kZWJ1ZykgIT09IG51bGwgJiYgX2ogIT09IHZvaWQgMCA/IF9qIDogdGhpcy5kZWZhdWx0Q29uZmlnLlJvdXRlQ29uZmlnRGVidWcsXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUud3JhcFRhc2tDb25maWdXaXRoRGVmYXVsdCA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogY29uZmlnLm5hbWUsXG4gICAgICAgICAgICBtYXhUYXNrUnVuVGltZXM6IChfYSA9IGNvbmZpZy5tYXhUYXNrUnVuVGltZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHRoaXMuZGVmYXVsdENvbmZpZy5UYXNrQ29uZmlnTWF4VGFza1J1blRpbWVzLFxuICAgICAgICAgICAgbWF4VGFza0R1cmluZzogKF9iID0gY29uZmlnLm1heFRhc2tEdXJpbmcpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHRoaXMuZGVmYXVsdENvbmZpZy5UYXNrQ29uZmlnTWF4VGFza0R1cmluZyxcbiAgICAgICAgICAgIG1pblJvdW5kSW50ZXJ2YWw6IChfYyA9IGNvbmZpZy5taW5Sb3VuZEludGVydmFsKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiB0aGlzLmRlZmF1bHRDb25maWcuVGFza0NvbmZpZ01pblJvdW5kSW50ZXJ2YWwsXG4gICAgICAgICAgICBmb3JjZVN0b3A6IChfZCA9IGNvbmZpZy5mb3JjZVN0b3ApICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IHRoaXMuZGVmYXVsdENvbmZpZy5UYXNrQ29uZmlnQXV0b1N0b3AsXG4gICAgICAgICAgICBmaW5kUm91dGVEZWxheTogKF9lID0gY29uZmlnLmZpbmRSb3V0ZURlbGF5KSAhPT0gbnVsbCAmJiBfZSAhPT0gdm9pZCAwID8gX2UgOiB0aGlzLmRlZmF1bHRDb25maWcuVGFza0NvbmZpZ0ZpbmRSb3V0ZURlbGF5LFxuICAgICAgICAgICAgYmVmb3JlUm91dGU6IChfZiA9IGNvbmZpZy5iZWZvcmVSb3V0ZSkgIT09IG51bGwgJiYgX2YgIT09IHZvaWQgMCA/IF9mIDogbnVsbCxcbiAgICAgICAgICAgIGFmdGVyUm91dGU6IChfZyA9IGNvbmZpZy5hZnRlclJvdXRlKSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiBudWxsLFxuICAgICAgICB9O1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLnN0YXJ0VGFza0xvb3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0YXNrSWR4ID0gMDtcbiAgICAgICAgd2hpbGUgKHRoaXMucnVubmluZykge1xuICAgICAgICAgICAgdmFyIHRhc2sgPSB0aGlzLnRhc2tzW3Rhc2tJZHggJSB0aGlzLnRhc2tzLmxlbmd0aF07XG4gICAgICAgICAgICB0YXNrSWR4Kys7XG4gICAgICAgICAgICB2YXIgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIHZhciBpc1Rhc2tSdW5GaXJzdFRpbWUgPSB0YXNrLmxhc3RSdW5UaW1lID09PSAwO1xuICAgICAgICAgICAgaWYgKG5vdyAtIHRhc2subGFzdFJ1blRpbWUgPD0gdGFzay5jb25maWcubWluUm91bmRJbnRlcnZhbCAmJiAhaXNUYXNrUnVuRmlyc3RUaW1lKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2coXCJUYXNrOiBcIi5jb25jYXQodGFzay5uYW1lLCBcIiBkdXJpbmc6IFwiKS5jb25jYXQobm93IC0gdGFzay5sYXN0UnVuVGltZSwgXCIgPD0gbWluUm91bmRJbnRlcnZhbCwgc2tpcFwiKSk7XG4gICAgICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcCh0aGlzLnJlcm91dGVyQ29uZmlnLnRhc2tEZWxheSk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0YXNrLnN0YXJ0VGltZSA9IG5vdztcbiAgICAgICAgICAgIHRhc2sucnVuVGltZXMgPSAwO1xuICAgICAgICAgICAgdmFyIGV4aXRUYXNrID0gZmFsc2U7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRhc2suY29uZmlnLm1heFRhc2tSdW5UaW1lcyAmJiB0aGlzLnJ1bm5pbmcgJiYgIWV4aXRUYXNrOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvZyhcIlRhc2s6IFwiLmNvbmNhdCh0YXNrLm5hbWUsIFwiIHJ1biBcIikuY29uY2F0KHRhc2sucnVuVGltZXMpKTtcbiAgICAgICAgICAgICAgICB2YXIgc2tpcFJvdXRlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKHRhc2suY29uZmlnLmJlZm9yZVJvdXRlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nKFwiVGFzazogXCIuY29uY2F0KHRhc2submFtZSwgXCIgcnVuIFwiKS5jb25jYXQodGFzay5ydW5UaW1lcywgXCIgZG8gYmVmb3JlUm91dGUoKVwiKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0YXNrLmNvbmZpZy5iZWZvcmVSb3V0ZSh0YXNrKSA9PT0gJ3NraXBSb3V0ZUxvb3AnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBza2lwUm91dGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChza2lwUm91dGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2coXCJUYXNrOiBcIi5jb25jYXQodGFzay5uYW1lLCBcIiBydW4gXCIpLmNvbmNhdCh0YXNrLnJ1blRpbWVzLCBcIiBza2lwUm91dGVMb29wXCIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4aXRUYXNrID0gdGhpcy5zdGFydFJvdXRlTG9vcCh0YXNrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRhc2suY29uZmlnLmFmdGVyUm91dGUgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2coXCJUYXNrOiBcIi5jb25jYXQodGFzay5uYW1lLCBcIiBydW4gXCIpLmNvbmNhdCh0YXNrLnJ1blRpbWVzLCBcIiBkbyBhZnRlclJvdXRlKClcIikpO1xuICAgICAgICAgICAgICAgICAgICB0YXNrLmNvbmZpZy5hZnRlclJvdXRlKHRhc2spO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0YXNrLnJ1blRpbWVzKys7XG4gICAgICAgICAgICAgICAgdGFzay5sYXN0UnVuVGltZSA9IG5vdztcbiAgICAgICAgICAgICAgICB2YXIgZHVyaW5nID0gbm93IC0gdGFzay5zdGFydFRpbWU7XG4gICAgICAgICAgICAgICAgaWYgKHRhc2suY29uZmlnLm1heFRhc2tEdXJpbmcgPiAwICYmIGR1cmluZyA+PSB0YXNrLmNvbmZpZy5tYXhUYXNrRHVyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nKFwiVGFzazogXCIuY29uY2F0KHRhc2submFtZSwgXCIgdGFza0R1cmluZzogXCIpLmNvbmNhdChkdXJpbmcsIFwiL1wiKS5jb25jYXQodGFzay5jb25maWcubWF4VGFza0R1cmluZywgXCIgcmVhY2hlZCwgc3RvcFwiKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHV0aWxzXzEuVXRpbHMuc2xlZXAodGhpcy5yZXJvdXRlckNvbmZpZy50YXNrRGVsYXkpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuc3RhcnRSb3V0ZUxvb3AgPSBmdW5jdGlvbiAodGFzaykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xuICAgICAgICB0aGlzLnJvdXRlQ29udGV4dCA9IHtcbiAgICAgICAgICAgIHRhc2s6IHRhc2ssXG4gICAgICAgICAgICBzY3JlZW46IHRoaXMuc2NyZWVuLFxuICAgICAgICAgICAgc2NyaXB0UnVubmluZzogdGhpcy5ydW5uaW5nLFxuICAgICAgICAgICAgcGF0aDogJycsXG4gICAgICAgICAgICBsYXN0TWF0Y2hlZFBhdGg6IChfYiA9IChfYSA9IHRoaXMucm91dGVDb250ZXh0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGFzdE1hdGNoZWRQYXRoKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAnJyxcbiAgICAgICAgICAgIG1hdGNoVGltZXM6IDAsXG4gICAgICAgICAgICBtYXRjaFN0YXJ0VFM6IDAsXG4gICAgICAgICAgICBtYXRjaER1cmluZzogMCxcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHJvdXRlTG9vcCA9IHRydWU7XG4gICAgICAgIHZhciBleGl0VGFza1Jlc3VsdCA9IGZhbHNlO1xuICAgICAgICB2YXIgZmluaXNoUm91bmRGdW5jID0gZnVuY3Rpb24gKGV4aXRUYXNrKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBpZiAoZXhpdFRhc2sgPT09IHZvaWQgMCkgeyBleGl0VGFzayA9IGZhbHNlOyB9XG4gICAgICAgICAgICByb3V0ZUxvb3AgPSBmYWxzZTtcbiAgICAgICAgICAgIGV4aXRUYXNrUmVzdWx0ID0gZXhpdFRhc2s7XG4gICAgICAgICAgICBfdGhpcy5sb2coXCJmaW5pc2ggcm91bmQ6IFwiLmNvbmNhdCgoX2EgPSBfdGhpcy5yb3V0ZUNvbnRleHQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50YXNrLm5hbWUsIFwiOyBleGl0VGFzazogXCIpLmNvbmNhdChleGl0VGFzaykpO1xuICAgICAgICB9O1xuICAgICAgICAvLyBwb2ludGVyIGZvciBzaG9ydCBjb2RlXG4gICAgICAgIHZhciBjb250ZXh0ID0gdGhpcy5yb3V0ZUNvbnRleHQ7XG4gICAgICAgIHdoaWxlIChyb3V0ZUxvb3AgJiYgdGhpcy5ydW5uaW5nKSB7XG4gICAgICAgICAgICB2YXIgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIC8vIGNoZWNrIHRhc2suYXV0b1N0b3BcbiAgICAgICAgICAgIHZhciB0YXNrUnVuRHVyaW5nID0gbm93IC0gdGFzay5zdGFydFRpbWU7XG4gICAgICAgICAgICBpZiAodGFzay5jb25maWcuZm9yY2VTdG9wICYmIHRhc2tSdW5EdXJpbmcgPiB0YXNrLmNvbmZpZy5tYXhUYXNrRHVyaW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2coXCJUYXNrIFwiLmNvbmNhdCh0YXNrLm5hbWUsIFwiIEF1dG9TdG9wLCBleGNlZWQgdGFza1J1bkR1cmluZ1wiKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBjaGVjayBpc0FwcE9uIG9yIGF1dG8gbGF1bmNoIGl0XG4gICAgICAgICAgICBpZiAodGhpcy5yZXJvdXRlckNvbmZpZy5hdXRvTGF1bmNoQXBwKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tBbmRTdGFydEFwcCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXJ0QXBwUm91dGVBY3Rpb24gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRBcHBSb3V0ZUFjdGlvbihjb250ZXh0LCBmaW5pc2hSb3VuZEZ1bmMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciByb3RhdGlvbiA9IHRoaXMuc2NyZWVuLmdldFJvdGF0aW9uKCk7XG4gICAgICAgICAgICB2YXIgaW1hZ2UgPSB0aGlzLnNjcmVlbi5nZXRDdnREZXZTY3JlZW5zaG90KCk7XG4gICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IHRoaXMuZmluZE1hdGNoZWRSb3V0ZUltcGwodGFzay5uYW1lLCBpbWFnZSwgcm90YXRpb24pO1xuICAgICAgICAgICAgdmFyIG1hdGNoZWRSb3V0ZSA9IChfYyA9IG1hdGNoZXNbMF0pID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5tYXRjaGVkUm91dGU7XG4gICAgICAgICAgICB2YXIgbWF0Y2hlZFBhZ2VzID0gKF9kID0gbWF0Y2hlc1swXSkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLm1hdGNoZWRQYWdlcztcbiAgICAgICAgICAgIC8vIGNvbnRleHQubWF0Y2hTdGFydFRTID0gMCBpZiBpbml0IHJ1blxuICAgICAgICAgICAgY29udGV4dC5tYXRjaFN0YXJ0VFMgPSBjb250ZXh0Lm1hdGNoU3RhcnRUUyB8fCBub3c7XG4gICAgICAgICAgICBjb250ZXh0LnBhdGggPSAoX2UgPSBtYXRjaGVkUm91dGUgPT09IG51bGwgfHwgbWF0Y2hlZFJvdXRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYXRjaGVkUm91dGUucGF0aCkgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogJyc7XG4gICAgICAgICAgICAvLyBmaXJzdCBtYXRjaFxuICAgICAgICAgICAgaWYgKGNvbnRleHQucGF0aCAhPT0gY29udGV4dC5sYXN0TWF0Y2hlZFBhdGgpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0Lm1hdGNoVGltZXMgPSAwO1xuICAgICAgICAgICAgICAgIGNvbnRleHQubWF0Y2hTdGFydFRTID0gbm93O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGV4dC5tYXRjaER1cmluZyA9IG5vdyAtIGNvbnRleHQubWF0Y2hTdGFydFRTO1xuICAgICAgICAgICAgY29udGV4dC5tYXRjaFRpbWVzKys7XG4gICAgICAgICAgICBzd2l0Y2ggKG1hdGNoZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAvLyBubyBtYXRjaFxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy51bmtub3duUm91dGVBY3Rpb24gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudW5rbm93blJvdXRlQWN0aW9uKGNvbnRleHQsIGltYWdlLCBmaW5pc2hSb3VuZEZ1bmMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgLy8gcGVyZmVjdCBtYXRjaCAxXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZG9BY3Rpb25Gb3JSb3V0ZShjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZFJvdXRlLCBtYXRjaGVkUGFnZXMsIGZpbmlzaFJvdW5kRnVuYyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbmZsaWN0XG4gICAgICAgICAgICAgICAgICAgIHZhciBlcnJvciA9IHRoaXMuaGFuZGxlQ29uZmxpY3RSb3V0ZXModGFzay5uYW1lLCBpbWFnZSwgbWF0Y2hlcywgZmluaXNoUm91bmRGdW5jKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWxlYXNlSW1hZ2UoaW1hZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyB1cGRhdGUgbGFzdE1hdGNoZWRQYXRoIGFmdGVyIGFjdGlvbiBkb25lXG4gICAgICAgICAgICAvLyBvdGhlcndpc2UgdGhlIGxhc3RNYXRjaGVkUGF0aCB3aWxsIGJlIGN1cnJlbnQgcGF0aCB3aGVuIGRvaW5nIGFjdGlvblxuICAgICAgICAgICAgY29udGV4dC5sYXN0TWF0Y2hlZFBhdGggPSBjb250ZXh0LnBhdGg7XG4gICAgICAgICAgICByZWxlYXNlSW1hZ2UoaW1hZ2UpO1xuICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcCh0YXNrLmNvbmZpZy5maW5kUm91dGVEZWxheSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGV4aXRUYXNrUmVzdWx0O1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmRvQWN0aW9uRm9yUm91dGUgPSBmdW5jdGlvbiAoY29udGV4dCwgaW1hZ2UsIHJvdXRlLCBtYXRjaGVkUGFnZXMsIGZpbmlzaFJvdW5kKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHRoaXMubG9nSW1wbChyb3V0ZS5kZWJ1ZywgXCJoYW5kbGVNYXRjaGVkUm91dGU6IFwiLmNvbmNhdChyb3V0ZS5wYXRoLCBcIiwgdGltZXM6IFwiKS5jb25jYXQoY29udGV4dC5tYXRjaFRpbWVzLCBcIiwgZHVyaW5nOiBcIikuY29uY2F0KGNvbnRleHQubWF0Y2hEdXJpbmcpKTtcbiAgICAgICAgaWYgKGNvbnRleHQubWF0Y2hUaW1lcyA8IHJvdXRlLnNob3VsZE1hdGNoVGltZXMgfHwgY29udGV4dC5tYXRjaER1cmluZyA8IHJvdXRlLnNob3VsZE1hdGNoRHVyaW5nKSB7XG4gICAgICAgICAgICAvLyBzaG91bGQgc3RpbGwgd2FpdCBmb3IgbWF0Y2hpbmcgY29uZGl0aW9uXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5leHRYWSA9IChfYSA9IG1hdGNoZWRQYWdlc1swXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5leHQ7XG4gICAgICAgIHZhciBiYWNrWFkgPSAoX2IgPSBtYXRjaGVkUGFnZXNbMF0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5iYWNrO1xuICAgICAgICAvLyBtYXRjaGVkIGFuZCBmaXQgY29uZGl0aW9uLCBkbyBhY3Rpb25cbiAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcChyb3V0ZS5iZWZvcmVBY3Rpb25EZWxheSk7XG4gICAgICAgIGlmIChyb3V0ZS5hY3Rpb24gPT09ICdnb05leHQnKSB7XG4gICAgICAgICAgICBpZiAobmV4dFhZICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNjcmVlbi50YXAobmV4dFhZKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMud2FybmluZyhcIlwiLmNvbmNhdChyb3V0ZS5wYXRoLCBcIiBhY3Rpb24gPT0gZ29OZXh0LCBidXQgbm8gbmV4dCB4eVwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocm91dGUuYWN0aW9uID09PSAnZ29CYWNrJykge1xuICAgICAgICAgICAgaWYgKGJhY2tYWSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zY3JlZW4udGFwKGJhY2tYWSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLndhcm5pbmcoXCJcIi5jb25jYXQocm91dGUucGF0aCwgXCIgYWN0aW9uID09IGdvQmFjaywgYnV0IG5vIGJhY2sgeHlcIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJvdXRlLmFjdGlvbiA9PT0gJ2tleWNvZGVCYWNrJykge1xuICAgICAgICAgICAga2V5Y29kZSgnQkFDSycsIHRoaXMuc2NyZWVuQ29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByb3V0ZS5hY3Rpb24oY29udGV4dCwgaW1hZ2UsIG1hdGNoZWRQYWdlcywgZmluaXNoUm91bmQpO1xuICAgICAgICB9XG4gICAgICAgIHV0aWxzXzEuVXRpbHMuc2xlZXAocm91dGUuYWZ0ZXJBY3Rpb25EZWxheSk7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuZmluZE1hdGNoZWRSb3V0ZUltcGwgPSBmdW5jdGlvbiAodGFza05hbWUsIGltYWdlLCByb3RhdGlvbikge1xuICAgICAgICB2YXIgbWF0Y2hlcyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gdGhpcy5yb3V0ZXM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgcm91dGUgPSBfYVtfaV07XG4gICAgICAgICAgICB2YXIgX2IgPSB0aGlzLmlzTWF0Y2hSb3V0ZUltcGwoaW1hZ2UsIHJvdGF0aW9uLCByb3V0ZSwgdGFza05hbWUpLCBpc01hdGNoZWQgPSBfYi5pc01hdGNoZWQsIG1hdGNoZWRQYWdlcyA9IF9iLm1hdGNoZWRQYWdlcztcbiAgICAgICAgICAgIGlmIChpc01hdGNoZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ0ltcGwocm91dGUuZGVidWcsICdjdXJyZW50IG1hdGNoOicsIG1hdGNoZWRQYWdlcy5tYXAoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHAubmFtZTsgfSkpO1xuICAgICAgICAgICAgICAgIG1hdGNoZXMucHVzaCh7IG1hdGNoZWRSb3V0ZTogcm91dGUsIG1hdGNoZWRQYWdlczogbWF0Y2hlZFBhZ2VzIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtYXRjaGVzO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmhhbmRsZUNvbmZsaWN0Um91dGVzID0gZnVuY3Rpb24gKHRhc2tOYW1lLCBpbWFnZSwgbWF0Y2hlcywgZmluaXNoUm91bmQpIHtcbiAgICAgICAgdmFyIG1hdGNoTmFtZXMgPSBtYXRjaGVzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjLmNvbmNhdChpdGVtLm1hdGNoZWRQYWdlcy5tYXAoZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFnZS5uYW1lO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9LCBbXSk7XG4gICAgICAgIHZhciB3YXJuaW5nTXNnID0gXCJhIHJvdXRlIGNvbmZsaWN0IHdoZW4gaW4gVGFzazogXFxcIlwiLmNvbmNhdCh0YXNrTmFtZSwgXCJcXFwiLCBuYW1lczogXCIpLmNvbmNhdChKU09OLnN0cmluZ2lmeShtYXRjaE5hbWVzKSk7XG4gICAgICAgIHRoaXMud2FybmluZyh3YXJuaW5nTXNnKTtcbiAgICAgICAgaWYgKHRoaXMucmVyb3V0ZXJDb25maWcuc3RyaWN0TW9kZSkge1xuICAgICAgICAgICAgLy8gVE9ETzogc2F2ZSBpbWFnZSByYXRoZXIgdGhhbiB0YWtlIGFub3RoZXIgc2NyZWVuc2hvdFxuICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5zYXZlU2NyZWVuc2hvdFRvRGlzayh0aGlzLnJlcm91dGVyQ29uZmlnLnNhdmVJbWFnZVJvb3QsIFwiXCIuY29uY2F0KHN0cnVjdF8xLkRlZmF1bHRSZXJvdXRlckNvbmZpZy5kZXZpY2VJZCwgXCJfY29uZmxpY3RlZFJvdXRlc1wiKSk7XG4gICAgICAgICAgICBpZiAodGhpcy5yZXJvdXRlckNvbmZpZy5kZWJ1Z1NsYWNrVXJsICE9PSAnJykge1xuICAgICAgICAgICAgICAgIHV0aWxzXzEuVXRpbHMuc2VuZFNsYWNrTWVzc2FnZSh0aGlzLnJlcm91dGVyQ29uZmlnLmRlYnVnU2xhY2tVcmwsICdDb25mbGljdCBSb3V0ZXMgUmVwb3J0JywgXCJcIi5jb25jYXQoc3RydWN0XzEuRGVmYXVsdFJlcm91dGVyQ29uZmlnLmRldmljZUlkLCBcIiBqdXN0IGxvZ2dlZCBcIikuY29uY2F0KHdhcm5pbmdNc2cpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnRlbnRpb25hbCBjcmFzaCBkdWUgdG8gbXVsdGlwbGUgcm91dGUgYXBwbGllZCB0byBjdXJyZW50IHNjcmVlbjogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KG1hdGNoTmFtZXMpKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZGVmYXVsdCBoYW5kbGUgY29uZmxpY3Qgcm91dGVzIGluIG5vbi1zdHJpY3QgbW9kZVxuICAgICAgICB0aGlzLmxvZyhcInRyeSBoYW5kbGUgY29uZmxpY3RcIik7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICB2YXIgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdGhpcy5yb3V0ZUNvbmZsaWN0UmVjb3JkLnB1c2gobm93KTtcbiAgICAgICAgdmFyIGR1cmluZ0xpbWl0ID0gNjAgKiAxMDAwO1xuICAgICAgICB2YXIgY291bnRzTGltaXQgPSA1O1xuICAgICAgICB3aGlsZSAodGhpcy5yb3V0ZUNvbmZsaWN0UmVjb3JkLmxlbmd0aCA+IDAgJiYgbm93IC0gdGhpcy5yb3V0ZUNvbmZsaWN0UmVjb3JkWzBdID4gZHVyaW5nTGltaXQpIHtcbiAgICAgICAgICAgIHRoaXMucm91dGVDb25mbGljdFJlY29yZC5zaGlmdCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnJvdXRlQ29uZmxpY3RSZWNvcmQubGVuZ3RoID49IGNvdW50c0xpbWl0KSB7XG4gICAgICAgICAgICB0aGlzLnJvdXRlQ29uZmxpY3RSZWNvcmQgPSBbbm93XTtcbiAgICAgICAgICAgIHRoaXMucmVzdGFydEFwcCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGtleWNvZGUoJ0JBQ0snLCB0aGlzLnNjcmVlbkNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmlzTWF0Y2hSb3V0ZUltcGwgPSBmdW5jdGlvbiAoaW1hZ2UsIHJvdGF0aW9uLCByb3V0ZSwgdGFza05hbWUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAvLyBjaGVjayByb3RhdGlvblxuICAgICAgICBpZiAocm91dGUucm90YXRpb24gIT09IHJvdGF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ0ltcGwocm91dGUuZGVidWcsIFwiZmluZE1hdGNoZWRSb3V0ZSBcIi5jb25jYXQocm91dGUucGF0aCwgXCIgbm90IG1hdGNoIHJvdGF0aW9uLCBza2lwXCIpKTtcbiAgICAgICAgICAgIHJldHVybiB7IGlzTWF0Y2hlZDogZmFsc2UsIG1hdGNoZWRQYWdlczogW10gfTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaXNNYXRjaGVkID0gZmFsc2U7XG4gICAgICAgIHZhciBtYXRjaGVkUGFnZXMgPSBbXTtcbiAgICAgICAgLy8gY2hlY2sgcm91dGUubWF0Y2hcbiAgICAgICAgaWYgKHJvdXRlLm1hdGNoICE9PSBudWxsKSB7XG4gICAgICAgICAgICBpZiAocm91dGUubWF0Y2ggaW5zdGFuY2VvZiBzdHJ1Y3RfMS5QYWdlKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gdGhpcy5pc01hdGNoUGFnZUltcGwoaW1hZ2UsIHJvdXRlLm1hdGNoLCB0aGlzLmRlZmF1bHRDb25maWcuUGFnZVRocmVzLCByb3V0ZS5kZWJ1Zyk7XG4gICAgICAgICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlzTWF0Y2hlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIG1hdGNoZWRQYWdlcy5wdXNoKHJvdXRlLm1hdGNoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyb3V0ZS5tYXRjaCBpbnN0YW5jZW9mIHN0cnVjdF8xLkdyb3VwUGFnZSkge1xuICAgICAgICAgICAgICAgIHZhciBtYXRjaCA9IHRoaXMuaXNNYXRjaEdyb3VwUGFnZUltcGwoaW1hZ2UsIHJvdXRlLm1hdGNoLCB0aGlzLmRlZmF1bHRDb25maWcuR3JvdXBQYWdlVGhyZXMsIHJvdXRlLmRlYnVnKTtcbiAgICAgICAgICAgICAgICBpZiAobWF0Y2gubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlzTWF0Y2hlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIG1hdGNoZWRQYWdlcy5wdXNoLmFwcGx5KG1hdGNoZWRQYWdlcywgbWF0Y2gpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBjaGVjayByb3V0ZS5pc01hdGNoIGZ1bmN0aW9uXG4gICAgICAgIGlmICghaXNNYXRjaGVkICYmIHJvdXRlLmN1c3RvbU1hdGNoICE9PSBudWxsKSB7XG4gICAgICAgICAgICBpc01hdGNoZWQgPSByb3V0ZS5jdXN0b21NYXRjaCh0YXNrTmFtZSwgaW1hZ2UpO1xuICAgICAgICAgICAgdGhpcy5sb2dJbXBsKHJvdXRlLmRlYnVnLCBcImZpbmRNYXRjaGVkUm91dGUgXCIuY29uY2F0KHJvdXRlLnBhdGgsIFwiIGlzTWF0Y2goKSA9PiBcIikuY29uY2F0KGlzTWF0Y2hlZCkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubG9nSW1wbChyb3V0ZS5kZWJ1ZywgXCJmaW5kTWF0Y2hlZFJvdXRlIFwiLmNvbmNhdChyb3V0ZS5wYXRoLCBcIiBtYXRjaDogXCIpLmNvbmNhdChpc01hdGNoZWQsIFwiLCBmaXJzdFBhZ2U6IFwiKS5jb25jYXQoKF9hID0gbWF0Y2hlZFBhZ2VzWzBdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmFtZSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXNNYXRjaGVkOiBpc01hdGNoZWQsXG4gICAgICAgICAgICBtYXRjaGVkUGFnZXM6IG1hdGNoZWRQYWdlcyxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5pc01hdGNoUGFnZUltcGwgPSBmdW5jdGlvbiAoaW1hZ2UsIHBhZ2UsIHBhcmVudFRocmVzLCBkZWJ1Zykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciB0aHJlcyA9IChfYSA9IHBhZ2UudGhyZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHBhcmVudFRocmVzO1xuICAgICAgICB2YXIgaXNTYW1lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5sb2dJbXBsKGRlYnVnLCBcImNoZWNrTWF0Y2hQYWdlW1wiLmNvbmNhdChwYWdlLm5hbWUsIFwiXVwiKSk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFnZS5wb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBwb2ludCA9IHBhZ2UucG9pbnRzW2ldO1xuICAgICAgICAgICAgdmFyIGNvbG9yID0gZ2V0SW1hZ2VDb2xvcihpbWFnZSwgcG9pbnQueCwgcG9pbnQueSk7XG4gICAgICAgICAgICB2YXIgc2NvcmUgPSB1dGlsc18xLlV0aWxzLmlkZW50aXR5Q29sb3IocG9pbnQsIGNvbG9yKTtcbiAgICAgICAgICAgIHZhciBpc1BvaW50Q29sb3JNYXRjaCA9IHNjb3JlID49IHRocmVzO1xuICAgICAgICAgICAgaWYgKCFpc1BvaW50Q29sb3JNYXRjaCkge1xuICAgICAgICAgICAgICAgIGlzU2FtZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMubG9nSW1wbChkZWJ1ZywgXCJwb2ludFtcIi5jb25jYXQoaSwgXCJdIG1hdGNoIGZhbHNlOiBzY29yZTogXCIpLmNvbmNhdChzY29yZSwgXCIsIHRocmVzOiBcIikuY29uY2F0KHRocmVzLCBcIlxcblwiKSwgXCJleHBlY3Q6IFwiLmNvbmNhdCh1dGlsc18xLlV0aWxzLmZvcm1hdFhZUkdCKHBvaW50KSwgXCJcXG5cIiksIFwiICAgZ2V0OiBcIi5jb25jYXQodXRpbHNfMS5VdGlscy5mb3JtYXRYWVJHQihfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY29sb3IpLCB7IHg6IHBvaW50LngsIHk6IHBvaW50LnkgfSkpKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sb2dJbXBsKGRlYnVnLCBcImNoZWNrTWF0Y2hQYWdlW1wiLmNvbmNhdChwYWdlLm5hbWUsIFwiXVttYXRjaDogXCIpLmNvbmNhdChpc1NhbWUsIFwiXVwiKSk7XG4gICAgICAgIHJldHVybiBpc1NhbWU7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaXNNYXRjaEdyb3VwUGFnZUltcGwgPSBmdW5jdGlvbiAoaW1hZ2UsIGdyb3VwUGFnZSwgcGFyZW50VGhyZXMsIGRlYnVnKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIHRocmVzID0gKF9hID0gZ3JvdXBQYWdlLnRocmVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBwYXJlbnRUaHJlcztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cFBhZ2UucGFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBwYWdlID0gZ3JvdXBQYWdlLnBhZ2VzW2ldO1xuICAgICAgICAgICAgdmFyIGlzUGFnZU1hdGNoID0gdGhpcy5pc01hdGNoUGFnZUltcGwoaW1hZ2UsIHBhZ2UsIHRocmVzLCBkZWJ1Zyk7XG4gICAgICAgICAgICB0aGlzLmxvZ0ltcGwoZGVidWcsIFwiY2hlY2tNYXRjaEdyb3VwUGFnZTogXCIuY29uY2F0KGdyb3VwUGFnZS5uYW1lLCBcIiwgcGFnZVtcIikuY29uY2F0KGksIFwiXTogXCIpLmNvbmNhdChwYWdlLm5hbWUsIFwiIG1hdGNoOiBcIikuY29uY2F0KGlzUGFnZU1hdGNoKSk7XG4gICAgICAgICAgICBpZiAoZ3JvdXBQYWdlLm1hdGNoT1AgPT09ICd8fCcgJiYgaXNQYWdlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW3BhZ2VdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdyb3VwUGFnZS5tYXRjaE9QID09PSAnJiYnICYmICFpc1BhZ2VNYXRjaCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ3JvdXBQYWdlLm1hdGNoT1AgPT09ICcmJicgPyBncm91cFBhZ2UucGFnZXMgOiBbXTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5sb2cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sb2dJbXBsLmFwcGx5KHRoaXMsIF9fc3ByZWFkQXJyYXkoW3RoaXMuZGVidWddLCBhcmdzLCBmYWxzZSkpO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmxvZ0ltcGwgPSBmdW5jdGlvbiAoZGVidWcpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFkZWJ1ZyB8fCAhdGhpcy5kZWJ1Zykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIG9ubHkgbG9nIHdoZW4gZGVidWcgKyB0aGlzLmRlYnVnIGlzIHRydWVcbiAgICAgICAgdXRpbHNfMS5VdGlscy5sb2cuYXBwbHkodXRpbHNfMS5VdGlscywgX19zcHJlYWRBcnJheShbJ1tSZXJvdXRlcl1bZGVidWddJ10sIGFyZ3MsIGZhbHNlKSk7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUud2FybmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB1dGlsc18xLlV0aWxzLmxvZy5hcHBseSh1dGlsc18xLlV0aWxzLCBfX3NwcmVhZEFycmF5KFsnW1Jlcm91dGVyXVt3YXJuaW5nXSddLCBhcmdzLCBmYWxzZSkpO1xuICAgIH07XG4gICAgcmV0dXJuIFJlcm91dGVyO1xufSgpKTtcbmV4cG9ydHMuUmVyb3V0ZXIgPSBSZXJvdXRlcjtcbi8vIE5PVEU6IHRoaXMgaXMgYW4gYW5vdGhlciB3YXkgdGhhdCByZXNldHMgUmVyb3V0ZXIsIGp1c3QgbGVhdmluZyBoZXJlIGZvciBtZW1vcnlcbi8vIGNvbnN0IHJlcm91dGVyQ29udGFpbmVyID0ge1xuLy8gICBpbnN0YW5jZTogbmV3IFJlcm91dGVyKCksXG4vLyB9O1xuLy8gaW1wb3J0ICdwcm94eS1wb2x5ZmlsbCc7XG4vLyBleHBvcnQgY29uc3QgcmVyb3V0ZXI6IFJlcm91dGVyID0gbmV3IFByb3h5KHJlcm91dGVyQ29udGFpbmVyLCB7XG4vLyAgIGdldDogKHRhcmdldCwgcHJvcDoga2V5b2YgUmVyb3V0ZXIpID0+IHtcbi8vICAgICByZXR1cm4gdGFyZ2V0Lmluc3RhbmNlW3Byb3BdO1xuLy8gICB9LFxuLy8gICBzZXQ6ICh0YXJnZXQsIHByb3A6IGtleW9mIFJlcm91dGVyLCB2YWx1ZTogYW55KSA9PiB7XG4vLyAgICAgdGFyZ2V0Lmluc3RhbmNlW3Byb3BdID0gdmFsdWU7XG4vLyAgICAgcmV0dXJuIHRydWU7XG4vLyAgIH0sXG4vLyB9KSBhcyBhbnkgYXMgUmVyb3V0ZXI7XG5leHBvcnRzLnJlcm91dGVyID0gbmV3IFJlcm91dGVyKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXJvdXRlci5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2NyZWVuID0gdm9pZCAwO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbnZhciBTY3JlZW4gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2NyZWVuKGNvbmZpZykge1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB9XG4gICAgU2NyZWVuLnByb3RvdHlwZS5jYWxjdWxhdGVEZXZpY2VPZmZzZXQgPSBmdW5jdGlvbiAoZnVuYykge1xuICAgICAgICB2YXIgcmVzdWx0cyA9IGZ1bmModGhpcyk7XG4gICAgICAgIHRoaXMuY29uZmlnLnNjcmVlbldpZHRoID0gcmVzdWx0cy5zY3JlZW5XaWR0aDtcbiAgICAgICAgdGhpcy5jb25maWcuc2NyZWVuSGVpZ2h0ID0gcmVzdWx0cy5zY3JlZW5IZWlnaHQ7XG4gICAgICAgIHRoaXMuY29uZmlnLnNjcmVlbk9mZnNldFggPSByZXN1bHRzLnNjcmVlbk9mZnNldFg7XG4gICAgICAgIHRoaXMuY29uZmlnLnNjcmVlbk9mZnNldFkgPSByZXN1bHRzLnNjcmVlbk9mZnNldFk7XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLmdldFNjcmVlblggPSBmdW5jdGlvbiAoZGV2WCkge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRYICsgKGRldlggKiB0aGlzLmNvbmZpZy5zY3JlZW5XaWR0aCkgLyB0aGlzLmNvbmZpZy5kZXZXaWR0aCkgfHwgMDtcbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuZ2V0U2NyZWVuWSA9IGZ1bmN0aW9uIChkZXZZKSB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKHRoaXMuY29uZmlnLnNjcmVlbk9mZnNldFkgKyAoZGV2WSAqIHRoaXMuY29uZmlnLnNjcmVlbkhlaWdodCkgLyB0aGlzLmNvbmZpZy5kZXZIZWlnaHQpIHx8IDA7XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLmdldFNjcmVlblhZID0gZnVuY3Rpb24gKHAxLCBwMikge1xuICAgICAgICBpZiAocDIgPT09IHZvaWQgMCkgeyBwMiA9IHVuZGVmaW5lZDsgfVxuICAgICAgICBpZiAodHlwZW9mIHAxID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdmFyIHggPSB0aGlzLmdldFNjcmVlblgocDEueCk7XG4gICAgICAgICAgICB2YXIgeSA9IHRoaXMuZ2V0U2NyZWVuWShwMS55KTtcbiAgICAgICAgICAgIHJldHVybiB7IHg6IHgsIHk6IHkgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgcDEgPT09ICdudW1iZXInICYmIHR5cGVvZiBwMiA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxKTtcbiAgICAgICAgICAgIHZhciB5ID0gdGhpcy5nZXRTY3JlZW5ZKHAyKTtcbiAgICAgICAgICAgIHJldHVybiB7IHg6IHgsIHk6IHkgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImdldFNjcmVlblhZIHdyb25nIHBhcmFtcyBcIi5jb25jYXQocDEsIFwiLCBcIikuY29uY2F0KHAyKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUudGFwID0gZnVuY3Rpb24gKHAxLCBwMikge1xuICAgICAgICBpZiAocDIgPT09IHZvaWQgMCkgeyBwMiA9IHVuZGVmaW5lZDsgfVxuICAgICAgICBpZiAodHlwZW9mIHAxID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdmFyIHggPSB0aGlzLmdldFNjcmVlblgocDEueCk7XG4gICAgICAgICAgICB2YXIgeSA9IHRoaXMuZ2V0U2NyZWVuWShwMS55KTtcbiAgICAgICAgICAgIHRhcCh4LCB5LCB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwMSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHAyID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdmFyIHggPSB0aGlzLmdldFNjcmVlblgocDEpO1xuICAgICAgICAgICAgdmFyIHkgPSB0aGlzLmdldFNjcmVlblkocDIpO1xuICAgICAgICAgICAgdGFwKHgsIHksIHRoaXMuY29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0YXBEb3duIHdyb25nIHBhcmFtcyBcIi5jb25jYXQocDEsIFwiLCBcIikuY29uY2F0KHAyKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUudGFwRG93biA9IGZ1bmN0aW9uIChwMSwgcDIpIHtcbiAgICAgICAgaWYgKHAyID09PSB2b2lkIDApIHsgcDIgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKHR5cGVvZiBwMSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxLngpO1xuICAgICAgICAgICAgdmFyIHkgPSB0aGlzLmdldFNjcmVlblkocDEueSk7XG4gICAgICAgICAgICB0YXBEb3duKHgsIHksIHRoaXMuY29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHAxID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgcDIgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB2YXIgeCA9IHRoaXMuZ2V0U2NyZWVuWChwMSk7XG4gICAgICAgICAgICB2YXIgeSA9IHRoaXMuZ2V0U2NyZWVuWShwMik7XG4gICAgICAgICAgICB0YXBEb3duKHgsIHksIHRoaXMuY29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0YXBEb3duIHdyb25nIHBhcmFtcyBcIi5jb25jYXQocDEsIFwiLCBcIikuY29uY2F0KHAyKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUubW92ZVRvID0gZnVuY3Rpb24gKHAxLCBwMikge1xuICAgICAgICBpZiAocDIgPT09IHZvaWQgMCkgeyBwMiA9IHVuZGVmaW5lZDsgfVxuICAgICAgICBpZiAodHlwZW9mIHAxID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdmFyIHggPSB0aGlzLmdldFNjcmVlblgocDEueCk7XG4gICAgICAgICAgICB2YXIgeSA9IHRoaXMuZ2V0U2NyZWVuWShwMS55KTtcbiAgICAgICAgICAgIG1vdmVUbyh4LCB5LCB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwMSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHAyID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdmFyIHggPSB0aGlzLmdldFNjcmVlblgocDEpO1xuICAgICAgICAgICAgdmFyIHkgPSB0aGlzLmdldFNjcmVlblkocDIpO1xuICAgICAgICAgICAgbW92ZVRvKHgsIHksIHRoaXMuY29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0YXBEb3duIHdyb25nIHBhcmFtcyBcIi5jb25jYXQocDEsIFwiLCBcIikuY29uY2F0KHAyKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUudGFwVXAgPSBmdW5jdGlvbiAocDEsIHAyKSB7XG4gICAgICAgIGlmIChwMiA9PT0gdm9pZCAwKSB7IHAyID0gdW5kZWZpbmVkOyB9XG4gICAgICAgIGlmICh0eXBlb2YgcDEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB2YXIgeCA9IHRoaXMuZ2V0U2NyZWVuWChwMS54KTtcbiAgICAgICAgICAgIHZhciB5ID0gdGhpcy5nZXRTY3JlZW5ZKHAxLnkpO1xuICAgICAgICAgICAgdGFwVXAoeCwgeSwgdGhpcy5jb25maWcuYWN0aW9uRHVyaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgcDEgPT09ICdudW1iZXInICYmIHR5cGVvZiBwMiA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxKTtcbiAgICAgICAgICAgIHZhciB5ID0gdGhpcy5nZXRTY3JlZW5ZKHAyKTtcbiAgICAgICAgICAgIHRhcFVwKHgsIHksIHRoaXMuY29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0YXBEb3duIHdyb25nIHBhcmFtcyBcIi5jb25jYXQocDEsIFwiLCBcIikuY29uY2F0KHAyKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuZ2V0U2NyZWVuQ29sb3IgPSBmdW5jdGlvbiAocDEsIHAyKSB7XG4gICAgICAgIGlmIChwMiA9PT0gdm9pZCAwKSB7IHAyID0gdW5kZWZpbmVkOyB9XG4gICAgICAgIGlmICh0eXBlb2YgcDEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB2YXIgaW1nID0gdGhpcy5nZXRDdnREZXZTY3JlZW5zaG90KCk7XG4gICAgICAgICAgICB2YXIgcmdiID0gZ2V0SW1hZ2VDb2xvcihpbWcsIHAxLngsIHAxLnkpO1xuICAgICAgICAgICAgcmVsZWFzZUltYWdlKGltZyk7XG4gICAgICAgICAgICByZXR1cm4gcmdiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwMSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHAyID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdmFyIGltZyA9IHRoaXMuZ2V0Q3Z0RGV2U2NyZWVuc2hvdCgpO1xuICAgICAgICAgICAgdmFyIHJnYiA9IGdldEltYWdlQ29sb3IoaW1nLCBwMSwgcDIpO1xuICAgICAgICAgICAgcmVsZWFzZUltYWdlKGltZyk7XG4gICAgICAgICAgICByZXR1cm4gcmdiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGFwRG93biB3cm9uZyBwYXJhbXMgXCIuY29uY2F0KHAxLCBcIiwgXCIpLmNvbmNhdChwMikpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLmZpbmRJbWFnZSA9IGZ1bmN0aW9uIChkZXZJbWcpIHtcbiAgICAgICAgdmFyIGltZyA9IHRoaXMuZ2V0Q3Z0RGV2U2NyZWVuc2hvdCgpO1xuICAgICAgICB2YXIgcmVzdWx0ID0gZmluZEltYWdlKGltZywgZGV2SW1nKTtcbiAgICAgICAgcmVsZWFzZUltYWdlKGltZyk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLnRhcEltYWdlID0gZnVuY3Rpb24gKGRldkltZykge1xuICAgICAgICB2YXIgeHkgPSB0aGlzLmZpbmRJbWFnZShkZXZJbWcpO1xuICAgICAgICB0aGlzLnRhcCh4eSk7XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLmlzU2FtZUNvbG9yID0gZnVuY3Rpb24gKGRldkNvbG9yUG9pbnQsIHRocmVzKSB7XG4gICAgICAgIGlmICh0aHJlcyA9PT0gdm9pZCAwKSB7IHRocmVzID0gMC45OyB9XG4gICAgICAgIHZhciByZ2IgPSB0aGlzLmdldFNjcmVlbkNvbG9yKGRldkNvbG9yUG9pbnQpO1xuICAgICAgICB2YXIgc2NvcmUgPSB1dGlsc18xLlV0aWxzLmlkZW50aXR5Q29sb3IocmdiLCBkZXZDb2xvclBvaW50KTtcbiAgICAgICAgaWYgKHNjb3JlID4gdGhyZXMpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIC8vIGN1cnJlbnRseSByZWFsIGRldmljZSBzY3JlZW5zaG90XG4gICAgU2NyZWVuLnByb3RvdHlwZS5nZXREZXZpY2VTY3JlZW5zaG90ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZ2V0U2NyZWVuc2hvdCgpO1xuICAgIH07XG4gICAgLy8gY3VycmVudGx5IGRldmljZSBzY3JlZW5zaG90IGN1dCBieSBvZmZzZXRcbiAgICBTY3JlZW4ucHJvdG90eXBlLmdldFNjcmVlblNjcmVlbnNob3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBnZXRTY3JlZW5zaG90TW9kaWZ5KHRoaXMuY29uZmlnLnNjcmVlbk9mZnNldFgsIHRoaXMuY29uZmlnLnNjcmVlbk9mZnNldFksIHRoaXMuY29uZmlnLnNjcmVlbldpZHRoLCB0aGlzLmNvbmZpZy5zY3JlZW5IZWlnaHQsIHRoaXMuY29uZmlnLnNjcmVlbldpZHRoLCB0aGlzLmNvbmZpZy5zY3JlZW5IZWlnaHQsIDEwMCk7XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLmNoZWNrQW5kU2F2ZVNjcmVlbnNob3RzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5jb25maWcubG9nU2NyZWVuc2hvdEZvbGRlciAhPT0gJycgJiYgRGF0ZS5ub3coKSAtIHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RMYXN0VGltZSA+IHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RNaW5JbnRlcnZhbEluU2VjICogMTAwMCkge1xuICAgICAgICAgICAgdGhpcy5jb25maWcubG9nU2NyZWVuc2hvdExhc3RUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIHV0aWxzXzEuVXRpbHMuc2F2ZVNjcmVlbnNob3RUb0Rpc2sodGhpcy5jb25maWcubG9nU2NyZWVuc2hvdEZvbGRlciwgJ2xvZycpO1xuICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5yZW1vdmVPbGRlc3RGaWxlc0lmRXhjZWVkc0xpbWl0KHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RGb2xkZXIsIHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RNYXhGaWxlcyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuZ2V0Q3Z0RGV2U2NyZWVuc2hvdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jaGVja0FuZFNhdmVTY3JlZW5zaG90cygpO1xuICAgICAgICByZXR1cm4gZ2V0U2NyZWVuc2hvdE1vZGlmeSh0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRYLCB0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRZLCB0aGlzLmNvbmZpZy5zY3JlZW5XaWR0aCwgdGhpcy5jb25maWcuc2NyZWVuSGVpZ2h0LCB0aGlzLmNvbmZpZy5kZXZXaWR0aCwgdGhpcy5jb25maWcuZGV2SGVpZ2h0LCAxMDApO1xuICAgIH07XG4gICAgU2NyZWVuLnByb3RvdHlwZS5nZXRSb3RhdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hID0gZ2V0U2NyZWVuU2l6ZSgpLCB3aWR0aCA9IF9hLndpZHRoLCBoZWlnaHQgPSBfYS5oZWlnaHQ7XG4gICAgICAgIGlmICh3aWR0aCA+IGhlaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuICdob3Jpem9udGFsJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJ3ZlcnRpY2FsJztcbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuZ2V0SW1hZ2VSb3RhdGlvbiA9IGZ1bmN0aW9uIChpbWFnZSkge1xuICAgICAgICB2YXIgX2EgPSBnZXRJbWFnZVNpemUoaW1hZ2UpLCB3aWR0aCA9IF9hLndpZHRoLCBoZWlnaHQgPSBfYS5oZWlnaHQ7XG4gICAgICAgIGlmICh3aWR0aCA+IGhlaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuICdob3Jpem9udGFsJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJ3ZlcnRpY2FsJztcbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuc2V0QWN0aW9uRHVyaW5nID0gZnVuY3Rpb24gKGR1cmluZykge1xuICAgICAgICB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcgPSBkdXJpbmc7XG4gICAgfTtcbiAgICBTY3JlZW4uZGVidWcgPSBmYWxzZTtcbiAgICByZXR1cm4gU2NyZWVuO1xufSgpKTtcbmV4cG9ydHMuU2NyZWVuID0gU2NyZWVuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NyZWVuLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWZhdWx0U2NyZWVuQ29uZmlnID0gZXhwb3J0cy5EZWZhdWx0UmVyb3V0ZXJDb25maWcgPSBleHBvcnRzLkRlZmF1bHRDb25maWdWYWx1ZSA9IGV4cG9ydHMuR3JvdXBQYWdlID0gZXhwb3J0cy5QYWdlID0gdm9pZCAwO1xudmFyIFBhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGFnZShuYW1lLCBkZXZQb2ludHMsIG5leHQsIGJhY2ssIHRocmVzKSB7XG4gICAgICAgIGlmIChuZXh0ID09PSB2b2lkIDApIHsgbmV4dCA9IHVuZGVmaW5lZDsgfVxuICAgICAgICBpZiAoYmFjayA9PT0gdm9pZCAwKSB7IGJhY2sgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKHRocmVzID09PSB2b2lkIDApIHsgdGhyZXMgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5wb2ludHMgPSBkZXZQb2ludHM7XG4gICAgICAgIHRoaXMubmV4dCA9IG5leHQ7XG4gICAgICAgIHRoaXMuYmFjayA9IGJhY2s7XG4gICAgICAgIHRoaXMudGhyZXMgPSB0aHJlcztcbiAgICB9XG4gICAgcmV0dXJuIFBhZ2U7XG59KCkpO1xuZXhwb3J0cy5QYWdlID0gUGFnZTtcbnZhciBHcm91cFBhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gR3JvdXBQYWdlKG5hbWUsIHBhZ2VzLCBuZXh0LCBiYWNrLCB0aHJlcywgbWF0Y2hPUCkge1xuICAgICAgICBpZiAobmV4dCA9PT0gdm9pZCAwKSB7IG5leHQgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKGJhY2sgPT09IHZvaWQgMCkgeyBiYWNrID0gdW5kZWZpbmVkOyB9XG4gICAgICAgIGlmICh0aHJlcyA9PT0gdm9pZCAwKSB7IHRocmVzID0gdW5kZWZpbmVkOyB9XG4gICAgICAgIGlmIChtYXRjaE9QID09PSB2b2lkIDApIHsgbWF0Y2hPUCA9IHVuZGVmaW5lZDsgfVxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnBhZ2VzID0gcGFnZXM7XG4gICAgICAgIHRoaXMubmV4dCA9IG5leHQ7XG4gICAgICAgIHRoaXMuYmFjayA9IGJhY2s7XG4gICAgICAgIHRoaXMudGhyZXMgPSB0aHJlcztcbiAgICAgICAgdGhpcy5tYXRjaE9QID0gbWF0Y2hPUCB8fCAnfHwnO1xuICAgIH1cbiAgICByZXR1cm4gR3JvdXBQYWdlO1xufSgpKTtcbmV4cG9ydHMuR3JvdXBQYWdlID0gR3JvdXBQYWdlO1xuZXhwb3J0cy5EZWZhdWx0Q29uZmlnVmFsdWUgPSB7XG4gICAgWFlSR0JUaHJlczogMC45LFxuICAgIFBhZ2VUaHJlczogMC45LFxuICAgIEdyb3VwUGFnZVRocmVzOiAwLjksXG4gICAgR3JvdXBQYWdlTWF0Y2hPUDogJ3x8JyxcbiAgICBSb3V0ZUNvbmZpZ1Nob3VsZE1hdGNoVGltZXM6IDEsXG4gICAgUm91dGVDb25maWdTaG91bGRNYXRjaER1cmluZzogMCxcbiAgICBSb3V0ZUNvbmZpZ0JlZm9yZUFjdGlvbkRlbGF5OiAyNTAsXG4gICAgUm91dGVDb25maWdBZnRlckFjdGlvbkRlbGF5OiAyNTAsXG4gICAgUm91dGVDb25maWdQcmlvcml0eTogMSxcbiAgICBSb3V0ZUNvbmZpZ0RlYnVnOiBmYWxzZSxcbiAgICBUYXNrQ29uZmlnTWF4VGFza1J1blRpbWVzOiAxLFxuICAgIFRhc2tDb25maWdNYXhUYXNrRHVyaW5nOiAwLFxuICAgIFRhc2tDb25maWdNaW5Sb3VuZEludGVydmFsOiAwLFxuICAgIFRhc2tDb25maWdBdXRvU3RvcDogZmFsc2UsXG4gICAgVGFza0NvbmZpZ0ZpbmRSb3V0ZURlbGF5OiAyMDAwLFxufTtcbmV4cG9ydHMuRGVmYXVsdFJlcm91dGVyQ29uZmlnID0ge1xuICAgIHBhY2thZ2VOYW1lOiAnJyxcbiAgICB0YXNrRGVsYXk6IDIwMDAsXG4gICAgc3RhcnRBcHBEZWxheTogNjAwMCxcbiAgICBhdXRvTGF1bmNoQXBwOiB0cnVlLFxuICAgIHRlc3RpbmdTY3JlZW5zaG90UGF0aDogJy4vc2NyZWVuc2hvdCcsXG4gICAgZGV2aWNlSWQ6ICcnLFxuICAgIHN0cmljdE1vZGU6IGZhbHNlLFxuICAgIGRlYnVnU2xhY2tVcmw6ICcnLFxuICAgIHNhdmVJbWFnZVJvb3Q6ICcvc2RjYXJkL1BpY3R1cmVzL1NjcmVlbnNob3RzL3JvYm90bW9uJyxcbn07XG5leHBvcnRzLkRlZmF1bHRTY3JlZW5Db25maWcgPSB7XG4gICAgZGV2V2lkdGg6IDY0MCxcbiAgICBkZXZIZWlnaHQ6IDM2MCxcbiAgICBkZXZpY2VXaWR0aDogMCxcbiAgICBkZXZpY2VIZWlnaHQ6IDAsXG4gICAgc2NyZWVuV2lkdGg6IDAsXG4gICAgc2NyZWVuSGVpZ2h0OiAwLFxuICAgIHNjcmVlbk9mZnNldFg6IDAsXG4gICAgc2NyZWVuT2Zmc2V0WTogMCxcbiAgICBhY3Rpb25EdXJpbmc6IDE4MCxcbiAgICByb3RhdGlvbjogJ2hvcml6b250YWwnLFxuICAgIGxvZ1NjcmVlbnNob3RMYXN0VGltZTogMCxcbiAgICBsb2dTY3JlZW5zaG90TWluSW50ZXJ2YWxJblNlYzogMTAsXG4gICAgbG9nU2NyZWVuc2hvdE1heEZpbGVzOiAxMDAsXG4gICAgbG9nU2NyZWVuc2hvdEZvbGRlcjogJycsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RydWN0LmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VdGlscyA9IGV4cG9ydHMubG9nID0gdm9pZCAwO1xuZnVuY3Rpb24gbG9nKCkge1xuICAgIHZhciBtc2dzID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgbXNnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoJ2VuLVVTJywge1xuICAgICAgICB0aW1lWm9uZTogJ0FzaWEvVGFpcGVpJyxcbiAgICB9KTtcbiAgICB2YXIgbWVzc2FnZSA9IFwiW1wiLmNvbmNhdChkYXRlLCBcIl0gXCIpO1xuICAgIGZvciAodmFyIF9hID0gMCwgbXNnc18xID0gbXNnczsgX2EgPCBtc2dzXzEubGVuZ3RoOyBfYSsrKSB7XG4gICAgICAgIHZhciBtc2cgPSBtc2dzXzFbX2FdO1xuICAgICAgICBpZiAodHlwZW9mIG1zZyA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gXCJcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkobXNnKSwgXCIgXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbWVzc2FnZSArPSBcIlwiLmNvbmNhdChtc2csIFwiIFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlLnN1YnN0cigwLCBtZXNzYWdlLmxlbmd0aCAtIDEpKTtcbn1cbmV4cG9ydHMubG9nID0gbG9nO1xudmFyIFV0aWxzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFV0aWxzKCkge1xuICAgIH1cbiAgICBVdGlscy5pZGVudGl0eUNvbG9yID0gZnVuY3Rpb24gKGUxLCBlMikge1xuICAgICAgICB2YXIgbWVhbiA9IChlMS5yICsgZTIucikgLyAyO1xuICAgICAgICB2YXIgciA9IGUxLnIgLSBlMi5yO1xuICAgICAgICB2YXIgZyA9IGUxLmcgLSBlMi5nO1xuICAgICAgICB2YXIgYiA9IGUxLmIgLSBlMi5iO1xuICAgICAgICByZXR1cm4gMSAtIE1hdGguc3FydCgoKCg1MTIgKyBtZWFuKSAqIHIgKiByKSA+PiA4KSArIDQgKiBnICogZyArICgoKDc2NyAtIG1lYW4pICogYiAqIGIpID4+IDgpKSAvIDc2ODtcbiAgICB9O1xuICAgIFV0aWxzLmZvcm1hdFhZUkdCID0gZnVuY3Rpb24gKHh5cmdiKSB7XG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoeHlyZ2IpO1xuICAgICAgICB2YXIgZm9ybWF0T2JqID0ge307XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwga2V5c18xID0ga2V5czsgX2kgPCBrZXlzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgayA9IGtleXNfMVtfaV07XG4gICAgICAgICAgICB2YXIgc3RyID0gXCJcIi5jb25jYXQoeHlyZ2Jba10pO1xuICAgICAgICAgICAgd2hpbGUgKHN0ci5sZW5ndGggPCAzKSB7XG4gICAgICAgICAgICAgICAgc3RyID0gJyAnICsgc3RyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9ybWF0T2JqW2tdID0gc3RyO1xuICAgICAgICB9XG4gICAgICAgIHZhciB4ID0gZm9ybWF0T2JqLngsIHkgPSBmb3JtYXRPYmoueSwgciA9IGZvcm1hdE9iai5yLCBnID0gZm9ybWF0T2JqLmcsIGIgPSBmb3JtYXRPYmouYjtcbiAgICAgICAgcmV0dXJuIFwieyB4OiBcIi5jb25jYXQoeCwgXCIsIHk6IFwiKS5jb25jYXQoeSwgXCIsIHI6IFwiKS5jb25jYXQociwgXCIsIGc6IFwiKS5jb25jYXQoZywgXCIsIGI6IFwiKS5jb25jYXQoYiwgXCIgfVwiKTtcbiAgICB9O1xuICAgIFV0aWxzLnNvcnRTdHJpbmdOdW1iZXJNYXAgPSBmdW5jdGlvbiAobWFwKSB7XG4gICAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBtYXApIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7IGtleToga2V5LCBjb3VudDogbWFwW2tleV0gfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBiLmNvdW50IC0gYS5jb3VudDsgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH07XG4gICAgVXRpbHMuc2xlZXAgPSBmdW5jdGlvbiAoZHVyaW5nKSB7XG4gICAgICAgIHdoaWxlIChkdXJpbmcgPiAyMDApIHtcbiAgICAgICAgICAgIGR1cmluZyAtPSAyMDA7XG4gICAgICAgICAgICBzbGVlcCgyMDApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkdXJpbmcgPiAwKSB7XG4gICAgICAgICAgICBzbGVlcChkdXJpbmcpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBVdGlscy5nZXRUYWl3YW5UaW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gRGF0ZS5ub3coKSArIDggKiA2MCAqIDYwICogMTAwMDtcbiAgICB9O1xuICAgIFV0aWxzLmxvZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBhcmcgPSBhcmdzW2ldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmcgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tpXSA9IEpTT04uc3RyaW5naWZ5KGFyZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShVdGlscy5nZXRUYWl3YW5UaW1lKCkpO1xuICAgICAgICB2YXIgZGF0ZVN0cmluZyA9IFwiW1wiLmNvbmNhdChkYXRlLmdldE1vbnRoKCkgKyAxLCBcIi1cIikuY29uY2F0KGRhdGUuZ2V0RGF0ZSgpLCBcIlRcIikuY29uY2F0KGRhdGUuZ2V0SG91cnMoKSwgXCI6XCIpLmNvbmNhdChkYXRlLmdldE1pbnV0ZXMoKSwgXCI6XCIpLmNvbmNhdChkYXRlLmdldFNlY29uZHMoKSwgXCJdXCIpO1xuICAgICAgICBjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLCBfX3NwcmVhZEFycmF5KFtkYXRlU3RyaW5nXSwgYXJncywgZmFsc2UpKTtcbiAgICB9O1xuICAgIFV0aWxzLm5vdGlmeUV2ZW50ID0gZnVuY3Rpb24gKGV2ZW50LCBjb250ZW50KSB7XG4gICAgICAgIGlmIChzZW5kRXZlbnQgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBVdGlscy5sb2coJ3NlbmRFdmVudCcsIGV2ZW50LCBjb250ZW50KTtcbiAgICAgICAgICAgIHNlbmRFdmVudCgnJyArIGV2ZW50LCAnJyArIGNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBVdGlscy5zdGFydEFwcCA9IGZ1bmN0aW9uIChwYWNrYWdlTmFtZSkge1xuICAgICAgICBleGVjdXRlKFwiQk9PVENMQVNTUEFUSD0vc3lzdGVtL2ZyYW1ld29yay9jb3JlLmphcjovc3lzdGVtL2ZyYW1ld29yay9jb25zY3J5cHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29raHR0cC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1qdW5pdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYm91bmN5Y2FzdGxlLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrMi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdGVsZXBob255LWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdm9pcC1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL21tcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FuZHJvaWQucG9saWN5Lmphcjovc3lzdGVtL2ZyYW1ld29yay9zZXJ2aWNlcy5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYXBhY2hlLXhtbC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvd2Vidmlld2Nocm9taXVtLmphciBhbSBzdGFydCAtbiBcIi5jb25jYXQocGFja2FnZU5hbWUpKTtcbiAgICAgICAgZXhlY3V0ZShcIkFORFJPSURfREFUQT0vZGF0YSBCT09UQ0xBU1NQQVRIPS9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtb2ouamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtbGliYXJ0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9jb25zY3J5cHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29raHR0cC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1qdW5pdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYm91bmN5Y2FzdGxlLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdGVsZXBob255LWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdm9pcC1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ltcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL21tcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FuZHJvaWQucG9saWN5Lmphcjovc3lzdGVtL2ZyYW1ld29yay9hcGFjaGUteG1sLmphcjovc3lzdGVtL2ZyYW1ld29yay9vcmcuYXBhY2hlLmh0dHAubGVnYWN5LmJvb3QuamFyIGFtIHN0YXJ0IC1uIFwiLmNvbmNhdChwYWNrYWdlTmFtZSkpO1xuICAgICAgICBleGVjdXRlKFwiQU5EUk9JRF9EQVRBPS9kYXRhIG1vbmtleSAtLXBjdC1zeXNrZXlzIDAgLXAgXCIuY29uY2F0KHBhY2thZ2VOYW1lLCBcIiAtYyBhbmRyb2lkLmludGVudC5jYXRlZ29yeS5MQVVOQ0hFUiAxXCIpKTtcbiAgICAgICAgZXhlY3V0ZSgnQU5EUk9JRF9CT09UTE9HTz0xICcgK1xuICAgICAgICAgICAgJ0FORFJPSURfUk9PVD0vc3lzdGVtICcgK1xuICAgICAgICAgICAgJ0FORFJPSURfQVNTRVRTPS9zeXN0ZW0vYXBwICcgK1xuICAgICAgICAgICAgJ0FORFJPSURfREFUQT0vZGF0YSAnICtcbiAgICAgICAgICAgICdBTkRST0lEX1NUT1JBR0U9L3N0b3JhZ2UgJyArXG4gICAgICAgICAgICAnQU5EUk9JRF9BUlRfUk9PVD0vYXBleC9jb20uYW5kcm9pZC5hcnQgJyArXG4gICAgICAgICAgICAnQU5EUk9JRF9JMThOX1JPT1Q9L2FwZXgvY29tLmFuZHJvaWQuaTE4biAnICtcbiAgICAgICAgICAgICdBTkRST0lEX1RaREFUQV9ST09UPS9hcGV4L2NvbS5hbmRyb2lkLnR6ZGF0YSAnICtcbiAgICAgICAgICAgICdFWFRFUk5BTF9TVE9SQUdFPS9zZGNhcmQgJyArXG4gICAgICAgICAgICAnQVNFQ19NT1VOVFBPSU5UPS9tbnQvYXNlYyAnICtcbiAgICAgICAgICAgICdCT09UQ0xBU1NQQVRIPS9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2NvcmUtb2ouamFyOi9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2NvcmUtbGliYXJ0LmphcjovYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9jb3JlLWljdTRqLmphcjovYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9va2h0dHAuamFyOi9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2JvdW5jeWNhc3RsZS5qYXI6L2FwZXgvY29tLmFuZHJvaWQuYXJ0L2phdmFsaWIvYXBhY2hlLXhtbC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3RlbGVwaG9ueS1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3ZvaXAtY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay9pbXMtY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay9mcmFtZXdvcmstYXRiLWJhY2t3YXJkLWNvbXBhdGliaWxpdHkuamFyOi9hcGV4L2NvbS5hbmRyb2lkLmNvbnNjcnlwdC9qYXZhbGliL2NvbnNjcnlwdC5qYXI6L2FwZXgvY29tLmFuZHJvaWQubWVkaWEvamF2YWxpYi91cGRhdGFibGUtbWVkaWEuamFyOi9hcGV4L2NvbS5hbmRyb2lkLm1lZGlhcHJvdmlkZXIvamF2YWxpYi9mcmFtZXdvcmstbWVkaWFwcm92aWRlci5qYXI6L2FwZXgvY29tLmFuZHJvaWQub3Muc3RhdHNkL2phdmFsaWIvZnJhbWV3b3JrLXN0YXRzZC5qYXI6L2FwZXgvY29tLmFuZHJvaWQucGVybWlzc2lvbi9qYXZhbGliL2ZyYW1ld29yay1wZXJtaXNzaW9uLmphcjovYXBleC9jb20uYW5kcm9pZC5zZGtleHQvamF2YWxpYi9mcmFtZXdvcmstc2RrZXh0ZW5zaW9ucy5qYXI6L2FwZXgvY29tLmFuZHJvaWQud2lmaS9qYXZhbGliL2ZyYW1ld29yay13aWZpLmphcjovYXBleC9jb20uYW5kcm9pZC50ZXRoZXJpbmcvamF2YWxpYi9mcmFtZXdvcmstdGV0aGVyaW5nLmphciAnICtcbiAgICAgICAgICAgICdERVgyT0FUQk9PVENMQVNTUEFUSD0vYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9jb3JlLW9qLmphcjovYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9jb3JlLWxpYmFydC5qYXI6L2FwZXgvY29tLmFuZHJvaWQuYXJ0L2phdmFsaWIvY29yZS1pY3U0ai5qYXI6L2FwZXgvY29tLmFuZHJvaWQuYXJ0L2phdmFsaWIvb2todHRwLmphcjovYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9ib3VuY3ljYXN0bGUuamFyOi9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2FwYWNoZS14bWwuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZXh0Lmphcjovc3lzdGVtL2ZyYW1ld29yay90ZWxlcGhvbnktY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay92b2lwLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvaW1zLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrLWF0Yi1iYWNrd2FyZC1jb21wYXRpYmlsaXR5LmphciAnICtcbiAgICAgICAgICAgICdTWVNURU1TRVJWRVJDTEFTU1BBVEg9L3N5c3RlbS9mcmFtZXdvcmsvY29tLmFuZHJvaWQubG9jYXRpb24ucHJvdmlkZXIuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3NlcnZpY2VzLmphcjovc3lzdGVtL2ZyYW1ld29yay9ldGhlcm5ldC1zZXJ2aWNlLmphcjovYXBleC9jb20uYW5kcm9pZC5wZXJtaXNzaW9uL2phdmFsaWIvc2VydmljZS1wZXJtaXNzaW9uLmphcjovYXBleC9jb20uYW5kcm9pZC5pcHNlYy9qYXZhbGliL2FuZHJvaWQubmV0Lmlwc2VjLmlrZS5qYXIgJyArXG4gICAgICAgICAgICBcIm1vbmtleSAtLXBjdC1zeXNrZXlzIDAgLXAgXCIuY29uY2F0KHBhY2thZ2VOYW1lLCBcIiAtYyBhbmRyb2lkLmludGVudC5jYXRlZ29yeS5MQVVOQ0hFUiAxXCIpKTtcbiAgICB9O1xuICAgIFV0aWxzLnN0b3BBcHAgPSBmdW5jdGlvbiAocGFja2FnZU5hbWUpIHtcbiAgICAgICAgZXhlY3V0ZShcIkJPT1RDTEFTU1BBVEg9L3N5c3RlbS9mcmFtZXdvcmsvY29yZS5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29uc2NyeXB0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9va2h0dHAuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtanVuaXQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2JvdW5jeWNhc3RsZS5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZXh0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9mcmFtZXdvcmsuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yazIuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3RlbGVwaG9ueS1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3ZvaXAtY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay9tbXMtY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay9hbmRyb2lkLnBvbGljeS5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvc2VydmljZXMuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FwYWNoZS14bWwuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3dlYnZpZXdjaHJvbWl1bS5qYXIgYW0gZm9yY2Utc3RvcCBcIi5jb25jYXQocGFja2FnZU5hbWUpKTtcbiAgICAgICAgZXhlY3V0ZShcIkFORFJPSURfREFUQT0vZGF0YSBCT09UQ0xBU1NQQVRIPS9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtb2ouamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtbGliYXJ0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9jb25zY3J5cHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29raHR0cC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1qdW5pdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYm91bmN5Y2FzdGxlLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdGVsZXBob255LWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdm9pcC1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ltcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL21tcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FuZHJvaWQucG9saWN5Lmphcjovc3lzdGVtL2ZyYW1ld29yay9hcGFjaGUteG1sLmphcjovc3lzdGVtL2ZyYW1ld29yay9vcmcuYXBhY2hlLmh0dHAubGVnYWN5LmJvb3QuamFyIGFtIGZvcmNlLXN0b3AgXCIuY29uY2F0KHBhY2thZ2VOYW1lKSk7XG4gICAgfTtcbiAgICBVdGlscy5nZXRDdXJyZW50QXBwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gZXhlY3V0ZSgnZHVtcHN5cyB3aW5kb3cgd2luZG93cycpLnNwbGl0KCdtQ3VycmVudEZvY3VzJyk7XG4gICAgICAgIGlmIChyZXN1bHQubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgcmV0dXJuIFsnJywgJyddO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdFsxXS5zcGxpdCgnICcpO1xuICAgICAgICBpZiAocmVzdWx0Lmxlbmd0aCA8IDMpIHtcbiAgICAgICAgICAgIHJldHVybiBbJycsICcnXTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHRbMl0gPSByZXN1bHRbMl0ucmVwbGFjZSgnfScsICcnKTtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0WzJdLnNwbGl0KCcvJyk7XG4gICAgICAgIHZhciBwYWNrYWdlTmFtZSA9ICcnO1xuICAgICAgICB2YXIgYWN0aXZpdHlOYW1lID0gJyc7XG4gICAgICAgIGlmIChyZXN1bHQubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgIHBhY2thZ2VOYW1lID0gcmVzdWx0WzBdLnRyaW0oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChyZXN1bHQubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgcGFja2FnZU5hbWUgPSByZXN1bHRbMF0udHJpbSgpO1xuICAgICAgICAgICAgYWN0aXZpdHlOYW1lID0gcmVzdWx0WzFdLnRyaW0oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW3BhY2thZ2VOYW1lLCBhY3Rpdml0eU5hbWVdO1xuICAgIH07XG4gICAgVXRpbHMuaXNBcHBPblRvcCA9IGZ1bmN0aW9uIChwYWNrYWdlTmFtZSkge1xuICAgICAgICB2YXIgdG9wSW5mbyA9IGV4ZWN1dGUoJ2R1bXBzeXMgYWN0aXZpdHkgYWN0aXZpdGllcyB8IGdyZXAgbVJlc3VtZWRBY3Rpdml0eScpO1xuICAgICAgICByZXR1cm4gdG9wSW5mby5pbmRleE9mKHBhY2thZ2VOYW1lKSAhPT0gLTE7XG4gICAgfTtcbiAgICBVdGlscy5zZW5kU2xhY2tNZXNzYWdlID0gZnVuY3Rpb24gKHVybCwgdGl0bGUsIG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIGJvZHkgPSB7XG4gICAgICAgICAgICBibG9ja3M6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ21ya2R3bicsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnKicgKyB0aXRsZSArICcqJyxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2RpdmlkZXInLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc2VjdGlvbicsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdtcmtkd24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogbWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfTtcbiAgICAgICAgaHR0cENsaWVudCgnUE9TVCcsIHVybCwgSlNPTi5zdHJpbmdpZnkoYm9keSksIHtcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgVXRpbHMud2FpdEZvckFjdGlvbiA9IGZ1bmN0aW9uIChhY3Rpb24sIHRpbWVvdXQsIG1hdGNoVGltZXMsIGludGVydmFsKSB7XG4gICAgICAgIGlmIChtYXRjaFRpbWVzID09PSB2b2lkIDApIHsgbWF0Y2hUaW1lcyA9IDE7IH1cbiAgICAgICAgaWYgKGludGVydmFsID09PSB2b2lkIDApIHsgaW50ZXJ2YWwgPSA2MDA7IH1cbiAgICAgICAgdmFyIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIHZhciBtYXRjaHMgPSAwO1xuICAgICAgICB3aGlsZSAoRGF0ZS5ub3coKSAtIG5vdyA8IHRpbWVvdXQpIHtcbiAgICAgICAgICAgIGlmIChhY3Rpb24oKSkge1xuICAgICAgICAgICAgICAgIG1hdGNocysrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1hdGNocyA+PSBtYXRjaFRpbWVzKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBVdGlscy5zbGVlcChpbnRlcnZhbCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1hdGNocyA+PSBtYXRjaFRpbWVzKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICBVdGlscy5wYWRaZXJvID0gZnVuY3Rpb24gKG51bSkge1xuICAgICAgICByZXR1cm4gbnVtIDwgMTAgPyBcIjBcIi5jb25jYXQobnVtKSA6IFwiXCIuY29uY2F0KG51bSk7XG4gICAgfTtcbiAgICBVdGlscy5zYXZlU2NyZWVuc2hvdFRvRGlzayA9IGZ1bmN0aW9uIChmb2xkZXJQYXRoLCBzYXZlUmVhc29uKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHNhdmVSZWFzb24gPSBzYXZlUmVhc29uID09PSB1bmRlZmluZWQgPyAnY3Jhc2gtaW1nJyA6IHNhdmVSZWFzb247XG4gICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoVXRpbHMuZ2V0VGFpd2FuVGltZSgpKTtcbiAgICAgICAgdmFyIF9hID0gW2RhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpICsgMSwgZGF0ZS5nZXREYXRlKCksIGRhdGUuZ2V0SG91cnMoKSwgZGF0ZS5nZXRNaW51dGVzKCksIGRhdGUuZ2V0U2Vjb25kcygpXS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIF90aGlzLnBhZFplcm8oaXRlbSk7IH0pLCBZWVlZID0gX2FbMF0sIE1NID0gX2FbMV0sIGRkID0gX2FbMl0sIGhoID0gX2FbM10sIG1tID0gX2FbNF0sIHNzID0gX2FbNV07XG4gICAgICAgIHZhciBmaWxlbmFtZSA9IFwiXCIuY29uY2F0KFlZWVksIFwiLVwiKS5jb25jYXQoTU0sIFwiLVwiKS5jb25jYXQoZGQsIFwiVFwiKS5jb25jYXQoaGgsIFwiLlwiKS5jb25jYXQobW0sIFwiLlwiKS5jb25jYXQoc3MsIFwiX1wiKS5jb25jYXQoc2F2ZVJlYXNvbiwgXCIucG5nXCIpO1xuICAgICAgICB2YXIgaW1nID0gZ2V0U2NyZWVuc2hvdCgpO1xuICAgICAgICBzYXZlSW1hZ2UoaW1nLCBcIlwiLmNvbmNhdChmb2xkZXJQYXRoLCBcIi9cIikuY29uY2F0KGZpbGVuYW1lKSk7XG4gICAgICAgIFV0aWxzLmxvZyhcIldyaXRlIHRvIGZpbGU6IFwiLmNvbmNhdChmb2xkZXJQYXRoLCBcIi9cIikuY29uY2F0KGZpbGVuYW1lKSk7XG4gICAgICAgIHJlbGVhc2VJbWFnZShpbWcpO1xuICAgIH07XG4gICAgVXRpbHMucmVtb3ZlT2xkZXN0RmlsZXNJZkV4Y2VlZHNMaW1pdCA9IGZ1bmN0aW9uIChmb2xkZXJQYXRoLCBtYXhGaWxlcykge1xuICAgICAgICBpZiAobWF4RmlsZXMgPT09IHZvaWQgMCkgeyBtYXhGaWxlcyA9IDEwMDsgfVxuICAgICAgICB2YXIgZmlsZUxpc3QgPSBleGVjdXRlKFwibHMgLWwgXCIuY29uY2F0KGZvbGRlclBhdGgpKS5zcGxpdCgnXFxuJyk7XG4gICAgICAgIC8vIFNvbWUgT1MgcmV0dXJuIGZpcnN0IGxpbmUgdG90YWwgOCAoTWFjLCByZWRyb2lkKSwgc29tZSBub3QgKE1lbXUpXG4gICAgICAgIGlmIChmaWxlTGlzdFswXSAmJiBmaWxlTGlzdFswXS5pbmRleE9mKCd0b3RhbCcpID09PSAwKSB7XG4gICAgICAgICAgICBmaWxlTGlzdC5zaGlmdCgpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmaWxlc1dpdGhEYXRlcyA9IGZpbGVMaXN0Lm1hcChmdW5jdGlvbiAobGluZSkge1xuICAgICAgICAgICAgdmFyIHBhcnRzID0gbGluZS50cmltKCkuc3BsaXQoJyAnKTtcbiAgICAgICAgICAgIHZhciBmaWxlbmFtZSA9IHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdOyAvLyAyMDIzLTA5LTAyVDE1LjA4LjE3X2xvZy5wbmdcbiAgICAgICAgICAgIHZhciBkYXRlT2JqID0gbmV3IERhdGUocGFydHNbcGFydHMubGVuZ3RoIC0gM10uc3BsaXQoJ18nKVswXSk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGRhdGU6IGRhdGVPYmosXG4gICAgICAgICAgICAgICAgZmlsZW5hbWU6IGZpbGVuYW1lLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZpbGVzV2l0aERhdGVzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGEuZGF0ZS5nZXRUaW1lKCkgLSBiLmRhdGUuZ2V0VGltZSgpOyB9KTtcbiAgICAgICAgLy8gSWYgdGhlcmUgYXJlIG1vcmUgdGhhbiAke21heEZpbGVzfSBmaWxlcywgcmVtb3ZlIHRoZSBvbGRlc3RcbiAgICAgICAgd2hpbGUgKGZpbGVzV2l0aERhdGVzLmxlbmd0aCA+IG1heEZpbGVzKSB7XG4gICAgICAgICAgICB2YXIgb2xkZXN0RmlsZSA9IGZpbGVzV2l0aERhdGVzLnNoaWZ0KCk7XG4gICAgICAgICAgICBpZiAob2xkZXN0RmlsZSkge1xuICAgICAgICAgICAgICAgIGV4ZWN1dGUoXCJybSBcIi5jb25jYXQoZm9sZGVyUGF0aCwgXCIvXCIpLmNvbmNhdChvbGRlc3RGaWxlLmZpbGVuYW1lKSk7XG4gICAgICAgICAgICAgICAgVXRpbHMubG9nKFwicm06IFwiLmNvbmNhdChmb2xkZXJQYXRoLCBcIi9cIikuY29uY2F0KG9sZGVzdEZpbGUuZmlsZW5hbWUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgVXRpbHMuam9pblBhdGhzID0gZnVuY3Rpb24gKHBhdGgxLCBwYXRoMikge1xuICAgICAgICBpZiAocGF0aDIgPT09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhdGgxLmNoYXJBdChwYXRoMS5sZW5ndGggLSAxKSA9PT0gJy8nKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDEgKyBwYXRoMjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRoMSArICcvJyArIHBhdGgyO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gVXRpbHM7XG59KCkpO1xuZXhwb3J0cy5VdGlscyA9IFV0aWxzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4Jyk7XG52YXIgZW50cnlVbmJpbmQgPSByZXF1aXJlKCcuLi8uLi9pbnRlcm5hbHMvZW50cnktdW5iaW5kJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZW50cnlVbmJpbmQoJ0FycmF5JywgJ2ZpbmRJbmRleCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduJyk7XG52YXIgcGF0aCA9IHJlcXVpcmUoJy4uLy4uL2ludGVybmFscy9wYXRoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcGF0aC5PYmplY3QuYXNzaWduO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciB0cnlUb1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90cnktdG8tc3RyaW5nJyk7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG4vLyBgQXNzZXJ0OiBJc0NhbGxhYmxlKGFyZ3VtZW50KSBpcyB0cnVlYFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgaWYgKGlzQ2FsbGFibGUoYXJndW1lbnQpKSByZXR1cm4gYXJndW1lbnQ7XG4gIHRocm93IG5ldyAkVHlwZUVycm9yKHRyeVRvU3RyaW5nKGFyZ3VtZW50KSArICcgaXMgbm90IGEgZnVuY3Rpb24nKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5JykuZjtcblxudmFyIFVOU0NPUEFCTEVTID0gd2VsbEtub3duU3ltYm9sKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xuXG4vLyBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAdW5zY29wYWJsZXNcbmlmIChBcnJheVByb3RvdHlwZVtVTlNDT1BBQkxFU10gPT09IHVuZGVmaW5lZCkge1xuICBkZWZpbmVQcm9wZXJ0eShBcnJheVByb3RvdHlwZSwgVU5TQ09QQUJMRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IGNyZWF0ZShudWxsKVxuICB9KTtcbn1cblxuLy8gYWRkIGEga2V5IHRvIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG90eXBlW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG5cbnZhciAkU3RyaW5nID0gU3RyaW5nO1xudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGBBc3NlcnQ6IFR5cGUoYXJndW1lbnQpIGlzIE9iamVjdGBcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmIChpc09iamVjdChhcmd1bWVudCkpIHJldHVybiBhcmd1bWVudDtcbiAgdGhyb3cgbmV3ICRUeXBlRXJyb3IoJFN0cmluZyhhcmd1bWVudCkgKyAnIGlzIG5vdCBhbiBvYmplY3QnKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgbGVuZ3RoT2ZBcnJheUxpa2UgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbGVuZ3RoLW9mLWFycmF5LWxpa2UnKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS57IGluZGV4T2YsIGluY2x1ZGVzIH1gIG1ldGhvZHMgaW1wbGVtZW50YXRpb25cbnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JbmRleGVkT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gbGVuZ3RoT2ZBcnJheUxpa2UoTyk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmUgLS0gTmFOIGNoZWNrXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9PSBlbCkgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSB7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICAgICAgaWYgKHZhbHVlICE9PSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgaWYgKChJU19JTkNMVURFUyB8fCBpbmRleCBpbiBPKSAmJiBPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAvLyBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcbiAgaW5jbHVkZXM6IGNyZWF0ZU1ldGhvZCh0cnVlKSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5pbmRleE9mYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuaW5kZXhvZlxuICBpbmRleE9mOiBjcmVhdGVNZXRob2QoZmFsc2UpXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0Jyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG52YXIgYXJyYXlTcGVjaWVzQ3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG5cbnZhciBwdXNoID0gdW5jdXJyeVRoaXMoW10ucHVzaCk7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUueyBmb3JFYWNoLCBtYXAsIGZpbHRlciwgc29tZSwgZXZlcnksIGZpbmQsIGZpbmRJbmRleCwgZmlsdGVyUmVqZWN0IH1gIG1ldGhvZHMgaW1wbGVtZW50YXRpb25cbnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoVFlQRSkge1xuICB2YXIgSVNfTUFQID0gVFlQRSA9PT0gMTtcbiAgdmFyIElTX0ZJTFRFUiA9IFRZUEUgPT09IDI7XG4gIHZhciBJU19TT01FID0gVFlQRSA9PT0gMztcbiAgdmFyIElTX0VWRVJZID0gVFlQRSA9PT0gNDtcbiAgdmFyIElTX0ZJTkRfSU5ERVggPSBUWVBFID09PSA2O1xuICB2YXIgSVNfRklMVEVSX1JFSkVDVCA9IFRZUEUgPT09IDc7XG4gIHZhciBOT19IT0xFUyA9IFRZUEUgPT09IDUgfHwgSVNfRklORF9JTkRFWDtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgY2FsbGJhY2tmbiwgdGhhdCwgc3BlY2lmaWNDcmVhdGUpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgc2VsZiA9IEluZGV4ZWRPYmplY3QoTyk7XG4gICAgdmFyIGJvdW5kRnVuY3Rpb24gPSBiaW5kKGNhbGxiYWNrZm4sIHRoYXQpO1xuICAgIHZhciBsZW5ndGggPSBsZW5ndGhPZkFycmF5TGlrZShzZWxmKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBjcmVhdGUgPSBzcGVjaWZpY0NyZWF0ZSB8fCBhcnJheVNwZWNpZXNDcmVhdGU7XG4gICAgdmFyIHRhcmdldCA9IElTX01BUCA/IGNyZWF0ZSgkdGhpcywgbGVuZ3RoKSA6IElTX0ZJTFRFUiB8fCBJU19GSUxURVJfUkVKRUNUID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgdmFsdWUsIHJlc3VsdDtcbiAgICBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpIHtcbiAgICAgIHZhbHVlID0gc2VsZltpbmRleF07XG4gICAgICByZXN1bHQgPSBib3VuZEZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgTyk7XG4gICAgICBpZiAoVFlQRSkge1xuICAgICAgICBpZiAoSVNfTUFQKSB0YXJnZXRbaW5kZXhdID0gcmVzdWx0OyAvLyBtYXBcbiAgICAgICAgZWxzZSBpZiAocmVzdWx0KSBzd2l0Y2ggKFRZUEUpIHtcbiAgICAgICAgICBjYXNlIDM6IHJldHVybiB0cnVlOyAgICAgICAgICAgICAgLy8gc29tZVxuICAgICAgICAgIGNhc2UgNTogcmV0dXJuIHZhbHVlOyAgICAgICAgICAgICAvLyBmaW5kXG4gICAgICAgICAgY2FzZSA2OiByZXR1cm4gaW5kZXg7ICAgICAgICAgICAgIC8vIGZpbmRJbmRleFxuICAgICAgICAgIGNhc2UgMjogcHVzaCh0YXJnZXQsIHZhbHVlKTsgICAgICAvLyBmaWx0ZXJcbiAgICAgICAgfSBlbHNlIHN3aXRjaCAoVFlQRSkge1xuICAgICAgICAgIGNhc2UgNDogcmV0dXJuIGZhbHNlOyAgICAgICAgICAgICAvLyBldmVyeVxuICAgICAgICAgIGNhc2UgNzogcHVzaCh0YXJnZXQsIHZhbHVlKTsgICAgICAvLyBmaWx0ZXJSZWplY3RcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gSVNfRklORF9JTkRFWCA/IC0xIDogSVNfU09NRSB8fCBJU19FVkVSWSA/IElTX0VWRVJZIDogdGFyZ2V0O1xuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZm9yRWFjaGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmZvcmVhY2hcbiAgZm9yRWFjaDogY3JlYXRlTWV0aG9kKDApLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLm1hcGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLm1hcFxuICBtYXA6IGNyZWF0ZU1ldGhvZCgxKSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5maWx0ZXJgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5maWx0ZXJcbiAgZmlsdGVyOiBjcmVhdGVNZXRob2QoMiksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuc29tZWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLnNvbWVcbiAgc29tZTogY3JlYXRlTWV0aG9kKDMpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLmV2ZXJ5YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZXZlcnlcbiAgZXZlcnk6IGNyZWF0ZU1ldGhvZCg0KSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5maW5kYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZmluZFxuICBmaW5kOiBjcmVhdGVNZXRob2QoNSksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZmluZEluZGV4YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZmluZEluZGV4XG4gIGZpbmRJbmRleDogY3JlYXRlTWV0aG9kKDYpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLmZpbHRlclJlamVjdGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWFycmF5LWZpbHRlcmluZ1xuICBmaWx0ZXJSZWplY3Q6IGNyZWF0ZU1ldGhvZCg3KVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWFycmF5Jyk7XG52YXIgaXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jb25zdHJ1Y3RvcicpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgU1BFQ0lFUyA9IHdlbGxLbm93blN5bWJvbCgnc3BlY2llcycpO1xudmFyICRBcnJheSA9IEFycmF5O1xuXG4vLyBhIHBhcnQgb2YgYEFycmF5U3BlY2llc0NyZWF0ZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5c3BlY2llc2NyZWF0ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWxBcnJheSkge1xuICB2YXIgQztcbiAgaWYgKGlzQXJyYXkob3JpZ2luYWxBcnJheSkpIHtcbiAgICBDID0gb3JpZ2luYWxBcnJheS5jb25zdHJ1Y3RvcjtcbiAgICAvLyBjcm9zcy1yZWFsbSBmYWxsYmFja1xuICAgIGlmIChpc0NvbnN0cnVjdG9yKEMpICYmIChDID09PSAkQXJyYXkgfHwgaXNBcnJheShDLnByb3RvdHlwZSkpKSBDID0gdW5kZWZpbmVkO1xuICAgIGVsc2UgaWYgKGlzT2JqZWN0KEMpKSB7XG4gICAgICBDID0gQ1tTUEVDSUVTXTtcbiAgICAgIGlmIChDID09PSBudWxsKSBDID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSByZXR1cm4gQyA9PT0gdW5kZWZpbmVkID8gJEFycmF5IDogQztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYXJyYXlTcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xuXG4vLyBgQXJyYXlTcGVjaWVzQ3JlYXRlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXlzcGVjaWVzY3JlYXRlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbEFycmF5LCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoYXJyYXlTcGVjaWVzQ29uc3RydWN0b3Iob3JpZ2luYWxBcnJheSkpKGxlbmd0aCA9PT0gMCA/IDAgOiBsZW5ndGgpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcblxudmFyIHRvU3RyaW5nID0gdW5jdXJyeVRoaXMoe30udG9TdHJpbmcpO1xudmFyIHN0cmluZ1NsaWNlID0gdW5jdXJyeVRoaXMoJycuc2xpY2UpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gc3RyaW5nU2xpY2UodG9TdHJpbmcoaXQpLCA4LCAtMSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIFRPX1NUUklOR19UQUdfU1VQUE9SVCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmctdGFnLXN1cHBvcnQnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgY2xhc3NvZlJhdyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgVE9fU1RSSU5HX1RBRyA9IHdlbGxLbm93blN5bWJvbCgndG9TdHJpbmdUYWcnKTtcbnZhciAkT2JqZWN0ID0gT2JqZWN0O1xuXG4vLyBFUzMgd3JvbmcgaGVyZVxudmFyIENPUlJFQ1RfQVJHVU1FTlRTID0gY2xhc3NvZlJhdyhmdW5jdGlvbiAoKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPT09ICdBcmd1bWVudHMnO1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBTY3JpcHQgQWNjZXNzIERlbmllZCBlcnJvclxudmFyIHRyeUdldCA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbi8vIGdldHRpbmcgdGFnIGZyb20gRVM2KyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2Bcbm1vZHVsZS5leHBvcnRzID0gVE9fU1RSSU5HX1RBR19TVVBQT1JUID8gY2xhc3NvZlJhdyA6IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgTywgdGFnLCByZXN1bHQ7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gJ1VuZGVmaW5lZCcgOiBpdCA9PT0gbnVsbCA/ICdOdWxsJ1xuICAgIC8vIEBAdG9TdHJpbmdUYWcgY2FzZVxuICAgIDogdHlwZW9mICh0YWcgPSB0cnlHZXQoTyA9ICRPYmplY3QoaXQpLCBUT19TVFJJTkdfVEFHKSkgPT0gJ3N0cmluZycgPyB0YWdcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IENPUlJFQ1RfQVJHVU1FTlRTID8gY2xhc3NvZlJhdyhPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChyZXN1bHQgPSBjbGFzc29mUmF3KE8pKSA9PT0gJ09iamVjdCcgJiYgaXNDYWxsYWJsZShPLmNhbGxlZSkgPyAnQXJndW1lbnRzJyA6IHJlc3VsdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBvd25LZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL293bi1rZXlzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciBkZWZpbmVQcm9wZXJ0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc291cmNlLCBleGNlcHRpb25zKSB7XG4gIHZhciBrZXlzID0gb3duS2V5cyhzb3VyY2UpO1xuICB2YXIgZGVmaW5lUHJvcGVydHkgPSBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mO1xuICB2YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yTW9kdWxlLmY7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgIGlmICghaGFzT3duKHRhcmdldCwga2V5KSAmJiAhKGV4Y2VwdGlvbnMgJiYgaGFzT3duKGV4Y2VwdGlvbnMsIGtleSkpKSB7XG4gICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7XG4gICAgfVxuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xudmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERFU0NSSVBUT1JTID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZGVmaW5lUHJvcGVydHlNb2R1bGUuZihvYmplY3QsIGtleSwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBtYWtlQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9tYWtlLWJ1aWx0LWluJyk7XG52YXIgZGVmaW5lR2xvYmFsUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWdsb2JhbC1wcm9wZXJ0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBrZXksIHZhbHVlLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykgb3B0aW9ucyA9IHt9O1xuICB2YXIgc2ltcGxlID0gb3B0aW9ucy5lbnVtZXJhYmxlO1xuICB2YXIgbmFtZSA9IG9wdGlvbnMubmFtZSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uYW1lIDoga2V5O1xuICBpZiAoaXNDYWxsYWJsZSh2YWx1ZSkpIG1ha2VCdWlsdEluKHZhbHVlLCBuYW1lLCBvcHRpb25zKTtcbiAgaWYgKG9wdGlvbnMuZ2xvYmFsKSB7XG4gICAgaWYgKHNpbXBsZSkgT1trZXldID0gdmFsdWU7XG4gICAgZWxzZSBkZWZpbmVHbG9iYWxQcm9wZXJ0eShrZXksIHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFvcHRpb25zLnVuc2FmZSkgZGVsZXRlIE9ba2V5XTtcbiAgICAgIGVsc2UgaWYgKE9ba2V5XSkgc2ltcGxlID0gdHJ1ZTtcbiAgICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG4gICAgaWYgKHNpbXBsZSkgT1trZXldID0gdmFsdWU7XG4gICAgZWxzZSBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mKE8sIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICBjb25maWd1cmFibGU6ICFvcHRpb25zLm5vbkNvbmZpZ3VyYWJsZSxcbiAgICAgIHdyaXRhYmxlOiAhb3B0aW9ucy5ub25Xcml0YWJsZVxuICAgIH0pO1xuICB9IHJldHVybiBPO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydHkgLS0gc2FmZVxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHRyeSB7XG4gICAgZGVmaW5lUHJvcGVydHkoZ2xvYmFsLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGdsb2JhbFtrZXldID0gdmFsdWU7XG4gIH0gcmV0dXJuIHZhbHVlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xuXG4vLyBEZXRlY3QgSUU4J3MgaW5jb21wbGV0ZSBkZWZpbmVQcm9wZXJ0eSBpbXBsZW1lbnRhdGlvblxubW9kdWxlLmV4cG9ydHMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sIDEsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pWzFdICE9PSA3O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZG9jdW1lbnRBbGwgPSB0eXBlb2YgZG9jdW1lbnQgPT0gJ29iamVjdCcgJiYgZG9jdW1lbnQuYWxsO1xuXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLUlzSFRNTEREQS1pbnRlcm5hbC1zbG90XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9uby10eXBlb2YtdW5kZWZpbmVkIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG52YXIgSVNfSFRNTEREQSA9IHR5cGVvZiBkb2N1bWVudEFsbCA9PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudEFsbCAhPT0gdW5kZWZpbmVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYWxsOiBkb2N1bWVudEFsbCxcbiAgSVNfSFRNTEREQTogSVNfSFRNTEREQVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG5cbnZhciBkb2N1bWVudCA9IGdsb2JhbC5kb2N1bWVudDtcbi8vIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnIGluIG9sZCBJRVxudmFyIEVYSVNUUyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIEVYSVNUUyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSB0eXBlb2YgbmF2aWdhdG9yICE9ICd1bmRlZmluZWQnICYmIFN0cmluZyhuYXZpZ2F0b3IudXNlckFnZW50KSB8fCAnJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50Jyk7XG5cbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgRGVubyA9IGdsb2JhbC5EZW5vO1xudmFyIHZlcnNpb25zID0gcHJvY2VzcyAmJiBwcm9jZXNzLnZlcnNpb25zIHx8IERlbm8gJiYgRGVuby52ZXJzaW9uO1xudmFyIHY4ID0gdmVyc2lvbnMgJiYgdmVyc2lvbnMudjg7XG52YXIgbWF0Y2gsIHZlcnNpb247XG5cbmlmICh2OCkge1xuICBtYXRjaCA9IHY4LnNwbGl0KCcuJyk7XG4gIC8vIGluIG9sZCBDaHJvbWUsIHZlcnNpb25zIG9mIFY4IGlzbid0IFY4ID0gQ2hyb21lIC8gMTBcbiAgLy8gYnV0IHRoZWlyIGNvcnJlY3QgdmVyc2lvbnMgYXJlIG5vdCBpbnRlcmVzdGluZyBmb3IgdXNcbiAgdmVyc2lvbiA9IG1hdGNoWzBdID4gMCAmJiBtYXRjaFswXSA8IDQgPyAxIDogKyhtYXRjaFswXSArIG1hdGNoWzFdKTtcbn1cblxuLy8gQnJvd3NlckZTIE5vZGVKUyBgcHJvY2Vzc2AgcG9seWZpbGwgaW5jb3JyZWN0bHkgc2V0IGAudjhgIHRvIGAwLjBgXG4vLyBzbyBjaGVjayBgdXNlckFnZW50YCBldmVuIGlmIGAudjhgIGV4aXN0cywgYnV0IDBcbmlmICghdmVyc2lvbiAmJiB1c2VyQWdlbnQpIHtcbiAgbWF0Y2ggPSB1c2VyQWdlbnQubWF0Y2goL0VkZ2VcXC8oXFxkKykvKTtcbiAgaWYgKCFtYXRjaCB8fCBtYXRjaFsxXSA+PSA3NCkge1xuICAgIG1hdGNoID0gdXNlckFnZW50Lm1hdGNoKC9DaHJvbWVcXC8oXFxkKykvKTtcbiAgICBpZiAobWF0Y2gpIHZlcnNpb24gPSArbWF0Y2hbMV07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2ZXJzaW9uO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ09OU1RSVUNUT1IsIE1FVEhPRCkge1xuICByZXR1cm4gdW5jdXJyeVRoaXMoZ2xvYmFsW0NPTlNUUlVDVE9SXS5wcm90b3R5cGVbTUVUSE9EXSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gSUU4LSBkb24ndCBlbnVtIGJ1ZyBrZXlzXG5tb2R1bGUuZXhwb3J0cyA9IFtcbiAgJ2NvbnN0cnVjdG9yJyxcbiAgJ2hhc093blByb3BlcnR5JyxcbiAgJ2lzUHJvdG90eXBlT2YnLFxuICAncHJvcGVydHlJc0VudW1lcmFibGUnLFxuICAndG9Mb2NhbGVTdHJpbmcnLFxuICAndG9TdHJpbmcnLFxuICAndmFsdWVPZidcbl07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJykuZjtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciBkZWZpbmVHbG9iYWxQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtZ2xvYmFsLXByb3BlcnR5Jyk7XG52YXIgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb3B5LWNvbnN0cnVjdG9yLXByb3BlcnRpZXMnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcblxuLypcbiAgb3B0aW9ucy50YXJnZXQgICAgICAgICAtIG5hbWUgb2YgdGhlIHRhcmdldCBvYmplY3RcbiAgb3B0aW9ucy5nbG9iYWwgICAgICAgICAtIHRhcmdldCBpcyB0aGUgZ2xvYmFsIG9iamVjdFxuICBvcHRpb25zLnN0YXQgICAgICAgICAgIC0gZXhwb3J0IGFzIHN0YXRpYyBtZXRob2RzIG9mIHRhcmdldFxuICBvcHRpb25zLnByb3RvICAgICAgICAgIC0gZXhwb3J0IGFzIHByb3RvdHlwZSBtZXRob2RzIG9mIHRhcmdldFxuICBvcHRpb25zLnJlYWwgICAgICAgICAgIC0gcmVhbCBwcm90b3R5cGUgbWV0aG9kIGZvciB0aGUgYHB1cmVgIHZlcnNpb25cbiAgb3B0aW9ucy5mb3JjZWQgICAgICAgICAtIGV4cG9ydCBldmVuIGlmIHRoZSBuYXRpdmUgZmVhdHVyZSBpcyBhdmFpbGFibGVcbiAgb3B0aW9ucy5iaW5kICAgICAgICAgICAtIGJpbmQgbWV0aG9kcyB0byB0aGUgdGFyZ2V0LCByZXF1aXJlZCBmb3IgdGhlIGBwdXJlYCB2ZXJzaW9uXG4gIG9wdGlvbnMud3JhcCAgICAgICAgICAgLSB3cmFwIGNvbnN0cnVjdG9ycyB0byBwcmV2ZW50aW5nIGdsb2JhbCBwb2xsdXRpb24sIHJlcXVpcmVkIGZvciB0aGUgYHB1cmVgIHZlcnNpb25cbiAgb3B0aW9ucy51bnNhZmUgICAgICAgICAtIHVzZSB0aGUgc2ltcGxlIGFzc2lnbm1lbnQgb2YgcHJvcGVydHkgaW5zdGVhZCBvZiBkZWxldGUgKyBkZWZpbmVQcm9wZXJ0eVxuICBvcHRpb25zLnNoYW0gICAgICAgICAgIC0gYWRkIGEgZmxhZyB0byBub3QgY29tcGxldGVseSBmdWxsIHBvbHlmaWxsc1xuICBvcHRpb25zLmVudW1lcmFibGUgICAgIC0gZXhwb3J0IGFzIGVudW1lcmFibGUgcHJvcGVydHlcbiAgb3B0aW9ucy5kb250Q2FsbEdldFNldCAtIHByZXZlbnQgY2FsbGluZyBhIGdldHRlciBvbiB0YXJnZXRcbiAgb3B0aW9ucy5uYW1lICAgICAgICAgICAtIHRoZSAubmFtZSBvZiB0aGUgZnVuY3Rpb24gaWYgaXQgZG9lcyBub3QgbWF0Y2ggdGhlIGtleVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNvdXJjZSkge1xuICB2YXIgVEFSR0VUID0gb3B0aW9ucy50YXJnZXQ7XG4gIHZhciBHTE9CQUwgPSBvcHRpb25zLmdsb2JhbDtcbiAgdmFyIFNUQVRJQyA9IG9wdGlvbnMuc3RhdDtcbiAgdmFyIEZPUkNFRCwgdGFyZ2V0LCBrZXksIHRhcmdldFByb3BlcnR5LCBzb3VyY2VQcm9wZXJ0eSwgZGVzY3JpcHRvcjtcbiAgaWYgKEdMT0JBTCkge1xuICAgIHRhcmdldCA9IGdsb2JhbDtcbiAgfSBlbHNlIGlmIChTVEFUSUMpIHtcbiAgICB0YXJnZXQgPSBnbG9iYWxbVEFSR0VUXSB8fCBkZWZpbmVHbG9iYWxQcm9wZXJ0eShUQVJHRVQsIHt9KTtcbiAgfSBlbHNlIHtcbiAgICB0YXJnZXQgPSAoZ2xvYmFsW1RBUkdFVF0gfHwge30pLnByb3RvdHlwZTtcbiAgfVxuICBpZiAodGFyZ2V0KSBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICBzb3VyY2VQcm9wZXJ0eSA9IHNvdXJjZVtrZXldO1xuICAgIGlmIChvcHRpb25zLmRvbnRDYWxsR2V0U2V0KSB7XG4gICAgICBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KTtcbiAgICAgIHRhcmdldFByb3BlcnR5ID0gZGVzY3JpcHRvciAmJiBkZXNjcmlwdG9yLnZhbHVlO1xuICAgIH0gZWxzZSB0YXJnZXRQcm9wZXJ0eSA9IHRhcmdldFtrZXldO1xuICAgIEZPUkNFRCA9IGlzRm9yY2VkKEdMT0JBTCA/IGtleSA6IFRBUkdFVCArIChTVEFUSUMgPyAnLicgOiAnIycpICsga2V5LCBvcHRpb25zLmZvcmNlZCk7XG4gICAgLy8gY29udGFpbmVkIGluIHRhcmdldFxuICAgIGlmICghRk9SQ0VEICYmIHRhcmdldFByb3BlcnR5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmICh0eXBlb2Ygc291cmNlUHJvcGVydHkgPT0gdHlwZW9mIHRhcmdldFByb3BlcnR5KSBjb250aW51ZTtcbiAgICAgIGNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMoc291cmNlUHJvcGVydHksIHRhcmdldFByb3BlcnR5KTtcbiAgICB9XG4gICAgLy8gYWRkIGEgZmxhZyB0byBub3QgY29tcGxldGVseSBmdWxsIHBvbHlmaWxsc1xuICAgIGlmIChvcHRpb25zLnNoYW0gfHwgKHRhcmdldFByb3BlcnR5ICYmIHRhcmdldFByb3BlcnR5LnNoYW0pKSB7XG4gICAgICBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkoc291cmNlUHJvcGVydHksICdzaGFtJywgdHJ1ZSk7XG4gICAgfVxuICAgIGRlZmluZUJ1aWx0SW4odGFyZ2V0LCBrZXksIHNvdXJjZVByb3BlcnR5LCBvcHRpb25zKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWNsYXVzZScpO1xudmFyIGFDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hLWNhbGxhYmxlJyk7XG52YXIgTkFUSVZFX0JJTkQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1uYXRpdmUnKTtcblxudmFyIGJpbmQgPSB1bmN1cnJ5VGhpcyh1bmN1cnJ5VGhpcy5iaW5kKTtcblxuLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCkge1xuICBhQ2FsbGFibGUoZm4pO1xuICByZXR1cm4gdGhhdCA9PT0gdW5kZWZpbmVkID8gZm4gOiBOQVRJVkVfQklORCA/IGJpbmQoZm4sIHRoYXQpIDogZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tZnVuY3Rpb24tcHJvdG90eXBlLWJpbmQgLS0gc2FmZVxuICB2YXIgdGVzdCA9IChmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0pLmJpbmQoKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGlucyAtLSBzYWZlXG4gIHJldHVybiB0eXBlb2YgdGVzdCAhPSAnZnVuY3Rpb24nIHx8IHRlc3QuaGFzT3duUHJvcGVydHkoJ3Byb3RvdHlwZScpO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTkFUSVZFX0JJTkQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1uYXRpdmUnKTtcblxudmFyIGNhbGwgPSBGdW5jdGlvbi5wcm90b3R5cGUuY2FsbDtcblxubW9kdWxlLmV4cG9ydHMgPSBOQVRJVkVfQklORCA/IGNhbGwuYmluZChjYWxsKSA6IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGNhbGwuYXBwbHkoY2FsbCwgYXJndW1lbnRzKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xuXG52YXIgRnVuY3Rpb25Qcm90b3R5cGUgPSBGdW5jdGlvbi5wcm90b3R5cGU7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgZ2V0RGVzY3JpcHRvciA9IERFU0NSSVBUT1JTICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbnZhciBFWElTVFMgPSBoYXNPd24oRnVuY3Rpb25Qcm90b3R5cGUsICduYW1lJyk7XG4vLyBhZGRpdGlvbmFsIHByb3RlY3Rpb24gZnJvbSBtaW5pZmllZCAvIG1hbmdsZWQgLyBkcm9wcGVkIGZ1bmN0aW9uIG5hbWVzXG52YXIgUFJPUEVSID0gRVhJU1RTICYmIChmdW5jdGlvbiBzb21ldGhpbmcoKSB7IC8qIGVtcHR5ICovIH0pLm5hbWUgPT09ICdzb21ldGhpbmcnO1xudmFyIENPTkZJR1VSQUJMRSA9IEVYSVNUUyAmJiAoIURFU0NSSVBUT1JTIHx8IChERVNDUklQVE9SUyAmJiBnZXREZXNjcmlwdG9yKEZ1bmN0aW9uUHJvdG90eXBlLCAnbmFtZScpLmNvbmZpZ3VyYWJsZSkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgRVhJU1RTOiBFWElTVFMsXG4gIFBST1BFUjogUFJPUEVSLFxuICBDT05GSUdVUkFCTEU6IENPTkZJR1VSQUJMRVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjbGFzc29mUmF3ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuKSB7XG4gIC8vIE5hc2hvcm4gYnVnOlxuICAvLyAgIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xMTI4XG4gIC8vICAgaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzExMzBcbiAgaWYgKGNsYXNzb2ZSYXcoZm4pID09PSAnRnVuY3Rpb24nKSByZXR1cm4gdW5jdXJyeVRoaXMoZm4pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBOQVRJVkVfQklORCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLW5hdGl2ZScpO1xuXG52YXIgRnVuY3Rpb25Qcm90b3R5cGUgPSBGdW5jdGlvbi5wcm90b3R5cGU7XG52YXIgY2FsbCA9IEZ1bmN0aW9uUHJvdG90eXBlLmNhbGw7XG52YXIgdW5jdXJyeVRoaXNXaXRoQmluZCA9IE5BVElWRV9CSU5EICYmIEZ1bmN0aW9uUHJvdG90eXBlLmJpbmQuYmluZChjYWxsLCBjYWxsKTtcblxubW9kdWxlLmV4cG9ydHMgPSBOQVRJVkVfQklORCA/IHVuY3VycnlUaGlzV2l0aEJpbmQgOiBmdW5jdGlvbiAoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY2FsbC5hcHBseShmbiwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcblxudmFyIGFGdW5jdGlvbiA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gaXNDYWxsYWJsZShhcmd1bWVudCkgPyBhcmd1bWVudCA6IHVuZGVmaW5lZDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWVzcGFjZSwgbWV0aG9kKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IGFGdW5jdGlvbihnbG9iYWxbbmFtZXNwYWNlXSkgOiBnbG9iYWxbbmFtZXNwYWNlXSAmJiBnbG9iYWxbbmFtZXNwYWNlXVttZXRob2RdO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYS1jYWxsYWJsZScpO1xudmFyIGlzTnVsbE9yVW5kZWZpbmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW51bGwtb3ItdW5kZWZpbmVkJyk7XG5cbi8vIGBHZXRNZXRob2RgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1nZXRtZXRob2Rcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFYsIFApIHtcbiAgdmFyIGZ1bmMgPSBWW1BdO1xuICByZXR1cm4gaXNOdWxsT3JVbmRlZmluZWQoZnVuYykgPyB1bmRlZmluZWQgOiBhQ2FsbGFibGUoZnVuYyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNoZWNrID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCAmJiBpdC5NYXRoID09PSBNYXRoICYmIGl0O1xufTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbm1vZHVsZS5leHBvcnRzID1cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLWdsb2JhbC10aGlzIC0tIHNhZmVcbiAgY2hlY2sodHlwZW9mIGdsb2JhbFRoaXMgPT0gJ29iamVjdCcgJiYgZ2xvYmFsVGhpcykgfHxcbiAgY2hlY2sodHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cpIHx8XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWdsb2JhbHMgLS0gc2FmZVxuICBjaGVjayh0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmKSB8fFxuICBjaGVjayh0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCkgfHxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jIC0tIGZhbGxiYWNrXG4gIChmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSgpIHx8IHRoaXMgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcblxudmFyIGhhc093blByb3BlcnR5ID0gdW5jdXJyeVRoaXMoe30uaGFzT3duUHJvcGVydHkpO1xuXG4vLyBgSGFzT3duUHJvcGVydHlgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1oYXNvd25wcm9wZXJ0eVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1oYXNvd24gLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuaGFzT3duIHx8IGZ1bmN0aW9uIGhhc093bihpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eSh0b09iamVjdChpdCksIGtleSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEJ1aWx0SW4oJ2RvY3VtZW50JywgJ2RvY3VtZW50RWxlbWVudCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBjcmVhdGVFbGVtZW50ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvY3VtZW50LWNyZWF0ZS1lbGVtZW50Jyk7XG5cbi8vIFRoYW5rcyB0byBJRTggZm9yIGl0cyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhREVTQ1JJUFRPUlMgJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGNyZWF0ZUVsZW1lbnQoJ2RpdicpLCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH1cbiAgfSkuYSAhPT0gNztcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xuXG52YXIgJE9iamVjdCA9IE9iamVjdDtcbnZhciBzcGxpdCA9IHVuY3VycnlUaGlzKCcnLnNwbGl0KTtcblxuLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3Ncbm1vZHVsZS5leHBvcnRzID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyB0aHJvd3MgYW4gZXJyb3IgaW4gcmhpbm8sIHNlZSBodHRwczovL2dpdGh1Yi5jb20vbW96aWxsYS9yaGluby9pc3N1ZXMvMzQ2XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnMgLS0gc2FmZVxuICByZXR1cm4gISRPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKTtcbn0pID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjbGFzc29mKGl0KSA9PT0gJ1N0cmluZycgPyBzcGxpdChpdCwgJycpIDogJE9iamVjdChpdCk7XG59IDogJE9iamVjdDtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgc3RvcmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlJyk7XG5cbnZhciBmdW5jdGlvblRvU3RyaW5nID0gdW5jdXJyeVRoaXMoRnVuY3Rpb24udG9TdHJpbmcpO1xuXG4vLyB0aGlzIGhlbHBlciBicm9rZW4gaW4gYGNvcmUtanNAMy40LjEtMy40LjRgLCBzbyB3ZSBjYW4ndCB1c2UgYHNoYXJlZGAgaGVscGVyXG5pZiAoIWlzQ2FsbGFibGUoc3RvcmUuaW5zcGVjdFNvdXJjZSkpIHtcbiAgc3RvcmUuaW5zcGVjdFNvdXJjZSA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBmdW5jdGlvblRvU3RyaW5nKGl0KTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdG9yZS5pbnNwZWN0U291cmNlO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIE5BVElWRV9XRUFLX01BUCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWFrLW1hcC1iYXNpYy1kZXRlY3Rpb24nKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZScpO1xudmFyIHNoYXJlZEtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQta2V5Jyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xuXG52YXIgT0JKRUNUX0FMUkVBRFlfSU5JVElBTElaRUQgPSAnT2JqZWN0IGFscmVhZHkgaW5pdGlhbGl6ZWQnO1xudmFyIFR5cGVFcnJvciA9IGdsb2JhbC5UeXBlRXJyb3I7XG52YXIgV2Vha01hcCA9IGdsb2JhbC5XZWFrTWFwO1xudmFyIHNldCwgZ2V0LCBoYXM7XG5cbnZhciBlbmZvcmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBoYXMoaXQpID8gZ2V0KGl0KSA6IHNldChpdCwge30pO1xufTtcblxudmFyIGdldHRlckZvciA9IGZ1bmN0aW9uIChUWVBFKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaXQpIHtcbiAgICB2YXIgc3RhdGU7XG4gICAgaWYgKCFpc09iamVjdChpdCkgfHwgKHN0YXRlID0gZ2V0KGl0KSkudHlwZSAhPT0gVFlQRSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW5jb21wYXRpYmxlIHJlY2VpdmVyLCAnICsgVFlQRSArICcgcmVxdWlyZWQnKTtcbiAgICB9IHJldHVybiBzdGF0ZTtcbiAgfTtcbn07XG5cbmlmIChOQVRJVkVfV0VBS19NQVAgfHwgc2hhcmVkLnN0YXRlKSB7XG4gIHZhciBzdG9yZSA9IHNoYXJlZC5zdGF0ZSB8fCAoc2hhcmVkLnN0YXRlID0gbmV3IFdlYWtNYXAoKSk7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLXNlbGYtYXNzaWduIC0tIHByb3RvdHlwZSBtZXRob2RzIHByb3RlY3Rpb24gKi9cbiAgc3RvcmUuZ2V0ID0gc3RvcmUuZ2V0O1xuICBzdG9yZS5oYXMgPSBzdG9yZS5oYXM7XG4gIHN0b3JlLnNldCA9IHN0b3JlLnNldDtcbiAgLyogZXNsaW50LWVuYWJsZSBuby1zZWxmLWFzc2lnbiAtLSBwcm90b3R5cGUgbWV0aG9kcyBwcm90ZWN0aW9uICovXG4gIHNldCA9IGZ1bmN0aW9uIChpdCwgbWV0YWRhdGEpIHtcbiAgICBpZiAoc3RvcmUuaGFzKGl0KSkgdGhyb3cgbmV3IFR5cGVFcnJvcihPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCk7XG4gICAgbWV0YWRhdGEuZmFjYWRlID0gaXQ7XG4gICAgc3RvcmUuc2V0KGl0LCBtZXRhZGF0YSk7XG4gICAgcmV0dXJuIG1ldGFkYXRhO1xuICB9O1xuICBnZXQgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gc3RvcmUuZ2V0KGl0KSB8fCB7fTtcbiAgfTtcbiAgaGFzID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIHN0b3JlLmhhcyhpdCk7XG4gIH07XG59IGVsc2Uge1xuICB2YXIgU1RBVEUgPSBzaGFyZWRLZXkoJ3N0YXRlJyk7XG4gIGhpZGRlbktleXNbU1RBVEVdID0gdHJ1ZTtcbiAgc2V0ID0gZnVuY3Rpb24gKGl0LCBtZXRhZGF0YSkge1xuICAgIGlmIChoYXNPd24oaXQsIFNUQVRFKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCk7XG4gICAgbWV0YWRhdGEuZmFjYWRlID0gaXQ7XG4gICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KGl0LCBTVEFURSwgbWV0YWRhdGEpO1xuICAgIHJldHVybiBtZXRhZGF0YTtcbiAgfTtcbiAgZ2V0ID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIGhhc093bihpdCwgU1RBVEUpID8gaXRbU1RBVEVdIDoge307XG4gIH07XG4gIGhhcyA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBoYXNPd24oaXQsIFNUQVRFKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogc2V0LFxuICBnZXQ6IGdldCxcbiAgaGFzOiBoYXMsXG4gIGVuZm9yY2U6IGVuZm9yY2UsXG4gIGdldHRlckZvcjogZ2V0dGVyRm9yXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcblxuLy8gYElzQXJyYXlgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1pc2FycmF5XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tYXJyYXktaXNhcnJheSAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmd1bWVudCkge1xuICByZXR1cm4gY2xhc3NvZihhcmd1bWVudCkgPT09ICdBcnJheSc7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRkb2N1bWVudEFsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kb2N1bWVudC1hbGwnKTtcblxudmFyIGRvY3VtZW50QWxsID0gJGRvY3VtZW50QWxsLmFsbDtcblxuLy8gYElzQ2FsbGFibGVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1pc2NhbGxhYmxlXG5tb2R1bGUuZXhwb3J0cyA9ICRkb2N1bWVudEFsbC5JU19IVE1MRERBID8gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiB0eXBlb2YgYXJndW1lbnQgPT0gJ2Z1bmN0aW9uJyB8fCBhcmd1bWVudCA9PT0gZG9jdW1lbnRBbGw7XG59IDogZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiB0eXBlb2YgYXJndW1lbnQgPT0gJ2Z1bmN0aW9uJztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mJyk7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcbnZhciBpbnNwZWN0U291cmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlJyk7XG5cbnZhciBub29wID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIGVtcHR5ID0gW107XG52YXIgY29uc3RydWN0ID0gZ2V0QnVpbHRJbignUmVmbGVjdCcsICdjb25zdHJ1Y3QnKTtcbnZhciBjb25zdHJ1Y3RvclJlZ0V4cCA9IC9eXFxzKig/OmNsYXNzfGZ1bmN0aW9uKVxcYi87XG52YXIgZXhlYyA9IHVuY3VycnlUaGlzKGNvbnN0cnVjdG9yUmVnRXhwLmV4ZWMpO1xudmFyIElOQ09SUkVDVF9UT19TVFJJTkcgPSAhY29uc3RydWN0b3JSZWdFeHAudGVzdChub29wKTtcblxudmFyIGlzQ29uc3RydWN0b3JNb2Rlcm4gPSBmdW5jdGlvbiBpc0NvbnN0cnVjdG9yKGFyZ3VtZW50KSB7XG4gIGlmICghaXNDYWxsYWJsZShhcmd1bWVudCkpIHJldHVybiBmYWxzZTtcbiAgdHJ5IHtcbiAgICBjb25zdHJ1Y3Qobm9vcCwgZW1wdHksIGFyZ3VtZW50KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbnZhciBpc0NvbnN0cnVjdG9yTGVnYWN5ID0gZnVuY3Rpb24gaXNDb25zdHJ1Y3Rvcihhcmd1bWVudCkge1xuICBpZiAoIWlzQ2FsbGFibGUoYXJndW1lbnQpKSByZXR1cm4gZmFsc2U7XG4gIHN3aXRjaCAoY2xhc3NvZihhcmd1bWVudCkpIHtcbiAgICBjYXNlICdBc3luY0Z1bmN0aW9uJzpcbiAgICBjYXNlICdHZW5lcmF0b3JGdW5jdGlvbic6XG4gICAgY2FzZSAnQXN5bmNHZW5lcmF0b3JGdW5jdGlvbic6IHJldHVybiBmYWxzZTtcbiAgfVxuICB0cnkge1xuICAgIC8vIHdlIGNhbid0IGNoZWNrIC5wcm90b3R5cGUgc2luY2UgY29uc3RydWN0b3JzIHByb2R1Y2VkIGJ5IC5iaW5kIGhhdmVuJ3QgaXRcbiAgICAvLyBgRnVuY3Rpb24jdG9TdHJpbmdgIHRocm93cyBvbiBzb21lIGJ1aWx0LWl0IGZ1bmN0aW9uIGluIHNvbWUgbGVnYWN5IGVuZ2luZXNcbiAgICAvLyAoZm9yIGV4YW1wbGUsIGBET01RdWFkYCBhbmQgc2ltaWxhciBpbiBGRjQxLSlcbiAgICByZXR1cm4gSU5DT1JSRUNUX1RPX1NUUklORyB8fCAhIWV4ZWMoY29uc3RydWN0b3JSZWdFeHAsIGluc3BlY3RTb3VyY2UoYXJndW1lbnQpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcblxuaXNDb25zdHJ1Y3RvckxlZ2FjeS5zaGFtID0gdHJ1ZTtcblxuLy8gYElzQ29uc3RydWN0b3JgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1pc2NvbnN0cnVjdG9yXG5tb2R1bGUuZXhwb3J0cyA9ICFjb25zdHJ1Y3QgfHwgZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgY2FsbGVkO1xuICByZXR1cm4gaXNDb25zdHJ1Y3Rvck1vZGVybihpc0NvbnN0cnVjdG9yTW9kZXJuLmNhbGwpXG4gICAgfHwgIWlzQ29uc3RydWN0b3JNb2Rlcm4oT2JqZWN0KVxuICAgIHx8ICFpc0NvbnN0cnVjdG9yTW9kZXJuKGZ1bmN0aW9uICgpIHsgY2FsbGVkID0gdHJ1ZTsgfSlcbiAgICB8fCBjYWxsZWQ7XG59KSA/IGlzQ29uc3RydWN0b3JMZWdhY3kgOiBpc0NvbnN0cnVjdG9yTW9kZXJuO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xuXG52YXIgcmVwbGFjZW1lbnQgPSAvI3xcXC5wcm90b3R5cGVcXC4vO1xuXG52YXIgaXNGb3JjZWQgPSBmdW5jdGlvbiAoZmVhdHVyZSwgZGV0ZWN0aW9uKSB7XG4gIHZhciB2YWx1ZSA9IGRhdGFbbm9ybWFsaXplKGZlYXR1cmUpXTtcbiAgcmV0dXJuIHZhbHVlID09PSBQT0xZRklMTCA/IHRydWVcbiAgICA6IHZhbHVlID09PSBOQVRJVkUgPyBmYWxzZVxuICAgIDogaXNDYWxsYWJsZShkZXRlY3Rpb24pID8gZmFpbHMoZGV0ZWN0aW9uKVxuICAgIDogISFkZXRlY3Rpb247XG59O1xuXG52YXIgbm9ybWFsaXplID0gaXNGb3JjZWQubm9ybWFsaXplID0gZnVuY3Rpb24gKHN0cmluZykge1xuICByZXR1cm4gU3RyaW5nKHN0cmluZykucmVwbGFjZShyZXBsYWNlbWVudCwgJy4nKS50b0xvd2VyQ2FzZSgpO1xufTtcblxudmFyIGRhdGEgPSBpc0ZvcmNlZC5kYXRhID0ge307XG52YXIgTkFUSVZFID0gaXNGb3JjZWQuTkFUSVZFID0gJ04nO1xudmFyIFBPTFlGSUxMID0gaXNGb3JjZWQuUE9MWUZJTEwgPSAnUCc7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNGb3JjZWQ7XG4iLCIndXNlIHN0cmljdCc7XG4vLyB3ZSBjYW4ndCB1c2UganVzdCBgaXQgPT0gbnVsbGAgc2luY2Ugb2YgYGRvY3VtZW50LmFsbGAgc3BlY2lhbCBjYXNlXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLUlzSFRNTEREQS1pbnRlcm5hbC1zbG90LWFlY1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID09PSBudWxsIHx8IGl0ID09PSB1bmRlZmluZWQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciAkZG9jdW1lbnRBbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9jdW1lbnQtYWxsJyk7XG5cbnZhciBkb2N1bWVudEFsbCA9ICRkb2N1bWVudEFsbC5hbGw7XG5cbm1vZHVsZS5leHBvcnRzID0gJGRvY3VtZW50QWxsLklTX0hUTUxEREEgPyBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogaXNDYWxsYWJsZShpdCkgfHwgaXQgPT09IGRvY3VtZW50QWxsO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiBpc0NhbGxhYmxlKGl0KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZhbHNlO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGlzUHJvdG90eXBlT2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWlzLXByb3RvdHlwZS1vZicpO1xudmFyIFVTRV9TWU1CT0xfQVNfVUlEID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3VzZS1zeW1ib2wtYXMtdWlkJyk7XG5cbnZhciAkT2JqZWN0ID0gT2JqZWN0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVTRV9TWU1CT0xfQVNfVUlEID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7XG59IDogZnVuY3Rpb24gKGl0KSB7XG4gIHZhciAkU3ltYm9sID0gZ2V0QnVpbHRJbignU3ltYm9sJyk7XG4gIHJldHVybiBpc0NhbGxhYmxlKCRTeW1ib2wpICYmIGlzUHJvdG90eXBlT2YoJFN5bWJvbC5wcm90b3R5cGUsICRPYmplY3QoaXQpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG5cbi8vIGBMZW5ndGhPZkFycmF5TGlrZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWxlbmd0aG9mYXJyYXlsaWtlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIHRvTGVuZ3RoKG9iai5sZW5ndGgpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgQ09ORklHVVJBQkxFX0ZVTkNUSU9OX05BTUUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tbmFtZScpLkNPTkZJR1VSQUJMRTtcbnZhciBpbnNwZWN0U291cmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlJyk7XG52YXIgSW50ZXJuYWxTdGF0ZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZScpO1xuXG52YXIgZW5mb3JjZUludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmVuZm9yY2U7XG52YXIgZ2V0SW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuZ2V0O1xudmFyICRTdHJpbmcgPSBTdHJpbmc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHNhZmVcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBzdHJpbmdTbGljZSA9IHVuY3VycnlUaGlzKCcnLnNsaWNlKTtcbnZhciByZXBsYWNlID0gdW5jdXJyeVRoaXMoJycucmVwbGFjZSk7XG52YXIgam9pbiA9IHVuY3VycnlUaGlzKFtdLmpvaW4pO1xuXG52YXIgQ09ORklHVVJBQkxFX0xFTkdUSCA9IERFU0NSSVBUT1JTICYmICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBkZWZpbmVQcm9wZXJ0eShmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0sICdsZW5ndGgnLCB7IHZhbHVlOiA4IH0pLmxlbmd0aCAhPT0gODtcbn0pO1xuXG52YXIgVEVNUExBVEUgPSBTdHJpbmcoU3RyaW5nKS5zcGxpdCgnU3RyaW5nJyk7XG5cbnZhciBtYWtlQnVpbHRJbiA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlLCBuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChzdHJpbmdTbGljZSgkU3RyaW5nKG5hbWUpLCAwLCA3KSA9PT0gJ1N5bWJvbCgnKSB7XG4gICAgbmFtZSA9ICdbJyArIHJlcGxhY2UoJFN0cmluZyhuYW1lKSwgL15TeW1ib2xcXCgoW14pXSopXFwpLywgJyQxJykgKyAnXSc7XG4gIH1cbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5nZXR0ZXIpIG5hbWUgPSAnZ2V0ICcgKyBuYW1lO1xuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLnNldHRlcikgbmFtZSA9ICdzZXQgJyArIG5hbWU7XG4gIGlmICghaGFzT3duKHZhbHVlLCAnbmFtZScpIHx8IChDT05GSUdVUkFCTEVfRlVOQ1RJT05fTkFNRSAmJiB2YWx1ZS5uYW1lICE9PSBuYW1lKSkge1xuICAgIGlmIChERVNDUklQVE9SUykgZGVmaW5lUHJvcGVydHkodmFsdWUsICduYW1lJywgeyB2YWx1ZTogbmFtZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pO1xuICAgIGVsc2UgdmFsdWUubmFtZSA9IG5hbWU7XG4gIH1cbiAgaWYgKENPTkZJR1VSQUJMRV9MRU5HVEggJiYgb3B0aW9ucyAmJiBoYXNPd24ob3B0aW9ucywgJ2FyaXR5JykgJiYgdmFsdWUubGVuZ3RoICE9PSBvcHRpb25zLmFyaXR5KSB7XG4gICAgZGVmaW5lUHJvcGVydHkodmFsdWUsICdsZW5ndGgnLCB7IHZhbHVlOiBvcHRpb25zLmFyaXR5IH0pO1xuICB9XG4gIHRyeSB7XG4gICAgaWYgKG9wdGlvbnMgJiYgaGFzT3duKG9wdGlvbnMsICdjb25zdHJ1Y3RvcicpICYmIG9wdGlvbnMuY29uc3RydWN0b3IpIHtcbiAgICAgIGlmIChERVNDUklQVE9SUykgZGVmaW5lUHJvcGVydHkodmFsdWUsICdwcm90b3R5cGUnLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTtcbiAgICAvLyBpbiBWOCB+IENocm9tZSA1MywgcHJvdG90eXBlcyBvZiBzb21lIG1ldGhvZHMsIGxpa2UgYEFycmF5LnByb3RvdHlwZS52YWx1ZXNgLCBhcmUgbm9uLXdyaXRhYmxlXG4gICAgfSBlbHNlIGlmICh2YWx1ZS5wcm90b3R5cGUpIHZhbHVlLnByb3RvdHlwZSA9IHVuZGVmaW5lZDtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICB2YXIgc3RhdGUgPSBlbmZvcmNlSW50ZXJuYWxTdGF0ZSh2YWx1ZSk7XG4gIGlmICghaGFzT3duKHN0YXRlLCAnc291cmNlJykpIHtcbiAgICBzdGF0ZS5zb3VyY2UgPSBqb2luKFRFTVBMQVRFLCB0eXBlb2YgbmFtZSA9PSAnc3RyaW5nJyA/IG5hbWUgOiAnJyk7XG4gIH0gcmV0dXJuIHZhbHVlO1xufTtcblxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZXh0ZW5kLW5hdGl2ZSAtLSByZXF1aXJlZFxuRnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nID0gbWFrZUJ1aWx0SW4oZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiBpc0NhbGxhYmxlKHRoaXMpICYmIGdldEludGVybmFsU3RhdGUodGhpcykuc291cmNlIHx8IGluc3BlY3RTb3VyY2UodGhpcyk7XG59LCAndG9TdHJpbmcnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcblxuLy8gYE1hdGgudHJ1bmNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1tYXRoLnRydW5jXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tbWF0aC10cnVuYyAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGgudHJ1bmMgfHwgZnVuY3Rpb24gdHJ1bmMoeCkge1xuICB2YXIgbiA9ICt4O1xuICByZXR1cm4gKG4gPiAwID8gZmxvb3IgOiBjZWlsKShuKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9scycpO1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWFzc2lnbiAtLSBzYWZlXG52YXIgJGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgY29uY2F0ID0gdW5jdXJyeVRoaXMoW10uY29uY2F0KTtcblxuLy8gYE9iamVjdC5hc3NpZ25gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuYXNzaWduXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gc2hvdWxkIGhhdmUgY29ycmVjdCBvcmRlciBvZiBvcGVyYXRpb25zIChFZGdlIGJ1ZylcbiAgaWYgKERFU0NSSVBUT1JTICYmICRhc3NpZ24oeyBiOiAxIH0sICRhc3NpZ24oZGVmaW5lUHJvcGVydHkoe30sICdhJywge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICBkZWZpbmVQcm9wZXJ0eSh0aGlzLCAnYicsIHtcbiAgICAgICAgdmFsdWU6IDMsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH0pLCB7IGI6IDIgfSkpLmIgIT09IDEpIHJldHVybiB0cnVlO1xuICAvLyBzaG91bGQgd29yayB3aXRoIHN5bWJvbHMgYW5kIHNob3VsZCBoYXZlIGRldGVybWluaXN0aWMgcHJvcGVydHkgb3JkZXIgKFY4IGJ1ZylcbiAgdmFyIEEgPSB7fTtcbiAgdmFyIEIgPSB7fTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLXN5bWJvbCAtLSBzYWZlXG4gIHZhciBzeW1ib2wgPSBTeW1ib2woJ2Fzc2lnbiBkZXRlY3Rpb24nKTtcbiAgdmFyIGFscGhhYmV0ID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0JztcbiAgQVtzeW1ib2xdID0gNztcbiAgYWxwaGFiZXQuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGNocikgeyBCW2Nocl0gPSBjaHI7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbc3ltYm9sXSAhPT0gNyB8fCBvYmplY3RLZXlzKCRhc3NpZ24oe30sIEIpKS5qb2luKCcnKSAhPT0gYWxwaGFiZXQ7XG59KSA/IGZ1bmN0aW9uIGFzc2lnbih0YXJnZXQsIHNvdXJjZSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzIC0tIHJlcXVpcmVkIGZvciBgLmxlbmd0aGBcbiAgdmFyIFQgPSB0b09iamVjdCh0YXJnZXQpO1xuICB2YXIgYXJndW1lbnRzTGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMTtcbiAgdmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZS5mO1xuICB2YXIgcHJvcGVydHlJc0VudW1lcmFibGUgPSBwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZS5mO1xuICB3aGlsZSAoYXJndW1lbnRzTGVuZ3RoID4gaW5kZXgpIHtcbiAgICB2YXIgUyA9IEluZGV4ZWRPYmplY3QoYXJndW1lbnRzW2luZGV4KytdKTtcbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5U3ltYm9scyA/IGNvbmNhdChvYmplY3RLZXlzKFMpLCBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoUykpIDogb2JqZWN0S2V5cyhTKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGogPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGopIHtcbiAgICAgIGtleSA9IGtleXNbaisrXTtcbiAgICAgIGlmICghREVTQ1JJUFRPUlMgfHwgY2FsbChwcm9wZXJ0eUlzRW51bWVyYWJsZSwgUywga2V5KSkgVFtrZXldID0gU1trZXldO1xuICAgIH1cbiAgfSByZXR1cm4gVDtcbn0gOiAkYXNzaWduO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLyogZ2xvYmFsIEFjdGl2ZVhPYmplY3QgLS0gb2xkIElFLCBXU0ggKi9cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciBkZWZpbmVQcm9wZXJ0aWVzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydGllcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VudW0tYnVnLWtleXMnKTtcbnZhciBoaWRkZW5LZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hpZGRlbi1rZXlzJyk7XG52YXIgaHRtbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9odG1sJyk7XG52YXIgZG9jdW1lbnRDcmVhdGVFbGVtZW50ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvY3VtZW50LWNyZWF0ZS1lbGVtZW50Jyk7XG52YXIgc2hhcmVkS2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1rZXknKTtcblxudmFyIEdUID0gJz4nO1xudmFyIExUID0gJzwnO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xudmFyIFNDUklQVCA9ICdzY3JpcHQnO1xudmFyIElFX1BST1RPID0gc2hhcmVkS2V5KCdJRV9QUk9UTycpO1xuXG52YXIgRW1wdHlDb25zdHJ1Y3RvciA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcblxudmFyIHNjcmlwdFRhZyA9IGZ1bmN0aW9uIChjb250ZW50KSB7XG4gIHJldHVybiBMVCArIFNDUklQVCArIEdUICsgY29udGVudCArIExUICsgJy8nICsgU0NSSVBUICsgR1Q7XG59O1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgQWN0aXZlWCBPYmplY3Qgd2l0aCBjbGVhcmVkIHByb3RvdHlwZVxudmFyIE51bGxQcm90b09iamVjdFZpYUFjdGl2ZVggPSBmdW5jdGlvbiAoYWN0aXZlWERvY3VtZW50KSB7XG4gIGFjdGl2ZVhEb2N1bWVudC53cml0ZShzY3JpcHRUYWcoJycpKTtcbiAgYWN0aXZlWERvY3VtZW50LmNsb3NlKCk7XG4gIHZhciB0ZW1wID0gYWN0aXZlWERvY3VtZW50LnBhcmVudFdpbmRvdy5PYmplY3Q7XG4gIGFjdGl2ZVhEb2N1bWVudCA9IG51bGw7IC8vIGF2b2lkIG1lbW9yeSBsZWFrXG4gIHJldHVybiB0ZW1wO1xufTtcblxuLy8gQ3JlYXRlIG9iamVjdCB3aXRoIGZha2UgYG51bGxgIHByb3RvdHlwZTogdXNlIGlmcmFtZSBPYmplY3Qgd2l0aCBjbGVhcmVkIHByb3RvdHlwZVxudmFyIE51bGxQcm90b09iamVjdFZpYUlGcmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IGRvY3VtZW50Q3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gIHZhciBKUyA9ICdqYXZhJyArIFNDUklQVCArICc6JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgaHRtbC5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvNDc1XG4gIGlmcmFtZS5zcmMgPSBTdHJpbmcoSlMpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKHNjcmlwdFRhZygnZG9jdW1lbnQuRj1PYmplY3QnKSk7XG4gIGlmcmFtZURvY3VtZW50LmNsb3NlKCk7XG4gIHJldHVybiBpZnJhbWVEb2N1bWVudC5GO1xufTtcblxuLy8gQ2hlY2sgZm9yIGRvY3VtZW50LmRvbWFpbiBhbmQgYWN0aXZlIHggc3VwcG9ydFxuLy8gTm8gbmVlZCB0byB1c2UgYWN0aXZlIHggYXBwcm9hY2ggd2hlbiBkb2N1bWVudC5kb21haW4gaXMgbm90IHNldFxuLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lcy1zaGltcy9lczUtc2hpbS9pc3N1ZXMvMTUwXG4vLyB2YXJpYXRpb24gb2YgaHR0cHM6Ly9naXRodWIuY29tL2tpdGNhbWJyaWRnZS9lczUtc2hpbS9jb21taXQvNGY3MzhhYzA2NjM0NlxuLy8gYXZvaWQgSUUgR0MgYnVnXG52YXIgYWN0aXZlWERvY3VtZW50O1xudmFyIE51bGxQcm90b09iamVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICBhY3RpdmVYRG9jdW1lbnQgPSBuZXcgQWN0aXZlWE9iamVjdCgnaHRtbGZpbGUnKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogaWdub3JlICovIH1cbiAgTnVsbFByb3RvT2JqZWN0ID0gdHlwZW9mIGRvY3VtZW50ICE9ICd1bmRlZmluZWQnXG4gICAgPyBkb2N1bWVudC5kb21haW4gJiYgYWN0aXZlWERvY3VtZW50XG4gICAgICA/IE51bGxQcm90b09iamVjdFZpYUFjdGl2ZVgoYWN0aXZlWERvY3VtZW50KSAvLyBvbGQgSUVcbiAgICAgIDogTnVsbFByb3RvT2JqZWN0VmlhSUZyYW1lKClcbiAgICA6IE51bGxQcm90b09iamVjdFZpYUFjdGl2ZVgoYWN0aXZlWERvY3VtZW50KTsgLy8gV1NIXG4gIHZhciBsZW5ndGggPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHdoaWxlIChsZW5ndGgtLSkgZGVsZXRlIE51bGxQcm90b09iamVjdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2xlbmd0aF1dO1xuICByZXR1cm4gTnVsbFByb3RvT2JqZWN0KCk7XG59O1xuXG5oaWRkZW5LZXlzW0lFX1BST1RPXSA9IHRydWU7XG5cbi8vIGBPYmplY3QuY3JlYXRlYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmNyZWF0ZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1jcmVhdGUgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlDb25zdHJ1Y3RvcltQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5Q29uc3RydWN0b3IoKTtcbiAgICBFbXB0eUNvbnN0cnVjdG9yW1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IE51bGxQcm90b09iamVjdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZGVmaW5lUHJvcGVydGllc01vZHVsZS5mKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgVjhfUFJPVE9UWVBFX0RFRklORV9CVUcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdjgtcHJvdG90eXBlLWRlZmluZS1idWcnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgb2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cycpO1xuXG4vLyBgT2JqZWN0LmRlZmluZVByb3BlcnRpZXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZGVmaW5lcHJvcGVydGllc1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0aWVzIC0tIHNhZmVcbmV4cG9ydHMuZiA9IERFU0NSSVBUT1JTICYmICFWOF9QUk9UT1RZUEVfREVGSU5FX0JVRyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIgcHJvcHMgPSB0b0luZGV4ZWRPYmplY3QoUHJvcGVydGllcyk7XG4gIHZhciBrZXlzID0gb2JqZWN0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIGRlZmluZVByb3BlcnR5TW9kdWxlLmYoTywga2V5ID0ga2V5c1tpbmRleCsrXSwgcHJvcHNba2V5XSk7XG4gIHJldHVybiBPO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2llOC1kb20tZGVmaW5lJyk7XG52YXIgVjhfUFJPVE9UWVBFX0RFRklORV9CVUcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdjgtcHJvdG90eXBlLWRlZmluZS1idWcnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByb3BlcnR5LWtleScpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydHkgLS0gc2FmZVxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yIC0tIHNhZmVcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBFTlVNRVJBQkxFID0gJ2VudW1lcmFibGUnO1xudmFyIENPTkZJR1VSQUJMRSA9ICdjb25maWd1cmFibGUnO1xudmFyIFdSSVRBQkxFID0gJ3dyaXRhYmxlJztcblxuLy8gYE9iamVjdC5kZWZpbmVQcm9wZXJ0eWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5kZWZpbmVwcm9wZXJ0eVxuZXhwb3J0cy5mID0gREVTQ1JJUFRPUlMgPyBWOF9QUk9UT1RZUEVfREVGSU5FX0JVRyA/IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1Byb3BlcnR5S2V5KFApO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKHR5cGVvZiBPID09PSAnZnVuY3Rpb24nICYmIFAgPT09ICdwcm90b3R5cGUnICYmICd2YWx1ZScgaW4gQXR0cmlidXRlcyAmJiBXUklUQUJMRSBpbiBBdHRyaWJ1dGVzICYmICFBdHRyaWJ1dGVzW1dSSVRBQkxFXSkge1xuICAgIHZhciBjdXJyZW50ID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKTtcbiAgICBpZiAoY3VycmVudCAmJiBjdXJyZW50W1dSSVRBQkxFXSkge1xuICAgICAgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gICAgICBBdHRyaWJ1dGVzID0ge1xuICAgICAgICBjb25maWd1cmFibGU6IENPTkZJR1VSQUJMRSBpbiBBdHRyaWJ1dGVzID8gQXR0cmlidXRlc1tDT05GSUdVUkFCTEVdIDogY3VycmVudFtDT05GSUdVUkFCTEVdLFxuICAgICAgICBlbnVtZXJhYmxlOiBFTlVNRVJBQkxFIGluIEF0dHJpYnV0ZXMgPyBBdHRyaWJ1dGVzW0VOVU1FUkFCTEVdIDogY3VycmVudFtFTlVNRVJBQkxFXSxcbiAgICAgICAgd3JpdGFibGU6IGZhbHNlXG4gICAgICB9O1xuICAgIH1cbiAgfSByZXR1cm4gJGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpO1xufSA6ICRkZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1Byb3BlcnR5S2V5KFApO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiAkZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgbmV3ICRUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZScpO1xudmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvUHJvcGVydHlLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tcHJvcGVydHkta2V5Jyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pZTgtZG9tLWRlZmluZScpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbi8vIGBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmdldG93bnByb3BlcnR5ZGVzY3JpcHRvclxuZXhwb3J0cy5mID0gREVTQ1JJUFRPUlMgPyAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgTyA9IHRvSW5kZXhlZE9iamVjdChPKTtcbiAgUCA9IHRvUHJvcGVydHlLZXkoUCk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoaGFzT3duKE8sIFApKSByZXR1cm4gY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKCFjYWxsKHByb3BlcnR5SXNFbnVtZXJhYmxlTW9kdWxlLmYsIE8sIFApLCBPW1BdKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaW50ZXJuYWxPYmplY3RLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW51bS1idWcta2V5cycpO1xuXG52YXIgaGlkZGVuS2V5cyA9IGVudW1CdWdLZXlzLmNvbmNhdCgnbGVuZ3RoJywgJ3Byb3RvdHlwZScpO1xuXG4vLyBgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHluYW1lc1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eW5hbWVzIC0tIHNhZmVcbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICByZXR1cm4gaW50ZXJuYWxPYmplY3RLZXlzKE8sIGhpZGRlbktleXMpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlzeW1ib2xzIC0tIHNhZmVcbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gdW5jdXJyeVRoaXMoe30uaXNQcm90b3R5cGVPZik7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciBpbmRleE9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzJykuaW5kZXhPZjtcbnZhciBoaWRkZW5LZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hpZGRlbi1rZXlzJyk7XG5cbnZhciBwdXNoID0gdW5jdXJyeVRoaXMoW10ucHVzaCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZXMpIHtcbiAgdmFyIE8gPSB0b0luZGV4ZWRPYmplY3Qob2JqZWN0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIE8pICFoYXNPd24oaGlkZGVuS2V5cywga2V5KSAmJiBoYXNPd24oTywga2V5KSAmJiBwdXNoKHJlc3VsdCwga2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhc093bihPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5pbmRleE9mKHJlc3VsdCwga2V5KSB8fCBwdXNoKHJlc3VsdCwga2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpbnRlcm5hbE9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzJyk7XG5cbi8vIGBPYmplY3Qua2V5c2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5rZXlzXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWtleXMgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuIGludGVybmFsT2JqZWN0S2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbi8vIE5hc2hvcm4gfiBKREs4IGJ1Z1xudmFyIE5BU0hPUk5fQlVHID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yICYmICEkcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh7IDE6IDIgfSwgMSk7XG5cbi8vIGBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlYCBtZXRob2QgaW1wbGVtZW50YXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eWlzZW51bWVyYWJsZVxuZXhwb3J0cy5mID0gTkFTSE9STl9CVUcgPyBmdW5jdGlvbiBwcm9wZXJ0eUlzRW51bWVyYWJsZShWKSB7XG4gIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRoaXMsIFYpO1xuICByZXR1cm4gISFkZXNjcmlwdG9yICYmIGRlc2NyaXB0b3IuZW51bWVyYWJsZTtcbn0gOiAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxuLy8gYE9yZGluYXJ5VG9QcmltaXRpdmVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vcmRpbmFyeXRvcHJpbWl0aXZlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbnB1dCwgcHJlZikge1xuICB2YXIgZm4sIHZhbDtcbiAgaWYgKHByZWYgPT09ICdzdHJpbmcnICYmIGlzQ2FsbGFibGUoZm4gPSBpbnB1dC50b1N0cmluZykgJiYgIWlzT2JqZWN0KHZhbCA9IGNhbGwoZm4sIGlucHV0KSkpIHJldHVybiB2YWw7XG4gIGlmIChpc0NhbGxhYmxlKGZuID0gaW5wdXQudmFsdWVPZikgJiYgIWlzT2JqZWN0KHZhbCA9IGNhbGwoZm4sIGlucHV0KSkpIHJldHVybiB2YWw7XG4gIGlmIChwcmVmICE9PSAnc3RyaW5nJyAmJiBpc0NhbGxhYmxlKGZuID0gaW5wdXQudG9TdHJpbmcpICYmICFpc09iamVjdCh2YWwgPSBjYWxsKGZuLCBpbnB1dCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBuZXcgJFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcblxudmFyIGNvbmNhdCA9IHVuY3VycnlUaGlzKFtdLmNvbmNhdCk7XG5cbi8vIGFsbCBvYmplY3Qga2V5cywgaW5jbHVkZXMgbm9uLWVudW1lcmFibGUgYW5kIHN5bWJvbHNcbm1vZHVsZS5leHBvcnRzID0gZ2V0QnVpbHRJbignUmVmbGVjdCcsICdvd25LZXlzJykgfHwgZnVuY3Rpb24gb3duS2V5cyhpdCkge1xuICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXNNb2R1bGUuZihhbk9iamVjdChpdCkpO1xuICB2YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlLmY7XG4gIHJldHVybiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPyBjb25jYXQoa2V5cywgZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KSkgOiBrZXlzO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzTnVsbE9yVW5kZWZpbmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW51bGwtb3ItdW5kZWZpbmVkJyk7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG4vLyBgUmVxdWlyZU9iamVjdENvZXJjaWJsZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlcXVpcmVvYmplY3Rjb2VyY2libGVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpc051bGxPclVuZGVmaW5lZChpdCkpIHRocm93IG5ldyAkVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZCcpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcblxudmFyIGtleXMgPSBzaGFyZWQoJ2tleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBrZXlzW2tleV0gfHwgKGtleXNba2V5XSA9IHVpZChrZXkpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGRlZmluZUdsb2JhbFByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1nbG9iYWwtcHJvcGVydHknKTtcblxudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgZGVmaW5lR2xvYmFsUHJvcGVydHkoU0hBUkVELCB7fSk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RvcmU7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgc3RvcmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlJyk7XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoge30pO1xufSkoJ3ZlcnNpb25zJywgW10pLnB1c2goe1xuICB2ZXJzaW9uOiAnMy4zMy4wJyxcbiAgbW9kZTogSVNfUFVSRSA/ICdwdXJlJyA6ICdnbG9iYWwnLFxuICBjb3B5cmlnaHQ6ICfCqSAyMDE0LTIwMjMgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknLFxuICBsaWNlbnNlOiAnaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvYmxvYi92My4zMy4wL0xJQ0VOU0UnLFxuICBzb3VyY2U6ICdodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcydcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgZXMvbm8tc3ltYm9sIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nICovXG52YXIgVjhfVkVSU0lPTiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvbicpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG52YXIgJFN0cmluZyA9IGdsb2JhbC5TdHJpbmc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlzeW1ib2xzIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG5tb2R1bGUuZXhwb3J0cyA9ICEhT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgc3ltYm9sID0gU3ltYm9sKCdzeW1ib2wgZGV0ZWN0aW9uJyk7XG4gIC8vIENocm9tZSAzOCBTeW1ib2wgaGFzIGluY29ycmVjdCB0b1N0cmluZyBjb252ZXJzaW9uXG4gIC8vIGBnZXQtb3duLXByb3BlcnR5LXN5bWJvbHNgIHBvbHlmaWxsIHN5bWJvbHMgY29udmVydGVkIHRvIG9iamVjdCBhcmUgbm90IFN5bWJvbCBpbnN0YW5jZXNcbiAgLy8gbmI6IERvIG5vdCBjYWxsIGBTdHJpbmdgIGRpcmVjdGx5IHRvIGF2b2lkIHRoaXMgYmVpbmcgb3B0aW1pemVkIG91dCB0byBgc3ltYm9sKycnYCB3aGljaCB3aWxsLFxuICAvLyBvZiBjb3Vyc2UsIGZhaWwuXG4gIHJldHVybiAhJFN0cmluZyhzeW1ib2wpIHx8ICEoT2JqZWN0KHN5bWJvbCkgaW5zdGFuY2VvZiBTeW1ib2wpIHx8XG4gICAgLy8gQ2hyb21lIDM4LTQwIHN5bWJvbHMgYXJlIG5vdCBpbmhlcml0ZWQgZnJvbSBET00gY29sbGVjdGlvbnMgcHJvdG90eXBlcyB0byBpbnN0YW5jZXNcbiAgICAhU3ltYm9sLnNoYW0gJiYgVjhfVkVSU0lPTiAmJiBWOF9WRVJTSU9OIDwgNDE7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXJPckluZmluaXR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWludGVnZXItb3ItaW5maW5pdHknKTtcblxudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xuXG4vLyBIZWxwZXIgZm9yIGEgcG9wdWxhciByZXBlYXRpbmcgY2FzZSBvZiB0aGUgc3BlYzpcbi8vIExldCBpbnRlZ2VyIGJlID8gVG9JbnRlZ2VyKGluZGV4KS5cbi8vIElmIGludGVnZXIgPCAwLCBsZXQgcmVzdWx0IGJlIG1heCgobGVuZ3RoICsgaW50ZWdlciksIDApOyBlbHNlIGxldCByZXN1bHQgYmUgbWluKGludGVnZXIsIGxlbmd0aCkuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIHZhciBpbnRlZ2VyID0gdG9JbnRlZ2VyT3JJbmZpbml0eShpbmRleCk7XG4gIHJldHVybiBpbnRlZ2VyIDwgMCA/IG1heChpbnRlZ2VyICsgbGVuZ3RoLCAwKSA6IG1pbihpbnRlZ2VyLCBsZW5ndGgpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJbmRleGVkT2JqZWN0KHJlcXVpcmVPYmplY3RDb2VyY2libGUoaXQpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdHJ1bmMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbWF0aC10cnVuYycpO1xuXG4vLyBgVG9JbnRlZ2VyT3JJbmZpbml0eWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvaW50ZWdlcm9yaW5maW5pdHlcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBudW1iZXIgPSArYXJndW1lbnQ7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmUgLS0gTmFOIGNoZWNrXG4gIHJldHVybiBudW1iZXIgIT09IG51bWJlciB8fCBudW1iZXIgPT09IDAgPyAwIDogdHJ1bmMobnVtYmVyKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9JbnRlZ2VyT3JJbmZpbml0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5Jyk7XG5cbnZhciBtaW4gPSBNYXRoLm1pbjtcblxuLy8gYFRvTGVuZ3RoYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9sZW5ndGhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiBhcmd1bWVudCA+IDAgPyBtaW4odG9JbnRlZ2VyT3JJbmZpbml0eShhcmd1bWVudCksIDB4MUZGRkZGRkZGRkZGRkYpIDogMDsgLy8gMiAqKiA1MyAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpO1xuXG52YXIgJE9iamVjdCA9IE9iamVjdDtcblxuLy8gYFRvT2JqZWN0YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9vYmplY3Rcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiAkT2JqZWN0KHJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtc3ltYm9sJyk7XG52YXIgZ2V0TWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1tZXRob2QnKTtcbnZhciBvcmRpbmFyeVRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29yZGluYXJ5LXRvLXByaW1pdGl2ZScpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcbnZhciBUT19QUklNSVRJVkUgPSB3ZWxsS25vd25TeW1ib2woJ3RvUHJpbWl0aXZlJyk7XG5cbi8vIGBUb1ByaW1pdGl2ZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvcHJpbWl0aXZlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbnB1dCwgcHJlZikge1xuICBpZiAoIWlzT2JqZWN0KGlucHV0KSB8fCBpc1N5bWJvbChpbnB1dCkpIHJldHVybiBpbnB1dDtcbiAgdmFyIGV4b3RpY1RvUHJpbSA9IGdldE1ldGhvZChpbnB1dCwgVE9fUFJJTUlUSVZFKTtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKGV4b3RpY1RvUHJpbSkge1xuICAgIGlmIChwcmVmID09PSB1bmRlZmluZWQpIHByZWYgPSAnZGVmYXVsdCc7XG4gICAgcmVzdWx0ID0gY2FsbChleG90aWNUb1ByaW0sIGlucHV0LCBwcmVmKTtcbiAgICBpZiAoIWlzT2JqZWN0KHJlc3VsdCkgfHwgaXNTeW1ib2wocmVzdWx0KSkgcmV0dXJuIHJlc3VsdDtcbiAgICB0aHJvdyBuZXcgJFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbiAgfVxuICBpZiAocHJlZiA9PT0gdW5kZWZpbmVkKSBwcmVmID0gJ251bWJlcic7XG4gIHJldHVybiBvcmRpbmFyeVRvUHJpbWl0aXZlKGlucHV0LCBwcmVmKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlJyk7XG52YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtc3ltYm9sJyk7XG5cbi8vIGBUb1Byb3BlcnR5S2V5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9wcm9wZXJ0eWtleVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdmFyIGtleSA9IHRvUHJpbWl0aXZlKGFyZ3VtZW50LCAnc3RyaW5nJyk7XG4gIHJldHVybiBpc1N5bWJvbChrZXkpID8ga2V5IDoga2V5ICsgJyc7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgVE9fU1RSSU5HX1RBRyA9IHdlbGxLbm93blN5bWJvbCgndG9TdHJpbmdUYWcnKTtcbnZhciB0ZXN0ID0ge307XG5cbnRlc3RbVE9fU1RSSU5HX1RBR10gPSAneic7XG5cbm1vZHVsZS5leHBvcnRzID0gU3RyaW5nKHRlc3QpID09PSAnW29iamVjdCB6XSc7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJFN0cmluZyA9IFN0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gJFN0cmluZyhhcmd1bWVudCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuICdPYmplY3QnO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xuXG52YXIgaWQgPSAwO1xudmFyIHBvc3RmaXggPSBNYXRoLnJhbmRvbSgpO1xudmFyIHRvU3RyaW5nID0gdW5jdXJyeVRoaXMoMS4wLnRvU3RyaW5nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAnU3ltYm9sKCcgKyAoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSkgKyAnKV8nICsgdG9TdHJpbmcoKytpZCArIHBvc3RmaXgsIDM2KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBlcy9uby1zeW1ib2wgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmcgKi9cbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N5bWJvbC1jb25zdHJ1Y3Rvci1kZXRlY3Rpb24nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBOQVRJVkVfU1lNQk9MXG4gICYmICFTeW1ib2wuc2hhbVxuICAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09ICdzeW1ib2wnO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxuLy8gVjggfiBDaHJvbWUgMzYtXG4vLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMzM0XG5tb2R1bGUuZXhwb3J0cyA9IERFU0NSSVBUT1JTICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSwgJ3Byb3RvdHlwZScsIHtcbiAgICB2YWx1ZTogNDIsXG4gICAgd3JpdGFibGU6IGZhbHNlXG4gIH0pLnByb3RvdHlwZSAhPT0gNDI7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xuXG52YXIgV2Vha01hcCA9IGdsb2JhbC5XZWFrTWFwO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQ2FsbGFibGUoV2Vha01hcCkgJiYgL25hdGl2ZSBjb2RlLy50ZXN0KFN0cmluZyhXZWFrTWFwKSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N5bWJvbC1jb25zdHJ1Y3Rvci1kZXRlY3Rpb24nKTtcbnZhciBVU0VfU1lNQk9MX0FTX1VJRCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZCcpO1xuXG52YXIgU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciBXZWxsS25vd25TeW1ib2xzU3RvcmUgPSBzaGFyZWQoJ3drcycpO1xudmFyIGNyZWF0ZVdlbGxLbm93blN5bWJvbCA9IFVTRV9TWU1CT0xfQVNfVUlEID8gU3ltYm9sWydmb3InXSB8fCBTeW1ib2wgOiBTeW1ib2wgJiYgU3ltYm9sLndpdGhvdXRTZXR0ZXIgfHwgdWlkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIGlmICghaGFzT3duKFdlbGxLbm93blN5bWJvbHNTdG9yZSwgbmFtZSkpIHtcbiAgICBXZWxsS25vd25TeW1ib2xzU3RvcmVbbmFtZV0gPSBOQVRJVkVfU1lNQk9MICYmIGhhc093bihTeW1ib2wsIG5hbWUpXG4gICAgICA/IFN5bWJvbFtuYW1lXVxuICAgICAgOiBjcmVhdGVXZWxsS25vd25TeW1ib2woJ1N5bWJvbC4nICsgbmFtZSk7XG4gIH0gcmV0dXJuIFdlbGxLbm93blN5bWJvbHNTdG9yZVtuYW1lXTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkZmluZEluZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvbicpLmZpbmRJbmRleDtcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlcycpO1xuXG52YXIgRklORF9JTkRFWCA9ICdmaW5kSW5kZXgnO1xudmFyIFNLSVBTX0hPTEVTID0gdHJ1ZTtcblxuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1hcnJheS1wcm90b3R5cGUtZmluZGluZGV4IC0tIHRlc3RpbmdcbmlmIChGSU5EX0lOREVYIGluIFtdKSBBcnJheSgxKVtGSU5EX0lOREVYXShmdW5jdGlvbiAoKSB7IFNLSVBTX0hPTEVTID0gZmFsc2U7IH0pO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5maW5kaW5kZXhcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlLCBmb3JjZWQ6IFNLSVBTX0hPTEVTIH0sIHtcbiAgZmluZEluZGV4OiBmdW5jdGlvbiBmaW5kSW5kZXgoY2FsbGJhY2tmbiAvKiAsIHRoYXQgPSB1bmRlZmluZWQgKi8pIHtcbiAgICByZXR1cm4gJGZpbmRJbmRleCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xuXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5hZGRUb1Vuc2NvcGFibGVzKEZJTkRfSU5ERVgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgYXNzaWduID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1hc3NpZ24nKTtcblxuLy8gYE9iamVjdC5hc3NpZ25gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuYXNzaWduXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWFzc2lnbiAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuJCh7IHRhcmdldDogJ09iamVjdCcsIHN0YXQ6IHRydWUsIGFyaXR5OiAyLCBmb3JjZWQ6IE9iamVjdC5hc3NpZ24gIT09IGFzc2lnbiB9LCB7XG4gIGFzc2lnbjogYXNzaWduXG59KTtcbiIsImltcG9ydCB7IHJlcm91dGVyLCBVdGlscywgUGFnZSwgWFksIEdyb3VwUGFnZSwgUmVyb3V0ZXIgfSBmcm9tICdSZXJvdXRlcic7XG5pbXBvcnQgeyBnb29kc0xvY2F0aW9uUmVjdCwgVGFza1N0YXR1cywgc2VhcmNoSG9zZVBhdGhzLCBJY29uIH0gZnJvbSAnLi9zcmMvdHlwZXMnO1xuaW1wb3J0IHsgbG9ncywgc2VuZEtleUJhY2ssIHNlbmRFdmVudFJ1bm5pbmcgfSBmcm9tICcuL3NyYy91dGlscyc7XG5pbXBvcnQge1xuICBzY3JvbGxEb3duQUxvdCxcbiAgc2Nyb2xsTGVmdEFMb3QsXG4gIHNjcm9sbFJpZ2h0QUxvdCxcbiAgQWR2YW50dXJlc0JvdW50aWVzQXQzcmQsXG4gIGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbixcbiAgc3dpcGVGcm9tVG9Qb2ludCxcbiAgb2NyTnVtYmVySW5SZWN0LFxuICB0YXBUaHJvdWdoQW5pbWF0ZSxcbiAgaGFuZGxlTmV4dFByb2R1Y3Rpb25CdWlsZGluZyxcbiAgc3dpcGVEb3duM0l0ZW1zLFxuICBjb3VudFByb2R1Y3Rpb25TbG90QXZhaWxhYmxlLFxuICBtYWtlR29vZHNUb1RhcmdldCxcbiAgb2NyU3RvY2tBbmRSZXFJblJlY3QsXG4gIHN3aXBlRGlyZWN0aW9uLFxuICBzZWFyY2hGb3JDYW5keUhvdXNlLFxuICBzYXZlSW1hZ2VUb0Rpc2ssXG4gIGNvbmZpZ1NoYXJlUHJlZixcbiAgbWVyZ2VPYmplY3QsXG4gIGNoZWNrSWZJbkJhdHRsZSxcbiAgY29sbGVjdEZpbmlzaGVkR29vZHMsXG4gIGZpbmRVbm1hdGNoSW5QYWdlLFxuICBjaGVja0lmVHJhaW5SZXF1aXJlbWVudE1ldCxcbiAgYXNzaWduLFxuICBjaGVja0lmTmVlZENyYXNoLFxuICBzZW5kQ291bnRlcixcbiAgdW5rbm93bkNoZWNrTWlzc2luZ1BhZ2UsXG4gIGhhbmRsZUdlbmVyYWxNZXNzYWdlV2luZG93LFxufSBmcm9tICcuL3NyYy9oZWxwZXInO1xuaW1wb3J0IHsgY29uZmlnLCBkZWZhdWx0Q29uZmlnLCBkZWZhdWx0V2lzaGVzIH0gZnJvbSAnLi9zcmMvc2NyaXB0Q29uZmlnJztcbmltcG9ydCAqIGFzIFBBR0VTIGZyb20gJy4vc3JjL3BhZ2VzJztcbmltcG9ydCAqIGFzIElDT05TIGZyb20gJy4vc3JjL2ljb25zJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuL3NyYy9jb25zdGFudHMnO1xuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuL3NyYy90YXNrcyc7XG5pbXBvcnQgeyBnbG9iYWxTdG9yYWdlIH0gZnJvbSAnLi9zcmMvc3RvcmFnZSc7XG5pbXBvcnQgeyBhZGRCb3VudGllc1JvdXRlcywgYWRkQm91bnRpZXNUYXNrIH0gZnJvbSAnLi9zcmMvdGFza3MvYm91bnRpZXMnO1xuaW1wb3J0IHsgYWRkSG90QWlyQmFsbG9uUm91dGVzLCBhZGRIb3RBaXJCYWxsb25UYXNrIH0gZnJvbSAnLi9zcmMvdGFza3MvaG90QWlyQmFsbG9uJztcbmltcG9ydCB7IGFkZFB2cEFyZW5hUm91dGVzLCBhZGRQdnBBcmVuYVRhc2ssIGFkZFB2cFB1cmNoYXNlVGFzaywgYWRkU3VwZXJNYXloZW1Sb3V0ZXMsIGFkZFN1cGVyTWF5aGVtVGFzayB9IGZyb20gJy4vc3JjL3Rhc2tzL3B2cEFyZW5hJztcbmltcG9ydCB7IGFkZFRyb3BpY2FsSXNsYW5kUm91dGVzLCBhZGRUcm9waWNhbElzbGFuZFRhc2tzIH0gZnJvbSAnLi9zcmMvdGFza3MvdHJvcGljYWxJc2xhbmQnO1xuaW1wb3J0IHsgYWRkR25vbWVMYWJSb3V0ZXMsIGFkZEdub21lTGFiVGFza3MgfSBmcm9tICcuL3NyYy90YXNrcy9nbm9tZUxhYic7XG5pbXBvcnQgeyBhZGRHdWlsZEJhdHRsZUFsbGlhbmNlVGFzaywgYWRkR3VpbGRCYXR0bGVEcmFnb25UYXNrLCBhZGRHdWlsZENoZWNraW5UYXNrLCBhZGRHdWlsZFJvdXRlcyB9IGZyb20gJy4vc3JjL3Rhc2tzL2d1aWxkJztcbmltcG9ydCB7IGFkZExvZ2luUm91dGVzIH0gZnJvbSAnLi9zcmMvdGFza3MvbG9naW4nO1xuaW1wb3J0IHsgYWRkU2Vhc2lkZU1hcmtldFRhc2ssIGFkZFNlbmRIYWJvclNoaXBUYXNrLCBhZGRTaGVsbEdhbGxlcnlUYXNrLCBhZGRUcmFkZUhhYm9yUm91dGVzLCByZnBhZ2VTaGVsbFNob3BOb3RFbm91Z2hTaGVsbCB9IGZyb20gJy4vc3JjL3Rhc2tzL3RyYWRlSGFib3InO1xuaW1wb3J0IHsgYWRkV2lzaGluZ1RyZWVSb3V0ZXMsIGFkZFdpc2hpbmdUcmVlVGFzayB9IGZyb20gJy4vc3JjL3Rhc2tzL3dpc2hpbmdUcmVlJztcbmltcG9ydCB7IGFkZEZvdW50YWluUm91dGVzLCBhZGRGb3VudGFpblRhc2ssIGZvdW50YWluU3RhdHVzIH0gZnJvbSAnLi9zcmMvdGFza3MvZm91bnRhaW4nO1xuXG5jb25zdCBWRVJTSU9OX0NPREU6IG51bWJlciA9IDAuMTtcblxuZXhwb3J0IGNsYXNzIENvb2tpZUtpbmdkb20ge1xuICBwdWJsaWMgcGFja2FnZU5hbWU6IHN0cmluZyA9ICdjb20uZGV2c2lzdGVycy5jayc7XG5cbiAgcHVibGljIGNvbmZpZyA9IGRlZmF1bHRDb25maWc7XG4gIHJlcm91dGVyID0gbmV3IFJlcm91dGVyKCk7XG4gIHdpc2hlcyA9IGRlZmF1bHRXaXNoZXM7XG4gIHRhc2tTdGF0dXM6IFRhc2tTdGF0dXMgPSB7fTtcbiAgbGFzdEJhdHRsZUNoZWNrZWQ6IG51bWJlciA9IDA7XG5cbiAgY29uc3RydWN0b3IoY29uZmlnOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZygnIyMjIyMjIyMjIyMjIG5ldyBDUksgIyMjIyMjIyMjIyMjJyk7XG4gICAgY29uc29sZS5sb2coJ25ldyBDUksgd2l0aCBpbnB1dDogJywgSlNPTi5zdHJpbmdpZnkoY29uZmlnKSk7XG4gICAgdHJ5IHtcbiAgICAgIGlmICh0eXBlb2YgeERlY29kZUhleCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uZmlnLmFjY291bnQgPSB4RGVjb2RlSGV4KGNvbmZpZy5hY2NvdW50KTtcbiAgICAgICAgY29uZmlnLnBhc3N3b3JkID0geERlY29kZUhleChjb25maWcucGFzc3dvcmQpO1xuICAgICAgICBjb25zb2xlLmxvZygneERlY29kZUhleCBzdWNjZXNzZnVsbHksICcsIGNvbmZpZy5hY2NvdW50KTtcblxuICAgICAgICBjb25zdCBkZWNvZGVkVXJsID0geERlY29kZUhleChcbiAgICAgICAgICAnNjc4YmIzYThmZWZhNDBhZDdjMjBiN2QzYTc5OTFlZDdjYzE4NDY0MjliMThmODA2MGM0ZTMyNTUxNzk2MjIyMGUzYzY4ODgzYmFlNWE3N2RmNjFhMDA4MzU2MjZhMTE5MzVkNzU4ZmM3NTA5YWM0ODg5Mzg4ZGU0Y2ZmODJiNDk3ZmFjOTIzNjA1ZjI4Y2RjY2Q5MjhlYTEzY2Y5ODExNzkyZWEzNDBlNjI4YzhlNTlkNDI5MjQxNGU5MzQ2ZmRkJ1xuICAgICAgICApO1xuICAgICAgICBpZiAodHlwZW9mIGRlY29kZWRVcmwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgcmVyb3V0ZXIucmVyb3V0ZXJDb25maWcuZGVidWdTbGFja1VybCA9IGRlY29kZWRVcmw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGRlY29kZSAoUm9ib3Rtb24gZW52KSwgZmFsbCBiYWNrIHRvIG9yaWdpbmFsIGFjY291bnQsIHNraXAgc2VuZGluZyBTbGFjazogJywgZSk7XG4gICAgICBjb25maWcuaXNNYWludGFpbmFuY2VNb2RlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgcmVyb3V0ZXIuZGVmYXVsdENvbmZpZy5UYXNrQ29uZmlnQXV0b1N0b3AgPSB0cnVlO1xuICAgIHJlcm91dGVyLmRlZmF1bHRDb25maWcuUm91dGVDb25maWdEZWJ1ZyA9IHRydWU7XG4gICAgcmVyb3V0ZXIuc2NyZWVuQ29uZmlnLnJvdGF0aW9uID0gJ2hvcml6b250YWwnO1xuICAgIHJlcm91dGVyLnNjcmVlbkNvbmZpZy5kZXZIZWlnaHQgPSAzNjA7XG4gICAgcmVyb3V0ZXIuc2NyZWVuQ29uZmlnLmRldldpZHRoID0gNjQwO1xuICAgIHJlcm91dGVyLmRlYnVnID0gZmFsc2U7XG4gICAgcmVyb3V0ZXIucmVyb3V0ZXJDb25maWcuc2F2ZUltYWdlUm9vdCA9ICcvZGF0YS9tZWRpYS8wL0Rvd25sb2Fkcy8nO1xuXG4gICAgcmVyb3V0ZXIucmVyb3V0ZXJDb25maWcuZGV2aWNlSWQgPSB0aGlzLmNvbmZpZy5kZXZpY2VJZDtcbiAgICByZXJvdXRlci5yZXJvdXRlckNvbmZpZy5zdHJpY3RNb2RlID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLmNvbmZpZy5pc01haW50YWluYW5jZU1vZGUpIHtcbiAgICAgIHJlcm91dGVyLnNjcmVlbkNvbmZpZy5sb2dTY3JlZW5zaG90TWluSW50ZXJ2YWxJblNlYyA9IDE4MDtcbiAgICAgIHJlcm91dGVyLnNjcmVlbkNvbmZpZy5sb2dTY3JlZW5zaG90TWF4RmlsZXMgPSAyMDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuQ29uZmlnLmxvZ1NjcmVlbnNob3RNaW5JbnRlcnZhbEluU2VjID0gMjA7XG4gICAgICByZXJvdXRlci5zY3JlZW5Db25maWcubG9nU2NyZWVuc2hvdE1heEZpbGVzID0gMjAwO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGBzY3JpcHQgdmVyc2lvbiAke1ZFUlNJT05fQ09ERX1gKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGFydCgpIHtcbiAgICB0aGlzLmluaXQoKTtcbiAgICB0aGlzLmluaXRUYXNrU3RhdHVzKCk7XG5cbiAgICBjb25zb2xlLmxvZygnPicsIHJlcm91dGVyLmdldEN1cnJlbnRNYXRjaE5hbWVzKCkpO1xuICAgIC8vIGNvbnNvbGUubG9nKCc+PicsIGZpbmRVbm1hdGNoSW5QYWdlKHJmcGFnZVN1cGVyTWF5aGVtUmVhZHlUb0JhdHRsZSkpO1xuICAgIC8vIHJldHVybjtcblxuICAgIHJlcm91dGVyLnN0YXJ0KHRoaXMucGFja2FnZU5hbWUpO1xuICB9XG4gIHB1YmxpYyBzdG9wKCkge1xuICAgIGNvbnN0IGFsbEljb25zOiB7IFtrZXk6IHN0cmluZ106IEljb24gfSA9IElDT05TIGFzIGFueTtcbiAgICBmb3IgKGNvbnN0IGljb25JZHggaW4gYWxsSWNvbnMpIHtcbiAgICAgIGNvbnN0IGljb24gPSBhbGxJY29uc1tpY29uSWR4XTtcbiAgICAgIGlmICghKGljb24gaW5zdGFuY2VvZiBJY29uKSB8fCBpY29uLmltYWdlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZWxlYXNlSW1hZ2UoaWNvbi5pbWFnZSk7XG4gICAgICBjb25zb2xlLmxvZyhgcmVsZWFzZTogJHtpY29uSWR4fWApO1xuICAgIH1cblxuICAgIGZvciAobGV0IGlkeCBpbiBJQ09OUy5udW1iZXJJbWFnZXNQcm9kdXRSZXF1aXJlbWVudHMpIHtcbiAgICAgIGlmIChJQ09OUy5udW1iZXJJbWFnZXNQcm9kdXRSZXF1aXJlbWVudHNbaWR4XS5pbWFnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIElDT05TLm51bWJlckltYWdlc1Byb2R1dFJlcXVpcmVtZW50c1tpZHhdLnJlbGVhc2VJbWFnZSgpO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpZHggaW4gSUNPTlMubnVtYmVySW1hZ2VzUHZQKSB7XG4gICAgICBpZiAoSUNPTlMubnVtYmVySW1hZ2VzUHZQW2lkeF0uaW1hZ2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBJQ09OUy5udW1iZXJJbWFnZXNQdlBbaWR4XS5yZWxlYXNlSW1hZ2UoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChsZXQgaWR4IGluIElDT05TLm51bWJlckltYWdlc1N1cGVyTWF5aGVtKSB7XG4gICAgICBpZiAoSUNPTlMubnVtYmVySW1hZ2VzU3VwZXJNYXloZW1baWR4XS5pbWFnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIElDT05TLm51bWJlckltYWdlc1N1cGVyTWF5aGVtW2lkeF0ucmVsZWFzZUltYWdlKCk7XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAobGV0IGlkeCBpbiBJQ09OUy5udW1iZXJJbWFnZXNXaXNoaW5nVHJlZSkge1xuICAgICAgaWYgKElDT05TLm51bWJlckltYWdlc1dpc2hpbmdUcmVlW2lkeF0uaW1hZ2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBJQ09OUy5udW1iZXJJbWFnZXNXaXNoaW5nVHJlZVtpZHhdLnJlbGVhc2VJbWFnZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlcm91dGVyLnN0b3AoKTtcbiAgfVxuXG4gIHB1YmxpYyBpbml0KCkge1xuICAgIHRoaXMuYWRkVGFza3MoKTtcbiAgICB0aGlzLmFkZFJvdXRlcygpO1xuICAgIHRoaXMuYWRkU3RhcnRBcHBBY3Rpb24oKTtcbiAgICB0aGlzLmhhbmRsZVVua25vd24oKTtcblxuICAgIC8vIHNob3cgY3VycmVudCBwYWdlXG4gICAgLy8gcmVyb3V0ZXIuZ2V0Q3VycmVudE1hdGNoTmFtZXMoKTtcblxuICAgIGZvciAobGV0IGlkeCBpbiBJQ09OUy5udW1iZXJJbWFnZXNQcm9kdXRSZXF1aXJlbWVudHMpIHtcbiAgICAgIGlmIChJQ09OUy5udW1iZXJJbWFnZXNQcm9kdXRSZXF1aXJlbWVudHNbaWR4XS5pbWFnZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIElDT05TLm51bWJlckltYWdlc1Byb2R1dFJlcXVpcmVtZW50c1tpZHhdLmxvYWRJbWFnZSgpO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpZHggaW4gSUNPTlMubnVtYmVySW1hZ2VzUHZQKSB7XG4gICAgICBpZiAoSUNPTlMubnVtYmVySW1hZ2VzUHZQW2lkeF0uaW1hZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBJQ09OUy5udW1iZXJJbWFnZXNQdlBbaWR4XS5sb2FkSW1hZ2UoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChsZXQgaWR4IGluIElDT05TLm51bWJlckltYWdlc1N1cGVyTWF5aGVtKSB7XG4gICAgICBpZiAoSUNPTlMubnVtYmVySW1hZ2VzU3VwZXJNYXloZW1baWR4XS5pbWFnZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIElDT05TLm51bWJlckltYWdlc1N1cGVyTWF5aGVtW2lkeF0ubG9hZEltYWdlKCk7XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAobGV0IGlkeCBpbiBJQ09OUy5udW1iZXJJbWFnZXNXaXNoaW5nVHJlZSkge1xuICAgICAgaWYgKElDT05TLm51bWJlckltYWdlc1dpc2hpbmdUcmVlW2lkeF0uaW1hZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBJQ09OUy5udW1iZXJJbWFnZXNXaXNoaW5nVHJlZVtpZHhdLmxvYWRJbWFnZSgpO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpZHggaW4gSUNPTlMuYk51bWJlcnMpIHtcbiAgICAgIGlmIChJQ09OUy5iTnVtYmVyc1tpZHhdLmltYWdlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgSUNPTlMuYk51bWJlcnNbaWR4XS5sb2FkSW1hZ2UoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChsZXQgaWR4IGluIElDT05TLndOdW1iZXJzKSB7XG4gICAgICBpZiAoSUNPTlMud051bWJlcnNbaWR4XS5pbWFnZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIElDT05TLndOdW1iZXJzW2lkeF0ubG9hZEltYWdlKCk7XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAobGV0IGlkeCBpbiBJQ09OUy5udW1iZXJBdXJvcmFTdG9ja0luVHJhZGVCaXJkKSB7XG4gICAgICBpZiAoSUNPTlMubnVtYmVyQXVyb3JhU3RvY2tJblRyYWRlQmlyZFtpZHhdLmltYWdlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgSUNPTlMubnVtYmVyQXVyb3JhU3RvY2tJblRyYWRlQmlyZFtpZHhdLmxvYWRJbWFnZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGZvciAobGV0IGlkeCBpbiBJQ09OUy5pY29uc0dub21lTGFiQ29va2llcykge1xuICAgIC8vICAgaWYgKElDT05TLmljb25zR25vbWVMYWJDb29raWVzW2lkeF0uaW1hZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vICAgICBJQ09OUy5pY29uc0dub21lTGFiQ29va2llc1tpZHhdLmxvYWRJbWFnZSgpO1xuICAgIC8vICAgfVxuICAgIC8vIH1cbiAgfVxuXG4gIHB1YmxpYyBpbml0VGFza1N0YXR1cygpIHtcbiAgICB0aGlzLnRhc2tTdGF0dXNbVEFTS1MuZ2V0SW5TaG9wRnJlZURhaWx5UGFja10gPSB7XG4gICAgICB0cmlhbHM6IDAsXG4gICAgfTtcblxuICAgIHRoaXMudGFza1N0YXR1c1tUQVNLUy50b3dlck9mU3dlZXRDaGFvc10gPSB7XG4gICAgICB0cnlDb3VudDogMCxcbiAgICAgIHRyeUxpbWl0OiB0aGlzLmNvbmZpZy5hdXRvSGFuZGxlVG93ZXJPZlN3ZWV0Q2hhb3MgPyA0IDogMCxcbiAgICB9O1xuXG4gICAgdGhpcy50YXNrU3RhdHVzW1RBU0tTLmZpbmRBbmRUYXBDYW5keV0gPSB7XG4gICAgICBzZWFyY2hIb3VzZVBhdGhJZHg6IDAsIC8vIFRoZXJlIGFyZSAzIHBhdGhzLCBlYWNoIHdpdGggZGlmZmVyZXJ0IHN0ZXBzXG4gICAgICBzZWFyY2hIb3VzZUlkeDogMCxcbiAgICAgIG5lZWRHb3RvSGVhZDogdHJ1ZSxcbiAgICB9O1xuXG4gICAgdGhpcy50YXNrU3RhdHVzW1RBU0tTLnByb2R1Y3Rpb25dID0ge1xuICAgICAgbGFzdFByb2R1Y3Rpb25CdWlsZGluZzogJycsXG4gICAgICBwcm9kdWN0aW9uQnVpbGRpbmdDaGVja2VkOiAwLFxuICAgICAgc3RvY2tzOiB7fSxcbiAgICB9O1xuICB9XG5cbiAgcHVibGljIGFkZFRhc2tzKCkge1xuICAgIGlmICh0aGlzLmNvbmZpZy5pc01haW50YWluYW5jZU1vZGUpIHtcbiAgICAgIHJlcm91dGVyLmFkZFRhc2soe1xuICAgICAgICBuYW1lOiBUQVNLUy5tYWludGFpbmFuY2VNb2RlLFxuICAgICAgICBtYXhUYXNrRHVyaW5nOiAxMCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgICBmb3JjZVN0b3A6IGZhbHNlLFxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSW4gZGV2OlxuICAgIC8vIHJldHVybjtcblxuICAgIHJlcm91dGVyLmFkZFRhc2soe1xuICAgICAgbmFtZTogVEFTS1MucmVzb2x2ZUdyZWVuQ2hlY2tzLFxuICAgICAgbWF4VGFza0R1cmluZzogMyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgbWluUm91bmRJbnRlcnZhbDogMzAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICAgIG5hbWU6IFRBU0tTLnByb2R1Y3Rpb24sXG4gICAgICBtYXhUYXNrRHVyaW5nOiAxMCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgbWluUm91bmRJbnRlcnZhbDogMzYwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgfSk7XG5cbiAgICBpZiAodGhpcy5jb25maWcuYXV0b0NvbGxlY3RNYWlsSW50ZXJ2YWxJbk1pbnMgPiAwKSB7XG4gICAgICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICAgICAgbmFtZTogVEFTS1MuY29sbGVjdE1haWwsXG4gICAgICAgIG1heFRhc2tEdXJpbmc6IDMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICAgICAgbWluUm91bmRJbnRlcnZhbDogMjQwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAodGhpcy5jb25maWcuYXV0b1NlbmRIb3RBaXJCYWxsb25JbnRlcnZhbEluTWlucyA+IDApIHtcbiAgICAgIGFkZEhvdEFpckJhbGxvblRhc2soKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuY29uZmlnLmF1dG9Db2xsZWN0VHJhaW5JbnRlcnZhbEluTWlucyA+IDApIHtcbiAgICAgIHJlcm91dGVyLmFkZFRhc2soe1xuICAgICAgICBuYW1lOiBUQVNLUy50cmFpbixcbiAgICAgICAgbWF4VGFza0R1cmluZzogMyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgICBtaW5Sb3VuZEludGVydmFsOiB0aGlzLmNvbmZpZy5hdXRvQ29sbGVjdFRyYWluSW50ZXJ2YWxJbk1pbnMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICAgICAgZm9yY2VTdG9wOiB0cnVlLFxuICAgICAgfSk7XG4gICAgfVxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvRnVsZmlsbFdpc2hlc0ludGVydmFsSW5NaW5zID4gMCkge1xuICAgICAgYWRkV2lzaGluZ1RyZWVUYXNrKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuY29uZmlnLmF1dG9QdlBQdXJjaGFzZUFuY2llbnRDb29raWUpIHtcbiAgICAgIGFkZFB2cFB1cmNoYXNlVGFzaygpO1xuICAgIH1cbiAgICBpZiAodGhpcy5jb25maWcuYXV0b1B2UEludGVydmFsSW5NaW5zID4gMCkge1xuICAgICAgYWRkUHZwQXJlbmFUYXNrKCk7XG4gICAgfVxuICAgIC8vIGlmICh0aGlzLmNvbmZpZy5hdXRvU3VwZXJNYXloZW1JbnRlcnZhbEluTWlucyA+IDApIHtcbiAgICAvLyAgIGFkZFN1cGVyTWF5aGVtVGFzaygpO1xuICAgIC8vIH1cblxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvQ29sbGVjdFRyb3BpY2FsSXNsYW5kc0ludGVydmFsSW5NaW5zID4gMCkge1xuICAgICAgYWRkVHJvcGljYWxJc2xhbmRUYXNrcygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvSGFuZGxlQm91bnRpZXNJbnRlcnZhbEluTWlucyA+IDApIHtcbiAgICAgIGFkZEJvdW50aWVzVGFzaygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvTGFiUmVzZWFyY2gpIHtcbiAgICAgIGFkZEdub21lTGFiVGFza3MoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jb25maWcuYXV0b0hhbmRsZVRyYWRlSGFib3IpIHtcbiAgICAgIGFkZFNlbmRIYWJvclNoaXBUYXNrKCk7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgdGhpcy5jb25maWcuYXV0b0JhbGFuY2VBdXJvcmFTdG9ja3MgfHxcbiAgICAgIHRoaXMuY29uZmlnLmF1dG9TaG9wSW5TZWFzaWRlTWFya2V0IHx8XG4gICAgICB0aGlzLmNvbmZpZy5hdXRvQnV5Q2FyYW1lbFN0dWZmIHx8XG4gICAgICB0aGlzLmNvbmZpZy5hdXRvQnV5UmFkaWFudFNoYXJkc0luSGFib3JcbiAgICApIHtcbiAgICAgIGFkZFNlYXNpZGVNYXJrZXRUYXNrKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvQnV5U2VhRmFpcnkgfHwgdGhpcy5jb25maWcuYXV0b0J1eUVwaWNTb3VsRXNzZW5jZSB8fCB0aGlzLmNvbmZpZy5hdXRvQnV5TGVnZW5kU291bEVzc2VuY2UgfHwgdGhpcy5jb25maWcuYXV0b0J1eUd1aWxkUmVsaWMpIHtcbiAgICAgIGFkZFNoZWxsR2FsbGVyeVRhc2soKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jb25maWcuYXV0b0hhbmRsZVRvd2VyT2ZTd2VldENoYW9zKSB7XG4gICAgICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICAgICAgbmFtZTogVEFTS1MudG93ZXJPZlN3ZWV0Q2hhb3MsXG4gICAgICAgIG1heFRhc2tEdXJpbmc6IDcgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICAgICAgbWluUm91bmRJbnRlcnZhbDogMTgwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGFkZEd1aWxkQ2hlY2tpblRhc2soKTtcbiAgICBpZiAodGhpcy5jb25maWcuYXV0b0d1aWxkQmF0dGxlRHJhZ29uKSB7XG4gICAgICBhZGRHdWlsZEJhdHRsZURyYWdvblRhc2soKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuY29uZmlnLmF1dG9HdWlsZEFsbGlhbmNlQmF0dGxlKSB7XG4gICAgICBhZGRHdWlsZEJhdHRsZUFsbGlhbmNlVGFzaygpO1xuICAgIH1cblxuICAgIHJlcm91dGVyLmFkZFRhc2soe1xuICAgICAgbmFtZTogVEFTS1MuZmluZEFuZFRhcENhbmR5LFxuICAgICAgbWF4VGFza0R1cmluZzogNyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgbWluUm91bmRJbnRlcnZhbDogNjAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICAgIG5hbWU6IFRBU0tTLnByb2R1Y3Rpb24sXG4gICAgICBtYXhUYXNrRHVyaW5nOiAyMCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgZm9yY2VTdG9wOiB0cnVlLFxuICAgICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgICAgYXNzaWduKHRoaXMudGFza1N0YXR1c1tUQVNLUy5wcm9kdWN0aW9uXSwge1xuICAgICAgICAgIHByb2R1Y3Rpb25CdWlsZGluZ0NoZWNrZWQ6IDAsXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvQ29sbGVjdERhaWx5UmV3YXJkKSB7XG4gICAgICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICAgICAgbmFtZTogVEFTS1MuY29sbGVjdEtpbmdkb21QYXNzLFxuICAgICAgICBtYXhUYXNrRHVyaW5nOiAzICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICAgIG1pblJvdW5kSW50ZXJ2YWw6IDI0MCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgICB9KTtcbiAgICAgIHJlcm91dGVyLmFkZFRhc2soe1xuICAgICAgICBuYW1lOiBUQVNLUy5zZW5kRnJpZW5kUmV3YXJkLFxuICAgICAgICBtYXhUYXNrRHVyaW5nOiAzICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICAgIG1pblJvdW5kSW50ZXJ2YWw6IDI0MCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgICB9KTtcbiAgICAgIHJlcm91dGVyLmFkZFRhc2soe1xuICAgICAgICBuYW1lOiBUQVNLUy5nZXRJblNob3BGcmVlRGFpbHlQYWNrLFxuICAgICAgICBtYXhUYXNrRHVyaW5nOiAzICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICAgIG1pblJvdW5kSW50ZXJ2YWw6IDI0MCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgICAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgICB9KTtcbiAgICAgIHJlcm91dGVyLmFkZFRhc2soe1xuICAgICAgICBuYW1lOiBUQVNLUy5nZXRHYWNoYURhaWx5RnJlZVBhY2ssXG4gICAgICAgIG1heFRhc2tEdXJpbmc6IDMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICAgICAgbWluUm91bmRJbnRlcnZhbDogMjQwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFJlc29sdmUgZ3JlZW4gY2hlY2sgYmVmb3JlIGNvbGxlY3QgZm91bnRhaW4gdG8gYXZvaWQgZ29pbmcgdG8gdGhlIHdyb25nIG9uZVxuICAgIGlmICh0aGlzLmNvbmZpZy5hdXRvQ29sbGVjdEZvdW50YWluSW50ZXJ2YWxJbk1pbnMgPiAwKSB7XG4gICAgICBhZGRGb3VudGFpblRhc2soKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgYWRkUm91dGVzKCkge1xuICAgIC8vIExvZ2luIHBhZ2VzXG4gICAgYWRkTG9naW5Sb3V0ZXMoKTtcblxuICAgIC8vIERhaWx5IHRhc2tzXG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke1BBR0VTLnJmcGFnZUtpbmdkb21QYXNzSXRlbUNvbGxlY3RlZC5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlS2luZ2RvbVBhc3NJdGVtQ29sbGVjdGVkLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuY29sbGVjdEtpbmdkb21QYXNzKSB7XG4gICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlS2luZ2RvbVBhc3NJdGVtQ29sbGVjdGVkLCB0YXNrIGZpbmlzaGVkJyk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChQQUdFUy5yZnBhZ2VLaW5nZG9tUGFzc0l0ZW1Db2xsZWN0ZWQpO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICB9LFxuICAgIH0pO1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtQQUdFUy5yZnBhZ2VNYWlsc0FsbENsYWltZWQubmFtZX1gLFxuICAgICAgbWF0Y2g6IFBBR0VTLnJmcGFnZU1haWxzQWxsQ2xhaW1lZCxcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmNvbGxlY3RNYWlsKSB7XG4gICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlTWFpbHNBbGxDbGFpbWVkLCB0YXNrIGZpbmlzaGVkJyk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChQQUdFUy5yZnBhZ2VLaW5nZG9tUGFzc0l0ZW1Db2xsZWN0ZWQpO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICB9LFxuICAgIH0pO1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtQQUdFUy5yZnBhZ2VJbkZyaWVuZHNMaXN0Lm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VJbkZyaWVuZHNMaXN0LFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1Muc2VuZEZyaWVuZFJld2FyZCkge1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnJmcGFnZUluRnJpZW5kc0xpc3QpO1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlSW5GcmllbmRzTGlzdCwgdGFzayBmaW5pc2hlZCcpO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICB9LFxuICAgIH0pO1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtQQUdFUy5yZnBhZ2VJblNob3AubmFtZX1gLFxuICAgICAgbWF0Y2g6IFBBR0VTLnJmcGFnZUluU2hvcCxcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmdldEluU2hvcEZyZWVEYWlseVBhY2spIHtcbiAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRyaWFsID0gdGhpcy50YXNrU3RhdHVzW1RBU0tTLmdldEluU2hvcEZyZWVEYWlseVBhY2tdWyd0cmlhbHMnXTtcbiAgICAgICAgY29uc3QgcmZwYWdlSXNEYWlseUZyZWVQYWNrYWdlTm90Q2xhaW1lZCA9IG5ldyBQYWdlKFxuICAgICAgICAgICdyZnBhZ2VJc0RhaWx5RnJlZVBhY2thZ2VOb3RDbGFpbWVkJyxcbiAgICAgICAgICBbXG4gICAgICAgICAgICB7IHg6IDE4NSwgeTogMTg5LCByOiAyMTcsIGc6IDYxLCBiOiA1MyB9LFxuICAgICAgICAgICAgeyB4OiAyMTMsIHk6IDE4MSwgcjogMjMwLCBnOiAxMDAsIGI6IDEzMiB9LFxuICAgICAgICAgICAgeyB4OiAyMzAsIHk6IDE3MCwgcjogMTM5LCBnOiAyMTEsIGI6IDEzMCB9LFxuICAgICAgICAgICAgeyB4OiAyMzIsIHk6IDE0MywgcjogMjU1LCBnOiAyNDgsIGI6IDE2MCB9LFxuICAgICAgICAgICAgeyB4OiAyNTgsIHk6IDE1MiwgcjogMjQ1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgICAgICAgICAgeyB4OiAxOTYsIHk6IDE0OSwgcjogMTksIGc6IDEyOCwgYjogMjEzIH0sXG4gICAgICAgICAgICB7IHg6IDI3MCwgeTogODcsIHI6IDU5LCBnOiA1MCwgYjogOTggfSxcbiAgICAgICAgICAgIHsgeDogNTI1LCB5OiAyMCwgcjogNSwgZzogMTM3LCBiOiAyNTQgfSxcbiAgICAgICAgICAgIHsgeDogMTgzLCB5OiA4MywgcjogNDMsIGc6IDQyLCBiOiAyNCB9LFxuICAgICAgICAgIF0sXG4gICAgICAgICAgeyB4OiAyMDYsIHk6IDE1NyB9XG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IHJmcGFnZUlzRGFpbHlGcmVlUGFja2FnZUNsYWltZWQgPSBuZXcgUGFnZShcbiAgICAgICAgICAncmZwYWdlSXNEYWlseUZyZWVQYWNrYWdlQ2xhaW1lZCcsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgeyB4OiAyNzMsIHk6IDIxMCwgcjogMjA3LCBnOiAyMiwgYjogMjQgfSxcbiAgICAgICAgICAgIHsgeDogMjEyLCB5OiAyMzUsIHI6IDIwNiwgZzogMjA2LCBiOiAyMDYgfSxcbiAgICAgICAgICAgIHsgeDogMTg5LCB5OiAxODUsIHI6IDc0LCBnOiA0NywgYjogMjMgfSxcbiAgICAgICAgICAgIHsgeDogMjEyLCB5OiAxODIsIHI6IDc3LCBnOiAzMywgYjogNDQgfSxcbiAgICAgICAgICAgIHsgeDogMjAxLCB5OiAxMzYsIHI6IDM2LCBnOiA3OSwgYjogODUgfSxcbiAgICAgICAgICAgIHsgeDogMjMyLCB5OiAxNDQsIHI6IDg1LCBnOiA4MywgYjogNTMgfSxcbiAgICAgICAgICAgIHsgeDogNTIxLCB5OiAyMCwgcjogNSwgZzogMTMzLCBiOiAyNTUgfSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIHsgeDogNjE2LCB5OiAxOCB9XG4gICAgICAgICk7XG5cbiAgICAgICAgLy8gY29uc3QgcmZwYWdlTmVjZXNzaXRpZXMgPSBuZXcgUGFnZSgncmZwYWdlTmVjZXNzaXRpZXMnLCBbeyB4OiAxMTQsIHk6IDcwLCByOiAyNTUsIGc6IDEwOSwgYjogMTA3IH1dKTtcbiAgICAgICAgY29uc3QgcmZwYWdlTmVjZXNzaXRpZXNQbnQgPSB7IHg6IDExNCwgeTogNTggfTtcblxuICAgICAgICBjb25zdCB4ID0gcmZwYWdlTmVjZXNzaXRpZXNQbnQueDtcbiAgICAgICAgbGV0IHkgPSByZnBhZ2VOZWNlc3NpdGllc1BudC55O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDY7IGkrKykge1xuICAgICAgICAgIHkgPSByZnBhZ2VOZWNlc3NpdGllc1BudC55ICsgaSAqIDQ2O1xuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4LCB5IH0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKHRoaXMuY29uZmlnLnNsZWVwQW5pbWF0ZSAqIDIpO1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJblNob3AsIHNjcm9sbCBkb3duIHRvIGRhaWx5IGdpZnQsIHRyaWFsOiAjJHt0cmlhbH0sIHRhcHBpbmcgKCR7eH0sICR7eX0pYCk7XG5cbiAgICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlSXNEYWlseUZyZWVQYWNrYWdlQ2xhaW1lZCkpIHtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZnBhZ2VJc0RhaWx5RnJlZVBhY2thZ2VDbGFpbWVkLCB0YXNrIGZpbmlzaGVkJyk7XG4gICAgICAgICAgICByZXJvdXRlci5nb05leHQocmZwYWdlSXNEYWlseUZyZWVQYWNrYWdlQ2xhaW1lZCk7XG4gICAgICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9IGVsc2UgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUlzRGFpbHlGcmVlUGFja2FnZU5vdENsYWltZWQpKSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlSXNEYWlseUZyZWVQYWNrYWdlTm90Q2xhaW1lZCwgdGFwIGl0Jyk7XG4gICAgICAgICAgICByZXJvdXRlci5nb05leHQocmZwYWdlSXNEYWlseUZyZWVQYWNrYWdlTm90Q2xhaW1lZCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyaWFsIDwgNykge1xuICAgICAgICAgIHNjcm9sbERvd25BTG90KHsgeDogNjAsIHk6IDMwMCB9KTtcblxuICAgICAgICAgIGlmICh0cmlhbCA+IDMpIHtcbiAgICAgICAgICAgIHN3aXBlRnJvbVRvUG9pbnQoeyB4OiA2MCwgeTogNzEgfSwgeyB4OiA2MCwgeTogMjEwIH0sIDUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBTaG9wIG1lbnUgc3dpcGUgdXBcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHtcbiAgICAgICAgICAgIHg6IHgsXG4gICAgICAgICAgICB5OiB5LFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICAgICAgICAvLyBpdGVtcyBzd2lwZSB0byBsZWZ0IG1vc3RcbiAgICAgICAgICBzY3JvbGxMZWZ0QUxvdCh7IHg6IDEzNywgeTogMjY4IH0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuXG4gICAgICAgICAgdGhpcy50YXNrU3RhdHVzW1RBU0tTLmdldEluU2hvcEZyZWVEYWlseVBhY2tdWyd0cmlhbHMnXSsrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudGFza1N0YXR1c1tUQVNLUy5nZXRJblNob3BGcmVlRGFpbHlQYWNrXVsndHJpYWxzJ10gPSAwO1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBDYW5ub3QgZmluZCBkYWlseSBwYWNrLCBtYXggcmV0cnkgcmVhY2hlZDogJHt0aGlzLnRhc2tTdGF0dXNbVEFTS1MuZ2V0SW5TaG9wRnJlZURhaWx5UGFja11bJ3RyaWFscyddfSwgc2tpcHBpbmcgdGhpcyB0YXNrYCk7XG4gICAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICAgIGZpbmlzaFJvdW5kKHRyaWFsKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlSW5HYWNoYS5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlSW5HYWNoYSxcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmdldEdhY2hhRGFpbHlGcmVlUGFjaykge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZnBhZ2VJbkdhY2hhLCBidXQgbm90IFRBU0tTLmdldEluU2hvcEZyZWVEYWlseVBhY2sgc28gc2VuZCBiYWNrJyk7XG4gICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCByZnBhZ2VEYWlseUdpZnROb3RDbGFpbWVkID0gbmV3IFBhZ2UoXG4gICAgICAgICAgJ3JmcGFnZURhaWx5R2lmdE5vdENsYWltZWQnLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIHsgeDogNTMxLCB5OiAzMTEsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgICAgICAgICB7IHg6IDMzMiwgeTogMjMxLCByOiAxOTgsIGc6IDE5MSwgYjogMTcyIH0sXG4gICAgICAgICAgICB7IHg6IDQ0NCwgeTogMjM0LCByOiA2OCwgZzogOTQsIGI6IDE0OSB9LFxuICAgICAgICAgICAgeyB4OiAyOTIsIHk6IDI2MCwgcjogOTEsIGc6IDEwOSwgYjogMTI1IH0sXG4gICAgICAgICAgICB7IHg6IDEwMiwgeTogMzIxLCByOiAzMSwgZzogMjAyLCBiOiAyNTUgfSxcbiAgICAgICAgICAgIHsgeDogNTI1LCB5OiAyMSwgcjogMCwgZzogMTM4LCBiOiAyNTUgfSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIHsgeDogNTMxLCB5OiAzMTEgfVxuICAgICAgICApO1xuICAgICAgICBjb25zdCByZnBhZ2VEYWlseUdpZnRDbGFpbWVkID0gbmV3IFBhZ2UoJ3JmcGFnZURhaWx5R2lmdENsYWltZWQnLCBbXG4gICAgICAgICAgLy8gT0tcbiAgICAgICAgICB7IHg6IDYwNywgeTogMzA3LCByOiAxNjAsIGc6IDE2MCwgYjogMTYwIH0sXG4gICAgICAgICAgeyB4OiA1MjAsIHk6IDMwMiwgcjogMTgwLCBnOiAxODAsIGI6IDE4MCB9LFxuICAgICAgICAgIHsgeDogMjk4LCB5OiAxNjEsIHI6IDE0NSwgZzogMTQzLCBiOiAxMjMgfSxcbiAgICAgICAgICB7IHg6IDEwMCwgeTogMzI3LCByOiAzMCwgZzogMjMwLCBiOiAyNTUgfSxcbiAgICAgICAgXSk7XG4gICAgICAgIGNvbnN0IHJmcGFnZURhaWx5V2F0Y2hBZGRHaWZ0ID0gbmV3IFBhZ2UoJ3JmcGFnZURhaWx5V2F0Y2hBZGRHaWZ0JywgW1xuICAgICAgICAgIHsgeDogNTI1LCB5OiAzMjEsIHI6IDAsIGc6IDE1MCwgYjogMjE0IH0sXG4gICAgICAgICAgeyB4OiAxMDQsIHk6IDMxOCwgcjogMTcsIGc6IDE5MSwgYjogMjU1IH0sXG4gICAgICAgICAgeyB4OiAzMjYsIHk6IDIzNSwgcjogMjA2LCBnOiAyMDgsIGI6IDE5MiB9LFxuICAgICAgICAgIHsgeDogMzM4LCB5OiAyNTksIHI6IDMzLCBnOiAzOSwgYjogNTIgfSxcbiAgICAgICAgICB7IHg6IDQ2NCwgeTogMjIzLCByOiAxMjMsIGc6IDIxMSwgYjogMjQ3IH0sXG4gICAgICAgIF0pO1xuICAgICAgICB2YXIgZGFpbHlHaWZ0WXMgPSBbMjgwLCAyMjUsIDE3MF07XG5cbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JmcGFnZUluR2FjaGEsIGNvbGxlY3QgZ2FjaGEgZnJlZSBkYWlseSBnaWZ0Jyk7XG4gICAgICAgIHN3aXBlRnJvbVRvUG9pbnQoeyB4OiAzMCwgeTogMjcwIH0sIHsgeDogMzAsIHk6IDUwIH0sIDUpO1xuXG4gICAgICAgIGZvciAobGV0IGkgaW4gZGFpbHlHaWZ0WXMpIHtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzAsIHk6IGRhaWx5R2lmdFlzW2ldIH0pO1xuICAgICAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZURhaWx5R2lmdENsYWltZWQsIDIwMDApKSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAnRGFpbHkgZ2FjaGEgZ2lmdCBhbHJlYWR5IGNsYWltZWQnKTtcbiAgICAgICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlRGFpbHlXYXRjaEFkZEdpZnQpKSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAnRmluaXNoIHJvdW5kIGZvciBub3cgYXMgc2VlbXMgbGlrZSB3aWxsIHN0dWNrIGluIGFkcycpO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfSBlbHNlIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VEYWlseUdpZnROb3RDbGFpbWVkKSkge1xuICAgICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZURhaWx5R2lmdE5vdENsYWltZWQpO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIC8vIEhvdCBhaXIgYmFsbG9uIHBhZ2VzXG4gICAgYWRkSG90QWlyQmFsbG9uUm91dGVzKCk7XG5cbiAgICAvLyBUcmFpbiBwYWdlc1xuICAgIC8vIFRPRE86IE5H77yBIOeUqOmRveiyt+adseilv+eahOmggemdouacg+iiq+WIpOaWt+aIkCByZnBhZ2VOZXdEYXRhUGFja0Rvd25sb2FkRmFpbGVkIO+8jOacg+iHquWLleaMieS4i+iKsemRveefs+iyt+adseilv1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtQQUdFUy5yZnBhZ2VJblRyYWluU3RhdGlvbi5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlSW5UcmFpblN0YXRpb24sXG4gICAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy50cmFpbiAmJiBjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MucmVzb2x2ZUdyZWVuQ2hlY2tzKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUluVHJhaW5TdGF0aW9uLCBsZWF2ZSBiZWNhdXNlIGN1cnJlbnQgdGFzayBpcyBub3QgdHJhaW4sIGJ1dDogJHtjb250ZXh0LnRhc2submFtZX1gKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNjE4LCB5OiAyOCB9KTsgLy8gdGFwIFhcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlSW5UcmFpblN0YXRpb24sIGhhbmRsZSB0cmFpbicpO1xuXG4gICAgICAgIGNvbnN0IHJmcGFnZUZpcnN0VHJhaW5PdXQgPSBuZXcgUGFnZSgncmZwYWdlRmlyc3RUcmFpbk91dCcsIFtcbiAgICAgICAgICB7IHg6IDQzMCwgeTogOTUsIHI6IDEyMSwgZzogMjI3LCBiOiAwIH0sXG4gICAgICAgICAgeyB4OiA0NTQsIHk6IDk0LCByOiAyMzEsIGc6IDE0MiwgYjogODMgfSxcbiAgICAgICAgXSk7XG4gICAgICAgIGNvbnN0IHJmcGFnZVNlY29uZFRyYWluT3V0ID0gbmV3IFBhZ2UoJ3JmcGFnZVNlY29uZFRyYWluT3V0JywgW1xuICAgICAgICAgIHsgeDogNDMwLCB5OiAxOTgsIHI6IDEyOSwgZzogMjI3LCBiOiAwIH0sXG4gICAgICAgICAgeyB4OiA0NTMsIHk6IDE5OSwgcjogMjI5LCBnOiAxNDgsIGI6IDg1IH0sXG4gICAgICAgIF0pO1xuICAgICAgICBjb25zdCByZnBhZ2VUaGlyZFRyYWluT3V0ID0gbmV3IFBhZ2UoJ3JmcGFnZVRoaXJkVHJhaW5PdXQnLCBbXG4gICAgICAgICAgeyB4OiA0MzAsIHk6IDMwMiwgcjogMTIxLCBnOiAyMjcsIGI6IDAgfSxcbiAgICAgICAgICB7IHg6IDQ1NSwgeTogMzAxLCByOiAyMzEsIGc6IDEzOCwgYjogODIgfSxcbiAgICAgICAgXSk7XG5cbiAgICAgICAgaWYgKCFyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZUZpcnN0VHJhaW5PdXQsIGltYWdlKSkge1xuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAyNTUsIHk6IDExMCB9KTtcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjEwLCB5OiAxMTAgfSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDE3MCwgeTogMTEwIH0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuXG4gICAgICAgICAgY2hlY2tJZlRyYWluUmVxdWlyZW1lbnRNZXQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlU2Vjb25kVHJhaW5PdXQsIGltYWdlKSkge1xuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAyNTUsIHk6IDIwOCB9KTtcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjEwLCB5OiAyMDggfSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDE3MCwgeTogMjA4IH0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuXG4gICAgICAgICAgY2hlY2tJZlRyYWluUmVxdWlyZW1lbnRNZXQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlVGhpcmRUcmFpbk91dCwgaW1hZ2UpKSB7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDI1NSwgeTogMzA3IH0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAyMTAsIHk6IDMwNyB9KTtcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMTcwLCB5OiAzMDcgfSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG5cbiAgICAgICAgICBjaGVja0lmVHJhaW5SZXF1aXJlbWVudE1ldCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmF1dG9Db2xsZWN0VHJhaW5JbnRlcnZhbEluTWlucyA9PSAwKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ2hhbmRsZVRyYWluU3RhdGlvbiBza2lwcGVkIGFzIGF1dG9Db2xsZWN0VHJhaW5JbnRlcnZhbEluTWlucyBpcyBzZXQgdG8gMCcpO1xuICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIFV0aWxzLnNsZWVwKDgwMDApO1xuXG4gICAgICAgIGNvbnN0IGZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uU2VuZEFsbCk7XG4gICAgICAgIGZvciAobGV0IGkgaW4gZm91bmRSZXN1bHRzKSB7XG4gICAgICAgICAgbGV0IHNlbmRUcmFpbkJ0biA9IGZvdW5kUmVzdWx0c1tpXTtcbiAgICAgICAgICBzZW5kVHJhaW5CdG4ueCArPSAzMDtcbiAgICAgICAgICBzZW5kVHJhaW5CdG4ueSArPSAxNTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKGZvdW5kUmVzdWx0c1tpXSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChmb3VuZFJlc3VsdHNbaV0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZm91bmRSZXN1bHRzU21hbGwgPSBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvblNlbmRBbGxTbWFsbCk7XG4gICAgICAgIGZvciAobGV0IGkgaW4gZm91bmRSZXN1bHRzU21hbGwpIHtcbiAgICAgICAgICBsZXQgc2VuZFRyYWluQnRuID0gZm91bmRSZXN1bHRzU21hbGxbaV07XG4gICAgICAgICAgc2VuZFRyYWluQnRuLnggKz0gMzA7XG4gICAgICAgICAgc2VuZFRyYWluQnRuLnkgKz0gMTU7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChmb3VuZFJlc3VsdHNTbWFsbFtpXSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChmb3VuZFJlc3VsdHNTbWFsbFtpXSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucmZwYWdlSW5UcmFpblN0YXRpb24pO1xuICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYFRyaWVkIHRvIHNlbnQgJHtmb3VuZFJlc3VsdHMubGVuZ3RoICsgZm91bmRSZXN1bHRzU21hbGwubGVuZ3RofSB0cmFpbnNgKTtcbiAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBXaXNoaW5nIHRyZWVzXG4gICAgYWRkV2lzaGluZ1RyZWVSb3V0ZXMoKTtcblxuICAgIC8vIEZvdW50YWluXG4gICAgYWRkRm91bnRhaW5Sb3V0ZXMoKTtcblxuICAgIC8vIFBWUFxuICAgIGFkZFB2cEFyZW5hUm91dGVzKCk7XG4gICAgLy8gU3VwZXIgTWF5aGVtXG4gICAgYWRkU3VwZXJNYXloZW1Sb3V0ZXMoKTtcblxuICAgIC8vIFRyb3BpY2FsIElzbGFuZFxuICAgIGFkZFRyb3BpY2FsSXNsYW5kUm91dGVzKCk7XG5cbiAgICAvLyBCb3VudGllc1xuICAgIGFkZEJvdW50aWVzUm91dGVzKCk7XG5cbiAgICAvLyBHbm9tZSBsYWJcbiAgICBhZGRHbm9tZUxhYlJvdXRlcygpO1xuXG4gICAgLy8gVHJhZGUgaGFib3JcbiAgICBhZGRUcmFkZUhhYm9yUm91dGVzKCk7XG5cbiAgICAvLyBHdWlsZFxuICAgIGFkZEd1aWxkUm91dGVzKCk7XG5cbiAgICAvLyBUb3dlciBvZiBTd2VldCBDaG9hc1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtQQUdFUy5yZnBhZ2VJblRvd2VyT2ZTd2VldENoYW9zLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VJblRvd2VyT2ZTd2VldENoYW9zLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MudG93ZXJPZlN3ZWV0Q2hhb3MpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgJHtjb250ZXh0LnBhdGh9LCBidXQgY3VycmVudCB0YXNrIGlzICR7Y29udGV4dC50YXNrLm5hbWV9LCBza2lwcGluZ2ApO1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYCR7Y29udGV4dC5wYXRofSwgYWJvdXQgdG8gc3RhcnQgaGFuZGxlVG93ZXJPZlN3ZWV0Q2hhb3MsIHNlbmQgcnVubmluZ2ApO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG5cbiAgICAgICAgY29uc3QgcmZwYWdlSGFzVHJheUp1bXAgPSBuZXcgUGFnZShcbiAgICAgICAgICAncmZwYWdlSGFzVHJheUp1bXAnLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIHsgeDogMzM4LCB5OiAxNSwgcjogODIsIGc6IDAsIGI6IDAgfSxcbiAgICAgICAgICAgIHsgeDogNDA5LCB5OiAxOCwgcjogMCwgZzogMTMxLCBiOiAyNTUgfSxcbiAgICAgICAgICAgIHsgeDogNDMsIHk6IDMyMywgcjogMjE0LCBnOiA4OSwgYjogMjQ3IH0sXG4gICAgICAgICAgICB7IHg6IDMyLCB5OiAzMTksIHI6IDk1LCBnOiAyMCwgYjogMjcgfSxcbiAgICAgICAgICAgIHsgeDogMzAsIHk6IDMzMCwgcjogMzMsIGc6IDgsIGI6IDggfSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIHsgeDogMzAsIHk6IDMyNiB9XG4gICAgICAgICk7XG4gICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZUhhc1RyYXlKdW1wLCBpbWFnZSkpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgRm91bmQgcmZwYWdlSGFzVHJheUp1bXAgc28gdGFwIGl0YCk7XG4gICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUhhc1RyYXlKdW1wKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZG93bkFycm93ID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25Ub3dlck9mU3dlZXRDaG9hc0Rvd25BcnJvdyk7XG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhkb3duQXJyb3cpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKGRvd25BcnJvd1swXSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoNTAwMCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMTgwLCB5OiAzMCB9KTsgLy8gVGFwIHVwIGFycm93XG4gICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDE4MCwgeTogMTMwIH0pOyAvLyBHbyB0byB0aGUgdG9wIHRyYXlcbiAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG5cbiAgICAgICAgLy8g5Zyo55Sc6bue5aGU5pyJ5Y+v6IO95pyD5piv5oiw6ayl5oiW6KaB6ZaL5a+2566xXG4gICAgICAgIGNvbnN0IHJmcGFnZVRvU0NUcmVhc3VyZUNoZXN0ID0gbmV3IFBhZ2UoXG4gICAgICAgICAgJ3JmcGFnZVRvU0NUcmVhc3VyZUNoZXN0JyxcbiAgICAgICAgICBbXG4gICAgICAgICAgICB7IHg6IDQ0MywgeTogMzI4LCByOiAxOTgsIGc6IDQ0LCBiOiA1NyB9LFxuICAgICAgICAgICAgeyB4OiAzODgsIHk6IDYzLCByOiA4NCwgZzogNDEsIGI6IDExNCB9LFxuICAgICAgICAgICAgeyB4OiA0MjIsIHk6IDEyNSwgcjogMTE4LCBnOiA3OCwgYjogODUgfSxcbiAgICAgICAgICAgIHsgeDogNDA3LCB5OiAxMzcsIHI6IDI1NSwgZzogMTA1LCBiOiAxNTYgfSxcbiAgICAgICAgICAgIHsgeDogNDM3LCB5OiAxNDksIHI6IDMzLCBnOiAwLCBiOiAwIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgICB7IHg6IDQ0MywgeTogMzI4IH1cbiAgICAgICAgKTtcbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlVG9TQ1RyZWFzdXJlQ2hlc3QsIGltYWdlKSkge1xuICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VUb1NDVHJlYXN1cmVDaGVzdCk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoMjAwMCk7XG5cbiAgICAgICAgICBpZiAoIXRhcFRocm91Z2hBbmltYXRlKFBBR0VTLnJmcGFnZUluVG93ZXJPZlN3ZWV0Q2hhb3MsIFBBR0VTLnJmcGFnZUluVG93ZXJPZlN3ZWV0Q2hhb3MubmV4dCBhcyBYWSwgNzAwMCkpIHtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGAke2NvbnRleHQucGF0aH0sIENhbm5vdCByZXR1cm4gZnJvbSBjb2xsZWN0IHRyZWFzdXJlIGNoZXN0LCBmaW5pc2ggcm91bmRgKTtcbiAgICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgdG9zY1N0YXRlID0gdGhpcy50YXNrU3RhdHVzW1RBU0tTLnRvd2VyT2ZTd2VldENoYW9zXTtcbiAgICAgICAgaWYgKHRvc2NTdGF0ZS50cnlDb3VudCA+IHRvc2NTdGF0ZS50cnlMaW1pdCkge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGAke2NvbnRleHQucGF0aH0sIG1heGltdW0gYmF0dGxlIGNvdW50IHJlYWNoZWQgJHt0b3NjU3RhdGUudHJ5TGltaXR9LCBmaW5pc2ggcm91bmRgKTtcbiAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA1NzEsIHk6IDMyNyB9KTtcbiAgICAgICAgICB0b3NjU3RhdGUudHJ5Q291bnQrKztcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlUmVhZHlUb0JhdHRsZVRvU0MubmFtZX1gLFxuICAgICAgbWF0Y2g6IFBBR0VTLnJmcGFnZVJlYWR5VG9CYXR0bGVUb1NDLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MudG93ZXJPZlN3ZWV0Q2hhb3MpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgJHtjb250ZXh0LnBhdGh9LCBidXQgY3VycmVudCB0YXNrIGlzICR7Y29udGV4dC50YXNrLm5hbWV9LCBza2lwcGluZ2ApO1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYCR7Y29udGV4dC5wYXRofSwgdGFwIGJhdHRsZWApO1xuICAgICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucmZwYWdlUmVhZHlUb0JhdHRsZVRvU0MpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlVG9TQ1RyYXlKdW1wTmVlZE1vcmVLZXkubmFtZX1gLFxuICAgICAgbWF0Y2g6IFBBR0VTLnJmcGFnZVRvU0NUcmF5SnVtcE5lZWRNb3JlS2V5LFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MudG93ZXJPZlN3ZWV0Q2hhb3MpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgJHtjb250ZXh0LnBhdGh9LCBidXQgY3VycmVudCB0YXNrIGlzICR7Y29udGV4dC50YXNrLm5hbWV9LCBza2lwcGluZ2ApO1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYCR7Y29udGV4dC5wYXRofSwgbm90IGVub3VnaCBrZXksIHNraXAgYW5kIGZpbmlzaCB0YXNrYCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIFV0aWxzLnNsZWVwKDEwMDApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICBVdGlscy5zbGVlcCgxMDAwKTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgLy8gQmF0dGxlIGhhbmRsaW5nXG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke1BBR0VTLnJmcGFnZUJhdHRsZVBhdXNlZC5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlQmF0dGxlUGF1c2VkLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VCYXR0bGVQYXVzZWQsIGhhbmRsZSBpdGApO1xuICAgICAgICBzd2l0Y2ggKGNvbnRleHQudGFzay5uYW1lKSB7XG4gICAgICAgICAgY2FzZSBUQVNLUy5wdnA6XG4gICAgICAgICAgY2FzZSBUQVNLUy5zdXBlck1heWhlbTpcbiAgICAgICAgICBjYXNlIFRBU0tTLnRyb3BpY2FsSXNsYW5kQ2xlYXJCdWJibGU6XG4gICAgICAgICAgY2FzZSBUQVNLUy5ib3VudGllczpcbiAgICAgICAgICBjYXNlIFRBU0tTLnRvd2VyT2ZTd2VldENoYW9zOlxuICAgICAgICAgIGNhc2UgVEFTS1MuZ3VpbGRCYXR0bGVEcmFnb246XG4gICAgICAgICAgY2FzZSBUQVNLUy5ndWlsZEJhdHRsZUFsbGlhbmNlOlxuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMxNSwgeTogMTU5IH0pO1xuICAgICAgICAgICAgdGhpcy5sYXN0QmF0dGxlQ2hlY2tlZCA9IERhdGUubm93KCk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCg1MDAwKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgTm90IHN1cmUgd2h5IGluIGJhdHRsZSwgdGFwIGNvbnRpbnVlIGFnYWluIGluIDUgc2Vjc2ApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMxNSwgeTogMTU5IH0pO1xuICAgICAgICAgICAgdGhpcy5sYXN0QmF0dGxlQ2hlY2tlZCA9IERhdGUubm93KCk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCg1MDAwKTtcbiAgICAgICAgICAvLyBUT0RPOiB3aWxsIGZhaWwgd2hlbiByZXN1bWUgYmF0dGxlXG4gICAgICAgICAgLy8gY29uc29sZS5sb2coJ0kgYW0gcmZwYWdlQmF0dGxlUGF1c2VkLCBwYW5pYyBhbmQgZG9ubm8gd2hhdCB0byBkbycpO1xuICAgICAgICAgIC8vIGlpKys7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSk7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke1BBR0VTLnJmcGFnZUJhdHRsZUZpbmlzaGVkLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VCYXR0bGVGaW5pc2hlZCxcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlQmF0dGxlRmluaXNoZWQsIHRhcCBpdCBhbmQgcmVzZXQgYm90U3RhdHVzLmJhdHRsZVN0YXJ0ZWQgdG8gMCcpO1xuICAgICAgICBnbG9iYWxTdG9yYWdlLmJvdFN0YXR1cy5iYXR0bGVTdGFydGVkID0gMDtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnJmcGFnZUJhdHRsZUZpbmlzaGVkKTtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke1BBR0VTLnJmcGFnZUFkZE1vcmVDb29raWVzLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VBZGRNb3JlQ29va2llcyxcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaW4gcmZwYWdlQWRkTW9yZUNvb2tpZXMsIGNhbm5vdCBzdGFydCBiYXR0bGUgc28gZmluaXNoIGN1cnJlbnQgdGFza2ApO1xuICAgICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucmZwYWdlQWRkTW9yZUNvb2tpZXMpO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIC8vIFByb2R1Y3Rpb25cbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlSW5Db29raWVBY3Rpdml0eURhc2hib2FyZC5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlSW5Db29raWVBY3Rpdml0eURhc2hib2FyZCxcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBjb25zdCByZnBhZ2VQcm9kdWN0aW9uRGFzaGJvYXJkRGlzYWJsZWQgPSBuZXcgUGFnZSgncmZwYWdlUHJvZHVjdGlvbkRhc2hib2FyZERpc2FibGVkJywgW1xuICAgICAgICAgIHsgeDogNDg5LCB5OiAzMzMsIHI6IDE0MCwgZzogMTM2LCBiOiAxMzIgfSxcbiAgICAgICAgICB7IHg6IDQ4NCwgeTogMzMzLCByOiA0NywgZzogNTEsIGI6IDU4IH0sXG4gICAgICAgICAgeyB4OiA0NjksIHk6IDMzMSwgcjogMzcsIGc6IDUwLCBiOiA3MyB9LFxuICAgICAgICAgIHsgeDogMzQ0LCB5OiAzNDAsIHI6IDc0LCBnOiA5MCwgYjogMTExIH0sXG4gICAgICAgICAgeyB4OiAzMDgsIHk6IDMzOCwgcjogNTgsIGc6IDcyLCBiOiAxMTAgfSxcbiAgICAgICAgXSk7XG4gICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZVByb2R1Y3Rpb25EYXNoYm9hcmREaXNhYmxlZCwgaW1hZ2UpKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmcGFnZUluQ29va2llQWN0aXZpdHlEYXNoYm9hcmQsIGNhbm5vdCBtb3ZlIHRvIHByb2R1Y3Rpb24gZGFzaGJvYXJkLCBzZW5kIHJ1bm5pbmcgYW5kIHNraXAgcHJvZHVjdGlvbmApO1xuICAgICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaW4gcmZwYWdlSW5Db29raWVBY3Rpdml0eURhc2hib2FyZCwgZ28gdG8gcHJvZHVjdGlvbiBkYXNoYm9hcmRgKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnJmcGFnZUluQ29va2llQWN0aXZpdHlEYXNoYm9hcmQpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlSW5Qcm9kdWN0aW9uLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VJblByb2R1Y3Rpb24sXG4gICAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5wcm9kdWN0aW9uKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUluUHJvZHVjdGlvbiwgbGVhdmUgYmVjYXVzZSBjdXJyZW50IHRhc2sgaXMgbm90IHByb2R1Y3Rpb24sIGJ1dDogJHtjb250ZXh0LnRhc2submFtZX1gKTtcbiAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIDEuIGNvdW50IGVtcHR5IHNsb3RzXG4gICAgICAgIGNvbGxlY3RGaW5pc2hlZEdvb2RzKCk7XG4gICAgICAgIHZhciBlbXB0eVNsb3RzID0gY291bnRQcm9kdWN0aW9uU2xvdEF2YWlsYWJsZSgpO1xuICAgICAgICBpZiAoZW1wdHlTbG90cyA9PT0gMCkge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdObyBhdmFpbGFibGUgcHJvZHVjdGlvbiBzbG90LCBza2lwIHRoaXMgcHJvZHVjdGlvbicpO1xuICAgICAgICAgIGhhbmRsZU5leHRQcm9kdWN0aW9uQnVpbGRpbmcodGhpcy5jb25maWcuYnVpbGRUb3dhcmRzVGhlTGVmdCk7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGVtcHR5U2xvdHM6ICR7ZW1wdHlTbG90c31gKTtcblxuICAgICAgICAvLyAyLiBoYW5kbGUgbWF0ZXJpYWwvZ29vZCBwcm9kdWN0aW9uXG4gICAgICAgIHZhciBtYXRlcmlhbENvdW50ID0gb2NyTnVtYmVySW5SZWN0KHsgeDogMzU1LCB5OiAxMCwgdzogMzUsIGg6IDE4IH0sIElDT05TLndOdW1iZXJzKTtcbiAgICAgICAgaWYgKG1hdGVyaWFsQ291bnQgPT0gLTEpIHtcbiAgICAgICAgICAvLyAyLjEgaWYgaXQgaXMgZ29vZCBwcm9kdWN0aW9uIChub3QgbWF0ZXJpYWwgb25lcyksIGJ1aWxkIGl0XG4gICAgICAgICAgbGV0IG5ld1Nsb3RzID0gbWFrZUdvb2RzVG9UYXJnZXQodGhpcy5jb25maWcuZ29vZHNUYXJnZXQsIHRoaXMuY29uZmlnLnByb2R1Y3RTYWZldHlTdG9jaywgdGhpcy5jb25maWcuYXhlU3RvY2tUbzQwMCk7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYFRoaXMgaXMgbm90IGEgbWF0ZXJpYWwgcHJvZHVjdGlvbiwgbWFrZUdvb2RzVG9UYXJnZXQgcmV0dXJuICR7bmV3U2xvdHN9YCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gMi4yIGl0IGlzIG1hdGVyaWFsIHByb2R1Y3Rpb25cbiAgICAgICAgICBjb25zdCBtYXRlcmlhbFR5cGVzID0gcmVyb3V0ZXIuZ2V0UGFnZXNNYXRjaEltYWdlKFBBR0VTLmdyb3VwUGFnZU1hdGVyaWFsUHJvZE1lbnUsIGltYWdlKTtcbiAgICAgICAgICBpZiAobWF0ZXJpYWxUeXBlcy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBtYXRlcmlhbFR5cGVzLmxlbmd0aCBpcyAtMSwgY2Fubm90IHJlY29nbml6ZSB0aGlzIHByb2R1Y3Rpb24sIGNoZWNrSWZOZWVkQ3Jhc2goKWApO1xuICAgICAgICAgICAgY2hlY2tJZk5lZWRDcmFzaCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IG1hdGVyaWFsVHlwZSA9IG1hdGVyaWFsVHlwZXNbMF07XG4gICAgICAgICAgaWYgKHRoaXMudGFza1N0YXR1c1tUQVNLUy5wcm9kdWN0aW9uXS5sYXN0UHJvZHVjdGlvbkJ1aWxkaW5nICE9PSBtYXRlcmlhbFR5cGUubmFtZSkge1xuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYG1hdGVyaWFsIGJ1aWxkaW5nIGNoYW5nZWQsIHNlbmQgcnVubmluZ2ApO1xuICAgICAgICAgICAgdGhpcy50YXNrU3RhdHVzW1RBU0tTLnByb2R1Y3Rpb25dLmxhc3RQcm9kdWN0aW9uQnVpbGRpbmcgPSBtYXRlcmlhbFR5cGUubmFtZTtcbiAgICAgICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAobWF0ZXJpYWxDb3VudCA+PSB0aGlzLmNvbmZpZy5tYXRlcmlhbHNUYXJnZXQpIHtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBTa2lwIGFzIHN0b2NrIGVub3VnaDogJHttYXRlcmlhbENvdW50fWApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgTWF0ZXJpYWwgc29jazogJHttYXRlcmlhbENvdW50fSwgdGFyZ2V0OiAke3RoaXMuY29uZmlnLm1hdGVyaWFsc1RhcmdldH1gKTtcblxuICAgICAgICAgICAgdGhpcy50YXNrU3RhdHVzW1RBU0tTLnByb2R1Y3Rpb25dWydzdG9ja3MnXVttYXRlcmlhbFR5cGUubmFtZV0gPSBtYXRlcmlhbENvdW50O1xuXG4gICAgICAgICAgICBzd2l0Y2ggKG1hdGVyaWFsVHlwZS5uYW1lKSB7XG4gICAgICAgICAgICAgIGNhc2UgJ3JmcGFnZVdvb2RGYXJtJzpcbiAgICAgICAgICAgICAgY2FzZSAncmZwYWdlQmVhbkZhcm0nOlxuICAgICAgICAgICAgICBjYXNlICdyZnBhZ2VTdWdhckZhcm0nOlxuICAgICAgICAgICAgICAgIGlmIChtYXRlcmlhbENvdW50IDwgTWF0aC5taW4oMjAwLCB0aGlzLmNvbmZpZy5tYXRlcmlhbHNUYXJnZXQpKSB7XG4gICAgICAgICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgJHttYXRlcmlhbFR5cGUubmFtZX0sIHNldCB0aGUgcHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZCBiYWNrIHRvIDAgYXMgc3RvY2sgdG8gZmV3OiAke21hdGVyaWFsQ291bnR9ICg8IDIwMClgKTtcbiAgICAgICAgICAgICAgICAgIHRoaXMudGFza1N0YXR1c1tUQVNLUy5wcm9kdWN0aW9uXS5wcm9kdWN0aW9uQnVpbGRpbmdDaGVja2VkID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGNhc2UgJ3JmcGFnZVBvd2RlckZhcm0nOlxuICAgICAgICAgICAgICBjYXNlICdyZnBhZ2VCYXJyeUZhcm0nOlxuICAgICAgICAgICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChQQUdFUy5wcm9kdWN0TWFwcGluZ1syXSkpIHtcbiAgICAgICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGAke21hdGVyaWFsVHlwZS5uYW1lfSwgb3JkZXIgMm5kIGl0ZW1gKTtcbiAgICAgICAgICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChQQUdFUy5wcm9kdWN0TWFwcGluZ1syXSk7XG4gICAgICAgICAgICAgICAgICBVdGlscy5zbGVlcCh0aGlzLmNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnByb2R1Y3RNYXBwaW5nWzJdKTtcbiAgICAgICAgICAgICAgICAgIFV0aWxzLnNsZWVwKHRoaXMuY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGAke21hdGVyaWFsVHlwZS5uYW1lfSwgb3JkZXIgMXN0IGl0ZW1gKTtcbiAgICAgICAgICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChQQUdFUy5wcm9kdWN0TWFwcGluZ1sxXSk7XG4gICAgICAgICAgICAgICAgICBVdGlscy5zbGVlcCh0aGlzLmNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnByb2R1Y3RNYXBwaW5nWzFdKTtcbiAgICAgICAgICAgICAgICAgIFV0aWxzLnNsZWVwKHRoaXMuY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICBjYXNlICdyZnBhZ2VNaWxrRmFybSc6XG4gICAgICAgICAgICAgIGNhc2UgJ3JmcGFnZUNvdHRvbUZhcm0nOlxuICAgICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGAke21hdGVyaWFsVHlwZS5uYW1lfSwgb3JkZXIgMXN0IGl0ZW1gKTtcbiAgICAgICAgICAgICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucHJvZHVjdE1hcHBpbmdbMV0pO1xuICAgICAgICAgICAgICAgIFV0aWxzLnNsZWVwKHRoaXMuY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnByb2R1Y3RNYXBwaW5nWzFdKTtcbiAgICAgICAgICAgICAgICBVdGlscy5zbGVlcCh0aGlzLmNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb3VudFByb2R1Y3Rpb25TbG90QXZhaWxhYmxlKCkgIT09IGVtcHR5U2xvdHMpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgc2xvdHMgY291bnQgY2hhbmdlZCwgc2VuZCBydW5uaW5nYCk7XG4gICAgICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50YXNrU3RhdHVzW1RBU0tTLnByb2R1Y3Rpb25dLnByb2R1Y3Rpb25CdWlsZGluZ0NoZWNrZWQrKztcbiAgICAgICAgaWYgKHRoaXMudGFza1N0YXR1c1tUQVNLUy5wcm9kdWN0aW9uXS5wcm9kdWN0aW9uQnVpbGRpbmdDaGVja2VkID4gMTAwKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGZpbmlzaCBwcm9kdWNpbmcgYXMgcHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZDogJHt0aGlzLnRhc2tTdGF0dXNbVEFTS1MucHJvZHVjdGlvbl0ucHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZH1gKTtcbiAgICAgICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBoYW5kbGVOZXh0UHJvZHVjdGlvbkJ1aWxkaW5nKHRoaXMuY29uZmlnLmJ1aWxkVG93YXJkc1RoZUxlZnQpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlSW5NYWdpY0xhYi5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlSW5NYWdpY0xhYixcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnByb2R1Y3Rpb24pIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5NYWdpY0xhYiwgbGVhdmUgYmVjYXVzZSBjdXJyZW50IHRhc2sgaXMgbm90IHByb2R1Y3Rpb24sIGJ1dDogJHtjb250ZXh0LnRhc2submFtZX1gKTtcbiAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb25maWcubWFnaWNMYWJQcm9kdWN0SW5kZXggPT09IDAgfHwgdGhpcy5jb25maWcuc2tpcE1hZ2ljTGFiUHJvZHVjdGlvbikge1xuICAgICAgICAgIGhhbmRsZU5leHRQcm9kdWN0aW9uQnVpbGRpbmcodGhpcy5jb25maWcuYnVpbGRUb3dhcmRzVGhlTGVmdCk7XG4gICAgICAgICAgdGhpcy50YXNrU3RhdHVzW1RBU0tTLnByb2R1Y3Rpb25dLnByb2R1Y3Rpb25CdWlsZGluZ0NoZWNrZWQrKztcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgc2tpcCByZnBhZ2VJbk1hZ2ljTGFiLCBwcm9kdWN0aW9uQnVpbGRpbmdDaGVja2VkOiAke3RoaXMudGFza1N0YXR1c1tUQVNLUy5wcm9kdWN0aW9uXS5wcm9kdWN0aW9uQnVpbGRpbmdDaGVja2VkfWApO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBJdHMgbWFnaWMgbGFiLCBidWlsZCBzZWxlY3RlZCAke3RoaXMuY29uZmlnLm1hZ2ljTGFiUHJvZHVjdEluZGV4fXRoIGl0ZW1gKTtcbiAgICAgICAgc3dpcGVGcm9tVG9Qb2ludCh7IHg6IDUwMCwgeTogMTQwIH0sIHsgeDogNTAwLCB5OiAxMDAwIH0sIDQpOyAvLyBwdWxsIHRvIHRvcFxuXG4gICAgICAgIHZhciBwcm9kdWN0SWR4ID0gdGhpcy5jb25maWcubWFnaWNMYWJQcm9kdWN0SW5kZXg7XG4gICAgICAgIHdoaWxlIChwcm9kdWN0SWR4ID4gOCkge1xuICAgICAgICAgIHByb2R1Y3RJZHggLT0gODtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgTW92ZSBkb3duIDIgcm93cywgbm93IHByb2R1Y3RJZHg6ICR7cHJvZHVjdElkeH1gKTtcblxuICAgICAgICAgIHN3aXBlRnJvbVRvUG9pbnQoeyB4OiA1ODcsIHk6IDE3MiB9LCB7IHg6IDU5MCwgeTogNDAgfSwgMTIpO1xuICAgICAgICAgIHNsZWVwKDE1MDApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gd29ya2Fyb3VuZCBmb3IgdGhlcmUgbWFnaWMgY2FuZGllcyAlIDggPCA0IChvbmx5IDE5IG9mIHRoZW0gaW4gTm92IDI1LCAyMDIzKVxuICAgICAgICBjb25zdCByZnBhZ2VMYXN0Q2FuZHlTbG90RW1wdHkgPSBuZXcgUGFnZSgncmZwYWdlTGFzdENhbmR5U2xvdEVtcHR5JywgW1xuICAgICAgICAgIHsgeDogNTY4LCB5OiAxNjUsIHI6IDQwLCBnOiAzNiwgYjogNDggfSxcbiAgICAgICAgICB7IHg6IDU2OSwgeTogMTk1LCByOiA0MCwgZzogMzYsIGI6IDQ4IH0sXG4gICAgICAgICAgeyB4OiA2MDAsIHk6IDE5OCwgcjogNDAsIGc6IDM2LCBiOiA0OCB9LFxuICAgICAgICAgIHsgeDogNTk3LCB5OiAxNzAsIHI6IDQwLCBnOiAzNiwgYjogNDggfSxcbiAgICAgICAgXSk7XG4gICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VMYXN0Q2FuZHlTbG90RW1wdHkpICYmIHRoaXMuY29uZmlnLm1hZ2ljTGFiUHJvZHVjdEluZGV4ID4gMTYgJiYgcHJvZHVjdElkeCA8IDQpIHtcbiAgICAgICAgICBwcm9kdWN0SWR4ICs9IDQ7XG4gICAgICAgICAgbG9ncygncmZwYWdlSW5NYWdpY0xhYicsIGBhZGRpbmcgNCBtb3JlIHRvOiAke3Byb2R1Y3RJZHh9YCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoUEFHRVMubWFnaWNMYWJQb2ludE1hcHBpbmdbcHJvZHVjdElkeF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIFV0aWxzLnNlbmRTbGFja01lc3NhZ2UoXG4gICAgICAgICAgICByZXJvdXRlci5yZXJvdXRlckNvbmZpZy5kZWJ1Z1NsYWNrVXJsLFxuICAgICAgICAgICAgYENSSy0ke2NvbmZpZy5kZXZpY2VJZH06IG1hZ2ljIGxhYiBoYXMgdW5leHBlY3RlZCBwcm9kdWN0SWR4ICR7cHJvZHVjdElkeH0sIHNraXAgdGFza2AsXG4gICAgICAgICAgICBgcmZwYWdlSW5NYWdpY0xhYiB3aWxsIHNraXAgdGhpcyBwYWdlYFxuICAgICAgICAgICk7XG4gICAgICAgICAgaGFuZGxlTmV4dFByb2R1Y3Rpb25CdWlsZGluZyh0aGlzLmNvbmZpZy5idWlsZFRvd2FyZHNUaGVMZWZ0KTtcbiAgICAgICAgICB0aGlzLnRhc2tTdGF0dXNbVEFTS1MucHJvZHVjdGlvbl0ucHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZCsrO1xuICAgICAgICAgIGxvZ3MoXG4gICAgICAgICAgICBjb250ZXh0LnRhc2submFtZSxcbiAgICAgICAgICAgIGByZnBhZ2VJbk1hZ2ljTGFiLCBza2lwcGVkIGR1ZSB0byBwcm9kdWN0SWR4IGlzICR7cHJvZHVjdElkeH0sIHByb2R1Y3Rpb25CdWlsZGluZ0NoZWNrZWQ6ICR7XG4gICAgICAgICAgICAgIHRoaXMudGFza1N0YXR1c1tUQVNLUy5wcm9kdWN0aW9uXS5wcm9kdWN0aW9uQnVpbGRpbmdDaGVja2VkXG4gICAgICAgICAgICB9YFxuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChQQUdFUy5tYWdpY0xhYlBvaW50TWFwcGluZ1twcm9kdWN0SWR4XSk7XG4gICAgICAgIHNsZWVwKDEwMDApO1xuICAgICAgICBsb2dzKCdyZnBhZ2VJbk1hZ2ljTGFiJywgYHByb2R1Y3RJZHggaXMgJHtwcm9kdWN0SWR4fSwgdGFwcGluZzogJHtKU09OLnN0cmluZ2lmeShQQUdFUy5tYWdpY0xhYlBvaW50TWFwcGluZ1twcm9kdWN0SWR4XSl9YCk7XG5cbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU4MywgeTogMzA4IH0pOyAvLyBwcm9kdWNlIGFsbCBidG5cbiAgICAgICAgVXRpbHMuc2xlZXAodGhpcy5jb25maWcuc2xlZXBBbmltYXRlICogMyk7XG5cbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKFBBR0VTLnJmcGFnZU5vdEVub3VnaFN0b2NrSW5Qcm9kdWN0aW9uKSkge1xuICAgICAgICAgIGxvZ3MoJ3JmcGFnZUluTWFnaWNMYWInLCBgZm91bmQgUEFHRVMucmZwYWdlTm90RW5vdWdoU3RvY2tJblByb2R1Y3Rpb24sIHRhcCBpdGApO1xuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA0MjgsIHk6IDk4IH0pO1xuICAgICAgICAgIHNsZWVwKDEwMDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBQcm9kdWNlIGl0ZW06ICR7dGhpcy5jb25maWcubWFnaWNMYWJQcm9kdWN0SW5kZXh9YCk7XG4gICAgICAgIH1cblxuICAgICAgICBoYW5kbGVOZXh0UHJvZHVjdGlvbkJ1aWxkaW5nKHRoaXMuY29uZmlnLmJ1aWxkVG93YXJkc1RoZUxlZnQpO1xuICAgICAgICB0aGlzLnRhc2tTdGF0dXNbVEFTS1MucHJvZHVjdGlvbl0ucHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZCsrO1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5NYWdpY0xhYiwgcHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZDogJHt0aGlzLnRhc2tTdGF0dXNbVEFTS1MucHJvZHVjdGlvbl0ucHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZH1gKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlTm90RW5vdWdoUHVyaXR5Q3J5c3RhbHMubmFtZX1gLFxuICAgICAgbWF0Y2g6IFBBR0VTLnJmcGFnZU5vdEVub3VnaFB1cml0eUNyeXN0YWxzLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VOb3RFbm91Z2hQdXJpdHlDcnlzdGFscywgdGFwIGJhY2sgYW5kIGdvdG8gbmV4dCBwcm9kdWN0aW9uIGJ1aWxkaW5nYCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICBoYW5kbGVOZXh0UHJvZHVjdGlvbkJ1aWxkaW5nKGNvbmZpZy5idWlsZFRvd2FyZHNUaGVMZWZ0KTtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke1BBR0VTLnJmcGFnZUluUHJvZHVjdGlvbkRhc2hib2FyZC5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlSW5Qcm9kdWN0aW9uRGFzaGJvYXJkLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MucHJvZHVjdGlvbikge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJblByb2R1Y3Rpb25EYXNoYm9hcmQsIGxlYXZlIGJlY2F1c2UgY3VycmVudCB0YXNrIGlzIG5vdCBwcm9kdWN0aW9uLCBidXQ6ICR7Y29udGV4dC50YXNrLm5hbWV9YCk7XG4gICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXG4gICAgICAgICAgIXJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UoXG4gICAgICAgICAgICBuZXcgUGFnZSgncmZwYWdlTGlzdElzQXRUb3AnLCBbXG4gICAgICAgICAgICAgIHsgeDogMjcsIHk6IDQ3LCByOiA0OSwgZzogMTU4LCBiOiAyMzEgfSxcbiAgICAgICAgICAgICAgeyB4OiAyNiwgeTogMTE0LCByOiA0OSwgZzogMTU4LCBiOiAyMzEgfSxcbiAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgaW1hZ2VcbiAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgIHN3aXBlRnJvbVRvUG9pbnQoeyB4OiAxNDAsIHk6IDgwIH0sIHsgeDogMTQ5LCB5OiAyNzAgfSwgNSk7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUluUHJvZHVjdGlvbkRhc2hib2FyZCwgc3dpcGUgdG8gdGhlIHRvcCBgKTtcbiAgICAgICAgfVxuICAgICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucmZwYWdlSW5Qcm9kdWN0aW9uRGFzaGJvYXJkKTtcbiAgICAgICAgdGhpcy5jb25maWcuYnVpbGRUb3dhcmRzVGhlTGVmdCA9ICF0aGlzLmNvbmZpZy5idWlsZFRvd2FyZHNUaGVMZWZ0O1xuICAgICAgICB0aGlzLnRhc2tTdGF0dXNbVEFTS1MucHJvZHVjdGlvbl0ucHJvZHVjdGlvbkJ1aWxkaW5nQ2hlY2tlZCA9IDA7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZXZlcnNlIGJ1aWxkVG93YXJkc1RoZUxlZnQsIGl0IGlzIG5vdyAke3RoaXMuY29uZmlnLmJ1aWxkVG93YXJkc1RoZUxlZnR9YCk7XG4gICAgICAgIHNsZWVwKHRoaXMuY29uZmlnLnNsZWVwQW5pbWF0ZSAqIDIpO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIC8vIFVwZ3JhZGUgY2FuZHkgaG91c2VcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlSW5DYW5keUhvdXNlLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VJbkNhbmR5SG91c2UsXG4gICAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5maW5kQW5kVGFwQ2FuZHkpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5DYW5keUhvdXNlLCBsZWF2ZSBiZWNhdXNlIGN1cnJlbnQgdGFzayBpcyBub3QgZmluZEFuZFRhcENhbmR5LCBidXQ6ICR7Y29udGV4dC50YXNrLm5hbWV9YCk7XG4gICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJbkNhbmR5SG91c2UsIHNlbmQgcnVubmluZ2ApO1xuXG4gICAgICAgIGNvbnN0IHJmcGFnZUNhblVwZ3JhZGVDYW5keU1hbnNpb24gPSBuZXcgUGFnZSgncmZwYWdlQ2FuVXBncmFkZUNhbmR5TWFuc2lvbicsIFt7IHg6IDMwMywgeTogMjg5LCByOiAxMjMsIGc6IDIwNywgYjogOCB9XSwgeyB4OiAzMDMsIHk6IDI4OSB9KTtcbiAgICAgICAgY29uc3QgcmZwYWdlQ2FuVXBncmFkZUNhbmR5SG91c2UgPSBuZXcgUGFnZSgncmZwYWdlQ2FuVXBncmFkZUNhbmR5SG91c2UnLCBbeyB4OiAyNDMsIHk6IDI4NywgcjogMTUxLCBnOiAyMTgsIGI6IDU1IH1dLCB7IHg6IDI0MywgeTogMjg3IH0pO1xuICAgICAgICBjb25zdCBncm91cFBhZ2VDYW5VcGdyYWRlQ2FuZHkgPSBuZXcgR3JvdXBQYWdlKCdncm91cFBhZ2VDYW5VcGdyYWRlQ2FuZHknLCBbcmZwYWdlQ2FuVXBncmFkZUNhbmR5SG91c2UsIHJmcGFnZUNhblVwZ3JhZGVDYW5keU1hbnNpb25dKTtcblxuICAgICAgICBjb25zdCByZnBhZ2VDb29raWVNYW5zaW9uVXBncmFkZVJlcXVpcmVtZW50ID0gbmV3IFBhZ2UoXG4gICAgICAgICAgJ3JmcGFnZUNvb2tpZU1hbnNpb25VcGdyYWRlUmVxdWlyZW1lbnQnLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIHsgeDogMzUxLCB5OiAzMjAsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgICAgICAgICB7IHg6IDI4MiwgeTogMzIyLCByOiAxNDgsIGc6IDIxOSwgYjogNTcgfSxcbiAgICAgICAgICAgIHsgeDogMTk5LCB5OiAxOTksIHI6IDExOCwgZzogMjM0LCBiOiAyMzEgfSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIHsgeDogMzUxLCB5OiAzMjAgfVxuICAgICAgICApO1xuICAgICAgICBjb25zdCByZnBhZ2VDb29raWVIb3VzZVVwZ3JhZGVSZXF1aXJlbWVudCA9IG5ldyBQYWdlKFxuICAgICAgICAgICdyZnBhZ2VDb29raWVIb3VzZVVwZ3JhZGVSZXF1aXJlbWVudCcsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgeyB4OiAzNTYsIHk6IDMxNCwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICAgICAgICAgIHsgeDogMzMwLCB5OiAxMjAsIHI6IDY4LCBnOiA2NywgYjogNjYgfSxcbiAgICAgICAgICAgIHsgeDogNDI1LCB5OiAyMCwgcjogMCwgZzogNTAsIGI6IDkyIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgICB7IHg6IDM1NiwgeTogMzE0IH1cbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgZ3JvdXBQYWdlVXBncmFkZVJlcXVpcmVtZW50cyA9IG5ldyBHcm91cFBhZ2UoJ2dyb3VwUGFnZVVwZ3JhZGVSZXF1aXJlbWVudHMnLCBbXG4gICAgICAgICAgcmZwYWdlQ29va2llTWFuc2lvblVwZ3JhZGVSZXF1aXJlbWVudCxcbiAgICAgICAgICByZnBhZ2VDb29raWVIb3VzZVVwZ3JhZGVSZXF1aXJlbWVudCxcbiAgICAgICAgXSk7XG5cbiAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5hdXRvVXBncmFkZUNhbmR5SG91c2UpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5DYW5keUhvdXNlLCBmaW5kQW5kVGFwQ2FuZHkgc3VjY2Vzc2Z1bCBzbyBmaW5pc2ggcm91bmRgKTtcbiAgICAgICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UoZ3JvdXBQYWdlQ2FuVXBncmFkZUNhbmR5LCBpbWFnZSkpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgRm91bmQgdXBncmFkZWFibGUgY2FuZHlob3VzZSBhbmQgdGFwIGl0YCk7XG4gICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUNhblVwZ3JhZGVDYW5keUhvdXNlKTtcbiAgICAgICAgICBVdGlscy5zbGVlcCh0aGlzLmNvbmZpZy5zbGVlcEFuaW1hdGUgKiAyKTtcblxuICAgICAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKFBBR0VTLnJmcGFnZU5vdEVub3VnaEdub21lQnVpbGRlcnMsIDIwMDApKSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgTm90IGVub3VnaCBnbm9tZSBidWlsZGVyLCBza2lwcGluZyB1cGdyYWRlIGNvb2tpZSBob3VzZXMgYW5kIGZpbmlzaCB0YXNrYCk7XG4gICAgICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHJlcm91dGVyLndhaXRTY3JlZW5Gb3JNYXRjaGluZ1BhZ2UoZ3JvdXBQYWdlVXBncmFkZVJlcXVpcmVtZW50cywgMjAwMCkpIHtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBncm91cFBhZ2VVcGdyYWRlUmVxdWlyZW1lbnRzLCB0YXA6IHt4OiAzNTcsIHk6MzIxfWApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDM1NywgeTogMzIxIH0pO1xuXG4gICAgICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJbkNhbmR5SG91c2UsIHRoaXMgaG91c2UgaXMgZnVsbHkgdXBncmFkZWQsIHNlbmQgYmFja2ApO1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBUb3dlciBvZiByZWNvcmRzIGNvbGxlY3QgZGlhbW9uZFxuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtQQUdFUy5yZnBhZ2VJblRvd2VyT2ZSZWNvcmRzLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VJblRvd2VyT2ZSZWNvcmRzLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGxldCBmb3VuZFJlc3VsdHMgPSBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvblJlZEJ1YmJsZVdoaXRlQ2hlY2spO1xuICAgICAgICBpZiAoZm91bmRSZXN1bHRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJblRvd2VyT2ZSZWNvcmRzIGNhbm5vdCBmaW5kIGFueSBpY29uUmVkQnViYmxlV2hpdGVDaGVjaywgc2tpcHBpbmdgKTtcbiAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJblRvd2VyT2ZSZWNvcmRzLCBmb3VuZCAke2ZvdW5kUmVzdWx0cy5sZW5ndGh9IGljb25SZWRCdWJibGVXaGl0ZUNoZWNrYCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoZm91bmRSZXN1bHRzKS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBjaGVja2luZyBpY29uUmVkQnViYmxlV2hpdGVDaGVjayBhdCAke0pTT04uc3RyaW5naWZ5KGZvdW5kUmVzdWx0c1tpXSl9YCk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IGZvdW5kUmVzdWx0c1tpXS54IC0gNDAsIHk6IGZvdW5kUmVzdWx0c1tpXS55ICsgMTUgfSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoMjAwMCk7XG5cbiAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDM7IGorKykge1xuICAgICAgICAgICAgbGV0IGZvdW5kQmx1ZUdlbXMgPSBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvbkdyZWVuQnViYmxlQmx1ZUdlbSk7XG4gICAgICAgICAgICBpZiAoZm91bmRCbHVlR2Vtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGZvciAobGV0IGdlbUlkeCA9IDA7IGdlbUlkeCA8IGZvdW5kQmx1ZUdlbXMubGVuZ3RoOyBnZW1JZHgrKykge1xuICAgICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBJbiAke2p9dGggdHVybiwgZm91bmQgJHtnZW1JZHh9dGggZ2VtIGFuZCB0YXAgaXQgYXQgJHtKU09OLnN0cmluZ2lmeShmb3VuZEJsdWVHZW1zW2dlbUlkeF0pfWApO1xuICAgICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiBmb3VuZEJsdWVHZW1zW2dlbUlkeF0ueCArIDEwLCB5OiBmb3VuZEJsdWVHZW1zW2dlbUlkeF0ueSArIDEwIH0pO1xuICAgICAgICAgICAgICAgIFV0aWxzLnNsZWVwKDIwMDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN3aXBlRG93bjNJdGVtcygpOyAvLyBzY3JvbGwgdGhlIHBhZ2UgZG93biBhIGJpdFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJblRvd2VyT2ZSZWNvcmRzLCBmaW5pc2hlZCBjb2xsZWN0aW5nIGdlbXNgKTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBSb3V0aW5nIHJlbGF0ZWQgcGFnZXNcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlU2VsZWN0QWR2YW50dXJlLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VTZWxlY3RBZHZhbnR1cmUsXG4gICAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgICAgY29uc3QgcmZwYWdlU2VsZWN0QWR2YW50dXJlRmlyc3RJc0tpbmdkb20gPSBuZXcgUGFnZShcbiAgICAgICAgICAncmZwYWdlU2VsZWN0QWR2YW50dXJlRmlyc3RJc0tpbmdkb20nLFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIHsgeDogNjI4LCB5OiAyMCwgcjogNTUsIGc6IDE2NiwgYjogMjMxIH0sXG4gICAgICAgICAgICB7IHg6IDQyMiwgeTogMTksIHI6IDUsIGc6IDEzMCwgYjogMjU0IH0sXG4gICAgICAgICAgICB7IHg6IDMwOCwgeTogMTksIHI6IDI1NCwgZzogMjEwLCBiOiAwIH0sXG4gICAgICAgICAgICB7IHg6IDU2LCB5OiA4LCByOiAyNywgZzogNTcsIGI6IDkwIH0sXG4gICAgICAgICAgICB7IHg6IDI0LCB5OiAxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgICAgICAgICAgeyB4OiAzNSwgeTogNTQsIHI6IDQ5LCBnOiA5NiwgYjogNjYgfSxcbiAgICAgICAgICAgIHsgeDogNDQsIHk6IDMzNSwgcjogMCwgZzogNzMsIGI6IDQxIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgICB7IHg6IDg2LCB5OiAxOTggfVxuICAgICAgICApO1xuICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZnBhZ2VTZWxlY3RBZHZhbnR1cmVGaXJzdElzS2luZ2RvbSwgaW1hZ2UpKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZVNlbGVjdEFkdmFudHVyZUZpcnN0SXNLaW5nZG9tLCBnbyBiYWNrIHRvIFwiTXkgS2luZ2RvbVwiYCk7XG4gICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZVNlbGVjdEFkdmFudHVyZUZpcnN0SXNLaW5nZG9tKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgYWR2YW50dXJlU2V0dGluZyA9IEFkdmFudHVyZXNCb3VudGllc0F0M3JkO1xuICAgICAgICAvLyBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShQQUdFUy5yZnBhZ2VCb3VudGllc0F0Mm5kU2xvdCwgaW1hZ2UpKSB7XG4gICAgICAgIC8vICAgYWR2YW50dXJlU2V0dGluZyA9IEFkdmFudHVyZXNCb3VudGllc0F0Mm5kO1xuICAgICAgICAvLyB9XG5cbiAgICAgICAgaWYgKGFkdmFudHVyZVNldHRpbmdbY29udGV4dC50YXNrLm5hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlU2VsZWN0QWR2YW50dXJlIGJ1dCB0aGlzIHRhc2sgZG9lcyBub3QgbmVlZCBhZHZhbnR1cmUsIHNlbmQgYmFja2ApO1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAodGhpcy5jb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYWR2YW50dXJlU2V0dGluZ1tjb250ZXh0LnRhc2submFtZV0uYmFja3dhcmQpIHtcbiAgICAgICAgICBzY3JvbGxSaWdodEFMb3QoeyB4OiA2MDAsIHk6IDE4MCB9KTtcbiAgICAgICAgICBzY3JvbGxSaWdodEFMb3QoeyB4OiA2MDAsIHk6IDE4MCB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzY3JvbGxMZWZ0QUxvdCh7IHg6IDEwNSwgeTogMTcgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGNvbnRleHQudGFzay5uYW1lKSB7XG4gICAgICAgICAgY2FzZSBUQVNLUy5zdXBlck1heWhlbTpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VTZWxlY3RBZHZhbnR1cmUgZ290byBzdXBlck1heWhlbWApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChhZHZhbnR1cmVTZXR0aW5nW2NvbnRleHQudGFzay5uYW1lXS5wbnQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBUQVNLUy5ib3VudGllczpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VTZWxlY3RBZHZhbnR1cmUgZ290byBib3VudGllc2ApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChhZHZhbnR1cmVTZXR0aW5nW2NvbnRleHQudGFzay5uYW1lXS5wbnQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBUQVNLUy50b3dlck9mU3dlZXRDaGFvczpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VTZWxlY3RBZHZhbnR1cmUsIHNlbmQgYmFja2ApO1xuICAgICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZVNlbGVjdEFkdmFudHVyZSBkb24ndCBrbm93IHdoYXQgdG8gZG8sIHRyeSBzY3JvbGwgbGVmdCBhIGxvdCB0byBnZXQgdG8gdGhlIGhlYWQgb2YgdGhlIGxpc3RgKTtcbiAgICAgICAgICAgIHNjcm9sbExlZnRBTG90KHsgeDogNTAsIHk6IDE4MCB9KTtcbiAgICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSk7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke1BBR0VTLnJmcGFnZVVuY29sbGFwc2VkQWZmYWlycy5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlVW5jb2xsYXBzZWRBZmZhaXJzLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VVbmNvbGxhcHNlZEFmZmFpcnMsIGdvaW5nIHRvIHRhc2sgcmVsYXRlZCBhZmZhaXI6ICR7Y29udGV4dC50YXNrLm5hbWV9YCk7XG4gICAgICAgIHN3aXRjaCAoY29udGV4dC50YXNrLm5hbWUpIHtcbiAgICAgICAgICBjYXNlIFRBU0tTLmhvdEFpckJhbGxvbjpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBhYm91dCB0byBnb3RvIGhvdCBhaXIgYmFsbG9uYCk7XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzIwLCB5OiAxNTQgfSk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjYXNlIFRBU0tTLnRyYWluOlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGFib3V0IHRvIGdvdG8gdHJhaW4gc3RhdGlvbmApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDM2OSwgeTogMjM0IH0pO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgY2FzZSBUQVNLUy53aXNoaW5nVHJlZTpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBhYm91dCB0byBzZW5kIHdpc2hpbmcgdHJlZWApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDIzNSwgeTogMTYxIH0pO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgY2FzZSBUQVNLUy5nbm9tZUxhYjpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBhYm91dCB0byBnb3RvIGdub21lIGxhYmApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDQwNiwgeTogMTU4IH0pO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgY2FzZSBUQVNLUy5oYWJvclNlbmRTaGlwOlxuICAgICAgICAgIGNhc2UgVEFTS1MuaGFib3JTaG9wSW5TZWFNYXJrZXQ6XG4gICAgICAgICAgY2FzZSBUQVNLUy5oYWJvclNob3BJblNoZWxsR2FsbGVyeTpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBhYm91dCB0byBnb3RvIHRyYWRlIGhhYm9yYCk7XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjgyLCB5OiAyMjggfSk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYG5vdGhpbmcgbWF0Y2hlZCwgY2xvc2luZyB0aGUgbGlzdGApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDYxOCwgeTogMjAgfSk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCgyMDAwKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlVW5jb2xsYXBzZWRBZmZhaXJzTm9IYWJvci5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlVW5jb2xsYXBzZWRBZmZhaXJzTm9IYWJvcixcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlVW5jb2xsYXBzZWRBZmZhaXJzTm9IYWJvciwgZ29pbmcgdG8gdGFzayByZWxhdGVkIGFmZmFpcjogJHtjb250ZXh0LnRhc2submFtZX1gKTtcbiAgICAgICAgc3dpdGNoIChjb250ZXh0LnRhc2submFtZSkge1xuICAgICAgICAgIGNhc2UgVEFTS1MuaG90QWlyQmFsbG9uOlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGFib3V0IHRvIGdvdG8gaG90IGFpciBiYWxsb25gKTtcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMjAsIHk6IDE1NCB9KTtcbiAgICAgICAgICAgIFV0aWxzLnNsZWVwKDE1MDApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGNhc2UgVEFTS1MudHJhaW46XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgYWJvdXQgdG8gZ290byB0cmFpbiBzdGF0aW9uYCk7XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzI0LCB5OiAyMzUgfSk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjYXNlIFRBU0tTLndpc2hpbmdUcmVlOlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGFib3V0IHRvIHNlbmQgd2lzaGluZyB0cmVlYCk7XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjMwLCB5OiAxNjEgfSk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjYXNlIFRBU0tTLmdub21lTGFiOlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGFib3V0IHRvIGdvdG8gZ25vbWUgbGFiYCk7XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNDEwLCB5OiAxNTcgfSk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjYXNlIFRBU0tTLmhhYm9yU2VuZFNoaXA6XG4gICAgICAgICAgY2FzZSBUQVNLUy5oYWJvclNob3BJblNlYU1hcmtldDpcbiAgICAgICAgICBjYXNlIFRBU0tTLmhhYm9yU2hvcEluU2hlbGxHYWxsZXJ5OlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYE5PIHRyYWRlIGhhYm9yLCBza2lwIHRoaXMgdGFza2ApO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBub3RoaW5nIG1hdGNoZWQsIGNsb3NpbmcgdGhlIGxpc3RgKTtcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA2MTgsIHk6IDIwIH0pO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoMjAwMCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSk7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke1BBR0VTLnJmcGFnZUluQ29va2llSGVhZC5uYW1lfWAsXG4gICAgICBtYXRjaDogUEFHRVMucmZwYWdlSW5Db29raWVIZWFkLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZnBhZ2VJbkNvb2tpZUhlYWQsIGluIGhlYWQnKTtcblxuICAgICAgICBjb25zdCByZnBhZ2VTdGFydE9mTGlzdCA9IG5ldyBQYWdlKCdyZnBhZ2VTdGFydE9mTGlzdCcsIFtcbiAgICAgICAgICB7IHg6IDExNCwgeTogMTUxLCByOiAyNTUsIGc6IDIxOCwgYjogMCB9LFxuICAgICAgICAgIHsgeDogMTE1LCB5OiAxNjAsIHI6IDIyNCwgZzogMCwgYjogNTAgfSxcbiAgICAgICAgICB7IHg6IDI1MywgeTogMTU2LCByOiAyNDcsIGc6IDIwNywgYjogMTIzIH0sXG4gICAgICAgICAgeyB4OiAyNTUsIHk6IDE2MCwgcjogMTg5LCBnOiAyMCwgYjogMjQgfSxcbiAgICAgICAgXSk7XG4gICAgICAgIGNvbnN0IHJmcGFnZUVuZE9mTGlzdCA9IG5ldyBQYWdlKCdyZnBhZ2VFbmRPZkxpc3QnLCBbXG4gICAgICAgICAgeyB4OiA1NzAsIHk6IDE2MCwgcjogMjUyLCBnOiAwLCBiOiA2MCB9LFxuICAgICAgICAgIHsgeDogNDc5LCB5OiAxNjEsIHI6IDY4LCBnOiAxNDQsIGI6IDE4IH0sXG4gICAgICAgICAgeyB4OiAzOTMsIHk6IDE1OCwgcjogMTk0LCBnOiAyMjYsIGI6IDIzOCB9LFxuICAgICAgICBdKTtcblxuICAgICAgICBzd2l0Y2ggKGNvbnRleHQudGFzay5uYW1lKSB7XG4gICAgICAgICAgY2FzZSBUQVNLUy5mb3VudGFpbjpcbiAgICAgICAgICBjYXNlIFRBU0tTLmZpbmRBbmRUYXBDYW5keTpcbiAgICAgICAgICAgIGlmICghcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZnBhZ2VTdGFydE9mTGlzdCwgaW1hZ2UpKSB7XG4gICAgICAgICAgICAgIHNjcm9sbExlZnRBTG90KHsgeDogMTE2LCB5OiAxODAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShyZnBhZ2VTdGFydE9mTGlzdCwgMzAwMCkpIHtcbiAgICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3RhcCBnb3RvIGNhc3RsZScpO1xuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjYwLCB5OiAyMjQgfSk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICBjYXNlIFRBU0tTLnB2cDpcbiAgICAgICAgICBjYXNlIFRBU0tTLnB2cFB1cmNoYXNlQW5jaWVudENvb2tpZTpcbiAgICAgICAgICAgIHNjcm9sbFJpZ2h0QUxvdCh7IHg6IDU2MCwgeTogMTg2IH0pO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUVuZE9mTGlzdCkpIHtcbiAgICAgICAgICAgICAgc2Nyb2xsUmlnaHRBTG90KHsgeDogNTYwLCB5OiAxODYgfSk7XG4gICAgICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKEFkdmFudHVyZXNCb3VudGllc0F0M3JkW2NvbnRleHQudGFzay5uYW1lLnN1YnN0cmluZygwLCAzKV0ucG50KTtcbiAgICAgICAgICAgIFV0aWxzLnNsZWVwKHRoaXMuY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgY2FzZSBUQVNLUy50cm9waWNhbElzbGFuZFNoaXA6XG4gICAgICAgICAgY2FzZSBUQVNLUy50cm9waWNhbElzbGFuZFN1bmJlZDpcbiAgICAgICAgICBjYXNlIFRBU0tTLnRyb3BpY2FsSXNsYW5kQ2xlYXJCdWJibGU6XG4gICAgICAgICAgICBzY3JvbGxSaWdodEFMb3QoeyB4OiA1NjAsIHk6IDE4NiB9KTtcbiAgICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgaWYgKCFyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VFbmRPZkxpc3QpKSB7XG4gICAgICAgICAgICAgIHNjcm9sbFJpZ2h0QUxvdCh7IHg6IDU2MCwgeTogMTg2IH0pO1xuICAgICAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChBZHZhbnR1cmVzQm91bnRpZXNBdDNyZFtjb250ZXh0LnRhc2submFtZS5zdWJzdHJpbmcoMCwgMTQpXS5wbnQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGNhc2UgVEFTS1MuZ3VpbGRCYXR0bGVBbGxpYW5jZTpcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGAke2NvbnRleHQucGF0aH0gZ290byBDb29raWUgQWxsaWFuY2VgKTtcblxuICAgICAgICAgICAgc2Nyb2xsUmlnaHRBTG90KHsgeDogNTYwLCB5OiAxODYgfSk7XG4gICAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICAgIGlmICghcmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlRW5kT2ZMaXN0KSkge1xuICAgICAgICAgICAgICBzY3JvbGxSaWdodEFMb3QoeyB4OiA1NjAsIHk6IDE4NiB9KTtcbiAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoQWR2YW50dXJlc0JvdW50aWVzQXQzcmRbY29udGV4dC50YXNrLm5hbWVdLnBudCk7XG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgICBjYXNlIFRBU0tTLnRvd2VyT2ZTd2VldENoYW9zOlxuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYCR7Y29udGV4dC5wYXRofSBnb3RvIHRvd2VyIG9mIHN3ZWV0IGNob2FzYCk7XG5cbiAgICAgICAgICAgIHNjcm9sbFJpZ2h0QUxvdCh7IHg6IDU2MCwgeTogMTg2IH0pO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUVuZE9mTGlzdCkpIHtcbiAgICAgICAgICAgICAgc2Nyb2xsUmlnaHRBTG90KHsgeDogNTYwLCB5OiAxODYgfSk7XG4gICAgICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKEFkdmFudHVyZXNCb3VudGllc0F0M3JkW2NvbnRleHQudGFzay5uYW1lXS5wbnQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtQQUdFUy5yZnBhZ2VJbktpbmdkb21WaWxsYWdlLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBQQUdFUy5yZnBhZ2VJbktpbmdkb21WaWxsYWdlLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiAke2NvbnRleHQucGF0aH1gKTtcblxuICAgICAgICAvLyBJbiBjYXNlIGdhbWUgY3Jhc2hlZCBkdXJpbmcgYmF0dGxlXG4gICAgICAgIGdsb2JhbFN0b3JhZ2UuYm90U3RhdHVzLmJhdHRsZVN0YXJ0ZWQgPSAwO1xuXG4gICAgICAgIHN3aXRjaCAoY29udGV4dC50YXNrLm5hbWUpIHtcbiAgICAgICAgICBjYXNlIFRBU0tTLnByb2R1Y3Rpb246XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzgsIHk6IDIyMSB9KTsgLy8gVGFwIHByb2R1Y3Rpb24gZGFzaGJvYXJkXG4gICAgICAgICAgICBVdGlscy5zbGVlcCh0aGlzLmNvbmZpZy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgVEFTS1MuY29sbGVjdE1haWw6XG4gICAgICAgICAgICAvLyBUT0RPOiBjaGVjayBmb3IgdW5yZWFkIG1haWxzXG4gICAgICAgICAgICAvLyBleHBvcnQgY29uc3QgcmZwYWdlSGFzVW5yZWFkTWFpbHMgPSBuZXcgUGFnZShcbiAgICAgICAgICAgIC8vICAgJ3JmcGFnZUhhc1VucmVhZE1haWxzJyxcbiAgICAgICAgICAgIC8vICAgW1xuICAgICAgICAgICAgLy8gICAgIHsgeDogNTg0LCB5OiAzMTYsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgICAgICAgICAvLyAgICAgeyB4OiA1OTEsIHk6IDEzMywgcjogMTI2LCBnOiAyMDksIGI6IDE0IH0sXG4gICAgICAgICAgICAvLyAgICAgeyB4OiA2MDcsIHk6IDEwLCByOiA1NywgZzogMTY2LCBiOiAyMzEgfSxcbiAgICAgICAgICAgIC8vICAgICB7IHg6IDU0LCB5OiAxMzEsIHI6IDI1NSwgZzogMjM5LCBiOiAyMTQgfSxcbiAgICAgICAgICAgIC8vICAgXSxcbiAgICAgICAgICAgIC8vICAgeyB4OiA1NzcsIHk6IDMxNyB9XG4gICAgICAgICAgICAvLyApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU1MCwgeTogMjAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFRBU0tTLmNvbGxlY3RLaW5nZG9tUGFzczpcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA2MDAsIHk6IDg1IH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBUQVNLUy5zZW5kRnJpZW5kUmV3YXJkOlxuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDUxMiwgeTogMjAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFRBU0tTLmdldEluU2hvcEZyZWVEYWlseVBhY2s6XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjYsIHk6IDg2IH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBUQVNLUy5nZXRHYWNoYURhaWx5RnJlZVBhY2s6XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzcwLCB5OiAzMzAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFRBU0tTLnJlc29sdmVHcmVlbkNoZWNrczpcbiAgICAgICAgICAgIGxldCBmb3VuZFJlc3VsdHMgPSBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvbkdyZWVuQ2hlY2tlZFdpdGhHaWZ0Qm94KTtcbiAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYEZvdW50IGljb25HcmVlbkNoZWNrZWRXaXRoR2lmdEJveCwgdGFwIGl0OiAke0pTT04uc3RyaW5naWZ5KGZvdW5kUmVzdWx0cyl9YCk7XG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiBmb3VuZFJlc3VsdHNbMF0ueCArIDEyLCB5OiBmb3VuZFJlc3VsdHNbMF0ueSArIDEyIH0pO1xuICAgICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm91bmRSZXN1bHRzID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25HcmVlbkNoZWNrZWRHcmVlbkJhY2tncm91bmQpO1xuICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGZvdW5kUmVzdWx0cykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgRm91bnQgaWNvbkdyZWVuQ2hlY2tlZFdpdGhHaWZ0Qm94LCB0YXAgaXQ6ICR7SlNPTi5zdHJpbmdpZnkoZm91bmRSZXN1bHRzKX1gKTtcbiAgICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IGZvdW5kUmVzdWx0c1swXS54ICsgMTIsIHk6IGZvdW5kUmVzdWx0c1swXS55ICsgMTIgfSk7XG4gICAgICAgICAgICAgIFV0aWxzLnNsZWVwKDE1MDApO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uU3VuYmVkR3JlZW5DaGVjayk7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoZm91bmRSZXN1bHRzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBGb3VudCBpY29uU3VuYmVkR3JlZW5DaGVjaywgdGFwIGl0OiAke0pTT04uc3RyaW5naWZ5KGZvdW5kUmVzdWx0cyl9YCk7XG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiBmb3VuZFJlc3VsdHNbMF0ueCArIDcsIHk6IGZvdW5kUmVzdWx0c1swXS55ICsgNyB9KTtcbiAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm91bmRSZXN1bHRzID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25HcmVlbkNoZWNrR29sZENvaW5JblZpbGxhZ2UpO1xuICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGZvdW5kUmVzdWx0cykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgRm91bnQgaWNvbkdyZWVuQ2hlY2tHb2xkQ29pbkluVmlsbGFnZSwgdGFwIGl0OiAke0pTT04uc3RyaW5naWZ5KGZvdW5kUmVzdWx0cyl9YCk7XG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiBmb3VuZFJlc3VsdHNbMF0ueCArIDEyLCB5OiBmb3VuZFJlc3VsdHNbMF0ueSArIDEyIH0pO1xuICAgICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBUT0RP77ya5Y6f54mI5pyD55u05o6l6YGO5Y675oqK6YCZ5YCL5LqL5Lu26Kej5rG677yM54++5Zyo5Y+q5pyD5oyJ5o6J77yI5aaC54ax5rCj55CD5paw54mI5Y+q5pyD5pS25LiN5pyD6YCB77yM6KaB562J5LiL5qyh5Y6754ax5rCj55CD5omN5pyD6YCB77yJXG4gICAgICAgICAgICBmb3VuZFJlc3VsdHMgPSBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvbkdyZWVuQ2hlY2tlZFdoaXRlQmFja2dyb3VuZCk7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoZm91bmRSZXN1bHRzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBGb3VudCBpY29uR3JlZW5DaGVja2VkV2hpdGVCYWNrZ3JvdW5kLCB0YXAgaXQ6ICR7SlNPTi5zdHJpbmdpZnkoZm91bmRSZXN1bHRzKX1gKTtcbiAgICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IGZvdW5kUmVzdWx0c1swXS54ICsgNywgeTogZm91bmRSZXN1bHRzWzBdLnkgKyA3IH0pO1xuICAgICAgICAgICAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgRGlkIG5vdCBmaW5kIGFueSBncmVlbiBjaGVjayB0byByZXNvbHZlLCBmaW5pc2ggcm91bmRgKTtcbiAgICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBUQVNLUy5ob3RBaXJCYWxsb246XG4gICAgICAgICAgY2FzZSBUQVNLUy50cmFpbjpcbiAgICAgICAgICBjYXNlIFRBU0tTLndpc2hpbmdUcmVlOlxuICAgICAgICAgIGNhc2UgVEFTS1MuZ25vbWVMYWI6XG4gICAgICAgICAgY2FzZSBUQVNLUy5oYWJvclNlbmRTaGlwOlxuICAgICAgICAgIGNhc2UgVEFTS1MuaGFib3JTaG9wSW5TZWFNYXJrZXQ6XG4gICAgICAgICAgY2FzZSBUQVNLUy5oYWJvclNob3BJblNoZWxsR2FsbGVyeTpcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAxMDUsIHk6IDMzMCB9KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgVEFTS1MuZm91bnRhaW46XG4gICAgICAgICAgICBpZiAoIWZvdW50YWluU3RhdHVzLmp1c3RXZW50VG9Db29raWVIZWFkKSB7XG4gICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGB0cnkgZ290byBoZWFkIGFzIGp1c3RXZW50VG9Db29raWVIZWFkOiAke2ZvdW50YWluU3RhdHVzLmp1c3RXZW50VG9Db29raWVIZWFkfWApO1xuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjUsIHk6IDI1IH0pOyAvLyBnb3RvIGhlYWRcbiAgICAgICAgICAgICAgZm91bnRhaW5TdGF0dXMuanVzdFdlbnRUb0Nvb2tpZUhlYWQgPSB0cnVlO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgdHJ5IGdvdG8gZm91bnRhaW4gYXMganVzdFdlbnRUb0Nvb2tpZUhlYWQ6ICR7Zm91bnRhaW5TdGF0dXMuanVzdFdlbnRUb0Nvb2tpZUhlYWR9YCk7XG5cbiAgICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDQ5MCwgeTogMzU5IH0pO1xuICAgICAgICAgICAgICBVdGlscy5zbGVlcCh0aGlzLmNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNDkwLCB5OiAyOTUgfSk7XG4gICAgICAgICAgICAgIFV0aWxzLnNsZWVwKHRoaXMuY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA1NDAsIHk6IDI5NSB9KTtcbiAgICAgICAgICAgICAgVXRpbHMuc2xlZXAodGhpcy5jb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgVEFTS1MucHZwOlxuICAgICAgICAgIGNhc2UgVEFTS1MucHZwUHVyY2hhc2VBbmNpZW50Q29va2llOlxuICAgICAgICAgIGNhc2UgVEFTS1MudHJvcGljYWxJc2xhbmRTaGlwOlxuICAgICAgICAgIGNhc2UgVEFTS1MudHJvcGljYWxJc2xhbmRTdW5iZWQ6XG4gICAgICAgICAgY2FzZSBUQVNLUy50cm9waWNhbElzbGFuZENsZWFyQnViYmxlOlxuICAgICAgICAgIGNhc2UgVEFTS1MudG93ZXJPZlN3ZWV0Q2hhb3M6XG4gICAgICAgICAgY2FzZSBUQVNLUy5ndWlsZEJhdHRsZUFsbGlhbmNlOlxuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDI1LCB5OiAyNSB9KTsgLy8gZ290byBoZWFkXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFRBU0tTLnN1cGVyTWF5aGVtOlxuICAgICAgICAgIGNhc2UgVEFTS1MuYm91bnRpZXM6XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNTYwLCB5OiAzMjUgfSk7IC8vIGdvdG8gUExBWSFcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgVEFTS1MuZ3VpbGRDaGVja2luOlxuICAgICAgICAgIGNhc2UgVEFTS1MuZ3VpbGRFeHBhbmRMYW5kOlxuICAgICAgICAgIGNhc2UgVEFTS1MuZ3VpbGRCYXR0bGVEcmFnb246XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzE3LCB5OiAzMjUgfSk7IC8vIGdvdG8gR3VpbGRcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgVEFTS1MuZmluZEFuZFRhcENhbmR5OlxuICAgICAgICAgICAgbGV0IHNlYXJjaEhvdXNlU3RhdGUgPSB0aGlzLnRhc2tTdGF0dXNbVEFTS1MuZmluZEFuZFRhcENhbmR5XTtcbiAgICAgICAgICAgIGlmIChzZWFyY2hIb3VzZVN0YXRlLnNlYXJjaEhvdXNlSWR4ID49IHNlYXJjaEhvc2VQYXRoc1tzZWFyY2hIb3VzZVN0YXRlLnNlYXJjaEhvdXNlUGF0aElkeF0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIHNlYXJjaEhvdXNlU3RhdGUuc2VhcmNoSG91c2VQYXRoSWR4Kys7XG4gICAgICAgICAgICAgIHNlYXJjaEhvdXNlU3RhdGUuc2VhcmNoSG91c2VJZHggPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlYXJjaEhvdXNlU3RhdGUuc2VhcmNoSG91c2VQYXRoSWR4ID49IE9iamVjdC5rZXlzKHNlYXJjaEhvc2VQYXRocykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdTZWFyY2hlZCBhbGwgcGF0aHMgYnV0IHN0aWxsIGNhbm5vdCBlbmQgdGhlIHRhc2ssIHNraXAgaXQnKTtcbiAgICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICAgIHNlYXJjaEhvdXNlU3RhdGUuc2VhcmNoSG91c2VQYXRoSWR4ID0gMDtcbiAgICAgICAgICAgICAgc2VhcmNoSG91c2VTdGF0ZS5zZWFyY2hIb3VzZUlkeCA9IDA7XG4gICAgICAgICAgICAgIHNlYXJjaEhvdXNlU3RhdGUubmVlZEdvdG9IZWFkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDopoHljrvpoK3ku6XliY3lhYjljp/lnLDmjoPkuIDmrKFcbiAgICAgICAgICAgIGlmIChzZWFyY2hIb3VzZVN0YXRlLm5lZWRHb3RvSGVhZCkge1xuICAgICAgICAgICAgICBpZiAoc2VhcmNoRm9yQ2FuZHlIb3VzZSgpKSB7XG4gICAgICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ0ZvdW5kIHJmcGFnZUluQ2FuZHlIb3VzZSwgcmV0dXJuIGFuZCBsZXQgcmZwYWdlSW5DYW5keUhvdXNlIGhhbmRsZSBpdCcpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAyNSwgeTogMjUgfSk7IC8vIGdvdG8gaGVhZFxuICAgICAgICAgICAgICBVdGlscy5zbGVlcCh0aGlzLmNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgICBzZWFyY2hIb3VzZVN0YXRlLm5lZWRHb3RvSGVhZCA9IGZhbHNlO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgICBgJHtzZWFyY2hIb3VzZVN0YXRlLnNlYXJjaEhvdXNlUGF0aElkeH0sICR7c2VhcmNoSG91c2VTdGF0ZS5zZWFyY2hIb3VzZUlkeH0sICR7SlNPTi5zdHJpbmdpZnkoXG4gICAgICAgICAgICAgICAgc2VhcmNoSG9zZVBhdGhzW3NlYXJjaEhvdXNlU3RhdGUuc2VhcmNoSG91c2VQYXRoSWR4XVtzZWFyY2hIb3VzZVN0YXRlLnNlYXJjaEhvdXNlSWR4XVxuICAgICAgICAgICAgICApfWBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBzd2lwZURpcmVjdGlvbihzZWFyY2hIb3NlUGF0aHNbc2VhcmNoSG91c2VTdGF0ZS5zZWFyY2hIb3VzZVBhdGhJZHhdW3NlYXJjaEhvdXNlU3RhdGUuc2VhcmNoSG91c2VJZHhdLCBudWxsLCBQQUdFUy5yZnBhZ2VJbktpbmdkb21WaWxsYWdlKTtcbiAgICAgICAgICAgIHNlYXJjaEhvdXNlU3RhdGUuc2VhcmNoSG91c2VJZHgrKztcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgcmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShcbiAgICAgICAgICAgICAgICBuZXcgR3JvdXBQYWdlKCdncm91cFBhZ2VEZWNvcmF0aW9uJywgW1BBR0VTLnJmcGFnZU1vdmluZ1N0cnVjdHVyZXMsIFBBR0VTLnJmcGFnZUtpbmdkb21EZWNvcmF0aW5nRXhwYW5kXSksXG4gICAgICAgICAgICAgICAgMjAwMFxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnJmcGFnZU1vdmluZ1N0cnVjdHVyZXMpO1xuICAgICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAnZ3JvdXBQYWdlRGVjb3JhdGlvbiwgcmV0dXJuIHRvIHRyeSBhZ2FpbicpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChzZWFyY2hGb3JDYW5keUhvdXNlKCkpIHtcbiAgICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ0ZvdW5kIHJmcGFnZUluQ2FuZHlIb3VzZSwgcmV0dXJuIGFuZCBsZXQgcmZwYWdlSW5DYW5keUhvdXNlIGhhbmRsZSBpdCcpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAnVW5rbm93biB0YXNrIGluIHJmcGFnZUluS2luZ2RvbVZpbGxhZ2UnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgLy8gU2VuZCBydW5uaW5nIHdoZW4gZm91bmQgcmZwYWdlU3RvY2tJc0Z1bGxcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7UEFHRVMucmZwYWdlU3RvY2tJc0Z1bGwubmFtZX1gLFxuICAgICAgbWF0Y2g6IFBBR0VTLnJmcGFnZVN0b2NrSXNGdWxsLFxuICAgICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZnBhZ2VTdG9ja0lzRnVsbCwgc3RvY2sgaXMgZnVsbCBzbyBzZW5kIHJ1bm5pbmcnKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgLy8gICBwYXRoOiBgLyR7UEFHRVMuQUFBQUFBQUFBLm5hbWV9YCxcbiAgICAvLyAgIG1hdGNoOiBQQUdFUy5BQUFBQUFBQUEsXG4gICAgLy8gICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAvLyAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JmcGFnZUlzRGFpbHlGcmVlUGFja2FnZSwgZGFpbHkgZ2lmdCBjb2xsZWN0ZWQgY29ycmVjdGx5Jyk7XG4gICAgLy8gICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgIC8vICAgfSxcbiAgICAvLyB9KTtcblxuICAgIGNvbnN0IGFsbFBhZ2VzOiB7IFtrZXk6IHN0cmluZ106IFBhZ2UgfSA9IFBBR0VTIGFzIGFueTtcbiAgICBmb3IgKGNvbnN0IHBhZ2VJZHggaW4gYWxsUGFnZXMpIHtcbiAgICAgIGNvbnN0IHBhZ2UgPSBhbGxQYWdlc1twYWdlSWR4XTtcbiAgICAgIGlmICghKHBhZ2UgaW5zdGFuY2VvZiBQYWdlKSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmIChyZXJvdXRlci5nZXRQYWdlQnlOYW1lKHBhZ2UubmFtZSkgIT09IG51bGwpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICAgIHBhdGg6IGAvJHtwYWdlLm5hbWV9YCxcbiAgICAgICAgbWF0Y2g6IHBhZ2UsXG4gICAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICAgIGlmIChwYWdlLm5leHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYGZpbmRQYXRoLCB0YXNrOiAke2NvbnRleHQudGFzay5uYW1lfSwgcGF0aDogJHtjb250ZXh0LnBhdGh9IGJ1dCBkb2VzIG5vdCBoYXZlIG5leHQgcGFnZSB0byBnb2ApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zb2xlLmxvZyhgZmluZFBhdGgsIHRhc2s6ICR7Y29udGV4dC50YXNrLm5hbWV9LCBwYXRoOiAke2NvbnRleHQucGF0aH1gKTtcbiAgICAgICAgICByZXJvdXRlci5nb05leHQocGFnZSk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgYWRkU3RhcnRBcHBBY3Rpb24oKSB7XG4gICAgcmVyb3V0ZXIuYWRkU3RhcnRBcHBBY3Rpb24oKGNvbnRleHQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBjb25zdCBjaGVja0ludGVydmFsID0gMztcbiAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEyMCAqIDEwMDA7IGkgKz0gY2hlY2tJbnRlcnZhbCAqIDEwMDApIHtcbiAgICAgICAgY29uc3QgbWF0Y2hlcyA9IHJlcm91dGVyLmdldEN1cnJlbnRNYXRjaE5hbWVzKCk7XG4gICAgICAgIGlmIChtYXRjaGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBsb2dzKCdhZGRTdGFydEFwcEFjdGlvbicsIGB3YWl0aW5nIGZpbmlzaGVkLCBmb3VuZCAke0pTT04uc3RyaW5naWZ5KG1hdGNoZXMpfWApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgVXRpbHMuc2xlZXAoY2hlY2tJbnRlcnZhbCAqIDEwMDApO1xuICAgICAgICBsb2dzKFxuICAgICAgICAgICdhZGRTdGFydEFwcEFjdGlvbicsXG4gICAgICAgICAgYFN0YXJ0IGFwcCB3YWl0ICR7KERhdGUubm93KCkgLSBzdGFydFRpbWUpIC8gMTAwMH0gc2VjcyB1bnRpbCB0aGUgZ2FtZSBzdGFydGVkLCBjb3VudCBpcyBub3cgJHttYXRjaGVzLmxlbmd0aH0sIGZpc3QgbWF0Y2ggaXMgJHttYXRjaGVzWzBdfWBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVVbmtub3duKCkge1xuICAgIHJlcm91dGVyLmFkZFVua25vd25BY3Rpb24oKGNvbnRleHQsIGltYWdlLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgVXRpbHMubG9nKGB1bmtub3duIGNvdW50ICR7Y29udGV4dC5tYXRjaFRpbWVzfSwgdGFzazogJHtjb250ZXh0LnRhc2submFtZX0sIGR1cmluZyAke2NvbnRleHQubWF0Y2hEdXJpbmd9LCBsYXN0IG1hdGNoZWQ6ICR7Y29udGV4dC5sYXN0TWF0Y2hlZFBhdGh9YCk7XG5cbiAgICAgIGlmIChyZXJvdXRlci5jaGVja0FuZFN0YXJ0QXBwKCkpIHtcbiAgICAgICAgbG9ncygnaGFuZGxlVW5rbm93bicsICdjaGVja0FuZFN0YXJ0QXBwKCknKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaGFuZGxlR2VuZXJhbE1lc3NhZ2VXaW5kb3coY29udGV4dC50YXNrLm5hbWUsIGltYWdlLCBmaW5pc2hSb3VuZCkpIHtcbiAgICAgICAgbG9ncygnaGFuZGxlVW5rbm93bicsICdoYW5kbGVHZW5lcmFsTWVzc2FnZVdpbmRvdygpIHJldHVybiB0cnVlLCByZXR1cm4nKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoY2hlY2tJZkluQmF0dGxlKGNvbnRleHQudGFzay5uYW1lKSkge1xuICAgICAgICBsb2dzKCdoYW5kbGVVbmtub3duJywgJ0luIGJhdHRsZSBzbyBjb250aW51ZSBtb25pdG9yJyk7XG4gICAgICAgIGNvbnRleHQubWF0Y2hUaW1lcyA9IDA7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvbnRleHQubWF0Y2hUaW1lcyA+IDEpIHtcbiAgICAgICAgVXRpbHMubG9nKCd1bmtub3duQ2hlY2tNaXNzaW5nUGFnZScpO1xuICAgICAgICB1bmtub3duQ2hlY2tNaXNzaW5nUGFnZShjb250ZXh0LCBmaW5pc2hSb3VuZCk7XG4gICAgICB9XG4gICAgICBpZiAoY29udGV4dC5tYXRjaFRpbWVzICUgMyA9PT0gMCkge1xuICAgICAgICBrZXljb2RlKCdLRVlDT0RFX0JBQ0snLCAxMDApO1xuICAgICAgICBVdGlscy5sb2coJ2tleWNvZGUgYmFjayBmb3IgdW5rbm93bicpO1xuICAgICAgfVxuICAgICAgaWYgKGNvbnRleHQubWF0Y2hUaW1lcyAlIDcgPT09IDApIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU3NSwgeTogMjIgfSk7XG4gICAgICAgIFV0aWxzLmxvZygnVW5rbm93biBjb3VudCA3LCBjb3VsZCBiZSBpbiB0YXAgdG8gbG9naW4sIHRhcHBpbmcgKDU3NSwgMjIpIHVudGlsIHRoZSBnYW1lIHN0YXJ0Jyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb250ZXh0Lm1hdGNoVGltZXMgPiA1MCkge1xuICAgICAgICBsb2dzKCdoYW5kbGVVbmtub3duJywgYFNhdmUgc2NyZWVuc2hvdHMgYW5kIHJlc3RhcnQgZ2FtZSBhcyB1bmtub3duIG1heCByZWFjaGVkOiAke2NvbnRleHQubWF0Y2hUaW1lc31gKTtcbiAgICAgICAgc2F2ZUltYWdlVG9EaXNrKCd1bmtub3duLXBhZ2UtcmVhY2hlZCcsIGltYWdlKTtcbiAgICAgICAgY29udGV4dC5tYXRjaFRpbWVzID0gMDtcbiAgICAgICAgdmFyIHJ0biA9IGV4ZWN1dGUoJ2FtIGZvcmNlLXN0b3AgY29tLmRldnNpc3RlcnMuY2snKTtcbiAgICAgICAgaWYgKHJ0biA9PSAnc2lnbmFsOiBhYm9ydGVkJykge1xuICAgICAgICAgIC8vIE1FbXVcbiAgICAgICAgICBleGVjdXRlKFxuICAgICAgICAgICAgJ0FORFJPSURfREFUQT0vZGF0YSBCT09UQ0xBU1NQQVRIPS9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtb2ouamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtbGliYXJ0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9jb25zY3J5cHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29raHR0cC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1qdW5pdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYm91bmN5Y2FzdGxlLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdGVsZXBob255LWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdm9pcC1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ltcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL21tcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FuZHJvaWQucG9saWN5Lmphcjovc3lzdGVtL2ZyYW1ld29yay9hcGFjaGUteG1sLmphcjovc3lzdGVtL2ZyYW1ld29yay9vcmcuYXBhY2hlLmh0dHAubGVnYWN5LmJvb3QuamFyIGFtIGZvcmNlLXN0b3AgY29tLmRldnNpc3RlcnMuY2snXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBzbGVlcCgxNTAwMCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuLy8gKiA9PT09PT09PT09PSBlbnRyeSBwb2ludCA9PT09PT09PT09PVxuZXhwb3J0IGxldCBjb29raWVLaW5nZG9tOiBDb29raWVLaW5nZG9tIHwgdW5kZWZpbmVkO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RhcnQoanNvbkNvbmZpZzogYW55KSB7XG4gIGNvbnNvbGUubG9nKCd0eXBlZCBpbnB1dENvbmZpZzogJywganNvbkNvbmZpZyk7XG5cbiAgY29uZmlnU2hhcmVQcmVmKCk7XG5cbiAgaWYgKHR5cGVvZiBqc29uQ29uZmlnID09PSAnc3RyaW5nJykge1xuICAgIGpzb25Db25maWcgPSBKU09OLnBhcnNlKGpzb25Db25maWcpO1xuICB9XG5cbiAgYXNzaWduKGNvbmZpZywgbWVyZ2VPYmplY3QoZGVmYXVsdENvbmZpZywganNvbkNvbmZpZykpO1xuXG4gIGlmIChjb25maWcubGljZW5zZUlkID09PSAnJykge1xuICAgIGxvZ3MoJ3N0YXJ0JywgJ2NvbmZpZy5saWNlbnNlSWQgaXMgZW1wdHkgdGh1cyBnb3RvIG1haW50YWluYW5jZSBtb2RlJyk7XG4gICAgY29uZmlnLmlzTWFpbnRhaW5hbmNlTW9kZSA9IHRydWU7XG4gIH1cblxuICBjb29raWVLaW5nZG9tID0gbmV3IENvb2tpZUtpbmdkb20oY29uZmlnKTtcbiAgY29va2llS2luZ2RvbS5zdGFydCgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHN0b3AoKSB7XG4gIGNvbnNvbGUubG9nKCdzdG9wcHBwaW5nJyk7XG4gIGlmIChjb29raWVLaW5nZG9tID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29va2llS2luZ2RvbS5zdG9wKCk7XG4gIGNvb2tpZUtpbmdkb20gPSB1bmRlZmluZWQ7XG59XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7fVxufVxuaWYgKHdpbmRvdyA9PT0gdW5kZWZpbmVkKSB7XG4gICh3aW5kb3cgYXMgYW55KSA9IHt9O1xufVxuKHdpbmRvdyBhcyBhbnkpLnN0YXJ0ID0gc3RhcnQ7XG4od2luZG93IGFzIGFueSkuc3RvcCA9IHN0b3A7XG4od2luZG93IGFzIGFueSkucmVyb3V0ZXIgPSByZXJvdXRlcjtcblxuLy8gLy8gISBmb2xsb3dpbmcgaXMgb25seSBmb3IgZGV2XG4vLyBmdW5jdGlvbiBydW4oKSB7XG4vLyAgIGNvb2tpZUtpbmdkb20gPSBuZXcgQ29va2llS2luZ2RvbShkZWZhdWx0Q29uZmlnKTtcbi8vICAgY29va2llS2luZ2RvbS5zdGFydCgpO1xuLy8gfVxuXG4vLyBzZW5kRXZlbnRSdW5uaW5nKCk7XG4vLyBydW4oKTtcbi8vIGNvbnNvbGUubG9nKCdqb2JzIGRvbmUnKTtcbiIsImV4cG9ydCBjb25zdCBzbGVlcDogbnVtYmVyID0gMjQwO1xuZXhwb3J0IGNvbnN0IHNsZWVwQW5pbWF0ZTogbnVtYmVyID0gODAwO1xuZXhwb3J0IGNvbnN0IG1pbnV0ZUluTXM6IG51bWJlciA9IDYwICogMTAwMDtcbmV4cG9ydCBjb25zdCBob3VySW5NczogbnVtYmVyID0gbWludXRlSW5NcyAqIDYwO1xuZXhwb3J0IGNvbnN0IGRheUluTXM6IG51bWJlciA9IGhvdXJJbk1zICogMjQ7XG4iLCJpbXBvcnQgeyByZXJvdXRlciwgVXRpbHMsIFBhZ2UsIFhZLCBSRUNULCBHcm91cFBhZ2UsIFJvdXRlQ29udGV4dCB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCAqIGFzIFBBR0VTIGZyb20gJy4vcGFnZXMnO1xuaW1wb3J0ICogYXMgSUNPTlMgZnJvbSAnLi9pY29ucyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgQWR2YW50dXJlLCBBZHZhbnR1cmVzLCBJY29uLCBNZXNzYWdlV2luZG93LCBQb2ludCwgUmVjb3JkcywgVGFza1N0YXR1cywgV2lzaCwgV2lzaFN0YXR1cywgcHJvZHVjdFN0YXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgKiBhcyBNZXNzYWdlV2luZG93cyBmcm9tICcuL21lc3NhZ2VXaW5kb3cnO1xuaW1wb3J0IHsgbG9ncywgcGFkWmVybywgc2VuZEV2ZW50UnVubmluZywgc2VuZEtleUJhY2sgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi90YXNrcyc7XG5pbXBvcnQgeyBnbG9iYWxTdG9yYWdlIH0gZnJvbSAnLi9zdG9yYWdlJztcbmltcG9ydCB7IHJmcGFnZUluVHJhZGVIYWJvciwgcmZwYWdlTWFya2V0SXRlbURldGFpbCB9IGZyb20gJy4vdGFza3MvdHJhZGVIYWJvcic7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuL3NjcmlwdENvbmZpZyc7XG5pbXBvcnQgeyByZnBhZ2VJbkJvdW50aWVzLCByZnBhZ2VJbk9uZU9mVGhlQm91bnRpZXMsIHJmcGFnZVJlYWR5VG9CYXR0bGVCb3VudHkgfSBmcm9tICcuL3Rhc2tzL2JvdW50aWVzJztcbmltcG9ydCB7IHJmcGFnZUluR25vbWVMYWIgfSBmcm9tICcuL3Rhc2tzL2dub21lTGFiJztcbmltcG9ydCB7IHJmcGFnZVJlYWR5VG9GaWdodERyYWdvbiB9IGZyb20gJy4vdGFza3MvZ3VpbGQnO1xuXG5leHBvcnQgZnVuY3Rpb24gZmluZFVubWF0Y2hJblBhZ2UocGFnZTogUGFnZSkge1xuICBsZXQgaW1nID0gZ2V0U2NyZWVuc2hvdCgpO1xuICBsZXQgZXJyb3JNZXNzYWdlczogc3RyaW5nW10gPSBbXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2UucG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgcG9pbnQgPSBwYWdlLnBvaW50c1tpXTtcbiAgICBjb25zdCBjb2xvciA9IGdldEltYWdlQ29sb3IoaW1nLCBwb2ludC54LCBwb2ludC55KTtcbiAgICBjb25zdCBzY29yZSA9IFV0aWxzLmlkZW50aXR5Q29sb3IocG9pbnQsIGNvbG9yKTtcbiAgICBjb25zdCBpc1BvaW50Q29sb3JNYXRjaCA9IHNjb3JlID49IDAuOTtcbiAgICBpZiAoIWlzUG9pbnRDb2xvck1hdGNoKSB7XG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBgcG9pbnRbJHtpfV0gbWF0Y2ggZmFsc2U6IHNjb3JlOiAke3Njb3JlfSwgdGhyZXM6ICR7MC45fVxcbmV4cGVjdDogJHtVdGlscy5mb3JtYXRYWVJHQihwb2ludCl9XFxuZ2V0OiAke1V0aWxzLmZvcm1hdFhZUkdCKHtcbiAgICAgICAgLi4uY29sb3IsXG4gICAgICAgIHg6IHBvaW50LngsXG4gICAgICAgIHk6IHBvaW50LnksXG4gICAgICB9KX1cXG5gO1xuICAgICAgZXJyb3JNZXNzYWdlcy5wdXNoKGVycm9yTWVzc2FnZSk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhlcnJvck1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnNvbGUubG9nKCdtYXRjaGluZyBmaW5pc2hlZDogJywgcGFnZS5uYW1lKTtcbiAgcmVsZWFzZUltYWdlKGltZyk7XG4gIHJldHVybiBlcnJvck1lc3NhZ2VzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2Nyb2xsRG93bkFMb3Qoc3RhcnRQbnQ6IFhZKSB7XG4gIHJlcm91dGVyLnNjcmVlbi50YXBEb3duKHsgeDogc3RhcnRQbnQueCwgeTogc3RhcnRQbnQueSB9KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcbiAgcmVyb3V0ZXIuc2NyZWVuLm1vdmVUbyh7IHg6IHN0YXJ0UG50LngsIHk6IHN0YXJ0UG50LnkgfSk7XG4gIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcCk7XG4gIHJlcm91dGVyLnNjcmVlbi5tb3ZlVG8oeyB4OiBzdGFydFBudC54LCB5OiBzdGFydFBudC55IC8gMiB9KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcbiAgcmVyb3V0ZXIuc2NyZWVuLm1vdmVUbyh7IHg6IHN0YXJ0UG50LngsIHk6IC01MDAgfSk7XG4gIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcCk7XG4gIHJlcm91dGVyLnNjcmVlbi5tb3ZlVG8oeyB4OiBzdGFydFBudC54LCB5OiAtMTAwMCB9KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcbiAgcmVyb3V0ZXIuc2NyZWVuLnRhcFVwKHsgeDogc3RhcnRQbnQueCwgeTogLTEwMDAgfSk7XG4gIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUgKiAzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNjcm9sbExlZnRBTG90KHN0YXJ0UG50OiBYWSkge1xuICByZXJvdXRlci5zY3JlZW4udGFwRG93bih7IHg6IHN0YXJ0UG50LngsIHk6IHN0YXJ0UG50LnkgfSk7XG4gIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcCk7XG4gIHJlcm91dGVyLnNjcmVlbi5tb3ZlVG8oeyB4OiBzdGFydFBudC54ICogMiwgeTogc3RhcnRQbnQueSB9KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcbiAgcmVyb3V0ZXIuc2NyZWVuLm1vdmVUbyh7IHg6IDEwMDAsIHk6IHN0YXJ0UG50LnkgfSk7XG4gIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcCk7XG4gIHJlcm91dGVyLnNjcmVlbi5tb3ZlVG8oeyB4OiAxNTAwLCB5OiBzdGFydFBudC55IH0pO1xuICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXApO1xuICByZXJvdXRlci5zY3JlZW4ubW92ZVRvKHsgeDogMjAwMCwgeTogc3RhcnRQbnQueSB9KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcbiAgcmVyb3V0ZXIuc2NyZWVuLnRhcFVwKHsgeDogMjAwMCwgeTogc3RhcnRQbnQueSB9KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSAqIDMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2Nyb2xsUmlnaHRBTG90KHN0YXJ0UG50OiBYWSkge1xuICByZXR1cm4gc3dpcGVGcm9tVG9Qb2ludCh7IHg6IHN0YXJ0UG50LngsIHk6IHN0YXJ0UG50LnkgfSwgeyB4OiAtMjAwMCwgeTogc3RhcnRQbnQueSB9LCA1KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN3aXBlRnJvbVRvUG9pbnQoZnJvbVBudDogWFksIHRvUG50OiBYWSwgc3RlcHM6IG51bWJlciwgc3RvcElmRm91bmRQYWdlPzogUGFnZSB8IG51bGwsIHN3aXBpbmdQYWdlPzogUGFnZSkge1xuICBpZiAoc3dpcGluZ1BhZ2UgIT09IHVuZGVmaW5lZCAmJiAhcmVyb3V0ZXIuaXNQYWdlTWF0Y2goc3dpcGluZ1BhZ2UpKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3N3aXBlIGZyb20gdGhpcyBwb2ludCB3aWxsIGdldCB0byBhbm90aGVyIHBhZ2UsIHRyeSBhZ2FpbjogJywgZnJvbVBudC54LCBmcm9tUG50LnkpO1xuICAgIGtleWNvZGUoJ0JBQ0snLCAxMDApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0ZXBzID0gc3RlcHMgPT0gdW5kZWZpbmVkID8gNCA6IHN0ZXBzO1xuICB2YXIgc3RlcF94ID0gKHRvUG50LnggLSBmcm9tUG50LngpIC8gc3RlcHM7XG4gIHZhciBzdGVwX3kgPSAodG9QbnQueSAtIGZyb21QbnQueSkgLyBzdGVwcztcblxuICB0YXBEb3duKGZyb21QbnQueCwgZnJvbVBudC55LCA0MCwgMCk7XG4gIHNsZWVwKDEwKTtcbiAgbW92ZVRvKGZyb21QbnQueCwgZnJvbVBudC55LCA0MCwgMCk7XG4gIHNsZWVwKDEwKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ZXBzOyBpKyspIHtcbiAgICBtb3ZlVG8oZnJvbVBudC54ICsgc3RlcF94ICogaSwgZnJvbVBudC55ICsgc3RlcF95ICogaSwgNDAsIDApO1xuICAgIC8vIGNvbnNvbGUubG9nKCdpbiBwbnQ6ICcsIGZyb21QbnQueCArIHN0ZXBfeCAqIGksIGZyb21QbnQueSArIHN0ZXBfeSAqIGkpO1xuICAgIHNsZWVwKDEwMCk7XG4gIH1cblxuICBtb3ZlVG8odG9QbnQueCwgdG9QbnQueSwgNDAsIDApO1xuICBzbGVlcCg1MDApO1xuICB0YXBVcCh0b1BudC54LCB0b1BudC55LCA0MCwgMCk7XG4gIHNsZWVwKDUwMCk7XG5cbiAgaWYgKHN3aXBpbmdQYWdlICE9PSB1bmRlZmluZWQgJiYgIXJlcm91dGVyLmlzUGFnZU1hdGNoKHN3aXBpbmdQYWdlKSkge1xuICAgIGNvbnNvbGUubG9nKCdzd2lwZSBidXQgcGFnZSBjaGFuZ2VkLCBmYWlsZWQgeCwgeTogJywgZnJvbVBudC54LCBmcm9tUG50LnkpO1xuICAgIGtleWNvZGUoJ0JBQ0snLCAxMDApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrU2NyZWVuTWVzc2FnZShtZXNzYWdlOiBNZXNzYWdlV2luZG93LCBwYWdlTWVzc2FnZVdpbmRvdz86IFBhZ2UsIGltZz86IEltYWdlKSB7XG4gIGxldCBuZWVkUmVsZWFzZUltZyA9IGZhbHNlO1xuICBpZiAoaW1nID09PSB1bmRlZmluZWQpIHtcbiAgICBuZWVkUmVsZWFzZUltZyA9IHRydWU7XG4gICAgaW1nID0gZ2V0U2NyZWVuc2hvdCgpO1xuICB9XG5cbiAgaWYgKHBhZ2VNZXNzYWdlV2luZG93ID09PSB1bmRlZmluZWQpIHtcbiAgICBwYWdlTWVzc2FnZVdpbmRvdyA9IG5ldyBQYWdlKCdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdycsIFtcbiAgICAgIHsgeDogNDI0LCB5OiAxMDEsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgICB7IHg6IDI5NCwgeTogMTAxLCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgICAgeyB4OiA0MzEsIHk6IDEyOCwgcjogMjQzLCBnOiAyMzMsIGI6IDIyMyB9LFxuICAgICAgeyB4OiA0MjksIHk6IDI0NCwgcjogMjE5LCBnOiAyMDcsIGI6IDE5OSB9LFxuICAgICAgeyB4OiAzODAsIHk6IDEwMCwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICAgIHsgeDogMzE5LCB5OiAxMDIsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgICB7IHg6IDI5MiwgeTogMTA4LCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIF0pO1xuICB9XG4gIGlmICghcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShwYWdlTWVzc2FnZVdpbmRvdywgaW1nKSkge1xuICAgIGlmIChuZWVkUmVsZWFzZUltZykge1xuICAgICAgcmVsZWFzZUltYWdlKGltZyk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGxldCBjcm9wcGVkSW1hZ2UgPSBjcm9wSW1hZ2UoaW1nLCBtZXNzYWdlLngsIG1lc3NhZ2UueSwgbWVzc2FnZS53aWR0aCwgbWVzc2FnZS5oZWlnaHQpO1xuICB2YXIgd2hTaXplID0gZ2V0SW1hZ2VTaXplKGNyb3BwZWRJbWFnZSk7XG4gIHZhciBjbnQgPSAwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHdoU2l6ZS53aWR0aDsgaSsrKSB7XG4gICAgaWYgKGlzU2FtZUNvbG9yKGdldEltYWdlQ29sb3IoY3JvcHBlZEltYWdlLCBpLCBtZXNzYWdlLnRhcmdldFkpLCBtZXNzYWdlLmxvb2tpbmdGb3JDb2xvcikpIHtcbiAgICAgIGNudCsrO1xuICAgIH1cbiAgfVxuICBsb2dzKCdjaGVja1NjcmVlbk1lc3NhZ2UnLCBgQ2hlY2tpbmcgJHttZXNzYWdlLm5hbWV9LCBleHBlY3RpbmcgJHttZXNzYWdlLnRhcmdldENvbG9yQ291bnR9IHBvaW50cyBhbmQgZ290ICR7Y250fSBwb2ludHNgKTtcblxuICBpZiAobmVlZFJlbGVhc2VJbWcpIHtcbiAgICByZWxlYXNlSW1hZ2UoaW1nKTtcbiAgfVxuICByZWxlYXNlSW1hZ2UoY3JvcHBlZEltYWdlKTtcbiAgcmV0dXJuIE1hdGguYWJzKG1lc3NhZ2UudGFyZ2V0Q29sb3JDb3VudCAtIGNudCkgPCBtZXNzYWdlLnRhcmdldENvbG9yVGhyZWFzaG9sZCA/IHRydWUgOiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU2FtZUNvbG9yKGMxOiBSR0IsIGMyOiBSR0IsIGRpZmY/OiBudW1iZXIpIHtcbiAgaWYgKGRpZmYgPT09IHVuZGVmaW5lZCkge1xuICAgIGRpZmYgPSAzNTtcbiAgfVxuICAvLyBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShjMSksIEpTT04uc3RyaW5naWZ5KGMyKSwgZGlmZik7XG4gIGlmIChNYXRoLmFicyhjMS5yIC0gYzIucikgPCBkaWZmICYmIE1hdGguYWJzKGMxLmcgLSBjMi5nKSA8IGRpZmYgJiYgTWF0aC5hYnMoYzEuYiAtIGMyLmIpIDwgZGlmZikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU2FtZUNvbG9yQXRQbnQocG9pbnQ6IFhZLCBjMjogUkdCLCBkaWZmPzogbnVtYmVyKSB7XG4gIGlmIChwb2ludC54ID09PSB1bmRlZmluZWQgfHwgcG9pbnQueSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc29sZS5sb2coJ0Vycm9yIGlzU2FtZUNvbG9yQXRQbnQgYXMgeCB5IGNhbm5vdCBiZSB1bmRlZmluZWQ6JywgSlNPTi5zdHJpbmdpZnkocG9pbnQpKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgaW1nID0gZ2V0U2NyZWVuc2hvdCgpO1xuICB2YXIgY29sb3IgPSBnZXRJbWFnZUNvbG9yKGltZywgcG9pbnQueCwgcG9pbnQueSk7XG4gIHJlbGVhc2VJbWFnZShpbWcpO1xuICBpZiAoIWlzU2FtZUNvbG9yKGNvbG9yLCBjMiwgZGlmZikpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja0lmVHJhaW5SZXF1aXJlbWVudE1ldCgpIHtcbiAgLy8gVE9ETzogb3IgaXNNZXNzYWdlV2luZG93V2l0aERpYW1vbmQoKVxuICBpZiAocmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShQQUdFUy5yZnBhZ2VUcmFpbk5vdEVub3VnaEdvb2RzLCAyMDAwKSkge1xuICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWNvZ25pemVXaXNoaW5nVHJlZVJlcXVpcmVtZW50cyh3b3JkczogSWNvbltdLCBkZXZJbWc6IEltYWdlLCBtYXhMZW5ndGg6IG51bWJlciwgdGhyZXM6IG51bWJlciwgb3ZlcmxhcFJhdGlvOiBudW1iZXIpIHtcbiAgdmFyIG1heFdvcmRXaWR0aCA9IDA7XG4gIHZhciBhbGxSZXN1bHRzID0gW107XG4gIGZvciAodmFyIHcgPSAwOyB3IDwgd29yZHMubGVuZ3RoOyB3KyspIHtcbiAgICB2YXIgaWNvbiA9IHdvcmRzW3ddO1xuICAgIHZhciB3aCA9IGdldEltYWdlU2l6ZShpY29uLmltYWdlKTtcbiAgICBtYXhXb3JkV2lkdGggPSBNYXRoLm1heChtYXhXb3JkV2lkdGgsIHdoLndpZHRoKTtcbiAgICB2YXIgcmVzdWx0cyA9IGZpbmRJbWFnZXMoZGV2SW1nLCBpY29uLmltYWdlLCB0aHJlcywgbWF4TGVuZ3RoLCB0cnVlKTtcbiAgICBmb3IgKHZhciBpZHggaW4gcmVzdWx0cykge1xuICAgICAgdmFyIHJlc3VsdCA9IHJlc3VsdHNbaWR4XTtcbiAgICAgIGFsbFJlc3VsdHMucHVzaCh7IGNoYXI6IGljb24ubmFtZSwgeDogcmVzdWx0LngsIHk6IHJlc3VsdC55LCBzY29yZTogcmVzdWx0LnNjb3JlLCB3OiB3aC53aWR0aCB9KTtcbiAgICB9XG4gIH1cblxuICBhbGxSZXN1bHRzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gYS54IC0gYi54O1xuICB9KTtcbiAgdmFyIHN0ciA9ICcnO1xuICB2YXIgckJvdW5kID0gMDtcbiAgdmFyIG1heFNjb3JlID0gMDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxSZXN1bHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgd29yZCA9IGFsbFJlc3VsdHNbaV07XG5cbiAgICAvLyBjb25zb2xlLmxvZygnd29yZCcsIHdvcmQuY2hhciwgckJvdW5kLCAneCcsIHdvcmQueCwgd29yZC5zY29yZSk7XG4gICAgaWYgKHdvcmQueCA+IHJCb3VuZCkge1xuICAgICAgbWF4U2NvcmUgPSB3b3JkLnNjb3JlO1xuICAgICAgc3RyICs9IHdvcmQuY2hhcjtcbiAgICAgIHJCb3VuZCA9IE1hdGguZmxvb3Iod29yZC54ICsgd29yZC53ICogb3ZlcmxhcFJhdGlvKTtcbiAgICB9IGVsc2UgaWYgKHdvcmQueCA8PSByQm91bmQgJiYgd29yZC5zY29yZSA+IG1heFNjb3JlICYmIHdvcmQuY2hhciAhPT0gJyAnKSB7XG4gICAgICAvLyBvdmVybGFwXG4gICAgICBtYXhTY29yZSA9IHdvcmQuc2NvcmU7XG4gICAgICBzdHIgPSBzdHIuc3Vic3RyKDAsIHN0ci5sZW5ndGggLSAxKSArIHdvcmQuY2hhcjtcbiAgICAgIHJCb3VuZCA9IE1hdGguZmxvb3Iod29yZC54ICsgd29yZC53ICogb3ZlcmxhcFJhdGlvKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHN0cjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEdlbkFkdmFudHVyZShwbnQ6IFhZLCBmcm9tSGVhZDogYm9vbGVhbiwgYmFja3dhcmQ6IGJvb2xlYW4pIHtcbiAgcmV0dXJuIHtcbiAgICBwbnQ6IHBudCxcbiAgICBmcm9tSGVhZDogZnJvbUhlYWQsXG4gICAgYmFja3dhcmQ6IGJhY2t3YXJkLFxuICB9O1xufVxuXG4vLyBXaGVuIHRoZXJlIGFyZSBOTyB0aW1lZCBldmVudFxuLy8gZXhwb3J0IGNvbnN0IEFkdmFudHVyZXNCb3VudGllc0F0Mm5kOiB7IFtrZXk6IHN0cmluZ106IEFkdmFudHVyZSB9ID0ge1xuLy8gICBwdnA6IEdlbkFkdmFudHVyZSh7IHg6IDEyMywgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbi8vICAgdG93ZXJPZlN3ZWV0Q2hhb3M6IEdlbkFkdmFudHVyZSh7IHg6IDIxNCwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbi8vICAgdHJvcGljYWxJc2xhbmQ6IEdlbkFkdmFudHVyZSh7IHg6IDMwMCwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbi8vICAgY29va2llQWxsaWFuY2U6IEdlbkFkdmFudHVyZSh7IHg6IDM5MiwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcblxuLy8gICBzdXBlck1heWhlbTogR2VuQWR2YW50dXJlKHsgeDogNTAwLCB5OiAxNTAgfSwgZmFsc2UsIGZhbHNlKSxcbi8vICAgYm91bnRpZXM6IEdlbkFkdmFudHVyZSh7IHg6IDMwMCwgeTogMTAwIH0sIGZhbHNlLCBmYWxzZSksXG4vLyAgIGd1aWxkOiBHZW5BZHZhbnR1cmUoeyB4OiAxMCwgeTogMTAwIH0sIGZhbHNlLCB0cnVlKSxcbi8vIH07XG5cbi8vIENSSyByZWxlYXNlZCBBdWcgOSwgMjAyM1xuZXhwb3J0IGNvbnN0IEFkdmFudHVyZXNCb3VudGllc0F0M3JkOiB7IFtrZXk6IHN0cmluZ106IEFkdmFudHVyZSB9ID0ge1xuICBwdnA6IEdlbkFkdmFudHVyZSh7IHg6IDEyMywgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbiAgdG93ZXJPZlN3ZWV0Q2hhb3M6IEdlbkFkdmFudHVyZSh7IHg6IDIxNCwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbiAgdHJvcGljYWxJc2xhbmQ6IEdlbkFkdmFudHVyZSh7IHg6IDMwMCwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbiAgZ3VpbGRCYXR0bGVBbGxpYW5jZTogR2VuQWR2YW50dXJlKHsgeDogMzkyLCB5OiAyMzAgfSwgdHJ1ZSwgZmFsc2UpLFxuXG4gIHN1cGVyTWF5aGVtOiBHZW5BZHZhbnR1cmUoeyB4OiA0MDAsIHk6IDE1MCB9LCBmYWxzZSwgZmFsc2UpLFxuICBib3VudGllczogR2VuQWR2YW50dXJlKHsgeDogMzM4LCB5OiAxMTEgfSwgZmFsc2UsIHRydWUpLFxuICBndWlsZDogR2VuQWR2YW50dXJlKHsgeDogNTI3LCB5OiAxMTUgfSwgZmFsc2UsIHRydWUpLFxufTtcblxuLy8gZXhwb3J0IGNvbnN0IEFkdmFudHVyZXNCb3VudGllc0F0NHRoOiB7IFtrZXk6IHN0cmluZ106IEFkdmFudHVyZSB9ID0ge1xuLy8gICBwdnA6IEdlbkFkdmFudHVyZSh7IHg6IDEyMywgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbi8vICAgdG93ZXJPZlN3ZWV0Q2hhb3M6IEdlbkFkdmFudHVyZSh7IHg6IDIxNCwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbi8vICAgdHJvcGljYWxJc2xhbmQ6IEdlbkFkdmFudHVyZSh7IHg6IDMwMCwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcbi8vICAgY29va2llQWxsaWFuY2U6IEdlbkFkdmFudHVyZSh7IHg6IDM5MiwgeTogMjMwIH0sIHRydWUsIGZhbHNlKSxcblxuLy8gICBzdXBlck1heWhlbTogR2VuQWR2YW50dXJlKHsgeDogNTAwLCB5OiAxNTAgfSwgZmFsc2UsIGZhbHNlKSxcbi8vICAgYm91bnRpZXM6IEdlbkFkdmFudHVyZSh7IHg6IDEwMCwgeTogMTAwIH0sIGZhbHNlLCB0cnVlKSxcbi8vICAgZ3VpbGQ6IEdlbkFkdmFudHVyZSh7IHg6IDMyMCwgeTogMTAwIH0sIGZhbHNlLCB0cnVlKSxcbi8vIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXloZW1TY29yZXMoKSB7XG4gIHZhciBpbWcgPSBnZXRTY3JlZW5zaG90KCk7XG4gIHZhciBzY29yZXMgPSBbMCwgMCwgMF07XG4gIHZhciBpbWFnZXNMb2NhdGlvbiA9IFtcbiAgICBbXG4gICAgICB7IHg6IDQ5NSwgeTogNTYsIHc6IDQ3LCBoOiAxMiB9LFxuICAgICAgeyB4OiA0OTUsIHk6IDg0LCB3OiA0NywgaDogMTIgfSxcbiAgICAgIHsgeDogNDk1LCB5OiAxMTAsIHc6IDQ3LCBoOiAxMiB9LFxuICAgIF0sXG4gICAgW1xuICAgICAgeyB4OiA0OTUsIHk6IDE0NSwgdzogNDcsIGg6IDEyIH0sXG4gICAgICB7IHg6IDQ5NSwgeTogMTcyLCB3OiA0NywgaDogMTIgfSxcbiAgICAgIHsgeDogNDk1LCB5OiAxOTgsIHc6IDQ3LCBoOiAxMiB9LFxuICAgIF0sXG4gICAgW1xuICAgICAgeyB4OiA0OTUsIHk6IDIzMiwgdzogNDcsIGg6IDEyIH0sXG4gICAgICB7IHg6IDQ5NSwgeTogMjYwLCB3OiA0NywgaDogMTIgfSxcbiAgICAgIHsgeDogNDk1LCB5OiAyODgsIHc6IDQ3LCBoOiAxMiB9LFxuICAgIF0sXG4gIF07XG4gIGZvciAodmFyIG1heWhlbUlkeCA9IDA7IG1heWhlbUlkeCA8IGltYWdlc0xvY2F0aW9uLmxlbmd0aDsgbWF5aGVtSWR4KyspIHtcbiAgICBmb3IgKHZhciB0ZWFtSWR4ID0gMDsgdGVhbUlkeCA8IGltYWdlc0xvY2F0aW9uW21heWhlbUlkeF0ubGVuZ3RoOyB0ZWFtSWR4KyspIHtcbiAgICAgIHZhciB0SW1hZ2UgPSBpbWFnZXNMb2NhdGlvblttYXloZW1JZHhdW3RlYW1JZHhdO1xuICAgICAgdmFyIGNyb3BwZWRJbWFnZSA9IGNyb3BJbWFnZShpbWcsIHRJbWFnZS54LCB0SW1hZ2UueSwgdEltYWdlLncsIHRJbWFnZS5oKTtcbiAgICAgIHZhciB2YWx1ZSA9ICtyZWNvZ25pemVXaXNoaW5nVHJlZVJlcXVpcmVtZW50cyhJQ09OUy5udW1iZXJJbWFnZXNTdXBlck1heWhlbSwgY3JvcHBlZEltYWdlLCA3LCAwLjcsIDAuNykgfHwgMDtcbiAgICAgIHJlbGVhc2VJbWFnZShjcm9wcGVkSW1hZ2UpO1xuXG4gICAgICBpZiAodmFsdWUgPiBzY29yZXNbbWF5aGVtSWR4XSkge1xuICAgICAgICBzY29yZXNbbWF5aGVtSWR4XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJlbGVhc2VJbWFnZShpbWcpO1xuICAvLyBjb25zb2xlLmxvZygnPj4gJywgSlNPTi5zdHJpbmdpZnkoc2NvcmVzKSk7XG4gIHJldHVybiBzY29yZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4odGFyZ2V0OiBJY29uLCB0YXJnZXRBcmVhPzogUkVDVCwgaXNEZXY/OiBib29sZWFuKTogUG9pbnRbXSB7XG4gIGlmICh0YXJnZXQuaW1hZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgIHRhcmdldC5sb2FkSW1hZ2UoKTtcbiAgfVxuICByZXR1cm4gZmluZFNwZWNpZmljSW1hZ2VJblNjcmVlbih0YXJnZXQuaW1hZ2UsIHRhcmdldC50aHJlcywgdGFyZ2V0QXJlYSwgaXNEZXYpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZFNwZWNpZmljSW1hZ2VJblNjcmVlbih0YXJnZXQ6IEltYWdlLCB0aHJlYXNob2xkPzogbnVtYmVyLCB0YXJnZXRBcmVhPzogUkVDVCwgaXNEZXY/OiBib29sZWFuKTogUG9pbnRbXSB7XG4gIGlmICh0aHJlYXNob2xkID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJlYXNob2xkID0gMC45NTtcbiAgfVxuXG4gIGNvbnN0IGltZyA9IGdldFNjcmVlbnNob3QoKTtcbiAgbGV0IGNyb3BwZWRJbWFnZTtcbiAgbGV0IGZvdW5kUmVzdWx0cztcbiAgaWYgKHRhcmdldEFyZWEgIT09IHVuZGVmaW5lZCkge1xuICAgIGNyb3BwZWRJbWFnZSA9IGNyb3BJbWFnZShpbWcsIHRhcmdldEFyZWEueCwgdGFyZ2V0QXJlYS55LCB0YXJnZXRBcmVhLncsIHRhcmdldEFyZWEuaCk7XG4gICAgZm91bmRSZXN1bHRzID0gZmluZEltYWdlcyhjcm9wcGVkSW1hZ2UsIHRhcmdldCwgdGhyZWFzaG9sZCwgMTAsIHRydWUpO1xuICAgIHJlbGVhc2VJbWFnZShjcm9wcGVkSW1hZ2UpO1xuICB9IGVsc2Uge1xuICAgIGZvdW5kUmVzdWx0cyA9IGZpbmRJbWFnZXMoaW1nLCB0YXJnZXQsIHRocmVhc2hvbGQsIDEwLCB0cnVlKTtcbiAgfVxuICByZWxlYXNlSW1hZ2UoaW1nKTtcblxuICBpZiAoaXNEZXYpIHtcbiAgICBjb25zb2xlLmxvZygnZmluZFNwZWNpZmljSW1hZ2VJblNjcmVlbiwgZm91bmQgdGFyZ2V0IGljb24gYXQ6ICcsIEpTT04uc3RyaW5naWZ5KGZvdW5kUmVzdWx0cykpO1xuICB9XG5cbiAgbGV0IHJ0bjogUG9pbnRbXSA9IFtdO1xuICBmb3IgKGxldCBrZXkgaW4gZm91bmRSZXN1bHRzKSB7XG4gICAgcnRuLnB1c2goZm91bmRSZXN1bHRzW2tleV0pO1xuICB9XG4gIHJldHVybiBydG47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkeW5hbWljU29ydChwcm9wZXJ0eTogYW55KSB7XG4gIHZhciBzb3J0T3JkZXIgPSAxO1xuICBpZiAocHJvcGVydHlbMF0gPT09ICctJykge1xuICAgIHNvcnRPcmRlciA9IC0xO1xuICAgIHByb3BlcnR5ID0gcHJvcGVydHkuc3Vic3RyKDEpO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiAoYTogYW55LCBiOiBhbnkpIHtcbiAgICAvKiBuZXh0IGxpbmUgd29ya3Mgd2l0aCBzdHJpbmdzIGFuZCBudW1iZXJzLFxuICAgICAqIGFuZCB5b3UgbWF5IHdhbnQgdG8gY3VzdG9taXplIGl0IHRvIHlvdXIgbmVlZHNcbiAgICAgKi9cbiAgICB2YXIgcmVzdWx0ID0gYVtwcm9wZXJ0eV0gPCBiW3Byb3BlcnR5XSA/IC0xIDogYVtwcm9wZXJ0eV0gPiBiW3Byb3BlcnR5XSA/IDEgOiAwO1xuICAgIHJldHVybiByZXN1bHQgKiBzb3J0T3JkZXI7XG4gIH07XG59XG5cbi8vIFN0b2NrcyBsaWtlIDIyMC8yLCBtZWFucyBuZWVkIDIgd2hpbGUgd2UgaGF2ZSAyMDAsIGFuZCB3aWxsIHJldHVybiAyMThcbmV4cG9ydCBmdW5jdGlvbiBvY3JTdG9ja3NJblJlY3QocmVjdDogUkVDVCwgaWNvbnM6IEljb25bXSk6IG51bWJlciB7XG4gIHZhciBpbWcgPSBnZXRTY3JlZW5zaG90KCk7XG4gIHZhciBjcm9wcGVkSW1hZ2UgPSBjcm9wSW1hZ2UoaW1nLCByZWN0LngsIHJlY3QueSwgcmVjdC53LCByZWN0LmgpO1xuICByZWxlYXNlSW1hZ2UoaW1nKTtcblxuICB2YXIgdHh0ID0gcmVjb2duaXplV2lzaGluZ1RyZWVSZXF1aXJlbWVudHMoaWNvbnMsIGNyb3BwZWRJbWFnZSwgMTAsIDAuOCwgMC41KTtcbiAgY29uc29sZS5sb2coJz4+IG9jclN0b2Nrc0luUmVjdCBnb3QgdHh0JywgdHh0KTtcbiAgcmVsZWFzZUltYWdlKGNyb3BwZWRJbWFnZSk7XG5cbiAgaWYgKHR4dC5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gLTE7XG4gIH0gZWxzZSBpZiAodHh0LmluZGV4T2YoJy8nKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gLTE7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHN0b2NrID0gdHh0LnNwbGl0KCcvJyk7XG4gICAgcmV0dXJuICtzdG9ja1swXSAtICtzdG9ja1sxXTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb2NyTnVtYmVySW5SZWN0KHJlY3Q6IFJFQ1QsIGljb25zOiBJY29uW10pOiBudW1iZXIge1xuICBjb25zdCB0ZXh0ID0gb2NyVGV4dEluUmVjdChyZWN0LCBpY29ucyk7XG4gIGlmICh0ZXh0ID09PSAnJykge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICByZXR1cm4gK3RleHQ7XG5cbiAgLy8gdmFyIGltZyA9IGdldFNjcmVlbnNob3QoKTtcbiAgLy8gdmFyIGNyb3BwZWRJbWFnZSA9IGNyb3BJbWFnZShpbWcsIHJlY3QueCwgcmVjdC55LCByZWN0LncsIHJlY3QuaCk7XG4gIC8vIHJlbGVhc2VJbWFnZShpbWcpO1xuXG4gIC8vIHZhciB0eHQgPSByZWNvZ25pemVXaXNoaW5nVHJlZVJlcXVpcmVtZW50cyhpY29ucywgY3JvcHBlZEltYWdlLCAxMCwgMC44LCAwLjUpO1xuICAvLyByZWxlYXNlSW1hZ2UoY3JvcHBlZEltYWdlKTtcblxuICAvLyBpZiAodHh0Lmxlbmd0aCA9PT0gMCkge1xuICAvLyAgIHJldHVybiAtMTtcbiAgLy8gfSBlbHNlIHtcbiAgLy8gICByZXR1cm4gK3R4dDtcbiAgLy8gfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb2NyU3RvY2tBbmRSZXFJblJlY3QocmVjdDogUkVDVCwgaWNvbnM6IEljb25bXSk6IG51bWJlcltdIHtcbiAgY29uc3QgdGV4dCA9IG9jclRleHRJblJlY3QocmVjdCwgaWNvbnMsIDAuNzgsIDgpO1xuICAvLyBjb25zb2xlLmxvZyhgb2NyU3RvY2tBbmRSZXFJblJlY3Q6ICR7SlNPTi5zdHJpbmdpZnkocmVjdCl9LCAke3RleHR9YCk7XG4gIGNvbnN0IHZhbHVlcyA9IHRleHQuc3BsaXQoJy8nKTtcbiAgaWYgKHZhbHVlcy5sZW5ndGggPCAyKSB7XG4gICAgcmV0dXJuIFsrdGV4dCwgLTFdO1xuICB9XG5cbiAgcmV0dXJuIFsrdmFsdWVzWzBdLCArdmFsdWVzWzFdXTtcbn1cblxuLy8g5Zyo5biC6ZuG5Lit6IO95q2j56K66K6A5Ye6MSw4NzZcbmV4cG9ydCBmdW5jdGlvbiBvY3JUZXh0SW5SZWN0KHJlY3Q6IFJFQ1QsIGljb25zOiBJY29uW10sIG92ZXJyaWRlVGhyZT86IG51bWJlciwgb3ZlcnJpZGVPdmVybGFwPzogbnVtYmVyKTogc3RyaW5nIHtcbiAgdmFyIGltZyA9IGdldFNjcmVlbnNob3QoKTtcbiAgdmFyIGNyb3BwZWRJbWFnZSA9IGNyb3BJbWFnZShpbWcsIHJlY3QueCwgcmVjdC55LCByZWN0LncsIHJlY3QuaCk7XG4gIHJlbGVhc2VJbWFnZShpbWcpO1xuXG4gIHZhciByZXN1bHRzOiB7IHNjb3JlOiBudW1iZXI7IHg6IG51bWJlcjsgeTogbnVtYmVyOyB0YXJnZXQ6IHN0cmluZyB9W10gPSBbXTtcbiAgZm9yICh2YXIgaSBpbiBpY29ucykge1xuICAgIC8vIG51bWJlcnNbaV0gPSBiZ3JUb0dyYXkobnVtYmVyc1tpXSwgNDApXG4gICAgY29uc3QgdGhyZXMgPSBvdmVycmlkZVRocmUgPT09IHVuZGVmaW5lZCA/IGljb25zW2ldLnRocmVzIDogb3ZlcnJpZGVUaHJlO1xuICAgIGNvbnN0IG92ZXJsYXAgPSBvdmVycmlkZU92ZXJsYXAgPT09IHVuZGVmaW5lZCA/IDEwIDogb3ZlcnJpZGVPdmVybGFwO1xuXG4gICAgdmFyIGZvdW5kUmVzdWx0cyA9IGZpbmRJbWFnZXMoY3JvcHBlZEltYWdlLCBpY29uc1tpXS5pbWFnZSwgdGhyZXMsIG92ZXJsYXAsIHRydWUpO1xuICAgIGZvciAodmFyIGogaW4gZm91bmRSZXN1bHRzKSB7XG4gICAgICByZXN1bHRzLnB1c2goe1xuICAgICAgICB4OiBmb3VuZFJlc3VsdHNbal0ueCxcbiAgICAgICAgeTogZm91bmRSZXN1bHRzW2pdLnksXG4gICAgICAgIHNjb3JlOiBmb3VuZFJlc3VsdHNbal0uc2NvcmUsXG4gICAgICAgIHRhcmdldDogaWNvbnNbaV0ubmFtZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZXN1bHRzLnNvcnQoZHluYW1pY1NvcnQoJ3gnKSk7XG4gIC8vIGNvbnNvbGUubG9nKGA9PiBvY3JUZXh0SW5SZWN0ICR7SlNPTi5zdHJpbmdpZnkocmVjdCl9LCAke2ljb25zLmxlbmd0aH0sICAke0pTT04uc3RyaW5naWZ5KHJlc3VsdHMpfWApO1xuICByZWxlYXNlSW1hZ2UoY3JvcHBlZEltYWdlKTtcblxuICBpZiAocmVzdWx0cy5sZW5ndGggPT0gMCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIHZhciBkaWdpdF93aWR0aCA9IDQ7XG4gIHZhciBvdXRwdXQgPSAnJztcbiAgdmFyIGlkeCA9IDE7XG4gIHdoaWxlIChpZHggPCByZXN1bHRzLmxlbmd0aCkge1xuICAgIGlmIChyZXN1bHRzW2lkeF0ueCAtIHJlc3VsdHNbaWR4IC0gMV0ueCA8IGRpZ2l0X3dpZHRoKSB7XG4gICAgICAvLyByZXN1bHRzW2ldLnNjb3JlID4gcmVzdWx0c1tpIC0gMV0uc2NvcmUgPyByZXN1bHRzLnNwbGljZShpIC0gMSwgMSkgOiByZXN1bHRzLnNwbGljZShpLCAxKTtcbiAgICAgIGlmIChyZXN1bHRzW2lkeF0uc2NvcmUgPiByZXN1bHRzW2lkeCAtIDFdLnNjb3JlKSB7XG4gICAgICAgIHJlc3VsdHMuc3BsaWNlKGlkeCAtIDEsIDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0cy5zcGxpY2UoaWR4LCAxKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWR4Kys7XG4gICAgfVxuICAgIC8vIGNvbnNvbGUubG9nKCc+PicsIGlkeCwgSlNPTi5zdHJpbmdpZnkocmVzdWx0cykpXG4gIH1cbiAgZm9yICh2YXIgaSBpbiByZXN1bHRzKSB7XG4gICAgb3V0cHV0ICs9IHJlc3VsdHNbaV0udGFyZ2V0O1xuICB9XG5cbiAgLy8gY29uc29sZS5sb2coJ29jclRleHRJblJlY3QgaGFzIG91dHB1dDogJywgb3V0cHV0KTtcbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRhcFRocm91Z2hBbmltYXRlKHRhcmdldFBhZ2U6IFBhZ2UsIHRhcHBpbmdQb2ludDogWFksIHRpbWVJbk1zOiBudW1iZXIsIGludGVydmFsPzogbnVtYmVyKTogYm9vbGVhbiB7XG4gIGlmIChpbnRlcnZhbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgaW50ZXJ2YWwgPSA1MDA7XG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHRpbWVJbk1zOyBpICs9IGludGVydmFsKSB7XG4gICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKHRhcmdldFBhZ2UpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh0YXBwaW5nUG9pbnQpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZU5leHRQcm9kdWN0aW9uQnVpbGRpbmcoYnVpbGRUb3dhcmRzVGhlTGVmdDogYm9vbGVhbikge1xuICBpZiAoYnVpbGRUb3dhcmRzVGhlTGVmdCkge1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAxMTAsIHk6IDE3NCB9KTsgLy8gdG8gbGVmdFxuICB9IGVsc2Uge1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzNDksIHk6IDE3NCB9KTsgLy8gdG8gcmlnaHRcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gU3dpcGVQcm9kdWN0aW9uTWVudVRvVG9wKCkge1xuICByZXR1cm4gc3dpcGVGcm9tVG9Qb2ludCh7IHg6IDQzMCwgeTogODAgfSwgeyB4OiA0MzAsIHk6IDE1MDAgfSwgNCk7XG59XG5leHBvcnQgZnVuY3Rpb24gc3dpcGVEb3duT25lSXRlbSgpIHtcbiAgdGFwRG93big0MzAsIDMxOSwgNDAsIDApO1xuICBzbGVlcCg1MDApO1xuICBtb3ZlVG8oNDMwLCAzMTksIDQwLCAwKTtcbiAgc2xlZXAoNTAwKTtcbiAgbW92ZVRvKDQzMCwgMjgwLCA0MCwgMCk7XG4gIHNsZWVwKDUwMCk7XG4gIG1vdmVUbyg0MzAsIDIzMCwgNDAsIDApO1xuICBzbGVlcCg1MDApO1xuICBtb3ZlVG8oNDMwLCAyMDAsIDQwLCAwKTtcbiAgc2xlZXAoNTAwKTtcbiAgbW92ZVRvKDQzMCwgMTc2LCA0MCwgMCk7XG4gIHNsZWVwKDE2MDApO1xuICB0YXBVcCg0MzAsIDE3NiwgNDAsIDApO1xuICBzbGVlcCgyMDAwKTtcblxuICAvLyByZXR1cm4gc3dpcGVGcm9tVG9Qb2ludCh7IHg6IDQzMCwgeTogMzE5IH0sIHsgeDogNDMwLCB5OiAxNzYgfSwgNSk7XG59XG5leHBvcnQgZnVuY3Rpb24gc3dpcGVEb3duM0l0ZW1zKCkge1xuICAvLyBjb25zb2xlLmxvZygnc3dpcGUgZG93biB0byAzIGl0ZW0gYXMgY3VycmVudGx5IGluOicsIHRoaXMuY29uZmlnLmN1cnJlbnRQcm9kdWN0aW9uQnVpbGRpbmcpO1xuICB0YXBEb3duKDQzMCwgMzUwLCA0MCwgMCk7XG4gIHNsZWVwKDUwMCk7XG4gIG1vdmVUbyg0MzAsIDM1MCwgNDAsIDApO1xuICBzbGVlcCg1MDApO1xuICBtb3ZlVG8oNDMwLCAyNTAsIDQwLCAwKTtcbiAgc2xlZXAoNTAwKTtcbiAgbW92ZVRvKDQzMCwgMTUwLCA0MCwgMCk7XG4gIHNsZWVwKDUwMCk7XG4gIG1vdmVUbyg0MzAsIDUwLCA0MCwgMCk7XG4gIHNsZWVwKDUwMCk7XG4gIG1vdmVUbyg0MzAsIC03MCwgNDAsIDApO1xuICBzbGVlcCgxNjAwKTtcbiAgdGFwVXAoNDMwLCAtNzAsIDQwLCAwKTtcbiAgc2xlZXAoMTYwMCk7XG5cbiAgLy8gcmV0dXJuIHN3aXBlRnJvbVRvUG9pbnQoeyB4OiA0MzAsIHk6IDM1MCB9LCB7IHg6IDQzMCwgeTogLTcwIH0sIDcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHN3aXBlVG9Ub29sU2hvcDQ1NigpIHtcbiAgU3dpcGVQcm9kdWN0aW9uTWVudVRvVG9wKCk7XG4gIHRhcERvd24oNDMwLCAzNTAsIDQwLCAwKTtcbiAgc2xlZXAoNTAwKTtcbiAgbW92ZVRvKDQzMCwgMzUwLCA0MCwgMCk7XG4gIHNsZWVwKDUwMCk7XG4gIG1vdmVUbyg0MzAsIDI1MCwgNDAsIDApO1xuICBzbGVlcCg1MDApO1xuICBtb3ZlVG8oNDMwLCAxNTAsIDQwLCAwKTtcbiAgc2xlZXAoNTAwKTtcbiAgbW92ZVRvKDQzMCwgNTAsIDQwLCAwKTtcbiAgc2xlZXAoNTAwKTtcbiAgbW92ZVRvKDQzMCwgLTgwLCA0MCwgMCk7XG4gIHNsZWVwKDUwMCk7XG4gIG1vdmVUbyg0MzAsIC0xNzAsIDQwLCAwKTtcbiAgc2xlZXAoMTYwMCk7XG4gIHRhcFVwKDQzMCwgLTE3MCwgNDAsIDApO1xuICBzbGVlcCgxNjAwKTtcbiAgLy8gcmV0dXJuIHN3aXBlRnJvbVRvUG9pbnQoeyB4OiA0MzAsIHk6IDM1MCB9LCB7IHg6IDQzMCwgeTogLTE3MCB9LCA3KTtcbn1cblxuZnVuY3Rpb24gZmluZFByb2R1Y3RSZXF1aXJlbWVudHMocmVjdHM6IFJFQ1RbXSkge1xuICB2YXIgaW1nT3JpID0gZ2V0U2NyZWVuc2hvdCgpO1xuXG4gIHZhciBvbWluID0gMTUwO1xuICB2YXIgb21heCA9IDI1NTtcbiAgdmFyIGltZyA9IGluUmFuZ2UoaW1nT3JpLCBvbWluLCBvbWluLCBvbWluLCBvbWluLCBvbWF4LCBvbWF4LCBvbWF4LCBvbWF4KTtcblxuICBsZXQgcGFydDogKG51bWJlciB8IHN0cmluZylbXVtdID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByZWN0cy5sZW5ndGg7IGkrKykge1xuICAgIGxldCByZWN0ID0gcmVjdHNbaV07XG4gICAgdmFyIGxpbmUxID0gJyc7XG4gICAgdmFyIGNJbWcxID0gY3JvcEltYWdlKGltZywgcmVjdC54LCByZWN0LnksIHJlY3QudywgcmVjdC5oKTtcbiAgICBsaW5lMSA9IHJlY29nbml6ZVdpc2hpbmdUcmVlUmVxdWlyZW1lbnRzKElDT05TLm51bWJlckltYWdlc1Byb2R1dFJlcXVpcmVtZW50cywgY0ltZzEsIDEyLCAwLjcsIDAuNSk7XG4gICAgcmVsZWFzZUltYWdlKGNJbWcxKTtcblxuICAgIGxpbmUxID0gbGluZTEudHJpbSgpO1xuICAgIC8vIGNvbnNvbGUubG9nKGxpbmUxKTtcblxuICAgIGlmIChsaW5lMS5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICB9IGVsc2UgaWYgKGxpbmUxLmluZGV4T2YoJy8nKSA9PT0gLTEpIHtcbiAgICAgIHBhcnQucHVzaChbbGluZTEuc3Vic3RyKDAsIGxpbmUxLmxlbmd0aCAtIDEpLCBsaW5lMS5zdWJzdHIobGluZTEubGVuZ3RoIC0gMSwgMSldKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGFydC5wdXNoKGxpbmUxLnNwbGl0KCcvJykpO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIHByb2R1Y3RJZHggaW4gcGFydCkge1xuICAgIGZvciAodmFyIHJlcUlkeCBpbiBwYXJ0W3Byb2R1Y3RJZHhdKSB7XG4gICAgICBwYXJ0W3Byb2R1Y3RJZHhdW3JlcUlkeF0gPSBOdW1iZXIocGFydFtwcm9kdWN0SWR4XVtyZXFJZHhdKTtcbiAgICB9XG4gIH1cblxuICAvLyBjb25zb2xlLmxvZygncGFydDonLCBKU09OLnN0cmluZ2lmeShwYXJ0KSk7XG4gIHJlbGVhc2VJbWFnZShpbWdPcmkpO1xuICByZWxlYXNlSW1hZ2UoaW1nKTtcbiAgcmV0dXJuIHBhcnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb2xsZWN0RmluaXNoZWRHb29kcygpIHtcbiAgY29uc3QgcmZwYWdlUHJvZHVjaW5nID0gbmV3IFBhZ2UoJ3JmcGFnZVByb2R1Y2luZycsIFtcbiAgICB7IHg6IDc2LCB5OiA4NiwgcjogMTM0LCBnOiAyMzEsIGI6IDAgfSxcbiAgICB7IHg6IDYxLCB5OiA4OSwgcjogMTIzLCBnOiAyMjgsIGI6IDAgfSxcbiAgICB7IHg6IDM4LCB5OiAzMiwgcjogMjAzLCBnOiAyMzUsIGI6IDIzNiB9LFxuICBdKTtcblxuICAvLyBUcnkgdG8gY29sbGVjdCBmaW5pc2hlZCBnb29kc1xuICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZVByb2R1Y2luZykpIHtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNTEsIHk6IDY2IH0pO1xuXG4gICAgaWYgKHJlcm91dGVyLndhaXRTY3JlZW5Gb3JNYXRjaGluZ1BhZ2UobmV3IEdyb3VwUGFnZSgnZ3JvdXBQYWdlQ2FuY2VsJywgW1BBR0VTLnJmcGFnZUNhbmNlbFByb2R1Y3Rpb24sIFBBR0VTLnJmcGFnZUNhbmNlbE11bHRpcGxlUHJvZHVjdGlvbl0pLCAzMDAwKSkge1xuICAgICAgbG9ncygnY29sbGVjdEZpbmlzaGVkR29vZHMnLCAnRm91bmQgYXNrIHRvIGNhbmNlbCBkaWFsb2cgaW4gcHJvZHVjdGlvbiwgY2xvc2UgaXQgYW5kIHdhaXQgMnNlY3MgZm9yIHJmcGFnZUluUHJvZHVjdGlvbicpO1xuICAgICAgcmVyb3V0ZXIuZ29OZXh0KFBBR0VTLnJmcGFnZUNhbmNlbFByb2R1Y3Rpb24pO1xuICAgICAgcmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShQQUdFUy5yZnBhZ2VJblByb2R1Y3Rpb24sIDIwMDApO1xuICAgIH0gZWxzZSBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2goUEFHRVMucmZwYWdlQ2FuY2VsUHJvZHVjdGlvbkxvbmdJdGVtTmFtZSkpIHtcbiAgICAgIGxvZ3MoJ2NvbGxlY3RGaW5pc2hlZEdvb2RzJywgJ0ZvdW5kIGFzayB0byBjYW5jZWwgZGlhbG9nIGluIHByb2R1Y3Rpb24gKGl0ZW0gd2l0aCBsb25nIG5hbWUpLCBjbG9zZSBpdCBhbmQgd2FpdCAyc2VjcyBmb3IgcmZwYWdlSW5Qcm9kdWN0aW9uJyk7XG4gICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucmZwYWdlQ2FuY2VsUHJvZHVjdGlvbkxvbmdJdGVtTmFtZSk7XG4gICAgICByZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKFBBR0VTLnJmcGFnZUluUHJvZHVjdGlvbiwgMjAwMCk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNvdW50TWFnaWNMYWJTbG90QXZhaWxhYmxlKCkge1xuICB2YXIgZ3JvdXBQYWdlTWFnaWNMYWJTbG90ID0gbmV3IEdyb3VwUGFnZSgnZ3JvdXBQYWdlTWFnaWNMYWJTbG90JywgW1xuICAgIG5ldyBQYWdlKCdmaXJzdFNsb3QnLCBbeyB4OiA1NSwgeTogNjksIHI6IDgyLCBnOiA1NiwgYjogMTA3IH1dKSxcbiAgICBuZXcgUGFnZSgnc2Vjb25kU2xvdCcsIFt7IHg6IDUzLCB5OiAxMjAsIHI6IDgyLCBnOiA1NiwgYjogMTA3IH1dKSxcbiAgICBuZXcgUGFnZSgndGhpcmRTbG90JywgW3sgeDogNDksIHk6IDE2OCwgcjogODIsIGc6IDU2LCBiOiAxMDcgfV0pLFxuICAgIG5ldyBQYWdlKCdmb3VydGhTbG90JywgW3sgeDogNTIsIHk6IDIyMywgcjogODIsIGc6IDU2LCBiOiAxMDcgfV0pLFxuICAgIG5ldyBQYWdlKCdmaWZ0aFNsb3QnLCBbeyB4OiA1MCwgeTogMjY0LCByOiA3NywgZzogNTUsIGI6IDExMCB9XSksXG4gICAgbmV3IFBhZ2UoJ3NpeFNsb3QnLCBbeyB4OiA0OCwgeTogMzE0LCByOiA4MiwgZzogNjAsIGI6IDExNSB9XSksXG4gIF0pO1xuICB2YXIgbWF0Y2hlZFBhZ2VzID0gcmVyb3V0ZXIuZ2V0UGFnZXNNYXRjaChncm91cFBhZ2VNYWdpY0xhYlNsb3QpO1xuXG4gIGxvZ3MoJ2NvdW50TWFnaWNMYWJTbG90QXZhaWxhYmxlJywgYGNvdW50TWFnaWNMYWJTbG90QXZhaWxhYmxlOiAke21hdGNoZWRQYWdlcy5sZW5ndGh9YCk7XG4gIHJldHVybiBtYXRjaGVkUGFnZXMubGVuZ3RoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY291bnRQcm9kdWN0aW9uU2xvdEF2YWlsYWJsZSgpIHtcbiAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKFBBR0VTLnJmcGFnZUluTWFnaWNMYWIpKSB7XG4gICAgcmV0dXJuIGNvdW50TWFnaWNMYWJTbG90QXZhaWxhYmxlKCk7XG4gIH1cblxuICB2YXIgZ3JvdXBQYWdlUHJvZHVjdGlvblNsb3QgPSBuZXcgR3JvdXBQYWdlKCdncm91cFBhZ2VQcm9kdWN0aW9uU2xvdCcsIFtcbiAgICBuZXcgUGFnZSgnZmlyc3RTbG90JywgW1xuICAgICAgeyB4OiA1MCwgeTogNjksIHI6IDE0NiwgZzogODgsIGI6IDUyIH0sXG4gICAgICB7IHg6IDQ5LCB5OiA2OCwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNzAsIHk6IDkwLCByOiAxNjYsIGc6IDEwNCwgYjogNjUgfSxcbiAgICAgIHsgeDogNDIsIHk6IDg2LCByOiAxNzMsIGc6IDEwNSwgYjogNjYgfSxcbiAgICBdKSxcbiAgICBuZXcgUGFnZSgnc2Vjb25kU2xvdCcsIFtcbiAgICAgIHsgeDogNTAsIHk6IDEyMCwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNDksIHk6IDExMSwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNDYsIHk6IDEzNywgcjogMTczLCBnOiAxMDUsIGI6IDY2IH0sXG4gICAgXSksXG4gICAgbmV3IFBhZ2UoJ3RoaXJkU2xvdCcsIFtcbiAgICAgIHsgeDogNTAsIHk6IDE3MCwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNDksIHk6IDE2OSwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNDYsIHk6IDE3OSwgcjogMTQyLCBnOiA3OCwgYjogNDQgfSxcbiAgICBdKSxcbiAgICBuZXcgUGFnZSgnZm91cnRoU2xvdCcsIFtcbiAgICAgIHsgeDogNTAsIHk6IDIxOSwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNTAsIHk6IDIxOCwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNDgsIHk6IDIyOSwgcjogMTQ0LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNDIsIHk6IDIzNiwgcjogMTczLCBnOiAxMDUsIGI6IDY2IH0sXG4gICAgXSksXG4gICAgbmV3IFBhZ2UoJ2ZpZnRoU2xvdCcsIFtcbiAgICAgIHsgeDogNTAsIHk6IDI2OSwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNTAsIHk6IDI2OCwgcjogMTQ2LCBnOiA4OCwgYjogNTIgfSxcbiAgICAgIHsgeDogNDYsIHk6IDI4NiwgcjogMTU3LCBnOiA5NSwgYjogNTUgfSxcbiAgICBdKSxcbiAgXSk7XG4gIHZhciBtYXRjaGVkUGFnZXMgPSByZXJvdXRlci5nZXRQYWdlc01hdGNoKGdyb3VwUGFnZVByb2R1Y3Rpb25TbG90KTtcbiAgLy8gbG9ncygnY291bnRQcm9kdWN0aW9uU2xvdEF2YWlsYWJsZScsIGBjb3VudFByb2R1Y3Rpb25TbG90QXZhaWxhYmxlOiAke21hdGNoZWRQYWdlcy5sZW5ndGh9LCAke0pTT04uc3RyaW5naWZ5KG1hdGNoZWRQYWdlcyl9YCk7XG4gIHJldHVybiBtYXRjaGVkUGFnZXMubGVuZ3RoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29sbGVjdFByb2R1Y3RJdGVtSW5mbyhcbiAgaWQ6IG51bWJlcixcbiAgc3RvY2tSZWN0OiBSRUNULFxuICBuZWVkUmVjdDE6IFJFQ1QsXG4gIG5lZWRSZWN0MjogUkVDVCxcbiAgcHJvZHVjdGlvblRhcmdldDogbnVtYmVyLFxuICBzYWZldHlTdG9jazogbnVtYmVyXG4pOiBwcm9kdWN0U3RhdGUge1xuICBjb25zdCBtaW5pbXVtVGFyZ2V0ID0gaWQgPD0gMyA/IE1hdGgubWF4KDEwLCBwcm9kdWN0aW9uVGFyZ2V0ICogTWF0aC5wb3coMC44NSwgaWQpKSA6IE1hdGgubWF4KDEwLCBwcm9kdWN0aW9uVGFyZ2V0ICogTWF0aC5wb3coMC42LCBpZCkpO1xuICBsZXQgY2FuUHJvZHVjZSA9IGZhbHNlO1xuICBsZXQgbmVlZDEgPSB7XG4gICAgc3RvY2s6IC0xLFxuICAgIGNvbnN1bWU6IC0xLFxuICB9O1xuICBsZXQgbmVlZDIgPSB7XG4gICAgc3RvY2s6IC0xLFxuICAgIGNvbnN1bWU6IC0xLFxuICB9O1xuXG4gIGNvbnN0IHN0b2NrID0gb2NyTnVtYmVySW5SZWN0KHN0b2NrUmVjdCwgSUNPTlMuYk51bWJlcnMpO1xuICBpZiAoc3RvY2sgPT09IC0xKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBpZCxcbiAgICAgIG1pbmltdW1UYXJnZXQ6IG1pbmltdW1UYXJnZXQsXG4gICAgICBwcm9kdWN0aW9uVGFyZ2V0OiBwcm9kdWN0aW9uVGFyZ2V0LFxuICAgICAgc3RvY2tUYXJnZXRGdWxsZmlsbGVkUGVyY2VudDogLTEsXG4gICAgICBjYW5Qcm9kdWNlOiBjYW5Qcm9kdWNlLFxuICAgICAgbm90RW5vdWdoU3RvY2s6IGZhbHNlLFxuICAgICAgc3RvY2s6IHN0b2NrLFxuICAgICAgbmVlZDogW25lZWQxLCBuZWVkMl0sXG4gICAgfTtcbiAgfVxuXG4gIHZhciByZXF1aXJlbWVudHMgPSBmaW5kUHJvZHVjdFJlcXVpcmVtZW50cyhbbmVlZFJlY3QxLCBuZWVkUmVjdDJdKTtcbiAgLy8gY29uc29sZS5sb2coYHJlcXVpcmVtZW50czogXCIke3JlcXVpcmVtZW50c31cImApOyAvLyBUT0RPOiB0byByZW1vdmVcbiAgaWYgKHJlcXVpcmVtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IGlkLFxuICAgICAgbWluaW11bVRhcmdldDogbWluaW11bVRhcmdldCxcbiAgICAgIHByb2R1Y3Rpb25UYXJnZXQ6IHByb2R1Y3Rpb25UYXJnZXQsXG4gICAgICBzdG9ja1RhcmdldEZ1bGxmaWxsZWRQZXJjZW50OiBzdG9jayAvIHByb2R1Y3Rpb25UYXJnZXQsXG4gICAgICBjYW5Qcm9kdWNlOiBjYW5Qcm9kdWNlLFxuICAgICAgbm90RW5vdWdoU3RvY2s6IGZhbHNlLFxuICAgICAgc3RvY2s6IHN0b2NrLFxuICAgICAgbmVlZDogW25lZWQxLCBuZWVkMl0sXG4gICAgfTtcbiAgfVxuXG4gIG5lZWQxID0ge1xuICAgIHN0b2NrOiArcmVxdWlyZW1lbnRzWzBdWzBdLFxuICAgIGNvbnN1bWU6ICtyZXF1aXJlbWVudHNbMF1bMV0sXG4gIH07XG5cbiAgaWYgKHJlcXVpcmVtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgbmVlZDIgPSB7XG4gICAgICBzdG9jazogK3JlcXVpcmVtZW50c1sxXVswXSxcbiAgICAgIGNvbnN1bWU6ICtyZXF1aXJlbWVudHNbMV1bMV0sXG4gICAgfTtcbiAgICBjYW5Qcm9kdWNlID0gbmVlZDFbJ3N0b2NrJ10gLSBuZWVkMVsnY29uc3VtZSddID4gc2FmZXR5U3RvY2sgJiYgbmVlZDJbJ3N0b2NrJ10gLSBuZWVkMlsnY29uc3VtZSddID4gc2FmZXR5U3RvY2s7XG4gIH0gZWxzZSB7XG4gICAgY2FuUHJvZHVjZSA9IG5lZWQxWydzdG9jayddIC0gbmVlZDFbJ2NvbnN1bWUnXSA+IHNhZmV0eVN0b2NrO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpZDogaWQsXG4gICAgbWluaW11bVRhcmdldDogbWluaW11bVRhcmdldCxcbiAgICBwcm9kdWN0aW9uVGFyZ2V0OiBwcm9kdWN0aW9uVGFyZ2V0LFxuICAgIHN0b2NrVGFyZ2V0RnVsbGZpbGxlZFBlcmNlbnQ6IHN0b2NrIC8gcHJvZHVjdGlvblRhcmdldCxcbiAgICBjYW5Qcm9kdWNlOiBjYW5Qcm9kdWNlLFxuICAgIG5vdEVub3VnaFN0b2NrOiBmYWxzZSxcbiAgICBzdG9jazogc3RvY2ssXG4gICAgbmVlZDogcmVxdWlyZW1lbnRzLmxlbmd0aCA+IDEgPyBbbmVlZDEsIG5lZWQyXSA6IFtuZWVkMV0sIC8vIFBpbmVjb25lIGJpcmR5IHRveSAoZXRjLCkgb25seSBuZWVkIDEgbWF0ZXJpYWxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VHb29kc1RvVGFyZ2V0KGdvb2RzVGFyZ2V0OiBudW1iZXIsIHNhZmV0eVN0b2NrOiBudW1iZXIsIGF4ZVN0b2NrVG80MDA6IGJvb2xlYW4pOiBudW1iZXIge1xuICBjb25zdCBnb29kc0xvY2F0aW9uOiB7IFtrZXk6IG51bWJlciB8IHN0cmluZ106IFJFQ1QgfSA9IHtcbiAgICAxOiB7IHg6IDQzMSwgeTogMTAxLCB3OiAyMiwgaDogMTIgfSxcbiAgICAyOiB7IHg6IDQzMSwgeTogMjA5LCB3OiAyMiwgaDogMTIgfSxcbiAgICAzOiB7IHg6IDQzMSwgeTogMzE1LCB3OiAyMiwgaDogMTIgfSxcbiAgICBzaG92ZWw6IHsgeDogNDMyLCB5OiAzMTcsIHc6IDIyLCBoOiAxNiB9LFxuICAgIDU6IHsgeDogNDMxLCB5OiAxMDYsIHc6IDIyLCBoOiAxMiB9LFxuICAgIDY6IHsgeDogNDMxLCB5OiAyMTMsIHc6IDIyLCBoOiAxMiB9LFxuICAgIDc6IHsgeDogNDMxLCB5OiAzMTksIHc6IDIyLCBoOiAxMiB9LFxuICB9O1xuICBjb25zdCBwcm9kdWN0c1JlcVk6IHsgW2tleTogbnVtYmVyXTogbnVtYmVyIH0gPSB7XG4gICAgMTogOTIsXG4gICAgMjogMTk5LFxuICAgIDM6IDMwNixcbiAgICA0OiAzMDgsXG4gICAgNTogOTYsXG4gICAgNjogMjAzLFxuICAgIDc6IDMxMCxcbiAgfTtcblxuICAvLyBUT0RPOiByZWNvZ25pemUgYnVpbGRpbmcgdG8gcmVkdWNlIGRyb3Agb3JkZXIgdGltZVxuICBsZXQgZ29vZHNPbmVTdG9jayA9IG9jck51bWJlckluUmVjdChnb29kc0xvY2F0aW9uWzFdLCBJQ09OUy5iTnVtYmVycyk7XG4gIGlmIChnb29kc09uZVN0b2NrID09PSAtMSkge1xuICAgIGxvZ3MoJ21ha2VHb29kc1RvVGFyZ2V0JywgYE9DUiBjb3VudCBmYWlsZWQsIHN3aXBlIHRvIHRvcGApO1xuXG4gICAgU3dpcGVQcm9kdWN0aW9uTWVudVRvVG9wKCk7XG4gICAgZ29vZHNPbmVTdG9jayA9IG9jck51bWJlckluUmVjdChnb29kc0xvY2F0aW9uWzFdLCBJQ09OUy5iTnVtYmVycyk7XG4gICAgaWYgKGdvb2RzT25lU3RvY2sgPT09IC0xKSB7XG4gICAgICBjb25zb2xlLmxvZygnT0NSIGNvdW50IGZhaWxlZCB0d2ljZSwgc2tpcCB0aGlzIHJvdW5kJyk7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICB9XG5cbiAgbGV0IHByb2R1Y3Rpb25TdGF0ZTogeyBba2V5OiBudW1iZXJdOiBwcm9kdWN0U3RhdGUgfSA9IHtcbiAgICAxOiBjb2xsZWN0UHJvZHVjdEl0ZW1JbmZvKFxuICAgICAgMSxcbiAgICAgIGdvb2RzTG9jYXRpb25bMV0sXG4gICAgICB7IHg6IDQ2MywgeTogcHJvZHVjdHNSZXFZWzFdLCB3OiA1MCwgaDogMTQgfSxcbiAgICAgIHsgeDogNTIwLCB5OiBwcm9kdWN0c1JlcVlbMV0sIHc6IDUwLCBoOiAxNCB9LFxuICAgICAgZ29vZHNUYXJnZXQsXG4gICAgICBzYWZldHlTdG9ja1xuICAgICksXG4gIH07XG5cbiAgZm9yIChsZXQgaSBvZiBbMiwgM10pIHtcbiAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoKFBBR0VTLnByb2R1Y3RNYXBwaW5nW2ldKSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcHJvZHVjdGlvblN0YXRlW2ldID0gY29sbGVjdFByb2R1Y3RJdGVtSW5mbyhcbiAgICAgIGksXG4gICAgICBnb29kc0xvY2F0aW9uW2ldLFxuICAgICAgeyB4OiA0NjMsIHk6IHByb2R1Y3RzUmVxWVtpXSwgdzogNTAsIGg6IDE0IH0sXG4gICAgICB7IHg6IDUyMCwgeTogcHJvZHVjdHNSZXFZW2ldLCB3OiA1MCwgaDogMTQgfSxcbiAgICAgIGdvb2RzVGFyZ2V0LFxuICAgICAgc2FmZXR5U3RvY2tcbiAgICApO1xuICB9XG5cbiAgbGV0IGF2YWlsYWJsZVNsb3RzID0gY291bnRQcm9kdWN0aW9uU2xvdEF2YWlsYWJsZSgpO1xuICBjb25zdCBwcm9kdWN0aW9uUGFnZSA9IHJlcm91dGVyLmdldFBhZ2VzTWF0Y2goUEFHRVMuZ3JvdXBQYWdlR29vZHNQcm9kTWVudSk7XG4gIGNvbnN0IHByb2R1Y3Rpb25OYW1lID0gcHJvZHVjdGlvblBhZ2UubGVuZ3RoID4gMCA/IHByb2R1Y3Rpb25QYWdlWzBdLm5hbWUgOiAnb3RoZXJHb29kU2hvcCc7XG4gIGxvZ3MoJ21ha2VHb29kc1RvVGFyZ2V0JywgYD4gJHtwcm9kdWN0aW9uTmFtZX0gaGFzICR7YXZhaWxhYmxlU2xvdHN9IGF2YWlsYWJsZSBzbG90cywgcHJvZHVjdGlvblN0YXRlOiAke0pTT04uc3RyaW5naWZ5KHByb2R1Y3Rpb25TdGF0ZSl9YCk7XG5cbiAgaWYgKHByb2R1Y3Rpb25OYW1lICE9PSAnb3RoZXJHb29kU2hvcCcpIHtcbiAgICBsb2dzKCdtYWtlR29vZHNUb1RhcmdldCcsIGBTcGVjaWFsIGhhbmRsZSBidWlsZGluZzogJHtwcm9kdWN0aW9uTmFtZX1gKTtcblxuICAgIHN3aXBlRG93bk9uZUl0ZW0oKTtcblxuICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChQQUdFUy5wcm9kdWN0TWFwcGluZ1s0XSkpIHtcbiAgICAgIHByb2R1Y3Rpb25TdGF0ZVs0XSA9IGNvbGxlY3RQcm9kdWN0SXRlbUluZm8oXG4gICAgICAgIDQsXG4gICAgICAgIGdvb2RzTG9jYXRpb25bJ3Nob3ZlbCddLFxuICAgICAgICB7IHg6IDQ2MywgeTogMzA4LCB3OiA1MCwgaDogMTQgfSxcbiAgICAgICAgeyB4OiA1MjAsIHk6IDMwOCwgdzogNTAsIGg6IDE0IH0sXG4gICAgICAgIGdvb2RzVGFyZ2V0LFxuICAgICAgICBzYWZldHlTdG9ja1xuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBjb25zb2xlLmxvZygnc3dpcHBpbmcgZG93biA9PT09PT09PT0nKTtcbiAgaWYgKHByb2R1Y3Rpb25OYW1lID09PSAncmZwYWdlVG9vbFNob3AnIHx8IHByb2R1Y3Rpb25OYW1lID09PSAncmZwYWdlSXNCYWtlcnknKSB7XG4gICAgc3dpcGVUb1Rvb2xTaG9wNDU2KCk7XG4gIH0gZWxzZSB7XG4gICAgc3dpcGVGcm9tVG9Qb2ludCh7IHg6IDQ2NCwgeTogMzQwIH0sIHsgeDogNDY0LCB5OiAtMTUwMCB9LCA1KTsgLy8gU3dpcGVQcm9kdWN0aW9uTWVudVRvQm90dG9tKClcbiAgICBVdGlscy5zbGVlcCg4MDApO1xuICB9XG5cbiAgY29uc29sZS5sb2coJ2JlZm9yZSBPQ1IgNTY3LCBwcm9kdWN0aW9uU3RhdGU6JywgSlNPTi5zdHJpbmdpZnkocHJvZHVjdGlvblN0YXRlKSk7XG4gIGZvciAobGV0IGkgb2YgWzUsIDYsIDddKSB7XG4gICAgaWYgKCFyZXJvdXRlci5pc1BhZ2VNYXRjaChQQUdFUy5wcm9kdWN0TWFwcGluZ1tpXSkpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBwcm9kdWN0aW9uU3RhdGVbaV0gPSBjb2xsZWN0UHJvZHVjdEl0ZW1JbmZvKFxuICAgICAgaSxcbiAgICAgIGdvb2RzTG9jYXRpb25baV0sXG4gICAgICB7IHg6IDQ2MywgeTogcHJvZHVjdHNSZXFZW2ldLCB3OiA1MCwgaDogMTQgfSxcbiAgICAgIHsgeDogNTIwLCB5OiBwcm9kdWN0c1JlcVlbaV0sIHc6IDUwLCBoOiAxNCB9LFxuICAgICAgZ29vZHNUYXJnZXQsXG4gICAgICBzYWZldHlTdG9ja1xuICAgICk7XG4gIH1cbiAgbG9ncygnbWFrZUdvb2RzVG9UYXJnZXQnLCBgPiAke3Byb2R1Y3Rpb25OYW1lfSBoYXMgJHthdmFpbGFibGVTbG90c30gYXZhaWxhYmxlIHNsb3RzLCBwcm9kdWN0aW9uU3RhdGU6ICR7SlNPTi5zdHJpbmdpZnkocHJvZHVjdGlvblN0YXRlKX1gKTtcblxuICBpZiAocHJvZHVjdGlvbk5hbWUgPT09ICdyZnBhZ2VUb29sU2hvcCcgJiYgYXhlU3RvY2tUbzQwMCkge1xuICAgIHByb2R1Y3Rpb25TdGF0ZVsxXS5wcm9kdWN0aW9uVGFyZ2V0ID0gNDAwO1xuICAgIHByb2R1Y3Rpb25TdGF0ZVsxXS5zdG9ja1RhcmdldEZ1bGxmaWxsZWRQZXJjZW50ID0gZ29vZHNPbmVTdG9jayAvIDQwMDtcbiAgfVxuXG4gIGxldCBpdGVtVG9Qcm9kdWNlOiB7IFtrZXk6IG51bWJlcl06IHByb2R1Y3RTdGF0ZSB9ID0ge307XG4gIGxldCBpdGVtVG9Qcm9kdWNlTGF0ZXI6IHsgW2tleTogbnVtYmVyXTogcHJvZHVjdFN0YXRlIH0gPSB7fTtcblxuICAvLyBjaGVjayBtaW5pbXVtIHJlcVxuICBmb3IgKGxldCBrZXkgaW4gcHJvZHVjdGlvblN0YXRlKSB7XG4gICAgaWYgKHByb2R1Y3Rpb25TdGF0ZVtrZXldLnN0b2NrIDwgcHJvZHVjdGlvblN0YXRlW2tleV0ubWluaW11bVRhcmdldCkge1xuICAgICAgaXRlbVRvUHJvZHVjZVtrZXldID0gcHJvZHVjdGlvblN0YXRlW2tleV07XG4gICAgfVxuICB9XG5cbiAgLy8gY2hlY2sgdXNlciBkZWZpbmVkIHByb2R1Y3Rpb24gdGFyZ2V0XG4gIGZvciAobGV0IGtleSBpbiBwcm9kdWN0aW9uU3RhdGUpIHtcbiAgICBpZiAocHJvZHVjdGlvblN0YXRlW2tleV0uc3RvY2sgPCBnb29kc1RhcmdldCkge1xuICAgICAgaXRlbVRvUHJvZHVjZUxhdGVyW2tleV0gPSBwcm9kdWN0aW9uU3RhdGVba2V5XTtcbiAgICB9XG4gIH1cblxuICBsZXQgaXRlbXNUb1Byb2R1Y2UgPSBPYmplY3Qua2V5cyhpdGVtVG9Qcm9kdWNlKS5tYXAoa2V5ID0+IGl0ZW1Ub1Byb2R1Y2VbK2tleV0pO1xuICBsZXQgaXRlbXNUb1Byb2R1Y2VMYXRlciA9IE9iamVjdC5rZXlzKGl0ZW1Ub1Byb2R1Y2VMYXRlcikubWFwKGtleSA9PiBpdGVtVG9Qcm9kdWNlTGF0ZXJbK2tleV0pO1xuICBpdGVtc1RvUHJvZHVjZS5zb3J0KGR5bmFtaWNTb3J0KCdzdG9ja1RhcmdldEZ1bGxmaWxsZWRQZXJjZW50JykpO1xuICBpdGVtc1RvUHJvZHVjZUxhdGVyLnNvcnQoZHluYW1pY1NvcnQoJ3N0b2NrVGFyZ2V0RnVsbGZpbGxlZFBlcmNlbnQnKSk7XG4gIGZvciAoY29uc3Qgb2JqIG9mIGl0ZW1zVG9Qcm9kdWNlTGF0ZXIpIHtcbiAgICBjb25zdCBrZXlFeGlzdHMgPSBpdGVtc1RvUHJvZHVjZS5zb21lKGVsZW1lbnQgPT4gZWxlbWVudFsnaWQnXSA9PT0gb2JqWydpZCddKTtcbiAgICBpZiAoIWtleUV4aXN0cykge1xuICAgICAgaXRlbXNUb1Byb2R1Y2UucHVzaChvYmopO1xuICAgIH1cbiAgfVxuICBsb2dzKCdtYWtlR29vZHNUb1RhcmdldCcsIGA+PiAke3Byb2R1Y3Rpb25OYW1lfSBoYXMgJHthdmFpbGFibGVTbG90c30gYXZhaWxhYmxlIHNsb3RzLCBzdG9ja3MgdG8gcHJvZHVjZTogJHtKU09OLnN0cmluZ2lmeShpdGVtc1RvUHJvZHVjZSl9YCk7XG5cbiAgY29uc3QgcmZwYWdlTG9ja2VkR29vZCA9IG5ldyBQYWdlKFxuICAgICdyZnBhZ2VMb2NrZWRHb29kJyxcbiAgICBbXG4gICAgICB7IHg6IDM1MSwgeTogMjQ0LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgICAgIHsgeDogMzA1LCB5OiAyNDQsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgICAgeyB4OiA0MjUsIHk6IDI0NCwgcjogMjE5LCBnOiAyMDcsIGI6IDE5OSB9LFxuICAgICAgeyB4OiA0MjUsIHk6IDEwNSwgcjogNjAsIGc6IDcwLCBiOiAxMDUgfSxcbiAgICAgIHsgeDogNDE3LCB5OiAyOTcsIHI6IDIzNSwgZzogMjE5LCBiOiAyMDcgfSxcbiAgICAgIHsgeDogMzgxLCB5OiAzMTYsIHI6IDIzNywgZzogMjM3LCBiOiAyMjkgfSxcbiAgICBdLFxuICAgIHsgeDogMzUxLCB5OiAyNDQgfVxuICApO1xuICBmb3IgKHZhciBpZCBpbiBpdGVtc1RvUHJvZHVjZSkge1xuICAgIHZhciBpdGVtID0gaXRlbXNUb1Byb2R1Y2VbaWRdO1xuXG4gICAgaWYgKGl0ZW1bJ3N0b2NrJ10gPT09IC0xKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoaXRlbVsnc3RvY2tUYXJnZXRGdWxsZmlsbGVkUGVyY2VudCddID4gMSkge1xuICAgICAgLy8gbG9ncyhtYWtlR29vZHNUb1RhcmdldCwgYHN0b2NrVGFyZ2V0RnVsbGZpbGxlZFBlcmNlbnQgPiAxIHNob3VsZCBzaG91bGQgYmUgc3RvY2sgT0NSIGVycm9yIGApO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGl0ZW1bJ25vdEVub3VnaFN0b2NrJ10pIHtcbiAgICAgIGxvZ3MoJ21ha2VHb29kc1RvVGFyZ2V0JywgYHNob3VsZCBwYW5pYyBhcyBmb3VuZCBub3RFbm91Z2hTdG9jayBgKTtcbiAgICAgIC8vIGlpKys7XG4gICAgfVxuXG4gICAgaWYgKCFpdGVtWydjYW5Qcm9kdWNlJ10pIHtcbiAgICAgIGxvZ3MoJ21ha2VHb29kc1RvVGFyZ2V0JywgYHNraXAgYXMgbm90IGhhdmluZyBlbm91Z2ggcmF3IG1hdGVyaWFscyBmb3IgIyR7aWR9YCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBsb2dzKCdtYWtlR29vZHNUb1RhcmdldCcsIGBhZGRpbmcgaXRlbSAke2l0ZW1bJ2lkJ119IGZyb20gJHtpdGVtWydzdG9jayddfSB0byAke2l0ZW1bJ3Byb2R1Y3Rpb25UYXJnZXQnXX0sICR7SlNPTi5zdHJpbmdpZnkoaXRlbSl9YCk7XG5cbiAgICBzd2l0Y2ggKGl0ZW1bJ2lkJ10pIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgIGNhc2UgMjpcbiAgICAgIGNhc2UgMzpcbiAgICAgICAgU3dpcGVQcm9kdWN0aW9uTWVudVRvVG9wKCk7XG4gICAgICAgIFN3aXBlUHJvZHVjdGlvbk1lbnVUb1RvcCgpO1xuICAgICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucHJvZHVjdE1hcHBpbmdbaXRlbVsnaWQnXV0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgNDpcbiAgICAgICAgU3dpcGVQcm9kdWN0aW9uTWVudVRvVG9wKCk7XG4gICAgICAgIFN3aXBlUHJvZHVjdGlvbk1lbnVUb1RvcCgpO1xuICAgICAgICBzd2lwZURvd25PbmVJdGVtKCk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChQQUdFUy5wcm9kdWN0TWFwcGluZ1tpdGVtWydpZCddXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSA1OlxuICAgICAgY2FzZSA2OlxuICAgICAgY2FzZSA3OlxuICAgICAgICBTd2lwZVByb2R1Y3Rpb25NZW51VG9Ub3AoKTtcbiAgICAgICAgU3dpcGVQcm9kdWN0aW9uTWVudVRvVG9wKCk7XG4gICAgICAgIHN3aXBlVG9Ub29sU2hvcDQ1NigpO1xuICAgICAgICByZXJvdXRlci5nb05leHQoUEFHRVMucHJvZHVjdE1hcHBpbmdbaXRlbVsnaWQnXV0pO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICBmb3IgKHZhciB0aW1lciA9IDA7IHRpbWVyIDwgNDsgdGltZXIrKykge1xuICAgICAgdmFyIGxhdGVzdENvdW50ID0gY291bnRQcm9kdWN0aW9uU2xvdEF2YWlsYWJsZSgpO1xuICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKFBBR0VTLnJmcGFnZU5vdEVub3VnaFN0b2NrSW5Qcm9kdWN0aW9uKSkge1xuICAgICAgICBsb2dzKCdtYWtlR29vZHNUb1RhcmdldCcsIGBQQUdFUy5yZnBhZ2VOb3RFbm91Z2hTdG9ja0luUHJvZHVjdGlvbmApO1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNDI4LCB5OiA5OCB9KTtcbiAgICAgICAgaXRlbXNUb1Byb2R1Y2VbaWRdWydub3RFbm91Z2hTdG9jayddID0gdHJ1ZTtcbiAgICAgICAgc2xlZXAoODAwKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9IGVsc2UgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUxvY2tlZEdvb2QpKSB7XG4gICAgICAgIGxvZ3MoJ21ha2VHb29kc1RvVGFyZ2V0JywgYHJmcGFnZUxvY2tlZEdvb2RgKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUxvY2tlZEdvb2QpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGlmIChsYXRlc3RDb3VudCA9PT0gMCkge1xuICAgICAgICBsb2dzKCdtYWtlR29vZHNUb1RhcmdldCcsIGBObyBtb3JlIHNsb3RzLCBzdG9wIGF0OiAke2l0ZW1bJ2lkJ119YCk7XG4gICAgICAgIHJldHVybiBsYXRlc3RDb3VudDtcbiAgICAgIH1cblxuICAgICAgc2xlZXAoMTAwMCk7XG4gICAgfVxuXG4gICAgLy8gQWRkIGNoZWNrIGlmIHRoZXJlIGFyZSBubyB3b3JrZXIgY29va2llXG4gIH1cblxuICByZXR1cm4gY291bnRQcm9kdWN0aW9uU2xvdEF2YWlsYWJsZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3dpcGVEaXJlY3Rpb24oZGlyZWN0aW9uOiBYWSwgdGFyZ2V0UGFnZTogUGFnZSB8IG51bGwsIHN3aXBwaW5nUGFnZTogUGFnZSkge1xuICB2YXIgdGFwYWJsZUFyZWEgPSB7XG4gICAgZnJvbVBudDogeyB4OiAxNjUsIHk6IDkwIH0sXG4gICAgZW5kUG50OiB7IHg6IDU2NiwgeTogMjg1IH0sXG4gIH07XG5cbiAgaWYgKHRhcmdldFBhZ2UgIT09IG51bGwgJiYgcmVyb3V0ZXIuaXNQYWdlTWF0Y2godGFyZ2V0UGFnZSkpIHtcbiAgICBsb2dzKCdzd2lwZURpcmVjdGlvbicsIGBBbHJlYWR5IGluIHBhZ2UgJHt0YXJnZXRQYWdlLm5hbWV9LCBza2lwIHN3aXBwaW5nYCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICB2YXIgeCA9IHRhcGFibGVBcmVhLmZyb21QbnQueCArIE1hdGgucmFuZG9tKCkgKiAodGFwYWJsZUFyZWEuZW5kUG50LnggLSB0YXBhYmxlQXJlYS5mcm9tUG50LngpO1xuICB2YXIgeSA9IHRhcGFibGVBcmVhLmZyb21QbnQueSArIE1hdGgucmFuZG9tKCkgKiAodGFwYWJsZUFyZWEuZW5kUG50LnkgLSB0YXBhYmxlQXJlYS5mcm9tUG50LnkpO1xuXG4gIHZhciBmcm9tUG50ID0geyB4OiB4LCB5OiB5IH07XG4gIHZhciB0b1BudCA9IHsgeDogeCArIGRpcmVjdGlvbi54LCB5OiB5ICsgZGlyZWN0aW9uLnkgfTtcbiAgdmFyIHN0ZXBzID0gNDtcblxuICBpZiAoc3dpcGVGcm9tVG9Qb2ludChmcm9tUG50LCB0b1BudCwgc3RlcHMsIHRhcmdldFBhZ2UsIHN3aXBwaW5nUGFnZSkpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnc3dpcGUgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlSW5UcmFkZUhhYm9yKSkge1xuICAgIGNvbnNvbGUubG9nKCdzd2lwZURpcmVjdGlvbiBza2lwIHRvIGdvIHRvIGhlYWQgYW5kIHN0YXJ0IG92ZXInKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJ3BpY2t1cCBob3VzZSwgdHJ5IGFnYWluJyk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBmaWx0ZXJPdmVybGFwRmluZEljb25SZXN1bHRzKHBvaW50czogUG9pbnRbXSwgbWluRGlzdGFuY2U6IG51bWJlciwgZGVidWc/OiBib29sZWFuKTogUG9pbnRbXSB7XG4gIGxldCByZXN1bHQ6IFBvaW50W10gPSBbXTtcbiAgcG9pbnRzLnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcblxuICBmb3IgKGxldCBwb2ludCBvZiBwb2ludHMpIHtcbiAgICBsZXQgaXNUb29DbG9zZSA9IHJlc3VsdC5zb21lKHAgPT4ge1xuICAgICAgbGV0IGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHBvaW50LnggLSBwLngsIDIpICsgTWF0aC5wb3cocG9pbnQueSAtIHAueSwgMikpO1xuICAgICAgbGV0IHRvb0Nsb3NlID0gZGlzdGFuY2UgPCBtaW5EaXN0YW5jZTtcbiAgICAgIGlmICh0b29DbG9zZSAmJiBkZWJ1Zykge1xuICAgICAgICBjb25zb2xlLmxvZyhgUG9pbnQgJHtKU09OLnN0cmluZ2lmeShwb2ludCl9IGlzIHRvbyBjbG9zZSB0byAke0pTT04uc3RyaW5naWZ5KHApfWApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRvb0Nsb3NlO1xuICAgIH0pO1xuXG4gICAgaWYgKCFpc1Rvb0Nsb3NlKSB7XG4gICAgICByZXN1bHQucHVzaChwb2ludCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gZGlmZmVyZW5jZShhcnJheTE6IFBvaW50W10sIGFycmF5MjogUG9pbnRbXSk6IFBvaW50W10ge1xuICBsZXQgb25seUluQXJyYXkxID0gYXJyYXkxLmZpbHRlcihhID0+ICFhcnJheTIuc29tZShiID0+IGEueCA9PT0gYi54ICYmIGEueSA9PT0gYi55KSk7XG4gIGxldCBvbmx5SW5BcnJheTIgPSBhcnJheTIuZmlsdGVyKGEgPT4gIWFycmF5MS5zb21lKGIgPT4gYS54ID09PSBiLnggJiYgYS55ID09PSBiLnkpKTtcbiAgcmV0dXJuIFsuLi5vbmx5SW5BcnJheTEsIC4uLm9ubHlJbkFycmF5Ml07XG59XG5cbi8vIDEuIHNlYXJjaEZvckNhbmR5SG91c2Vcbi8vIDIuIGlmICExLCBzd2lwZSBkaXJlY3Rpbm9zXG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoRm9yQ2FuZHlIb3VzZSgpOiBib29sZWFuIHtcbiAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKFBBR0VTLnJmcGFnZUluUHJvZHVjdGlvbikpIHtcbiAgICBsb2dzKCdzZWFyY2hGb3JDYW5keUhvdXNlJywgJ0ZvdW5kIGluIHByb2R1Y3Rpb24gc28gaGl0IGJhY2sgdGhlbiBzZWFyY2ggZm9yIGl0Jyk7XG4gICAgc2VuZEtleUJhY2soKTtcbiAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgfVxuXG4gIC8vIDEuIGZpbmQgYW5kIHRhcCBjYW5keVxuICBsZXQgZm91bmRSZXN1bHRzID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25DYW5keSk7XG4gIGxldCBmaWx0ZXJlZFJlc3VsdHMgPSBmaWx0ZXJPdmVybGFwRmluZEljb25SZXN1bHRzKGZvdW5kUmVzdWx0cywgMTUpO1xuICAvLyBjb25zb2xlLmxvZyhmaWx0ZXJlZFJlc3VsdHMubGVuZ3RoLCBKU09OLnN0cmluZ2lmeShmaWx0ZXJlZFJlc3VsdHMpLCBmaWx0ZXJlZFJlc3VsdHMubGVuZ3RoLCBKU09OLnN0cmluZ2lmeShmaWx0ZXJlZFJlc3VsdHMpKTtcblxuICBpZiAoT2JqZWN0LmtleXMoZmlsdGVyZWRSZXN1bHRzKS5sZW5ndGggPT09IDApIHtcbiAgICBsb2dzKCdzZWFyY2hGb3JDYW5keUhvdXNlJywgJ2ZpbmRBbmRUYXBDYW5keSBkaWQgbm90IHNlZSBhbnkgY2FuZHkgPiAwLjk1LCBza2lwcGluZycpO1xuICB9IGVsc2Uge1xuICAgIC8vIFRhcCBhdCBtb3N0IDUgcG9zc2libGUgY2FuZGllc1xuICAgIGxldCBpID0gMDtcbiAgICB3aGlsZSAoaSA8IE1hdGgubWluKDUsIE9iamVjdC5rZXlzKGZpbHRlcmVkUmVzdWx0cykubGVuZ3RoKSkge1xuICAgICAgaWYgKGZpbHRlcmVkUmVzdWx0c1tpXS54IDwgOTMgfHwgZmlsdGVyZWRSZXN1bHRzW2ldLnggPiA1NzUgfHwgZmlsdGVyZWRSZXN1bHRzW2ldLnkgPCAzNyB8fCBmaWx0ZXJlZFJlc3VsdHNbaV0ueSA+IDMwMCkge1xuICAgICAgICBsb2dzKCdzZWFyY2hGb3JDYW5keUhvdXNlJywgYFNraXBwZWQgYXMgdGhpcyBwb2ludCBleGNlZWQgZmVhc2libGUgYXJlYTogKCR7ZmlsdGVyZWRSZXN1bHRzW2ldLnh9LCAke2ZpbHRlcmVkUmVzdWx0c1tpXS55fSkgKDkzPHg8NTc1LCAzNzx5PDMwMClgKTtcbiAgICAgICAgaSsrO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgbG9ncygnc2VhcmNoRm9yQ2FuZHlIb3VzZScsIGB0YXBwaW5nOiAoJHtmaWx0ZXJlZFJlc3VsdHNbaV0ueH0sICR7ZmlsdGVyZWRSZXN1bHRzW2ldLnl9KSBvZiAke0pTT04uc3RyaW5naWZ5KGZpbHRlcmVkUmVzdWx0cyl9YCk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogZmlsdGVyZWRSZXN1bHRzW2ldLnggKyA1LCB5OiBmaWx0ZXJlZFJlc3VsdHNbaV0ueSArIDUgfSk7XG5cbiAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKFBBR0VTLnJmcGFnZUluQ2FuZHlIb3VzZSwgMjAwMCkpIHtcbiAgICAgICAgbG9ncygnc2VhcmNoRm9yQ2FuZHlIb3VzZScsIGByZnBhZ2VJbkNhbmR5SG91c2UsIHJldHVybiBhbmQgbGV0IHJmcGFnZUluQ2FuZHlIb3VzZSBwYWdlIGhhbmRsZSBpdGApO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgZmlsdGVyZWRSZXN1bHRzID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25DYW5keSk7XG4gICAgICBsb2dzKCdzZWFyY2hGb3JDYW5keUhvdXNlJywgYGNhbmRpZXMgbGVmdCA+ICR7aX0sICR7SlNPTi5zdHJpbmdpZnkoZmlsdGVyZWRSZXN1bHRzKX1gKTtcbiAgICAgIGkrKztcbiAgICB9XG4gIH1cblxuICAvLyAyLiBmaW5kIGFuZCB0YXAgaG91c2UsIHRoZSBhcnJvdyB3aWxsIG1vdmUsIHNvIGNoZWNrIG11bHRpcGxlIHRpbWVzXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgZmlsdGVyZWRSZXN1bHRzID0gZmlsdGVyT3ZlcmxhcEZpbmRJY29uUmVzdWx0cyhmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvbkNhbmR5SG91c2VVcGdyYWRlQXJyb3cpLCAxNSk7XG4gICAgaWYgKE9iamVjdC5rZXlzKGZpbHRlcmVkUmVzdWx0cykubGVuZ3RoID4gMCkge1xuICAgICAgY29uc29sZS5sb2coJ0ZvdW5kIGl0IHZpYSBjYW5keUhvdXNlVXBncmFkZUFycm93OicsIEpTT04uc3RyaW5naWZ5KGZpbHRlcmVkUmVzdWx0cykpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGZpbHRlcmVkUmVzdWx0cyA9IGZpbHRlck92ZXJsYXBGaW5kSWNvblJlc3VsdHMoZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25DYW5keUhvdXNlVXBncmFkZUFycm93MiksIDE1KTtcbiAgICBpZiAoT2JqZWN0LmtleXMoZmlsdGVyZWRSZXN1bHRzKS5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zb2xlLmxvZygnRm91bmQgaXQgdmlhIGNhbmR5SG91c2VVcGdyYWRlQXJyb3cyOicsIEpTT04uc3RyaW5naWZ5KGZpbHRlcmVkUmVzdWx0cykpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHNsZWVwKDUwMCk7XG4gIH1cbiAgaWYgKE9iamVjdC5rZXlzKGZpbHRlcmVkUmVzdWx0cykubGVuZ3RoID09PSAwKSB7XG4gICAgbG9ncygnc2VhcmNoRm9yQ2FuZHlIb3VzZScsICdmaW5kQW5kVGFwQ2FuZHkgZGlkIG5vdCBzZWUgYW55IGNhbmR5IGhvdXNlIHVwZ3JhZGUgYXJyb3cgPiAwLjk1LCBza2lwcGluZycpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGxldCBpID0gMDtcbiAgd2hpbGUgKGkgPCBPYmplY3Qua2V5cyhmaWx0ZXJlZFJlc3VsdHMpLmxlbmd0aCkge1xuICAgIGlmIChmaWx0ZXJlZFJlc3VsdHNbaV0ueCA8IDkzIHx8IGZpbHRlcmVkUmVzdWx0c1tpXS54ID4gNTc1IHx8IGZpbHRlcmVkUmVzdWx0c1tpXS55IDwgMzcgfHwgZmlsdGVyZWRSZXN1bHRzW2ldLnkgPiAzMDApIHtcbiAgICAgIGxvZ3MoXG4gICAgICAgICdzZWFyY2hGb3JDYW5keUhvdXNlJyxcbiAgICAgICAgYFNraXBwZWQgdXBncmFkZSBob3VzZSBhcyB0aGlzIHBvaW50IGV4Y2VlZCBmZWFzaWJsZSBhcmVhOiAoJHtmaWx0ZXJlZFJlc3VsdHNbaV0ueH0sICR7ZmlsdGVyZWRSZXN1bHRzW2ldLnl9KSAoOTM8eDw1NzUsIDM3PHk8MzAwKWBcbiAgICAgICk7XG4gICAgICBpKys7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBsb2dzKFxuICAgICAgJ3NlYXJjaEZvckNhbmR5SG91c2UnLFxuICAgICAgYFRhcCBjYW5keSBob3VzZSBncmVlbiB1cGdyYWRlIGF0OiAoJHtmaWx0ZXJlZFJlc3VsdHNbaV0ueH0sICR7ZmlsdGVyZWRSZXN1bHRzW2ldLnkgKyAyNX0pIG9mICR7SlNPTi5zdHJpbmdpZnkoZmlsdGVyZWRSZXN1bHRzKX1gXG4gICAgKTtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogZmlsdGVyZWRSZXN1bHRzW2ldLngsIHk6IGZpbHRlcmVkUmVzdWx0c1tpXS55ICsgMjUgfSk7XG5cbiAgICBpZiAocmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShQQUdFUy5yZnBhZ2VJbkNhbmR5SG91c2UsIDIwMDApKSB7XG4gICAgICBsb2dzKFxuICAgICAgICAnc2VhcmNoRm9yQ2FuZHlIb3VzZScsXG4gICAgICAgIGBGb3VuZCB1cGdyYWRlYWJsZSBjYW5keWhvdXNlIGF0ICR7ZmlsdGVyZWRSZXN1bHRzW2ldLnh9LCAke2ZpbHRlcmVkUmVzdWx0c1tpXS55ICsgMjV9LCByZXR1cm4gYW5kIGxldCBjYW5keSBob3VzZSBoYW5kbGUgdGhpc2BcbiAgICAgICk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaSsrO1xuICB9XG5cbiAgbG9ncygnc2VhcmNoRm9yQ2FuZHlIb3VzZScsIGBGaW5pc2ggc2VhcmNoaW5nIGZvciB1cGdyYWRhYmxlIGNhbmR5IGhvdXNlYCk7XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVJbWFnZVRvRGlzayhjcmFzaFR5cGU/OiBzdHJpbmcsIGltZz86IEltYWdlKSB7XG4gIGNyYXNoVHlwZSA9IGNyYXNoVHlwZSA9PT0gdW5kZWZpbmVkID8gJ2NyYXNoLWltZycgOiBjcmFzaFR5cGU7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShVdGlscy5nZXRUYWl3YW5UaW1lKCkpO1xuICBjb25zdCBmaWxlbmFtZSA9IGAke3BhZFplcm8oZGF0ZS5nZXRNb250aCgpICsgMSl9LSR7cGFkWmVybyhkYXRlLmdldERhdGUoKSl9VCR7cGFkWmVybyhkYXRlLmdldEhvdXJzKCkpfS4ke3BhZFplcm8oZGF0ZS5nZXRNaW51dGVzKCkpfS4ke3BhZFplcm8oXG4gICAgZGF0ZS5nZXRTZWNvbmRzKClcbiAgKX0tJHtjcmFzaFR5cGV9LmpwZ2A7XG5cbiAgaWYgKGltZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbG9ncygnc2F2ZUltYWdlVG9EaXNrJywgYGltYWdlIG5vdCBwcm92aWRlZCwgZ2V0IG5ldyBvbmUgYW5kIHNhdmUgdG86ICR7ZmlsZW5hbWV9YCk7XG4gICAgdmFyIGltZyA9IGdldFNjcmVlbnNob3QoKTtcbiAgICAvLyBUT0RPOiB3cml0ZSB0byBpbWFnZXMsXG4gICAgLy8gRm9yIG5veC9tZW11OiAvc2RjYXJkL1BpY3R1cmVzL1NjcmVlbnNob3RzL3JvYm90bW9uL1xuICAgIC8vIEZvciByZWRyb2lkOiAvZGF0YS9tZWRpYS8wL0Rvd25sb2FkL1xuICAgIHNhdmVJbWFnZShpbWcsICcvc2RjYXJkL1BpY3R1cmVzL1NjcmVlbnNob3RzL3JvYm90bW9uLycgKyBmaWxlbmFtZSk7XG4gICAgc2F2ZUltYWdlKGltZywgJy9kYXRhL21lZGlhLzAvRG93bmxvYWRzLycgKyBmaWxlbmFtZSk7XG4gICAgcmVsZWFzZUltYWdlKGltZyk7XG4gIH0gZWxzZSB7XG4gICAgbG9ncygnc2F2ZUltYWdlVG9EaXNrJywgYHNhdmUgZ2l2ZW4gaW1hZ2UgdG86ICR7ZmlsZW5hbWV9YCk7XG4gICAgc2F2ZUltYWdlKGltZywgJy9zZGNhcmQvUGljdHVyZXMvU2NyZWVuc2hvdHMvcm9ib3Rtb24vJyArIGZpbGVuYW1lKTtcbiAgICBzYXZlSW1hZ2UoaW1nLCAnL2RhdGEvbWVkaWEvMC9Eb3dubG9hZHMvJyArIGZpbGVuYW1lKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tJZk5lZWRDcmFzaCgpIHtcbiAgc2F2ZUltYWdlVG9EaXNrKCk7XG4gIGlmIChjb25maWcuYWNjb3VudCA9PT0gJ2RlZmF1bHRfeHJvYm90bW9uX2FjY291bnRAZ21haWwuY29tJykge1xuICAgIGxvZ3MoJ2NoZWNrSWZOZWVkQ3Jhc2gnLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIHNhdmVkIHRoZSBwcm9ibGVtYXRpYyBzY3JlZW4gYW5kIGNyYXNoIHRoZSBzY3JpcHQnKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludGVudGlvbmFsIGNyYXNoJyk7XG4gIH0gZWxzZSB7XG4gICAgbG9ncygnY2hlY2tJZk5lZWRDcmFzaCcsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgc2F2ZWQgdGhlIHByb2JsZW1hdGljIHNjcmVlbiBhbmQgaGl0IGJhY2sgdG8gc2VlIGlmIGl0IHJlc29sdmVkJyk7XG4gICAgc2VuZEtleUJhY2soKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlnU2hhcmVQcmVmKCkge1xuICB2YXIgcnRuID0gZXhlY3V0ZSgnbHMgL2RhdGEvZGF0YS9jb20uZGV2c2lzdGVycy5jay9zaGFyZWRfcHJlZnMnKTtcbiAgaWYgKHJ0biA9PT0gJ2V4aXQgc3RhdHVzIDEnKSB7XG4gICAgY29uc29sZS5sb2coJ0RpZCBub3QgZmluZCBzaGFyZWRfcHJlZiwgcmVtb3ZpbmcgYWxsIHJlbGF0ZWQgZGlycycpO1xuICAgIGV4ZWN1dGUoJ3JtIC1yIC9kYXRhL2RhdGEvY29tLmRldnNpc3RlcnMuY2svYXBwX3BheWxvYWRfbGliJyk7XG4gICAgZXhlY3V0ZSgncm0gLXIgL2RhdGEvZGF0YS9jb20uZGV2c2lzdGVycy5jay9jYWNoZScpO1xuICAgIGV4ZWN1dGUoJ3JtIC1yIC9kYXRhL2RhdGEvY29tLmRldnNpc3RlcnMuY2svY29kZV9jYWNoZScpO1xuICAgIGV4ZWN1dGUoJ3JtIC1yIC9kYXRhL2RhdGEvY29tLmRldnNpc3RlcnMuY2svLnNlYWxpbmdfcmVwb3J0cycpO1xuICAgIGV4ZWN1dGUoJ3JtIC1yIC9kYXRhL2RhdGEvY29tLmRldnNpc3RlcnMuY2svZmlsZXMnKTtcbiAgICBleGVjdXRlKCdta2RpciAvZGF0YS9kYXRhL2NvbS5kZXZzaXN0ZXJzLmNrL3NoYXJlZF9wcmVmcycpO1xuICB9XG4gIGNvbnN0IGNvbnRlbnQgPSByZWFkRmlsZSgnL2RhdGEvZGF0YS9jb20uZGV2c2lzdGVycy5jay9zaGFyZWRfcHJlZnMvY29tLmRldnNpc3RlcnMuY2sudjIucGxheWVycHJlZnMueG1sJyk7XG4gIGlmIChjb250ZW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgbGluZXMgPSBjb250ZW50LnNwbGl0KCdcXG4nKTtcbiAgICBsaW5lcy5zcGxpY2UoNCwgMCwgJzxzdHJpbmcgbmFtZT1cIlRJVExFX0ZJUlNUX1RJTUVfQU5JTUFUSU9OX1RBR19LRVlcIj50aW1lPC9zdHJpbmc+Jyk7XG5cbiAgICBmb3IgKHZhciBpZHggaW4gbGluZXMpIHtcbiAgICAgIGlmIChsaW5lc1tpZHhdLmluZGV4T2YoJ09QVElPTl9NVVRFX0JHTScpICE9PSAtMSkge1xuICAgICAgICBjb25zb2xlLmxvZyhsaW5lc1tpZHhdKTtcbiAgICAgICAgbGluZXNbaWR4XSA9ICc8aW50IG5hbWU9XCJPUFRJT05fTVVURV9CR01cIiB2YWx1ZT1cIjFcIiAvPic7XG4gICAgICB9IGVsc2UgaWYgKGxpbmVzW2lkeF0uaW5kZXhPZignT1BUSU9OX01VVEVfU0UnKSAhPT0gLTEpIHtcbiAgICAgICAgY29uc29sZS5sb2cobGluZXNbaWR4XSk7XG4gICAgICAgIGxpbmVzW2lkeF0gPSAnPGludCBuYW1lPVwiT1BUSU9OX01VVEVfU0VcIiB2YWx1ZT1cIjFcIiAvPic7XG4gICAgICB9IGVsc2UgaWYgKGxpbmVzW2lkeF0uaW5kZXhPZignT1BUSU9OX01VVEVfVk9JQ0UnKSAhPT0gLTEpIHtcbiAgICAgICAgY29uc29sZS5sb2cobGluZXNbaWR4XSk7XG4gICAgICAgIGxpbmVzW2lkeF0gPSAnPGludCBuYW1lPVwiT1BUSU9OX01VVEVfVk9JQ0VcIiB2YWx1ZT1cIjFcIiAvPic7XG4gICAgICB9IGVsc2UgaWYgKGxpbmVzW2lkeF0uaW5kZXhPZignT1BUSU9OX1VTRV9MSUdIVF9TQUZFX0ZJTFRFUicpICE9PSAtMSkge1xuICAgICAgICBjb25zb2xlLmxvZyhsaW5lc1tpZHhdKTtcbiAgICAgICAgbGluZXNbaWR4XSA9ICc8aW50IG5hbWU9XCJPUFRJT05fVVNFX0xJR0hUX1NBRkVfRklMVEVSXCIgdmFsdWU9XCIxXCIgLz4nO1xuICAgICAgfSBlbHNlIGlmIChsaW5lc1tpZHhdLmluZGV4T2YoJ09QVElPTl9ISURFX1NLSUxMX0VGRkVDVCcpICE9PSAtMSkge1xuICAgICAgICBjb25zb2xlLmxvZyhsaW5lc1tpZHhdKTtcbiAgICAgICAgbGluZXNbaWR4XSA9ICc8aW50IG5hbWU9XCJPUFRJT05fSElERV9TS0lMTF9FRkZFQ1RcIiB2YWx1ZT1cIjFcIiAvPic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coJ1dyaXRlIGZpbGUgcmV0dXJuOiAnLCB3cml0ZUZpbGUoJy9kYXRhL2RhdGEvY29tLmRldnNpc3RlcnMuY2svc2hhcmVkX3ByZWZzL2NvbS5kZXZzaXN0ZXJzLmNrLnYyLnBsYXllcnByZWZzLnhtbCcsIGxpbmVzLmpvaW4oJ1xcbicpKSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gbm8gY29tLmRldnNpc3RlcnMuY2sudjIucGxheWVycHJlZnMueG1sIGZpbGUgY3JlYXRlIG9uZVxuICAgIGNvbnN0IHBsYXllcnByZWZzWE1MID0gYDw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J3V0Zi04JyBzdGFuZGFsb25lPSd5ZXMnID8+XG48bWFwPlxuICAgIDxzdHJpbmcgbmFtZT1cIlRJVExFX0ZJUlNUX1RJTUVfQU5JTUFUSU9OX1RBR19LRVlcIj50aW1lPC9zdHJpbmc+XG4gICAgPGludCBuYW1lPVwiT1BUSU9OX01VVEVfQkdNXCIgdmFsdWU9XCIxXCIgLz5cbiAgICA8aW50IG5hbWU9XCJPUFRJT05fTVVURV9TRVwiIHZhbHVlPVwiMVwiIC8+XG4gICAgPGludCBuYW1lPVwiT1BUSU9OX01VVEVfVk9JQ0VcIiB2YWx1ZT1cIjFcIiAvPlxuICAgIDxpbnQgbmFtZT1cIk9QVElPTl9VU0VfTElHSFRfU0FGRV9GSUxURVJcIiB2YWx1ZT1cIjFcIiAvPlxuICAgIDxpbnQgbmFtZT1cIk9QVElPTl9ISURFX1NLSUxMX0VGRkVDVFwiIHZhbHVlPVwiMVwiIC8+XG48L21hcD5gO1xuICAgIGNvbnNvbGUubG9nKCdXcml0ZSBuZXcgZmlsZSByZXR1cm46ICcsIHdyaXRlRmlsZSgnL2RhdGEvZGF0YS9jb20uZGV2c2lzdGVycy5jay9zaGFyZWRfcHJlZnMvY29tLmRldnNpc3RlcnMuY2sudjIucGxheWVycHJlZnMueG1sJywgcGxheWVycHJlZnNYTUwpKTtcbiAgfVxuXG4gIGV4ZWN1dGUoJ2NobW9kIC1SIDc3NyAvZGF0YS9kYXRhL2NvbS5kZXZzaXN0ZXJzLmNrL3NoYXJlZF9wcmVmcycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VPYmplY3Q8VD4odGFyZ2V0OiBULCAuLi5zb3VyY2VzOiBQYXJ0aWFsPFQ+W10pOiBUIHtcbiAgZm9yIChsZXQgc291cmNlIG9mIHNvdXJjZXMpIHtcbiAgICBmb3IgKGxldCBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSAmJiBzb3VyY2Vba2V5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICh0YXJnZXQgYXMgVClba2V5IGFzIGtleW9mIFRdID0gc291cmNlW2tleV0gYXMgVFtrZXlvZiBUXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZUdlbmVyYWxNZXNzYWdlV2luZG93KHRhc2tOYW1lOiBzdHJpbmcsIGltYWdlOiBJbWFnZSwgZmluaXNoUm91bmQ6IChleGl0VGFzaz86IGJvb2xlYW4gfCB1bmRlZmluZWQpID0+IHZvaWQpOiBib29sZWFuIHtcbiAgY29uc3QgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgPSBuZXcgUGFnZSgncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cnLCBbXG4gICAgeyB4OiA0MjQsIHk6IDEwMSwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDI5NCwgeTogMTAxLCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgIHsgeDogNDMxLCB5OiAxMjgsIHI6IDI0MywgZzogMjMzLCBiOiAyMjMgfSxcbiAgICB7IHg6IDQyOSwgeTogMjQ0LCByOiAyMTksIGc6IDIwNywgYjogMTk5IH0sXG4gICAgeyB4OiAzODAsIHk6IDEwMCwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDMxOSwgeTogMTAyLCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogMjkyLCB5OiAxMDgsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gIF0pO1xuXG4gIGlmICghcmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy50aGVOZXR3b3JrSXNVbnN0YWJsZU1lc3NhZ2VTY3JlZW4sIHJmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93LCBpbWFnZSkpIHtcbiAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSB0aGVOZXR3b3JrSXNVbnN0YWJsZU1lc3NhZ2VTY3JlZW4sIHRhcCBPSycpO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMTYsIHk6IDI1MCB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChjaGVja1NjcmVlbk1lc3NhZ2UoTWVzc2FnZVdpbmRvd3MudGhlUmVsb2dpbkludG9Bbm90aGVyRGV2aWNlTWVzc2FnZVNjcmVlbiwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSkge1xuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIHRoZVJlbG9naW5JbnRvQW5vdGhlckRldmljZU1lc3NhZ2VTY3JlZW4sIHN0YXkgaGVyZSBhbmQgd2FpdCBmb3IgaXQnKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbmZpZy5zbGVlcFdoZW5Eb3VibGVMb2dpbkluTWludXRlczsgaSsrKSB7XG4gICAgICBzbGVlcCg2MDAwMCk7XG4gICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICBsb2dzKCdoYW5kbGVVbmV4cGVjdGVkTWVzc2FnZUJveCcsIGBEZXRlY3QgcmVsb2dpbiwgd2FpdDogJHtpfS8ke2NvbmZpZy5zbGVlcFdoZW5Eb3VibGVMb2dpbkluTWludXRlc30gbWlucyB0byByZXN0YXJ0Li4uYCk7XG4gICAgfVxuICAgIGtleWNvZGUoJ0JBQ0snLCAxMDAwKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChcbiAgICBjaGVja1NjcmVlbk1lc3NhZ2UoTWVzc2FnZVdpbmRvd3MubWVzc2FnZVRlYW1Eb250TWF0Y2hUb1NDUm93MSwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSAmJlxuICAgIGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5tZXNzYWdlVGVhbURvbnRNYXRjaFRvU0NSb3cyLCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpXG4gICkge1xuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIFBBR0VTLm1lc3NhZ2VUZWFtRG9udE1hdGNoVG9TQ1JvdzEgJiYgbWVzc2FnZVRlYW1Eb250TWF0Y2hUb1NDUm93Miwgc2VuZCBiYWNrIGFuZCBmaW5pc2ggcm91bmQnKTtcbiAgICBpZiAodGFza05hbWUgPT09IFRBU0tTLnRvd2VyT2ZTd2VldENoYW9zKSB7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICB9XG4gICAgc2VuZEtleUJhY2soKTtcbiAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICBzZW5kS2V5QmFjaygpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5za2lwVHV0b3JpYWxNZXNzYWdlU2NyZWVuLCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpKSB7XG4gICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93IGNvbmZpcm0gc2tpcFR1dG9yaWFsTWVzc2FnZVNjcmVlbiwgc2tpcCB0aGlzIG9uZScpO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzOTAsIHk6IDI1MCB9KTtcbiAgICBzbGVlcCgyMDAwKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChjaGVja1NjcmVlbk1lc3NhZ2UoTWVzc2FnZVdpbmRvd3MudW5maW5pc2hlZFBWUEJhdHRsZU1lc3NhZ2VTY3JlZW4sIHJmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93LCBpbWFnZSkpIHtcbiAgICBpZiAodGFza05hbWUgIT09IFRBU0tTLnB2cCkge1xuICAgICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93IGNvbmZpcm0gdW5maW5pc2hlZFBWUEJhdHRsZU1lc3NhZ2VTY3JlZW4sIHNraXAgY3VycmVudCB0YXNrJyk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIHVuZmluaXNoZWRQVlBCYXR0bGVNZXNzYWdlU2NyZWVuLCB0YXAgaXQnKTtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzk0LCB5OiAyNTMgfSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoY2hlY2tTY3JlZW5NZXNzYWdlKE1lc3NhZ2VXaW5kb3dzLm1lc3NhZ2VDb29raWVEcnlpbmdPblN1bmJlZCwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSkge1xuICAgIGlmICh0YXNrTmFtZSAhPT0gVEFTS1MudHJvcGljYWxJc2xhbmRDbGVhckJ1YmJsZSkge1xuICAgICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93IGNvbmZpcm0gbWVzc2FnZUNvb2tpZURyeWluZ09uU3VuYmVkLCBlbmQgY3VycmVudCB0YXNrJyk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzIwLCB5OiAyNTMgfSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSBtZXNzYWdlQ29va2llRHJ5aW5nT25TdW5iZWQsIHRhcCB0byBjbG9zZSBhbmQgc2tpcCBjdXJyZW50IHRhc2snKTtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzIwLCB5OiAyNTMgfSk7XG4gICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoY2hlY2tTY3JlZW5NZXNzYWdlKE1lc3NhZ2VXaW5kb3dzLmJvdW50eUFkZE1vcmVDb29raWVzTWVzc2FnZVNjcmVlbiwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSkge1xuICAgIGlmICh0YXNrTmFtZSAhPT0gVEFTS1MuYm91bnRpZXMpIHtcbiAgICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIGJvdW50eUFkZE1vcmVDb29raWVzTWVzc2FnZVNjcmVlbiwgdGFwIGNhbmNlbCBhbmQgc2tpcCcpO1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDI2MywgeTogMjUyIH0pO1xuICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSBib3VudHlBZGRNb3JlQ29va2llc01lc3NhZ2VTY3JlZW4sIHRhcCBzdGFydCBhbmQgZm9yY2UgcnVuJyk7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDM3NSwgeTogMjUzIH0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5ib3VudHlIYXNFeHBpcmVkLCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpKSB7XG4gICAgaWYgKHRhc2tOYW1lICE9PSBUQVNLUy5ib3VudGllcykge1xuICAgICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93IGNvbmZpcm0gYm91bnR5SGFzRXhwaXJlZCwgdGFwIE9LIGFuZCBza2lwJyk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzE2LCB5OiAyNTIgfSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSBib3VudHlIYXNFeHBpcmVkLCB0YXAgT0sgYW5kIGZpbmlzaCB0aGlzIHRhc2snKTtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzE2LCB5OiAyNTIgfSk7XG4gICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoY2hlY2tTY3JlZW5NZXNzYWdlKE1lc3NhZ2VXaW5kb3dzLnVuZmluaXNoZWRTdXBlck1heWhlbUJhdHRsZU1lc3NhZ2VTY3JlZW4sIHJmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93LCBpbWFnZSkpIHtcbiAgICBpZiAodGFza05hbWUgIT09IFRBU0tTLnN1cGVyTWF5aGVtKSB7XG4gICAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSB1bmZpbmlzaGVkU3VwZXJNYXloZW1CYXR0bGVNZXNzYWdlU2NyZWVuLCBza2lwIGN1cnJlbnQgdGFzaycpO1xuICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSB1bmZpbmlzaGVkU3VwZXJNYXloZW1CYXR0bGVNZXNzYWdlU2NyZWVuLCB0YXAgaXQnKTtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzk0LCB5OiAyNTMgfSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoXG4gICAgY2hlY2tTY3JlZW5NZXNzYWdlKE1lc3NhZ2VXaW5kb3dzLmRvd25sb2FkRGF0YU5vTGFuZ3VhZ2VUaXRsZSwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSAmJlxuICAgIGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5kb3dubG9hZERhdGFOb0xhbmd1YWdlLCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpXG4gICkge1xuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIGRvd25sb2FkRGF0YU5vTGFuZ3VhZ2UsIHRhcCBkb3dubG9hZCcpO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMjAsIHk6IDI1NSB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChjaGVja1NjcmVlbk1lc3NhZ2UoTWVzc2FnZVdpbmRvd3MuYmF0dGxlQWJub3JtYWxCdXRMYXN0V2FzU2F2ZWRNZXNzYWdlU2NyZWVuLCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpKSB7XG4gICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93IGNvbmZpcm0gYmF0dGxlQWJub3JtYWxCdXRMYXN0V2FzU2F2ZWRNZXNzYWdlU2NyZWVuLCB0YXAgaXQnKTtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzE4LCB5OiAyNTMgfSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoY2hlY2tTY3JlZW5NZXNzYWdlKE1lc3NhZ2VXaW5kb3dzLmd1aWxkQmF0dGxlQXR0ZW1wdE5vdFVzZWRNZXNzYWdlU2NyZWVuLCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpKSB7XG4gICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93IGNvbmZpcm0gZ3VpbGRCYXR0bGVBdHRlbXB0Tm90VXNlZE1lc3NhZ2VTY3JlZW4sIHRhcCBpdCcpO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMTcsIHk6IDI1MyB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChjaGVja1NjcmVlbk1lc3NhZ2UoTWVzc2FnZVdpbmRvd3MuVE9TQ3NlYXJpbmdLZXlzTm90VXNlZE1lc3NhZ2VTY3JlZW4sIHJmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93LCBpbWFnZSkpIHtcbiAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSBUT1NDc2VhcmluZ0tleXNOb3RVc2VkTWVzc2FnZVNjcmVlbiwgdGFwIGl0Jyk7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMxNywgeTogMjUzIH0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5iYXR0bGVDb21wbGV0ZWROb3RJbmZsaWN0RGFtYWdlTWVzc2FnZVNjcmVlbiwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSkge1xuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIGJhdHRsZUNvbXBsZXRlZE5vdEluZmxpY3REYW1hZ2VNZXNzYWdlU2NyZWVuLCB0YXAgY2FuY2VsJyk7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDI2NCwgeTogMjUwIH0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5uZXdBcmVhQXZhaWxhYmxlTWVzc2FnZVNjcmVlbiwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSkge1xuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIG5ld0FyZWFBdmFpbGFibGVNZXNzYWdlU2NyZWVuLCB0YXAgT0sgdG8gc2VuZCB0aGUgYmFsbG9uJyk7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDM3NSwgeTogMjUwIH0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5hbkVycm9ySGFzT2NjdXJlZE1lc3NhZ2VTY3JlZW4sIHJmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93LCBpbWFnZSkpIHtcbiAgICBsb2dzKHRhc2tOYW1lLCAncmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3cgY29uZmlybSBhbkVycm9ySGFzT2NjdXJlZE1lc3NhZ2VTY3JlZW4sIHRhcCBpdCcpO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMTcsIHk6IDI1MyB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChjaGVja1NjcmVlbk1lc3NhZ2UoTWVzc2FnZVdpbmRvd3MuYW5Vbmtub3duRXJyb3JIYXNPY2N1clByb2Nlc3NpbmdSZXF1ZXN0LCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpKSB7XG4gICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93IGNvbmZpcm0gYW5Vbmtub3duRXJyb3JIYXNPY2N1clByb2Nlc3NpbmdSZXF1ZXN0LCB3YWl0IDUgc2VjcyBhbmQgdGFwIGl0Jyk7XG4gICAgVXRpbHMuc2xlZXAoNSAqIDEwMDApO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMTcsIHk6IDI1MyB9KTtcbiAgICAvLyB2YXIgcnRuID0gZXhlY3V0ZSgnYW0gZm9yY2Utc3RvcCBjb20uZGV2c2lzdGVycy5jaycpO1xuICAgIC8vIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIGFuVW5rbm93bkVycm9ySGFzT2NjdXJQcm9jZXNzaW5nUmVxdWVzdCwgJHtydG59YCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoXG4gICAgY2hlY2tTY3JlZW5NZXNzYWdlKE1lc3NhZ2VXaW5kb3dzLm1lc3NhZ2VOb3RpZnlRdWl0LCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpIHx8XG4gICAgY2hlY2tTY3JlZW5NZXNzYWdlKE1lc3NhZ2VXaW5kb3dzLm1lc3NhZ2VOb3RpZnlRdWl0MiwgcmZwYWdlR2VuZXJhbE1lc3NhZ2VXaW5kb3csIGltYWdlKSB8fFxuICAgIGNoZWNrU2NyZWVuTWVzc2FnZShNZXNzYWdlV2luZG93cy5tZXNzYWdlTm90aWZ5UXVpdDMsIHJmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93LCBpbWFnZSkgfHxcbiAgICBjaGVja1NjcmVlbk1lc3NhZ2UoTWVzc2FnZVdpbmRvd3MubWVzc2FnZU5vdGlmeVF1aXRSZWRyb2lkLCByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgaW1hZ2UpXG4gICkge1xuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjb25maXJtIG1lc3NhZ2VOb3RpZnlRdWl0L21lc3NhZ2VOb3RpZnlRdWl0Mi9tZXNzYWdlTm90aWZ5UXVpdDMvbWVzc2FnZU5vdGlmeVF1aXRSZWRyb2lkLCBzZW5kIGJhY2snKTtcbiAgICBzZW5kS2V5QmFjaygpO1xuICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHNhdmVJbWFnZVRvRGlzaygndW5rbm93bi1tZXNzYWdlLXdpbmRvdycsIGltYWdlKTtcbiAgaWYgKGNvbmZpZy5hY2NvdW50ID09PSAnZGVmYXVsdF94cm9ib3Rtb25fYWNjb3VudEBnbWFpbC5jb20nKSB7XG4gICAgbG9ncyh0YXNrTmFtZSwgJ3JmcGFnZUdlbmVyYWxNZXNzYWdlV2luZG93LCBzYXZlZCB0aGUgcHJvYmxlbWF0aWMgc2NyZWVuIGFuZCBjcmFzaCB0aGUgc2NyaXB0Jyk7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnRlbnRpb25hbCBjcmFzaCcpO1xuICB9IGVsc2Uge1xuICAgIGxvZ3ModGFza05hbWUsICdyZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdywgc2F2ZWQgdGhlIHByb2JsZW1hdGljIHNjcmVlbiBhbmQgaGl0IGJhY2sgdG8gc2VlIGlmIGl0IHJlc29sdmVkJyk7XG4gICAgc2VuZEtleUJhY2soKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrSWZJbkJhdHRsZSh0YXNrOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgLy8gcmVhZCB0aGUgbGlmZSBiYXIgb2YgYm90aCBwbGF5ZXJzXG4gIGNvbnN0IHJmcGFnZVB2UEJhdHRsaW5nID0gbmV3IFBhZ2UoJ3JmcGFnZUJhdHRsaW5nJywgW1xuICAgIC8vIEZyb20gUFZQXG4gICAgLy8geyB4OiAyODQsIHk6IDE3LCByOiAxNDUsIGc6IDIxOSwgYjogMTQzIH0sXG4gICAgLy8geyB4OiAzNTEsIHk6IDE2LCByOiA3NywgZzogMzIsIGI6IDEyIH0sXG5cbiAgICAvLyBGcm9tIFN1cGVyIG1heWhlbVxuICAgIHsgeDogMzU0LCB5OiAxNCwgcjogMTI1LCBnOiAxMiwgYjogMjUxIH0sXG4gICAgeyB4OiAyODUsIHk6IDE1LCByOiA2NSwgZzogMjA1LCBiOiAxMiB9LFxuICBdKTtcbiAgY29uc3QgcmZwYWdlQm91bnR5QmF0dGxlID0gbmV3IFBhZ2UoJ3JmcGFnZUJvdW50eUJhdHRsZScsIFtcbiAgICB7IHg6IDQ1NCwgeTogMjEsIHI6IDgyLCBnOiAyMDksIGI6IDAgfSxcbiAgICB7IHg6IDU5MSwgeTogMTAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSk7XG4gIGNvbnN0IHJmcGFnZVRPU0NCYXR0bGUgPSBuZXcgUGFnZSgncmZwYWdlVE9TQ0JhdHRsZScsIFtcbiAgICB7IHg6IDYwOCwgeTogNDEsIHI6IDQ3LCBnOiAzNSwgYjogMzggfSxcbiAgICB7IHg6IDYxNiwgeTogMTcsIHI6IDIwNSwgZzogMjA1LCBiOiAyMDMgfSxcbiAgXSk7XG4gIGNvbnN0IHJmcGFnZUluSXNsYW5kQmF0dGxlID0gbmV3IFBhZ2UoJ3JmcGFnZUluSXNsYW5kQmF0dGxlJywgW1xuICAgIHsgeDogNTk0LCB5OiAxMiwgcjogMjQ5LCBnOiAzNywgYjogMzggfSxcbiAgICB7IHg6IDU5MCwgeTogMjAsIHI6IDI0LCBnOiAyNCwgYjogMjQgfSxcbiAgICB7IHg6IDQ1MywgeTogMjEsIHI6IDg1LCBnOiAyMTEsIGI6IDIgfSxcbiAgXSk7XG4gIGNvbnN0IHJmcGFnZUNvb2tpZUFsbGlhbmNlQmF0dGxlID0gbmV3IFBhZ2UoJ3JmcGFnZUNvb2tpZUFsbGlhbmNlJywgW1xuICAgIHsgeDogNDQyLCB5OiAyMCwgcjogODUsIGc6IDIxNSwgYjogMiB9LFxuICAgIHsgeDogMzYsIHk6IDIxLCByOiA1MSwgZzogMjI3LCBiOiAyNTUgfSxcbiAgXSk7XG4gIGNvbnN0IHJmcGFnZUd1aWxkRHJhZ29uQmF0dGxlID0gbmV3IFBhZ2UoJ3JmcGFnZUd1aWxkRHJhZ29uQmF0dGxlJywgW1xuICAgIHsgeDogNTU2LCB5OiAxMiwgcjogOTAsIGc6IDI3LCBiOiAxNzUgfSxcbiAgICB7IHg6IDE1OCwgeTogMzM4LCByOiAxMjYsIGc6IDI0NywgYjogNTEgfSxcbiAgXSk7XG5cbiAgY29uc3QgcmZwYWdlQXV0b1VzZVNraWxsRW5hYmxlZCA9IG5ldyBQYWdlKCdyZnBhZ2VBdXRvVXNlU2tpbGxFbmFibGVkJywgW3sgeDogMjgsIHk6IDI5MSwgcjogMjIzLCBnOiAyMjEsIGI6IDEgfV0sIHsgeDogNDEsIHk6IDI4OSB9KTtcbiAgY29uc3QgcmZwYWdlQXV0b1VzZVNraWxsTm90RW5hYmxlZCA9IG5ldyBQYWdlKCdyZnBhZ2VBdXRvVXNlU2tpbGxOb3RFbmFibGVkJywgW3sgeDogNDEsIHk6IDI4OSwgcjogMjAzLCBnOiAyMDMsIGI6IDIwMyB9XSwgeyB4OiA0MSwgeTogMjg5IH0pO1xuICBjb25zdCByZnBhZ2VBdXRvVXNlU2tpbGxOb3RFbmFibGVkMiA9IG5ldyBQYWdlKCdyZnBhZ2VBdXRvVXNlU2tpbGxOb3RFbmFibGVkMicsIFt7IHg6IDQxLCB5OiAyODksIHI6IDE5NywgZzogMTkzLCBiOiAxOTUgfV0sIHsgeDogNDEsIHk6IDI4OSB9KTtcblxuICBjb25zdCByZnBhZ2VTcGVlZEJvb3N0RW5hYmxlZCA9IG5ldyBQYWdlKCdyZnBhZ2VTcGVlZEJvb3N0RW5hYmxlZCcsIFt7IHg6IDMyLCB5OiAzMzEsIHI6IDE2MSwgZzogMTU5LCBiOiA4IH1dKTtcbiAgY29uc3QgcmZwYWdlU3BlZWRCb29zdDI1RW5hYmxlZCA9IG5ldyBQYWdlKCdyZnBhZ2VTcGVlZEJvb3N0MjVFbmFibGVkJywgW3sgeDogMzYsIHk6IDMzNCwgcjogMTUzLCBnOiAxNTEsIGI6IDggfV0pO1xuICBjb25zdCByZnBhZ2VTcGVlZEJvb3N0Tm90RW5hYmxlZCA9IG5ldyBQYWdlKCdyZnBhZ2VTcGVlZEJvb3N0Tm90RW5hYmxlZCcsIFt7IHg6IDMzLCB5OiAzMTksIHI6IDIwMywgZzogMjAzLCBiOiAyMDMgfV0sIHsgeDogMzMsIHk6IDMxOSB9KTtcbiAgY29uc3QgcmZwYWdlU3BlZWQxXzJ4ID0gbmV3IFBhZ2UoXG4gICAgJ3JmcGFnZVNwZWVkMV8yeCcsXG4gICAgW1xuICAgICAgeyB4OiAyMCwgeTogMzMzLCByOiAyMTEsIGc6IDIwOSwgYjogMiB9LFxuICAgICAgeyB4OiAzMiwgeTogMzM0LCByOiAxNjEsIGc6IDE1OSwgYjogOCB9LFxuICAgIF0sXG4gICAgeyB4OiAyMCwgeTogMzMzIH1cbiAgKTtcblxuICBjb25zdCBncEluQmF0dGxlID0gbmV3IEdyb3VwUGFnZSgnZ3BJbkJhdHRsZScsIFtcbiAgICByZnBhZ2VQdlBCYXR0bGluZyxcbiAgICByZnBhZ2VCb3VudHlCYXR0bGUsXG4gICAgcmZwYWdlVE9TQ0JhdHRsZSxcbiAgICByZnBhZ2VJbklzbGFuZEJhdHRsZSxcbiAgICByZnBhZ2VDb29raWVBbGxpYW5jZUJhdHRsZSxcbiAgICByZnBhZ2VHdWlsZERyYWdvbkJhdHRsZSxcblxuICAgIHJmcGFnZUF1dG9Vc2VTa2lsbEVuYWJsZWQsXG4gICAgcmZwYWdlQXV0b1VzZVNraWxsTm90RW5hYmxlZCxcbiAgICByZnBhZ2VBdXRvVXNlU2tpbGxOb3RFbmFibGVkMixcblxuICAgIHJmcGFnZVNwZWVkQm9vc3RFbmFibGVkLFxuICAgIHJmcGFnZVNwZWVkQm9vc3QyNUVuYWJsZWQsXG4gICAgcmZwYWdlU3BlZWRCb29zdE5vdEVuYWJsZWQsXG4gICAgcmZwYWdlU3BlZWQxXzJ4LFxuICBdKTtcblxuICBjb25zdCBtYXRjaGVkQmF0dGxlUGFnZXMgPSByZXJvdXRlci5nZXRQYWdlc01hdGNoKGdwSW5CYXR0bGUpO1xuICBpZiAobWF0Y2hlZEJhdHRsZVBhZ2VzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGxvZ3MoJ2NoZWNrSWZJbkJhdHRsZScsIGBGb3VuZCBtYXRjaGVkIGJhdHRsZSBwYWdlOiAke0pTT04uc3RyaW5naWZ5KG1hdGNoZWRCYXR0bGVQYWdlcyl9YCk7XG4gIGlmIChtYXRjaGVkQmF0dGxlUGFnZXMuc29tZShlbGVtZW50ID0+IGVsZW1lbnQubmFtZSA9PT0gJ3JmcGFnZUF1dG9Vc2VTa2lsbEVuYWJsZWQnKSkge1xuICAgIGxvZ3MoJ2NoZWNrSWZJbkJhdHRsZScsIGBBdXRvIHNraWxsIGNvcnJlY3RseSBlbmFibGVkYCk7XG4gIH0gZWxzZSBpZiAobWF0Y2hlZEJhdHRsZVBhZ2VzLnNvbWUoZWxlbWVudCA9PiBlbGVtZW50Lm5hbWUgPT09ICdyZnBhZ2VBdXRvVXNlU2tpbGxOb3RFbmFibGVkJyB8fCBlbGVtZW50Lm5hbWUgPT09ICdyZnBhZ2VBdXRvVXNlU2tpbGxOb3RFbmFibGVkMicpKSB7XG4gICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUF1dG9Vc2VTa2lsbE5vdEVuYWJsZWQpO1xuICAgIFV0aWxzLnNsZWVwKDE1MDApO1xuICAgIGxvZ3MoJ2NoZWNrSWZJbkJhdHRsZScsIGBUYXAgYXV0byBza2lsbCBlbmFibGUgMSB0aW1lIGZvciByZnBhZ2VBdXRvVXNlU2tpbGxOb3RFbmFibGVkYCk7XG4gIH1cblxuICBpZiAobWF0Y2hlZEJhdHRsZVBhZ2VzLnNvbWUoZWxlbWVudCA9PiBlbGVtZW50Lm5hbWUgPT09ICdyZnBhZ2VTcGVlZEJvb3N0RW5hYmxlZCcgfHwgZWxlbWVudC5uYW1lID09PSAncmZwYWdlU3BlZWRCb29zdDI1RW5hYmxlZCcpKSB7XG4gICAgbG9ncygnY2hlY2tJZkluQmF0dGxlJywgYFNwZWVkIGJvb3N0IGNvcnJlY3RseSBlbmFibGVkYCk7XG4gIH0gZWxzZSBpZiAobWF0Y2hlZEJhdHRsZVBhZ2VzLnNvbWUoZWxlbWVudCA9PiBlbGVtZW50Lm5hbWUgPT09ICdyZnBhZ2VTcGVlZEJvb3N0Tm90RW5hYmxlZCcpKSB7XG4gICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZVNwZWVkQm9vc3ROb3RFbmFibGVkKTtcbiAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICByZXJvdXRlci5nb05leHQocmZwYWdlU3BlZWRCb29zdE5vdEVuYWJsZWQpO1xuICAgIFV0aWxzLnNsZWVwKDE1MDApO1xuICAgIGxvZ3MoJ2NoZWNrSWZJbkJhdHRsZScsIGBUYXAgc3BlZWQgYm9vc3QgMiB0aW1lcyBmb3IgcmZwYWdlU3BlZWRCb29zdE5vdEVuYWJsZWRgKTtcbiAgfSBlbHNlIGlmIChtYXRjaGVkQmF0dGxlUGFnZXMuc29tZShlbGVtZW50ID0+IGVsZW1lbnQubmFtZSA9PT0gJ3JmcGFnZVNwZWVkMV8yeCcpKSB7XG4gICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZVNwZWVkQm9vc3ROb3RFbmFibGVkKTtcbiAgICBVdGlscy5zbGVlcCgxNTAwKTtcbiAgICBsb2dzKCdjaGVja0lmSW5CYXR0bGUnLCBgVGFwIHNwZWVkIGJvb3N0IDEgdGltZSBmb3IgcmZwYWdlU3BlZWQxXzJ4YCk7XG4gIH1cblxuICAvLyDlpoLmnpzmiZPlpKrkuYXopoHlgZxcbiAgbGV0IG1heEJhdHRsZVRpbWVJbk1pbnM7XG4gIHN3aXRjaCAodGFzaykge1xuICAgIGNhc2UgVEFTS1MudHJvcGljYWxJc2xhbmRDbGVhckJ1YmJsZTpcbiAgICAgIG1heEJhdHRsZVRpbWVJbk1pbnMgPSAxNTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgVEFTS1MuZ3VpbGRCYXR0bGVBbGxpYW5jZTpcbiAgICAgIG1heEJhdHRsZVRpbWVJbk1pbnMgPSA0MDtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBtYXhCYXR0bGVUaW1lSW5NaW5zID0gMztcbiAgfVxuXG4gIGlmIChnbG9iYWxTdG9yYWdlLmJvdFN0YXR1cy5iYXR0bGVTdGFydGVkID09PSAwKSB7XG4gICAgbG9ncygnY2hlY2tJZkluQmF0dGxlJywgYGJhdHRsZSBzdGFydGVkYCk7XG4gICAgZ2xvYmFsU3RvcmFnZS5ib3RTdGF0dXMuYmF0dGxlU3RhcnRlZCA9IERhdGUubm93KCk7XG4gIH0gZWxzZSBpZiAoRGF0ZS5ub3coKSAtIGdsb2JhbFN0b3JhZ2UuYm90U3RhdHVzLmJhdHRsZVN0YXJ0ZWQgPiBtYXhCYXR0bGVUaW1lSW5NaW5zICogQ09OU1RBTlRTLm1pbnV0ZUluTXMpIHtcbiAgICBsb2dzKFxuICAgICAgJ2NoZWNrSWZJbkJhdHRsZScsXG4gICAgICBgTWF4IGJhdHRsZSB0aW1lIHJlYWNoZWQgKCR7RGF0ZS5ub3coKSAtIGdsb2JhbFN0b3JhZ2UuYm90U3RhdHVzLmJhdHRsZVN0YXJ0ZWQgPiBtYXhCYXR0bGVUaW1lSW5NaW5zICogQ09OU1RBTlRTLm1pbnV0ZUluTXN9KSwgZm9yY2Ugc3RvcGBcbiAgICApO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA2MTUsIHk6IDE5IH0pO1xuICAgIFV0aWxzLnNsZWVwKDE1MDApO1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMjEsIHk6IDE5OCB9KTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChEYXRlLm5vdygpIC0gZ2xvYmFsU3RvcmFnZS5ib3RTdGF0dXMuYmF0dGxlU3RhcnRlZCA8IDEwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMpIHtcbiAgICBsb2dzKCdjaGVja0lmSW5CYXR0bGUnLCBgYmF0dGxlIGxhc3Q6ICR7KERhdGUubm93KCkgLSBnbG9iYWxTdG9yYWdlLmJvdFN0YXR1cy5iYXR0bGVTdGFydGVkKSAvIENPTlNUQU5UUy5taW51dGVJbk1zfSBtaW5zYCk7XG4gIH1cblxuICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFzc2l2ZUFkZFJvdXRlKHBhZ2VzOiBQYWdlW10pIHtcbiAgZm9yIChjb25zdCBwYWdlSWR4IGluIHBhZ2VzKSB7XG4gICAgY29uc3QgcGFnZSA9IHBhZ2VzW3BhZ2VJZHhdO1xuICAgIGlmICghKHBhZ2UgaW5zdGFuY2VvZiBQYWdlKSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChyZXJvdXRlci5nZXRQYWdlQnlOYW1lKHBhZ2UubmFtZSkgIT09IG51bGwpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7cGFnZS5uYW1lfWAsXG4gICAgICBtYXRjaDogcGFnZSxcbiAgICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgICBpZiAocGFnZS5uZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgZmluZFBhdGgsIHRhc2s6ICR7Y29udGV4dC50YXNrLm5hbWV9LCBwYXRoOiAke2NvbnRleHQucGF0aH0gYnV0IGRvZXMgbm90IGhhdmUgbmV4dCBwYWdlIHRvIGdvYCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKGBmaW5kUGF0aCwgdGFzazogJHtjb250ZXh0LnRhc2submFtZX0sIHBhdGg6ICR7Y29udGV4dC5wYXRofWApO1xuICAgICAgICByZXJvdXRlci5nb05leHQocGFnZSk7XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ248VD4odGFyZ2V0OiBULCBzb3VyY2U6IFBhcnRpYWw8VD4pOiBUIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV0gYXMgYW55O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG4vLyBodHRwczovL2dhLWRldi10b29scy5nb29nbGUvZ2E0L2V2ZW50LWJ1aWxkZXIvLCBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9hbmFseXRpY3MvZGV2Z3VpZGVzL2NvbGxlY3Rpb24vcHJvdG9jb2wvZ2E0L3NlbmRpbmctZXZlbnRzP2NsaWVudF90eXBlPWd0YWcjc2VuZF9hbl9ldmVudFxuZXhwb3J0IGZ1bmN0aW9uIHNlbmRDb3VudGVyKHRhc2tOYW1lOiBzdHJpbmcsIGZpbmlzaGVkUGFnZU5hbWU6IHN0cmluZywgZnVydGh1ckluZm86IG9iamVjdCkge1xuICAvLyBUT0RPOiByZW1vdmUgd2hlbiBjb3VudGVyIHZlcmlmeSBmaW5pc2hlZFxuICB2YXIgYm9keTIgPSB7XG4gICAgY2xpZW50X2lkOiBjb25maWcuZGV2aWNlSWQsXG4gICAgdXNlcl9pZDogY29uZmlnLmxpY2Vuc2VJZCxcbiAgICB1c2VyX3Byb3BlcnRpZXM6IHtcbiAgICAgIGNsaWVudF9pZDogY29uZmlnLmRldmljZUlkLFxuICAgICAgdXNlcl9pZDogY29uZmlnLmxpY2Vuc2VJZCxcbiAgICAgIHVzZXJfY2F0ZWdvcnlfMTogY29uZmlnLmRldmljZUlkLFxuICAgICAgdXNlcl9jYXRlZ29yeV8yOiBjb25maWcubGljZW5zZUlkLFxuICAgICAgdXNlcl9jYXRlZ29yeV9kZXZpY2VJZDogY29uZmlnLmRldmljZUlkLFxuICAgICAgdXNlcl9jYXRlZ29yeV9saWNlbnNlSWQ6IGNvbmZpZy5saWNlbnNlSWQsXG4gICAgfSxcbiAgICBldmVudHM6IFtcbiAgICAgIC8vIFBhZ2UgdmlldyBldmVudFxuICAgICAge1xuICAgICAgICBuYW1lOiAncGFnZV92aWV3JyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgcGFnZV90aXRsZTogYCR7dGFza05hbWV9YCxcbiAgICAgICAgICBwYWdlX3BhdGg6IGAvJHtmaW5pc2hlZFBhZ2VOYW1lfWAsXG4gICAgICAgICAgZW5nYWdlbWVudF90aW1lX21zZWM6IDEsXG4gICAgICAgICAgdGFzazogYCR7dGFza05hbWV9X2RvbmVgLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIC8vIFlvdXIgY3VzdG9tIGV2ZW50XG4gICAgICB7XG4gICAgICAgIG5hbWU6IGAke3Rhc2tOYW1lfV9kb25lYCxcbiAgICAgICAgcGFyYW1zOiBhc3NpZ24oXG4gICAgICAgICAge1xuICAgICAgICAgICAgcGFnZV90aXRsZTogYCR7dGFza05hbWV9YCxcbiAgICAgICAgICAgIHBhZ2VfcGF0aDogYC8ke2ZpbmlzaGVkUGFnZU5hbWV9YCxcbiAgICAgICAgICAgIGVuZ2FnZW1lbnRfdGltZV9tc2VjOiAxLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZnVydGh1ckluZm9cbiAgICAgICAgKSxcbiAgICAgIH0sXG4gICAgXSxcbiAgfTtcblxuICBjb25zdCBib2R5ID0ge1xuICAgIGNsaWVudF9pZDogY29uZmlnLmxpY2Vuc2VJZCxcbiAgICB1c2VyX2lkOiBjb25maWcudXNlcklkLFxuICAgIG5vbl9wZXJzb25hbGl6ZWRfYWRzOiBmYWxzZSxcbiAgICBldmVudHM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogYCR7dGFza05hbWV9X2RvbmVgLFxuICAgICAgICBwYXJhbXM6IGFzc2lnbihcbiAgICAgICAgICB7XG4gICAgICAgICAgICByZXJvdXRlcl9wYWdlOiBgJHtmaW5pc2hlZFBhZ2VOYW1lfWAsXG4gICAgICAgICAgICByZXJvdXRlcl90YXNrOiBgJHt0YXNrTmFtZX1gLFxuICAgICAgICAgICAgZW5nYWdlbWVudF90aW1lX21zZWM6IDEwMCxcbiAgICAgICAgICAgIGxpY2Vuc2VfaWQ6IGNvbmZpZy5saWNlbnNlSWQsXG4gICAgICAgICAgICB1c2VyX2lkOiBjb25maWcudXNlcklkLFxuICAgICAgICAgICAgZGV2aWNlX2lkOiBjb25maWcuZGV2aWNlSWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmdXJ0aHVySW5mb1xuICAgICAgICApLFxuICAgICAgfSxcbiAgICBdLFxuICB9O1xuXG4gIGh0dHBDbGllbnQoJ1BPU1QnLCAnaHR0cHM6Ly93d3cuZ29vZ2xlLWFuYWx5dGljcy5jb20vbXAvY29sbGVjdD9tZWFzdXJlbWVudF9pZD1HLTFKM1dIRDJTRFYmYXBpX3NlY3JldD1iRTgtTEVDNlJFdVNEV19HM010ODdRJywgSlNPTi5zdHJpbmdpZnkoYm9keSksIHtcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICB9KTtcbiAgbG9ncyh0YXNrTmFtZSwgYFNlbmRpbmcgY291bnRlciB3aXRoICR7Y29uZmlnLmRldmljZUlkfSwgJHtjb25maWcubGljZW5zZUlkfSwgJHtKU09OLnN0cmluZ2lmeShib2R5KX1gKTtcbiAgbG9ncyh0YXNrTmFtZSwgYFNlbmRpbmcgY291bnRlciBmb3IgdGFzayAnJHt0YXNrTmFtZX0nIGF0IHBhZ2UgJyR7ZmluaXNoZWRQYWdlTmFtZX0nYCk7XG59XG5cbi8vIOW+gFNsYWNr5aCx5ZGK5LiK5LiA6aCB5pivIGNvbnRleHQubGFzdE1hdGNoZWRQYXRo77yM5LiL5LiA6aCB5oeJ6Kmy5pivIHRhcmdldFBhZ2XvvIzljbDlh7rkuI3nrKblkIjnmoTpoY/oibLpu55cbmZ1bmN0aW9uIHF1aWNrUmVwb3J0V3JvbmdQb2ludFRvU2xhY2soY29udGV4dDogUm91dGVDb250ZXh0LCB0YXJnZXRQYWdlOiBQYWdlKSB7XG4gIFV0aWxzLnNlbmRTbGFja01lc3NhZ2UoXG4gICAgcmVyb3V0ZXIucmVyb3V0ZXJDb25maWcuZGVidWdTbGFja1VybCxcbiAgICBgQ1JLLSR7Y29uZmlnLmRldmljZUlkfTogVGFyZ2V0IHBhZ2Ugc2VlbXMgbGlrZSBtaXNzaW5nOiAke3RhcmdldFBhZ2UubmFtZX0sIHNraXAgdGFza2AsXG4gICAgYCR7Y29udGV4dC50YXNrLm5hbWV9IHRhc2sgd2VyZSBpbiAke2NvbnRleHQubGFzdE1hdGNoZWRQYXRofSBidXQgaXMgbm93IHVua25vd24sIHBlcmhhcHMgKiR7XG4gICAgICB0YXJnZXRQYWdlLm5hbWVcbiAgICB9KiBzY3JlZW4gaXMgdXBkYXRlZCwgUG9pbnQgY2hlY2s6ICR7ZmluZFVubWF0Y2hJblBhZ2UodGFyZ2V0UGFnZSl9YFxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5rbm93bkNoZWNrTWlzc2luZ1BhZ2UoY29udGV4dDogUm91dGVDb250ZXh0LCBmaW5pc2hSb3VuZDogKGV4aXRUYXNrPzogYm9vbGVhbiB8IHVuZGVmaW5lZCkgPT4gdm9pZCkge1xuICBVdGlscy5sb2coYHVua25vd24gY291bnQgJHtjb250ZXh0Lm1hdGNoVGltZXN9LCB0YXNrOiAke2NvbnRleHQudGFzay5uYW1lfSwgZHVyaW5nICR7Y29udGV4dC5tYXRjaER1cmluZ30sIGxhc3QgbWF0Y2hlZDogJHtjb250ZXh0Lmxhc3RNYXRjaGVkUGF0aH1gKTtcblxuICBzd2l0Y2ggKGNvbnRleHQudGFzay5uYW1lKSB7XG4gICAgY2FzZSBUQVNLUy5ib3VudGllczpcbiAgICAgIGlmIChjb250ZXh0Lmxhc3RNYXRjaGVkUGF0aCA9PT0gYC9yZnBhZ2VTZWxlY3RBZHZhbnR1cmVgKSB7XG4gICAgICAgIHF1aWNrUmVwb3J0V3JvbmdQb2ludFRvU2xhY2soY29udGV4dCwgcmZwYWdlSW5Cb3VudGllcyk7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lmxhc3RNYXRjaGVkUGF0aCA9PT0gYC9yZnBhZ2VJbkJvdW50aWVzYCkge1xuICAgICAgICBxdWlja1JlcG9ydFdyb25nUG9pbnRUb1NsYWNrKGNvbnRleHQsIHJmcGFnZUluT25lT2ZUaGVCb3VudGllcyk7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lmxhc3RNYXRjaGVkUGF0aCA9PT0gYC9yZnBhZ2VJbk9uZU9mVGhlQm91bnRpZXNgKSB7XG4gICAgICAgIHF1aWNrUmVwb3J0V3JvbmdQb2ludFRvU2xhY2soY29udGV4dCwgcmZwYWdlUmVhZHlUb0JhdHRsZUJvdW50eSk7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSBUQVNLUy5nbm9tZUxhYjpcbiAgICAgIGlmIChjb250ZXh0Lmxhc3RNYXRjaGVkUGF0aCA9PT0gYC9yZnBhZ2VVbmNvbGxhcHNlZEFmZmFpcnNgKSB7XG4gICAgICAgIHF1aWNrUmVwb3J0V3JvbmdQb2ludFRvU2xhY2soY29udGV4dCwgcmZwYWdlSW5Hbm9tZUxhYik7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlIFRBU0tTLmhhYm9yU2hvcEluU2VhTWFya2V0OlxuICAgICAgaWYgKGNvbnRleHQubGFzdE1hdGNoZWRQYXRoID09PSBgL3JmcGFnZUluU2Vhc2lkZU1hcmtldGApIHtcbiAgICAgICAgcXVpY2tSZXBvcnRXcm9uZ1BvaW50VG9TbGFjayhjb250ZXh0LCByZnBhZ2VNYXJrZXRJdGVtRGV0YWlsKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgVEFTS1MuZ3VpbGRCYXR0bGVEcmFnb246XG4gICAgICBpZiAoY29udGV4dC5sYXN0TWF0Y2hlZFBhdGggPT09IGAvcmZwYWdlQmF0dGxlRHJhZ29uYCkge1xuICAgICAgICBxdWlja1JlcG9ydFdyb25nUG9pbnRUb1NsYWNrKGNvbnRleHQsIHJmcGFnZVJlYWR5VG9GaWdodERyYWdvbik7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgfVxufVxuIiwiaW1wb3J0IHsgSWNvbiB9IGZyb20gJy4vdHlwZXMnO1xuXG4vLyBJbiB0cmFpbiBwYWdlXG5leHBvcnQgY29uc3QgaWNvblNlbmRBbGwgPSBuZXcgSWNvbihcbiAgJ2ljb25TZW5kQWxsJyxcbiAgJ2lWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFFc0FBQUF4Q0FZQUFBQ1M5MVJOQUFBQUEzTkNTVlFJQ0FqYjRVL2dBQUFBQVhOU1IwSUFyczRjNlFBQUFBUm5RVTFCQUFDeGp3djhZUVVBQUFBSmNFaFpjd0FBRHNRQUFBN0VBWlVyRGhzQUFBMG1TVVJCVkdoRDdWc0pkQlJGR3Y2NmU2N2NFQWlIZ0FFQ0JFR1FJM0lvcDFua0VCQUVGbVZYVng2K1JkWUZMeDRLRDFaY0FjM2o4SXA0N2U0VGhlQnl1Z1Jrd3czaEVJTnlKU0ZrQ0Fra2dkeVRhekpuZCs5ZjFUTWtLR3pZWlRKbzlKdXA2YTdxNnVxcXIvLy9yLyt2N2hFMm5MdXF3Z09aa3FUdFhnZVRKS0NaVVVTWVFVS0lUZ1J0WUJTb0xpV0YwdTJBdFFIQmMxWGFGNFQ2R2xTaHNoNHJiRitHZkszM3RlREhDVTdhT3R4QW9WMUJibzFUcTN1RCtyY0s0WjkxeVBLQ2RaY1JaeENCODRjUElEbHhFeXpGaGRyQUNQVU41MVpRUHluL0t6d2svZ0JlZmhoUkR2cHhLMVNQSDlIUXRFVXJEQmc1RnYxSGpPYjVRQnFrVVJJMVlhQjd5TVlzcWlKVTJnb2JNb2tzYjRzaXU4TXEwbzRsWS9QcVZkQlRCYU5PQWxXRmVKdGo4M2FRY2FRMWRac04zZ1RxalJnamVJZklDSE13d2lpalVoOEVUOC9ZeUNYcTNITnpYOEdBUVEvQ1FOMWpaVHBSaEk3dGsrQUlHek1MNjdRdTRyWGZqYU1EQW1xQ3kvRG1KKzNnS0FoRVFadWoybUdEVEF6WHFkNFlvQmloYzBsd3U5M1krblFYWHNSdTQ3YkVSTStOcFk5bnpNSVdjL0cxMGIvMjFHTlFaVGRlZWJzL2Z2L0FzMVFTemNzcjZSTnZiZ2NwaE5GSkZEY21DR1Q4bU0waDZKUUFPQnlCT0RpN0RhcXJnTVFkaVpvNGVwUkEySkpGWkZIOXZ6dzVFV0YzQmVPNWVkM3hSUDhWMnRFNmVENHRBRUYyZ3lmWGVLRFQ2UkJnSXFVeEdFaklhbmlaWXRmaDRKKzdvYkpLeGZZZDIza1pBek5IeURoMW5JeVlndEN4U1RjazZxUFNQZ2l3QjJpSzI4aVNtOFpmWlFOS0s1eW9yS0F5bUtBTE1HRHdoK2xjQmZmdjM2K1JRT0JhOWVYS04yR0FHME9ITnZVVTF5SStveWNxY2lvOHVjWUk1b05vU1hZQWxpS3l5MDQzOUVTTVd5N0ZpdVcxd2lQcXllU1RDNFZKNjRvcHF5SW5KNXQrVlh4M2NUZGUvUzRjUlVWRnNORG5sd01aRnM5d2g2NHQwSFk4RU5OM0phSnBLTFA0NWJ6U3ArWDlzT0JrTTJ5cW1BcEJKTDhrMUVFZUJia09sSDRwVUltd01vdU1DQ0dNTkZYQ3pxOTM4bklwU0M4dHJpaTNJbnBDTVp3dVJvaWlUWm1lZER1UW5lUTlaOGd3SDNEaDNHNFg4azdLc0pVcjBKSEhad3htTjhoVDhmOUVWWkdDdk8vZEtNNVNZTE9vQ0FnVElESG4wRWVRZERVd2IydUozTnc4VEJqL0tNUlNValBXdkZmMGZBV1hUY1h4dFE0Y1dLcEhwNnJwbU54akNXSmJ6NFA3NkJBY2VwOUVQWS9ISzdlRjgzdGNxRDdVRi9kWVorRmNBcG1NOHg0ZndFZXdXclhadjdDZ2dQdnJ6UHczQ0hMcGp1ZnREc2ZSdmFtSWYvOER6SDE1TGhZdmZoM2J0dTVFdDRoWWxHUlJYRWVTVjEyc29PS3FndW9TOG1Bb2ptT2dpUmtPbXJiTExzc29TSGVqNUtLTW1qS3lwSFg0ZFR0VVpPNTNZY29qMDdGazBYSkV0M3dBK1dkOFN4YkR0YkJNK0pHSDZUc1J2bmhNeHRUSG5rTHIxcTJSbkp5TXZuMzdZdmp3NFlpTGkwTkdtaGxsT1RMMnJyUmgrOHM2cEN6cmlDMnpWU1F0cThHRlpCZjJ2MmZEaGxsT0hGalFES254blhCcVJRZHNlY0dKNDU4N1VKcWo0UHNORG15WWJZVXR0eW1hTld2R3I4ZkNsN0pjMzVMRmJCY0Q0OHVnL3hGWnZqUGlUR0xjYnUxaWVyMGVseTlmeHNHREI3Qmc0YXU0WXNuRWhjTnU5QXFkaHZSdjgvRnQ4a25rbkMzRmlFNnpjV2kxQTgwdFEzSHBURFV5VXJQeDdkR1RsRTdqZUZJV3lvNjB4NTdsTmxRYzZvYjE3eDRpOVNqQ3VISGorRFVZV2M0YVgwOUNGRDBTVVV5NkpOSFljR29ZM0Z6QSt2VUpLQzB0eFlBQkE1Q2RuWTJsUzVjaHZHVVF3dHRMYUtwRzQrT1BQaVZiYVNIMVhNeVB4OFV0Ujd2Zys4aEJOa0NrQUphZHUySERCazQwazlEbi92Z2lYSGt0dUNvUEhEZ1FLU2tweU16TTlGeVI0R3V1Q0pvYWFoclhZR1IxR0toSFNVVStldmZ1amM4Kyt3eEdveEh6NTgvSDVvU3ZrWC9LamRFangwS1NKSncrZlJyQndjRW9MQ3prSFJzN2RpeWNUaGR2NDhTSkU1ZzZkU29XTGx6STgxRlJVWmd5ZVNvaUlpS3dlZk5tOU92WEQ4ZU9IZVBIR2c2MXBxbkJ5R3JSUlVSa2Z4MEtTdkl3ZmZwMGRPL2VIWldWbFJneVpBaTZSdDBIazVFQ01zS29VYU13ZCs1YzlPalJBMWxaV2JBN0hId0Z3QXV5cTZpcW9xaldnNUFRaXVZSkZ5NWM0RnQvZ2EyMmlJdzQzeS9FVWF4RkJqelVIWVgzMy80QTA2WTlnWjQ5ZS9KZ2xjRm1zMTJUaUxTME5NVEd4bUxpeElsWXZYbzE0dDU2Q3k2WEpsa01FbHRNOHNCdXQrT2JiNzdoKzNQbXpPR1RSWFMwdGpMQzRmdGhYQU16N3cwbVdaVlhnYTZSZlRCejVpeXNXNWVBVFpzMndXUXljZlhKTkovSDdqMjdzR2JOR2k1eGUvZnV4YjU5KzdCa3lSTG9UQUljRGp0dlE1WmxpRVNXb21nVFJVMU5EWGJ0U3NLS0ZTdTRUWnMzYng2M2h3d3ErUlhNMFcxSUNJTUhEMllMaG5oZ1ZhcFBRNXFNM1U0a0xYV2dSOWNZOU9yVmk5c2xKa1ZKU1VtSTZFd0NUYmVwa0p6SVFROE80bTRGazVyRGh3L2phblVHbk9WNlBETHFVU0kxRTVkS3owQzFCbVBVaURFNG0zb1c1dXcwT0t3cW1vUTFRVXhNRE1MRHcvbHN1M3R2RW5vK2FjWDkwNHllSHZnR1IxKzhqMDhjN0dZMkdGbWwyVEtTUDNJZys1Z2JUcXZDSnlySklLRDFQU0w2LzhIRXc1TGpuOXU1SXltVGc4bm02TUJ3QWRFUDZWQlpvS0xnbkV4MWdPZ1JCaFRSZmpFNXBvWUFvTk1RUFdvb3RMbVU0b2F0Z2pteUtuVFVicXR1T2p6MGtoR3RhZXRMK0lVc2RvSHFVZ1VsRnhTVVhpSkN5QXcxYVN1aVpSY0pZWGRwMnM5aXUyS3pGdnBJTkVibVVqVHZLQkVaQ3V5VldpTmhkMG13VjFDK21nd3NuUlllS2NFUUtLQ2lnRHovZklXM1lRd1IwSVRhYk5aUjVNVDVFclZrN1dsQXN1b0JDMTFZTEZkTVlZOUMrODJJaEpZa2RhSW9jS21xSkJKWVBOYWNDTFJUNk9QTnQrZ2tjZEw5QlVZV1c0TGZ0Mzlmd3huNCtzRFU5RkM4akNqTERIUzF6a1RLeDBia2ZTOXpTVG54RHdsZEsyZENkeklXS2V2dDErVlBiWFY0V3ZBZm1BakpGTWplTWJMU2Ryb1EwMzRjM2w3NUhsYkVyY0p2SC80VFRoSVJMUFlMZG5iQ3N0ZFg0b1ZaODNIeGlIeGQva0t5NzRQbCtzR2VOOUxNN01uNUZXeDFnYTBZVEg1c2lxY0VtRHg1Q2k2ZmtMbkVlVmNmbVAvSDdGZmRmSFdSZjhsaXp5SDVzMGhLZDRTc0VpTEVWVzdDNk5HamtaZVhoeU5IanVEZWUrOUZaS3ZPS000a011cVlUcGs5VWJndTc5bnhFeHcwTXpHeVJJRnNaa042dlRkRGVwSUxJMzh6Qm9HQmdVaE1UTVJYWDMzRnl5ZVJwRjFOcTBkeTZoRG5EOWpkZGxoZDVPS1VsUkpaZnI0NGM4Yk5UQVZKN1JqWVdoZVRMSVlwVTZiQWNzWFBIYm9GdUZVWm1SU1MrRjBOUzdNVk9Dd0dqQmt6aHVjVEVoSnc5S2oyZWdDTEh6dmNIZVh2KzFjdm1QS0pJbE5EUDRPRlFTTmp4eUFvS0FqNStmazRlUEFnVDk1VmhNbVRTT0orZXNMRjRYL0pJbTkrM0xqeGZIL1Jva1VZTm13WVR6Tm16T0JsNDhlUGgrSlpiRmZJVzJXckR0Zmw3OEFiQk40M2M2VEl5TWpGVE03YWpTeml3VzFEZzhXS085WWV4N2x6R2RpOGVST000UzZFUklnd3ArWGlTdjRWdlBQT083aVlsY1dEYnJaU1Vlbk9SMG1CQldkUGEva2FYVDU2VC9KdHNQemZZTjZ1UGFWL2VOSVlpQW9aTDMvaTdoZ2RiSWFyU05qNmR3UzNyOEdFdDRMd2VId1FJdThYc1hiako3aGFZVVpnYXllMjdmb1NaeThjUTVkaE9yVHM0YTdOUDBUUnRaL0IxL3RJdUlTK0EyTlVpU0xVNGUrYS9SSWJzb2NLN0tHb0lxdlFHd1ZFUkVsOGRhR0kvQ3VuVFlYaUVyaXF1WjBVc3BLa04ya2p3bWxWWVMzVDh1RjNpd2dtU2ZRUFZPeDR0Z01uS203ZGFnaDlpQ3hXUEdwMURwWDUyZVA3eVVOSFpMWGxaQzFmRys4eDhDUmxKVEpUeHp2Z29mNkVvWEJPR0FTb0ZIT0pwZ0F5bHNTY29yU253b1pYdzU4ZGlCSlRnQWxCZGl2RS9vUDZzVVZLbUV0S2lNbGZKWXVEYUtpZDlsVDA3Tk1OSmtjNXhPbHpwdk1GdDh6TVhPK3hYOEdZb3ZUSmR4YWlveG9UbnJrSFpjWmNDcVpKckZTRmlpeWhpS09EQ3ZzWHdDK1lNT1ovS3FxQVR5OEtjRjBKSUNHVG9kZmJnRUNYWnVBN2QrdU1MbnUwNTI4Zlo5RVVMZWlva204WC9uOHVVRWxZR0Fmc3RZS08vMjZGRGwxYmsrendmd0pBU0xseWdEc3dzeVkvRDd2TmdkU1o2ZnlrVi9wcW5pdDdQc2VkTW9MM3JaSkdCWnJ4N0VHaGZOZGd0WEx0WXVpOHBnMU1iajFXcm1OaEdQbC9xZ1RoWDZtdk1WSGlJamIvNlM5UUxiaVJNK01TUDRFaHRnblF2bjBvV2hvTWpWSTdDOHVxNE5DcFdKZmg5SlFBSGYvV0NpRlNJRlorOFF4L05aY1VrNnVuc0NQOWRkcVFseXcwaHcwUmVPT3B4VkNEZ1l6SFUzazFEaElzVWVjdnI5bS9VRndhSFY3MDJ0Z1JxQUpXclgyRzUyc0ZoR1JxbC9tdmxKZmdWb3h3cWdGOCtYVEJrL0VrZHBva1dXTExVTjZwREM3VU10K1lFT1lJUm5DZUFlSDd0QmRPbUdDc0lvbTZFWVRkbVc4UVpaNGNRVlVEVWFHMGhZMklTL3h3STlLUG40R08vU3VLUGs0S2gwU2FLWFJFTGp2RkpkaHBLMEVuc0wrbkNTU3NSc3ByamJGbmJUTDdvUzlidTJiMTNCN0NkYVRxT29GbUZ6WVRzN3JleEg1WXdVM0FEbm5UamNCVWhmVlQ2OEV0d0hNOWhieUJIakdSbVBIU3cxcjVUU0RzTXkrcnZUYWQ3RkRDWUpYRE9Ta0dOUVF0bEZZSUpIb2NOTlFxSXFlU1VndlNVMFU5ajBveGw0YlA5Rm1GcE5yaFVzSVJJb1loR0cycE5CQldvWWE4bEdxRXFVNUlSRTZOYW9GRExlZjFUV1FuVEhvOVRjc21Qa2oyc2d3amk4M0Izci9xL1JCTVlSdzB4OXpJZDJaR2dzWk1mYUFLckVHZkEvZ1BsYTNFMkVJdVFyY0FBQUFBU1VWT1JLNUNZSUk9JyxcbiAgMC45XG4pO1xuZXhwb3J0IGNvbnN0IGljb25TZW5kQWxsU21hbGwgPSBuZXcgSWNvbihcbiAgJ2ljb25TZW5kQWxsJyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWNBREFEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDZBNmRLNWpWTHpXZkdQN1FQdzYvWnYwZngvYmVFVDQ4azFacGZFczFuSGNTeHJZMlJ1UmFXc2NyQ0pycWRzS25tWlVLa2gyc1FCWFQxNGQrMng4TWRlK0lGajRRMW0yK0RFdnhEMG53OXJjMTVxM2hLeDhRalNieWRtdHBJNExtMnU4WmpsaGtZU0FBcnU3bmpCL3pxNEJqazh1TU1HczFVSGgrYjMrZDJoYXp0emRMWHRvOUhzOUxuNU5sYXc3eDlQMjl1Uyt0OXZtVlBnNThmZmloNHovYVc4U2ZzNitFdmh2OEFFZldidnc5NFdiVmRmc2ZpUm9XbTZCZitIWGhtWloydTVrZU8zK3krVzF1VWsyN3pKTHNVUGh0dnJQaDdWdmpkNHc4WWVNdmg3b1g3TzJvMk9zZkQyOTB1MDhYanhUNG4wclRMUzFsMUZXYXlFTnc5eXkzUW1WUXlOR0NwRHFDUXhLanhqVmYyMnYyM3ZoaDhjTEw5cG04L1pic29kSDFmNFQyZndvcy9obE40blhVUEZXcFdGazB0NUhxaHVtaGxTNHZFWXlNeXNyTHNCWmpuaXZCL2o3KzF6KzBkOFhmQUh4Wmg4VmVGZFBpMGI0czZqNEc4UVdlcWE5NHhqdW44TFd1aFNURzF0YnFlM2dXTGRlVFF5YlB1N1dMb0FkZ3Irb2EvaC80UTU3aUhqcWR1V1VwSzFLVGpUYmhIM2xHTUZheVN1M0hyMTFzZlp5eXZJY1ZQMnNkbTM4THN0RnJhMzZIM0w4TmZCLzdRUDdUSHhmdC9nZjRQOEY2NThPaG92eEMvNFJ2NGplSi9Fc09ucXVtVFIyOHMwbG5ZckxNeTZoY3NQczBnOHBaRUVNMjhzRDh0YzkreS93REVieEI4Vi9nZG92amZ4VkpGSnFNMGwzYlhrME1RaldXUzN1NXJZeUJSd3U3eXQyQndOMks0dndYL0FNRkNmMnd2SEh4ZHZmai9BT0wvQVBnbnRvZmpTRFNQakxjZUwvQ09rV25qbHJIVlBCdXJQcGNGaExiWE1jcUlzeXZCdGxHN0RBVERIR0NldS9aUStIdmluNFhmQUR3LzRPOGJXOFVPcnhyYzNXcFc4RW05SUpybTZtdVdpRGZ4QkROdHozMjVyOHI4VThqNEE0ZTRjbzRQSlpRbGlJMTN6KzhwVlZIbGxlTXRtb3A4cVNhODFlN2I4WE84TmxlRXdrYWVHYWMrYlhXOHJXZWo4dGowU2lpaXZ3TStYT1MrRy94ajhEL0N6NDYvRW45cDN4aDhkdkJ2Z0UvQ1h3WlllRmZCdXQrTjVXVzBpOFFhOU9sMWR1VlFNN0ZOT3NZRVZsVTgzamorOWp3Lzl1WHdKOFB2aEQ4QXYyNXJINGMrTmRKMUR3ZDQxK0lQd244WS9EeWV4dm8yU2ZTOVYxbTYxRnhFQWZ1SmNYRjBvSFpGWHRYclBqRDlrLzhBWis4Zi9GR0w0eCtOUGhyWTZscjBVS1IvYUx3RjQ1QWlNaU04UlBsdXlxN0tyTXBJQklCRmNUYS84RXpmMkxMUzdhN1Q0Tnd2dlRZOE0yb1hEeE1td29xbU5uS2xVVWtJdU1KL0RpdjZkNE84Wk9GK0crRzhObGp3bFJ1akJhcmtzNXZtYzNySldUYnVudnExYlRYN0xMK0lNRmc4SkNqN04rNnZMZlc1N1Y0cDFLdzFmOXRuOXByVWRLdjRicTJrK05NWGxUMjhvZEhBOEw2QURoaHdlUVI5UWEwSzVYNFBmQlg0Yi9BYndrM2dqNFgrSC83TzA5N3lTNmxqYWQ1WGxtY0tHa2Q1Q1daaUZVWkpQQ2dkcTZxdndmakhPYUhFSEZHTHpHakZ4aFZtNUpPMTB2TzExZjVzK1p4K0lqaThiT3RGV1VuYy85az0nLFxuICAwLjlcbik7XG5cbmV4cG9ydCBjb25zdCBpY29uQ2FuZHkgPSBuZXcgSWNvbihcbiAgJ2ljb25DYW5keScsXG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFJQUFzREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5VFBBZmk4NnA0UjFQd2o0cDhGalc3NjV0SmJ6VkxqVnI5SkZ2TEFSN1hpZFpHeklOZ0lLOGtxRHh4WHloOGV2MjlQaTU4RFBpdHFmd3ArSFAvQlFUd1Y0RDBUU0V0azA3d2o0cDhONnZxbDlwcVBieFNiSkxsdEl1eklDWExvUFBrMm82Sjh1M1lwUlgzK1Q4UDVkbUdkMVZVVFh1MzB0M1M2cG8vbGFPYVpsbG1GcDBLZGFYTEZ6aW1tNFN0RnJlVlBrbEs5MjN6TjNkbTlWYy85az0nLFxuICAwLjk1XG4pO1xuZXhwb3J0IGNvbnN0IGljb25DYW5keUhvdXNlVXBncmFkZUFycm93ID0gbmV3IEljb24oXG4gICdpY29uQ2FuZHknLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBUUFBc0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEN084SWZCcjRjK0g5VDhjNmZxWGpDejFPVFF0Wm4wL3dyUDQ0dG4xZTBrbml0WU1wTFo2ZkphL2FraHZKTGhKdnRFZ0RyYkxDbjd6enBVOWI4Ti84QUJRdjRINlRvbHZwWHh1L1o5OGI2WjRwdFVNT3EyWGhMNE0rSVBFdWxvVkpWRGFhbnArbXlRWFVEUmhHUnNwSXFzRW1odDVsa3Q0L3pnL1lNL2EwK0JQN0p2Z0x4Qit6WCsxNysxeFk2SmQrRGRiczlPOENRK045U1FTUDRkVFJ0TkVIMmRrZ2pEd0xjQzhSUnRZeGxHak1rcklYUGl2N1V2eEYvNExrL3ROL0h2eEY4WnY4QWdsZy94QzhSZkFmVVo0Ylh3UHJmaG0wdFA3UHZHczRJN0sva2dNd0R0R2IrM3ZNTVJodnZENVNLL2wzSmM2OFI4Zng3anNzdzJFbzBzTlNoN3NwcXJDbkswbFpxcHlQbW5KVDFqeXBXaHBaeGJsdzFzNjRucTU3aU1MV2d2M2VpdTVhV2RucnJ2NksrNS8vWicsXG4gIDAuODZcbik7XG5leHBvcnQgY29uc3QgaWNvbkNhbmR5SG91c2VVcGdyYWRlQXJyb3cyID0gbmV3IEljb24oXG4gICdpY29uQ2FuZHknLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBT0FBOERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOUJ2RVA3SVA3UFB3dCtLbGw1K3E2aGFhWHFxaTkxalJiRHhBcTJNRVB5eGk0ZnpJM3VvMU1jUmlpZ3RtRzVvMFZFU09PNG1oMkwvd0IreEQ4U2RBay93Q0UrOExhUDRKbjhKMnBoMFh4QnArckMybmJTNTVvaTJibDhmYU4wKzB6Unpxenh5eXF4NWxqbGsvTGlMOXJ6NGJmc1YrUDlKL2E2K0pOejhRZFk4TStLUERqZUNMblE3TFczdlh0bmh1Skwrd2FLM3U3aFlraGc4dlZGVlVrUUo5dk8xTU0yUHVyL2drRjhXUGdUKzNwNHk4WS93REJRdndiNFM4UVFXUGhPeVQ0Y2VHcmJ4TGM3Yml6a1pvZFUxV1pMU0thUzJRWEF1TkhUelN6U24renl2N3RlSlA1L1daOFFUOFJWbHRQRFU0NEIwbk9VOU9lVGFWay9ldXVXYXNrbGJsYmJ1K1hsOUhNc2JuK1g4VmZVSnlUcHhpbXBKdStxdjhBOERhM3FmL1onLFxuICAwLjg2XG4pO1xuXG5leHBvcnQgY29uc3QgaWNvbkdyZWVuQ2hlY2tlZFdoaXRlQmFja2dyb3VuZCA9IG5ldyBJY29uKFxuICAnaWNvbkdyZWVuQ2hlY2tlZFdoaXRlQmFja2dyb3VuZCcsXG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFWQUJvREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5aGZISDdjbmdYd1RlNmhxbC93Q0RQRk43NE4wSFVaZFA4VS9FZlRyQ0I5RjBXNml6NTBjdVoxdVpsaU9WbW50b0pvTFprbEU4a1gyZTQ4cnNmaS84ZS9CZndSK0hWNzhUUEdseGNQWldubFIyOXJwdHFiaTYxQzVta1dLM3RMYUpmbW1ubWxlT0tPTmVXZDFIZk5mbmQrMlg0QStJWDdPSGo2WHhGYlhNbDk4TmZFdXZYZDVwRjR1OHQ0ZDFuVWIyUzZ1Yk81Nmp5THE4dUpwWUxqZ0xMTTF1K0FiYmQ1cm9YN1JFSGdMNGF4V1dvZU05UmUxOEt4WEk4TVI2blBHbW5lRE5PYUxaTWJJSW9rTXNpdkpibzBoYzIxdXh0YlFSeDNEeG44UHo3eGJ4bkRPYll6TDhmZ0pLY1VuUWNaY3lxM2RsOWxjdDlOdVpxMGx2YS93V1o4ZFlMSk16cTRMSDA1UWFWNmIzOXB0cEhUZHQyKys3UjdsKzBsKzBqOFRMcndWYy9GVzErSVhpalR2aXJlTDVYaERTUENmakcrYlROTzFXWEs2ZG9scnAwRXEyV3NOdndKN2k4Z25NN3lUdW5rMjBVQ1Evb2ZIcnptTlRNRlZ5bzNLcHlBZTRCd00va0srSGYyRGYyWnIvQUU2OHN2MnFQang0Y3VMZnhaUFp1bmd6dzlxaS92UEN0aE11SGQ0K2lhamNJY1RQeTBVV0xkU0I1NW0rcXY4QWhJRC9BTTlqK2RmVStIZUM0dHcrVzFNYnhIaUhQRVlocVhzN0pRb3hTc29SUzZ0YXpmVjk3WGYwMlRyTVo0YjIyTTBsUFhsL2xYYjE3bmtmeEdzOUMrSkhoalYvaHQ0NThQV3VwNkpxbHRMWmFucDkybTZPNWhkZHJLM3BrSHFNRUhrSElCcndINFMvOEUrL2hwOE12aURwZmpyV2ZIbmlUeFpINGV1VnV2RCtsK0pUYVBIYjNTNE1WMU04VUNTWGMwUkdZbmxadGpZa0lhVlVsVW9yNnpGWlpsMk9yVXEySW94bk9tN3diU2JpKzZiMlowWW5MOERpNjFPcldwUmxLbTd4YlNiaSs2YjJQcFRUL0ZXb3lYU1FTaFdEdUFTZW96eFdvZFV1QWNZb29yc2IxTytLVFdwLy85az0nLFxuICAwLjk1XG4pO1xuZXhwb3J0IGNvbnN0IGljb25HcmVlbkNoZWNrZWRHcmVlbkJhY2tncm91bmQgPSBuZXcgSWNvbihcbiAgJ2ljb25HcmVlbkNoZWNrZWRHcmVlbkJhY2tncm91bmQnLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRRUFZQUJnQUFELzRRQTZSWGhwWmdBQVRVMEFLZ0FBQUFnQUExRVFBQUVBQUFBQkFRQUFBRkVSQUFRQUFBQUJBQUFBQUZFU0FBUUFBQUFCQUFBQUFBQUFBQUQvMndCREFBSUJBUUlCQVFJQ0FnSUNBZ0lDQXdVREF3TURBd1lFQkFNRkJ3WUhCd2NHQndjSUNRc0pDQWdLQ0FjSENnMEtDZ3NNREF3TUJ3a09EdzBNRGdzTURBei8yd0JEQVFJQ0FnTURBd1lEQXdZTUNBY0lEQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF6L3dBQVJDQUFYQUJzREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5S3ZIL0FQd1VCczc4WEM2aGNlSUxQdy9EZmYyWmNhemIrRzlSWHcvRGNpYjdPMFVtcGlFMm9JbnpDMjZiYXNxbU50c2cyMWMxengzWitHZEZ2TlMxRzh0N0hUOVBnZTV1cm00bEVjTnZFaWxuZDJKd3Fxb0pKUEFBTmZFdXAvRWZYUGgxWlEvQi93QVJ0SkpvR2k2YzlyNGZnYzc3RFh0SkNoSFlvZmthNVZXeGRJUmxtZnpkdXlUZzhIZU9McVBRN0cxMXJ4RkhyR2krRTdxS1h3M29iUnpUM1YzY0t3YUdUVUpYK1NlRzAyZ3dvU3p5eUdKcGd6VysrZjhBaFhQcytwNHZGeW5pS2xSdU1VK2FvMUwyaTcwMGw3cWIwVVczYmR0TlNTK0JyOGVZSERZcXJoY1czVGNGZFgrMHY3dm0raTYrUjdkcTNpQ2I0a1JhaDRpOGFYM2lidzNZc00rSDlBdHRidk5DYlRiSUx2OEE3UzFCN2FXR1kzVXcrWmJXWmpGQkNFOHlNeXZJcWQ5K3lOKzBINGkrSXY3UCtpNnhlYXJxVXkzVTE2dGxkU0kxcStwV0tYazhkbmVOR0ZSUTF4YkxET1NxSWpHVXNxSXBDajVVOEg2ZmMvdGhlTDV2N1ZacnI0YjZaZHMrclRUbmV2aSsrUjhtMlUvOHRMV0tRWm1mN3NzaW1NYmxTUW42bEhpWlZHQXkvblhsd3piSHBjK0lhcHQyNVlSVnZaeFY5SlA0cFRuZFNsZDZXWCtHUGZsT2FZakV3K3RWdmRqTDRZOVV1amZtejUvK04yazJmeGg4SnZwYzBrMWpkV3N5M2VtNmxDQWJqVEx0TStYUEhudU1rRWRHUm5VL0t4RmVGYWY4S3ZIM2liVUk5SjFhSFNkQnNaQ0UxWFdOTjFCcEh1WVNEdlN6aUtCNFhrKzZXZGo1YXMyemNRcEJSWHlGSE9hMU9QSzFHVnRWZFg1WDNXdHZrN3ErdGo1VE1Nc3dtTnF3cll1bXBTcHU4VytuK2E4bmRIMGo0WDhTMm5oSFJMUFM3Q3pnczlNMCtGTGUzdDRJeEdrRWFqQ3FvSEdBQmpGZGhhdmRYa0N5Um9XamJrSGNCbWlpcndOYWRhVXZhTy9VOXFqVmxMUnMvOWs9JyxcbiAgMC45MlxuKTtcbmV4cG9ydCBjb25zdCBpY29uR3JlZW5DaGVja0dvbGRDb2luSW5WaWxsYWdlID0gbmV3IEljb24oXG4gICdpY29uR3JlZW5DaGVja0dvbGRDb2luSW5WaWxsYWdlJyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWRBQndEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlNUDIrL3dEZ285b0g3QmR2NFQvWmIvWmorRE9tNnI0MTFEUWtiUWRCTnViUFEvQytqUmJyYUM0bVMzVUV3aVNNUlIyME96S3hPTjhaRVNTL0o5bDhZUDIyL2psUEcveCsvd0NDaFBpL3d0SkJOTmQyc1hnUFM3ZlM3VzJaeXUyMFAyV0JwcmxCemg1bllCUWVDeEpmbVBCVUY3OFhQMnR2MmhQaTE0eHV2dHV0eGZGclVOQ2p1bmpWQWxoWWY2TGFSS2lLRkRKQXFvWFB6TUZ5eExGaTNxVTNoUHhMNFc4Qy93RENZYWZyTm5IcDJsNmliclU3RjdKWkpibFZqeVFUd0dBakUyeFhESVdMQWhRekUvZ1BGWEdPYTFzenFVS0ZSd3B4ZGtscGUzZXgrdDVMa1dYWVhCUW5VZ3BUa2syMnI3OXI3ZHZNMnZnSC93QUZNUDJyZjJmL0FCUWI3OXFqeFVQaVI4TVpKei9hM2lLMzhQUlcrdStGb1dDaExwNDdORWp2N1NJS1RQdGlGd0JLMHE3bGlNVGZVZnhzL3dDQ2VIL0JPSDl0dnhWYWZ0QmZHRDluandwNDMxUFZkSHRoYWVLWWJtVEdvV1lYZEJJSkxhVlVuVW80MnlIY1Ntd0JpcXFCOGxlS2JYd1BIcG1vK0tMbTQwL1Q5Qy9zNXJuVUx1UzhXTzBndGpIdWxrODBzQWtJUUZ0eE9GWHVjYnEzUDJEditDaUh3Yi9acy9aSDhGL0JUOW8zVS9pYnAvaUxRYlc2dDdhUFdmaEI0bGxsazBzWHR4L1p6cTBXbnNwait4Zlp3b0IrVlZDNEdNVjlSd0h4WmlzYkdwUXg4N3FOclRrN2Y5dXR2ZDlWMXRmc2ZNY1g1ZGwyQ1VLOUcwSEoyY2RGZnpTL0I5TlVlQ2ZIbVh4Si93QUU5UDJ1L0YzaS93QVhhZGQzM3dyK0xQaU9UV2JEV3hLa28wM1Y1d1pidTNuMnhLVVpuM21JTVN2a291R1poY05IUjhiZkg3NForUGZpRU5LOFc2bDRvbThNZUtmRFVGaDRDMVhRUEdPbzZWcGNldUxOZS9ia2E0MHk0aEYxZStVTFg3TWtyeXdIeUxvSXJPeFdUMno5aS84QWFVZy80S0wvQUxIK2wvRno0d2ZDalFZMTF5ZVd5MXZ3OUpGOXQwK2VhMWtWVEtzZHdHMnh0SWdrV056SVk4S043a2JqbCtKUCtDV2Y3Q1BpV1M5dVovZ1d0cFBleVBKNTJuZUlOUWdFRWpOdUR4UnJQNWNlMXVWVUx0WEFBR0JpcHo3dy9xNDdGMWErQnJleW5OUFd5YmkydDFkTmY4QzZUVDk0OHJNYzhxNWp3NVBMM09WS3J5MmpValo2cmE2YlduZjcwZklud1grRTYvRENMV2ZHL3dDMXY4Y0o5WjhJK0hkZnViM1NmRFZ4cmJqUk5WdzBWM0hxVi9ZQmZMQWltWXN0b0F5M0YwdTRyNWNLeDNuMTM0Si9aSS9hWC9hMDBNZkhYNG8vdElmRVQ0UnlhMUswbWkrRGRLZUFYVWVuazdvcm5VVmxWekhmVEZubGVJTWZLUjRvbi9lUnlWUitELzdBTng0SytKV2xlT3ZpbDhXNFBHTmw0YW5hNjBQVFpQRFgyVjVMeFcvY1hkNUliaVZMaVdFSGNubHh3cUpkc3UzY2liUGt2OXNqL2dzWiszZG9uN1Vuano0WGZzK2ZFZlN2QW5ocndENHF2dkMwTmcvaFBUdFltMUdheG5lR1cvbG52YmQyVnBuQkt3eGhVaWpFYWZ2SER6UytMdzk0ZDNxU3pQaXhVNjFSTGtoVDVVNlVGMW1vMmFjNmpWM0syaTBWbG92ejdKY3Y0bXpxcjlZejZhcVZyS0tpbjdxakhUbTF0ZVV0MzIrOC85az0nLFxuICAwLjk1XG4pO1xuXG4vLyBJbiB0cm9waWNhbCBpc2xhbmRcbmV4cG9ydCBjb25zdCBpY29uUmVkRXhjbGFtYXRpb24gPSBuZXcgSWNvbihcbiAgJ2ljb25SZWRFeGNsYW1hdGlvbicsXG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFiQUJjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5eVBqNThZSWZnajhEUEdueG5UUUp0WFBoRHducU90RFM0SkFqM3B0YldTZnlWWThLWDh2YUNlaE5mbHI0eC80S2JYLy9BQWdla2ZFVHdIOFgvaWYvQU1MbU51THJYTloxTFdndmhKSi9LM0d6aTBOWGUza3NHZjhBZGhqRkhlcEZoL3RMekF1ZjB1K0l5MkhqcjRlNjk0STFBZWJiNnpvMTFZenhrL2ZTV0pvMkhUdUdOZnpoNmZydW8ybndVdHRjWVRDTWVFRXVWdUYvaEgyWU51TEx3cEJ5RDZFRUhrVjhQeGhtT1o0S05GWVNmTHp0cHUzK0ZxMTAvUDd6OSs4Q09DdUYrTXA1bTg0ZzVmVjZhbkcwdVZmYlRUczllajdhYTMyUDZWL2dCOGFOUCtQSHdIOEUvSEcwMFNmVEl2R2ZoSFRkZGkwMjRrRHlXaTNkckhjQ0ptR0F6S0pOcElBQklvcmp2MmZiZGZoNThCUEJIZ0IwYUU2SDRRMDNUekN5bFNoaHRZNDlwR09NYmNZN1VWOW9wT3l1ZnovSis4N1BUNUdUUDQ2dFlaR2krMEZpdkJ3YS9CM3gzOFIvZ3ZxbWpUL0VYV1BnSDRmMDM0bVByRTJ2YTVyTnpyRXkvWi9Fb2trbk5qL1loZjdHRmh2ZjNmMldTM2VhNFNITEZwSkRLZjJZTi9lSTVSYmhzRHBYRzNYd0YrQk45OFNWK00xNzhFZkIwM2pCWlVsWHhYTDRYdEcxSVNJb1JYRjBZL04zQlFGQjNaQUFIUVY4OW0yVzE4emhUVUtyaHl1K25VK3k0TjR2eTNoYXJpcFlyQnJFZTFwdUVieWNPVnY3WHUvRXU4WHBzOUdqM0R3eDhSN2pWZENzYjNYYk02ZmV6V1VjbDVaK2FKQmJ5bEFYajNENzIxaVJudmlpdUJhL3ZHUmdaejAvclJYcnJuNm55RUxWRmRma2ovL1onLFxuICAwLjkzNVxuKTtcbmV4cG9ydCBjb25zdCBpY29uSXNsYW5kSGFtbWVyID0gbmV3IEljb24oXG4gICdpY29uSXNsYW5kSGFtbWVyJyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVdBQmtEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlINC9pN29QN092eFY4Uy9EdjluUHdMWStQUEgyblhFZW4vRUw0c2ZGN3hwSllpZTlhQ0s5VFM0WnJTeHVwVzh1TzZqbk5uYlcxdFlXNXVoczJ5U1NKVzdvL3dDMGQvd1UrOFJuVVBIMmcvczgvQlc4MEhRWjN0WlBDMWg4UmRRazFIeEs4YVA1czFoZnoyTUZ2YkR6UExpU0s1aUc5a2xMU3hKc2RzWC9BSUtHZnNBL0NmNHorQlBIUHg3K0RuZ05kTytORDZDSnROMTdSOWZ1TkxiV0pyVlEwZHRlQkpVdDdrU1JvYmNOY280VlhBSlZWNDhXL1pRL2JrOFBTZUNkTTEvd3Y0Z2VYdy9OYnhyWlg0akp0NUk5Z2FPS2VFY3dUZVhzTzM3MkNEd3BCUEJCeWxWY0trK1h0YTJxK2EzWFZhL2lkNmpRamg0eW93VFMwZDA5SFpkbmF6NmFMNzFjK3U5RC9hdy9ZdC9hdDhMK0lmaEg4WjdiU3RLdnRJaWltOGJmQy80djZiYjJkN3BpckxHMFUwOXJkRm9wb1JLWVdqdW9XbGdMbU1wS1d4VWYvREVQN0pIL0FFVkw0b2YrSk4rTXYvbHpYbWQxb1h3QS9iWThYYVBybng0K0VIaEh4Sm9mZzFicE5HUGlIUjdmVWJhNHZyaU9JU3VobVFoSWtqQUJYNWtlUmdXdzlzaHJXLzRZQy80SmwvOEFScG53YS84QUNOMDMvd0NOMXU0NHJaSlMrOWZvem5uVHdGVFdTYStTZjNPNklmMitQMnF0WC9aci9aOHVQRXZodlJvcnpYUEVHcHdlSDlBKzNSQ1MwdDd1NkRxczl3bVFaSW8xVjNNWTVrS3FtVURsMS9PRDRPK0lmaW44WFBIbmc3OWpQNGV4YUV1cC93RENOcHAvZzc0amE4cFRVTkYwclRZMUt4WE1VRVpqMVJJazJlVGFTZVhBU3FpWGZ0RGtvcjRQaVRDVWN5elREVWNSZHhoS000MmxLTFVrM3FuRnAzdHB2cW0wOUd6N2poMmxUcFpEaUs4VXViVlgzMFNXbG5wYlhZNjc0VC90bCtLdkJ2N0xuakw0dCtHTGVlTzQ4RFQzK2tlSk5MODFVaHU5V3M3YUpycDdkaUgyeE03ank1bVVTWUdXajQybjBML2gyVi93VWY4QStqOXZCdjhBNGF1ei93RGlLS0srbGRTcldqRG1rL2hXemE2dnMxMlBEcTA2V0dxVFZPSytKclZKNkpMYTZkdDNzZi9aJyxcbiAgMC45MzVcbik7XG5leHBvcnQgY29uc3QgaWNvblJlZFN3b3JkID0gbmV3IEljb24oXG4gICdpY29uUmVkU3dvcmQnLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBYUFCTURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOUovMmtmK0Nubmdid2lxZUU5QVhVdEpGN1pTM0Urc1BwVnhjUGFXY2NrTVUxektiZEpFc3JkWHVJRU4xTzZvcG1VWlZpQ1BrWFN2SG53QitPWHhSOFNhbDhhZFN1N3Z3cnBVZHBhZkR6eEpvL2l2VU5QMHVHNUVQMmkrdXZ0bW0zY0RTemt2REVESnVnaCt5aFZsTXM4MEs3UDdOZWgvSHp4YiswYjhTUGlYOEc5UXNyelF0TThQYU5wT3YyWGlPT1NLSzgxUVBOY1c5aFkzVVNmdVRIYnpTWE01Y1RBTmRXcTdGODN6SXB2RlBoUDRHL0h5SzYwcjRmeHkrQ1BGY3NzdDVjMkZ4WitVdDFKdURTeUczUi9JdWxaNVEwdHhic1g4eDA4eVFsZkxQOHVlTFBGM0dHQXdUdmhxdEhDenR5NHVuYVVZTy92UmxGUms2V3FTVXBKcVd0dkwrZ012andybCtjVitINmNsRndhNWxHVDlvN0xSeWJmdkpQZFIrSGEycEZxWDdNdjdSZHRmelIvRFA5dWJYdEUwRXlGdE0wbldQQ2xqck54YVJ0ODNsbTl1ZjMxd29KTzFwU3poTm9aM0lMa3I1QzEzNFIvczFmRFhWSlBBLzdSbjdNV29hbjQzMDlVVHhIcXVuK01yWTI5OU9WRGZhWVErb3dNa1Vpc3NpSVlZeWl1RjJMdHhSWHp1Q3lyam1yZzZjNlhGc0hGeGkwL3E5R1YwMHJQbWM3eTA2dlY3cytpVkNuYlN2RkxzNmswMTZybDBaK2luL0JMWHdwQjhTdjJCUEZXbStBNUxkOWMxMzR6ZUpMZnhQcVV6QjNzbU4xSEQ1bU01TExwMFZxcUtDT1BMNUFyeUgvQUlLSGZIWDRiNm5lUS9zTi9CMVlMcTI4TTZ2YjNIakR4bHBPb2hXMEtXMW5Fc1ZqWlhFRDc0OVNlYU5UY09DRERFMHFOKzltR3o1QStNL3hhK0t2d3QvNEozZUxyRDRZL0V6eEI0Y2cxYjlvZTR0ZFVoMEhXcDdOTHlDWHc1cGZteFNpSjFFaVBrN2xiSWJQSU5YZkJ1bDZab1BoZXgwblE5T2dzcldLMVR5cmEwaFdPTk1qSndxZ0FaSkorcHIraWMwejZ0aHVHNk9EaEJXcVFzMjlkR3JOV3QxUG5PQmZDZkorS3ZGN01zZGo2cmxIQzFaTlF0OFRVbWxkMzJUMWF0cnMzWTZSZmhWOEVkVEw2bDhRTkRUeGZyTnhLOGwvNGk4VnhSM2QvZU16RWd5eTdWenRCQ0tBQUZSRlVBQlJSV1daSk1uNXorZEZmQlU2M3NvS0VFa2xva3RFa3RrbDBSL1g4T0Q4aWhGUmpSalpmM1Yva2YvWicsXG4gIDAuODhcbik7XG5leHBvcnQgY29uc3QgaWNvbldoaXRlU3dvcmQgPSBuZXcgSWNvbihcbiAgJ2ljb25XaGl0ZVN3b3JkJyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWRBQmNEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl0L2kvKzBKOEcvZ0Y0Ymc4Vy9HRDRoYWI0YzB5NnYwc29ML1ZyZ1JSTk15TyszSjZBUnh5eU14d3FSeFNTTVZSR1lmS243Wi83VDNoZngvOGV2RDN3WC80WEI0ZzBUd1BhZUNJdkZFL2lMd0I0M20wc2F0ZDMwbHpiMktUYWhZc0h0N1dLSzF1cDhGaEhjdkxCOHc4akVsWDlySy8rS1BpRDl0YndFZmc1cTl2clY3NGErSGV2NmxyUGhuVUVOdkJwZHZNWTRZTDJPK1JpMXZlWFZ5cVdjYXRGS0d0MTFBcVl3c29rOFUxajRXL0EzNHF5NnZwUGduUTduNGNlTTdpNnVaTmQwRDdGREFaNTR2TFdhNG50STM4bTgyK2ZFR3ViZDhscEZSNXNnb1B3UHhoNC80aTRaeStyUXcrRXEwNk0xRkxHUVVad3B5dW0xT05wT04xb25LS1R2WmRiZmQ4RzVUa21Oek9sSEYxbHpOTit6WHhXMVNrazdYUzNkcnZ0MFo5RWZzcC90SWZHTDRXZkh2dzErekw4U3ZpRHJQeEI4TytNN0c5L3dDRVgxN1doYnlhdG9selpXNnpQRmN5d3BHYnV5a2lWdHR6SWpUUno3STVaWnZ0TVpqSzg4LzRKWmVEZmh0OEhmRm1yK0R2aUhIcWNmeGtPbVhrekM3dkpiblRGOE9tL0hsLzJPMytxaXQ5eHRSY0p0aW5lNFR6Skl3alFNU3Z1dkRHdm1kWGdqQ1ZNd3hzY1pVa3IrMWphemkzN3FiVGFjb3JTVDdwbmk4VlF3ZEhQS3RQRFUzQ01kTE5XdmI3U1hSUGRIYi9BTE5NMTU0bytPdjdWUGlYVG9uMW54SFk2MTRaMGJTdEtsdXdFaHRJTkRTNnRRTnpLRVEzV29YenNjak9XSEpCenhQN1YzZ2JRTkQ4T1dIN0hQaGJVcmZVZmlqNHVZWDl0cnBzL1B1UERscThxL2EvRWtoRHh2YitVRmFPMkpZZWRkTERIaDBTZGtxK05QZ0I4WFBEbjdRbmpQeG44SVAyb2RaOENhZjR1MHV5MG54cmFlR2ZEOWtiN1U1ZFBlN1MzdVk3eTZTYjdLM2wzSlE3STkrSTBJY0VESFFmQ2Y0UitBL2d0WTNzSGdmUzUvdG1yWFgyclh0YzFTL2x2ZFMxZTVPY3ozZDNPenpYRW5Kd1hZN1FjS0ZHQlgycXFUbGdKNFNVRTR5Y3VhK3FhazNwYnpUdHJ0NW55dUp3R0ZxNXZUekJ6ZDRSaHlwWFZwUlNXcjdYVjdLOTlybzZ6OW1UNEc2WDhDTlI4UStJdGMrS3VxK00vRVd2elJRUDRqMSswdG9McUxTN2ZlYlN4MjIwY2NSV05wcmlRdXFLMGtrN3NSamFxbFd0R04xcXVwUjJIMm55L00zZlB0empDazlPUFNpdVBBNEhCNVhoSVlYQ1U0MDZjRmFNWXBLS1haSmFKSGZYeEZmR1ZuV3JTY3BQZHZjLy85az0nLFxuICAwLjg4XG4pO1xuXG5leHBvcnQgY29uc3QgaWNvbkJvdW50aWVzR3JlZW5FbnRlciA9IG5ldyBJY29uKFxuICAnaWNvbkJvdW50aWVzR3JlZW5FbnRlcicsXG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFpQUZZREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QxNzRsZkUvdzk4THRCaDF6WElyeTdrdkw2R3gwYlNkTHMydWIzVmI2WGlHenRvbDVsbWtiaFZIMUpBQllkSGZmc1QvdDF5YUpwSHhFL2FIK0krbmZCelRiMjlQbCtEZkNla1d1dmF0SkVBb2VLNXZyaHZzMFVnSVpsTVVVaTdYR1M1R0J5WDdGdXJueGQrMUI0dy9hb2ltczd5VDRmYXJKNEw4RDJsM0VaUDdPbmlTS1hWTDB4U295ck5LMHNkdWs4YnFUQWt5T2gzSzFmVC94TitML2pyNHQ2bXVwK010Vjh6eXdCRmJ3cnNpVEdjWVVjWjVQSjU1UHFhL2xUUE9JOHV5dkRWOExUY2xpbHk4clNpNHE2dkpQblQyVHRvcjgyelZ0ZlE0eDQ2eEZIRlZNRmdwdURocGRXMWZYWG9sNWZlZVMvOE0xZURNNS80YWkrTXZUSC9IcDRZLzhBbFZTRDltbndVT243VUh4azU5YlR3eC84cXE2N1VOUnN0S2dGemZ6aU5EOTBucWZvT3ByaFBFWHhHOE42SDhHZE8rUFBqNzlvVzc4STZYcm11NnRwZWs2VnB2d1gxSHhIS0dzSkFranl6V2QwQkVEdVVndWlyN25CcjViaDk4WDhUWW1lSHdGWk9VSTh6dTRSc3IyNnJ1ZkM0WGlMaXZHVGNLV0xuZEsveFdMVS93Q3puNEN0Vk10MSsxUjhZWTF6eTBsdDRYQS9YUzZ5TDM0VWZER0FsYmI5cUg0MHp0dEJCRmo0WVZUN0VuU3MvcFZMU2JyNDBlSVBoRGEvSGJYZmdUNDRrOE5Qbzhlb1huaVZORXphUlFsTnp5aEJJWlJFdVdKSVFoUUNTY0FtclBpVHdWOFgvaDE4Sy9ESHg5K0lQaFcvZzhMZUt4Y0tnVFJpSDB0L09SYlFTdXN6bVQ3U2pNeVlqWEJVQTVMQ3VLclE4VnF0S3RLbGg2a0kwbzh6YmdydU43WGhlUHZkL2R2cHJzWXk0ZzQ0Y1pPTmFxbEZYMWIvQUE3L0FJbE0vQ3Z3dnZaNC93QnAzNHZLRHdBZFA4TkVnZHVmN01GSi93QUtxOE04RC9ocC93Q0wzSC9VTzhOZi9LMnBmRlVuakw0ZnlhWkQ4UnZoSDR1OE92cm9IL0NQcnJHaU5FZFVZbFFJNGVUbVQ1MS9kdHRmREFsY1ZkMXJSZmlENE4xdTI4Ty9FejRVK0lmQ2w1ZTJjbDFZUWE5YnhSbTRoUjFSMlVSeVBqRE9vSWJCNXI1YkZWUEUvQjBhdGJFS3ZDRk8zTzNDeWpmYTdjTkxuRFBpTGphbkZ5bmlheVMzdTNvWkY3OEp0RGF6bFhUL0FOcVQ0c3h6bU5oQkpOcFBocDBWeU9DeWpUbExBSEJJRERQVElyaVcwYjlyZjRTMnlhdForSUxENDFhT29hVFViUFRkRlRSL0Uxb011N05EYkJ6YjM2SkZFY1JSTUpua21BQXd1VDZWU283eE9KSW5Lc09qS2NFVnc1ZDRnY1VZQ3JlZFpWWTMxak9NV24vMjhsR2Evd0MzWkxYZSt4V0I0OTRyd05kVlByTXBydFAzay92MSs1bVY0RzhmK0UvaUw0VXNmSFBnclhJTlUwdlVyY1MybDdiWklkY2tFWUlES1ZJS3NyQU1yS1ZZQWpBSzhmOEFpUDhBRUx3TCt5eCswUGZlSy9HZmpIVHREOEpmRXZUWnRUdXJSYlFrMi9pQzFlM2hubGpnZ2kyeHgzTUUwVWp1ZHpQUERNU1ZHME1WL1JHVlZKWjFsdEhIWVduSndxUnV0M1o3U2pkS3pjWkp4dnBlMTdLNS9TV1I1L2djNnlxbGpPZFE1MXFtOW10R3Z2TzEvd0NDZjN4QnNycSsrSnZ3aTFLMGV4MWZSL2lick4zRmEzSzdKTG0wdVovT2ptVldPNWgrOEh6QlF1MTRqenZ5ZmJmRVBqaUcwemFhTXl5eVlJYWJPVlE5c2YzaituVHJYeGYrMDU0WitKSHdFK0taL2ErK0RFVThzRDJLMjNqN1RiWU03U1FSS0ZTNUtaL2VSQ01La3FncnRWRWtBeXJ5SjN2d24vYmYrRG54SjBLMjFQVXRRYlNaYmtxSXhLR2xoazNFZ0VTS3Z5NDQzZVlxYlRrZEFUWDVYNGc1Vm05UEdTeCtFcHVkS3JhN1YyNHl0ckZyNU5yeTEwUDVwOFFhV0s0YjRqclF4dnUwNnNuS25VZWtaS1d2THpiS2FkMVp1N1ZtdXFYdFY3ZlhtbzNCdXI2NGFWenh1WTlCNkQwSHRYTmFoOGVqNGMvWnAvNFpudHZpRjhlUEJPczJIaUh4QmV5WEh3MDhNMnR6cDJ2d1g3bG9JTGlhV1VNcUx5RGdLUnZicndhaVQ0eS9DUjBEajRtYUNNak9HMVdJSDhpMUwvd3VQNFMvOUZOMEQvd2J3LzhBeFZmSzhGY1daOXdSajYyS3d0RG5kU1BJMUpTMnVuZE9MVHZwM1BtOHU0Z29aYlZsT0ZTRDVsYldTL1JtZDRTK1BXcStIZFc4TGVKTDc0WmZFRjRQQy83UGQxOE83K3dTempQMnJVN2xid2laWS90R3lTQUdTM0RTbkREQndNQTFpVCtKL3dDeXZoSDhKdmh0UDRHOGRYM2pmNFMrTFo5UTAyd2UwamswRFdMS1c2anVOelhSbHpES2l4K1dvWlBsTHRnRWMxMW4vQzQvaEwvMFUzUVAvQnZEL3dERlVmOEFDNC9oTC8wVTNRUC9BQWJ3L3dEeFZmY1B4cjQzbEp0NGFGck5XNVoyVGZKWi9GMGNMcGJQbWR6MHY5ZEpOL0hENy9Uejh2eExQN1FYN1RWdDhhZkV1a3pmQ0w0VGExb2VpMmZ4SHQvRzNpblFaUGhUYmFYY201aElCQnZoZnluVUxsbGVRYjFSRmNLdVNLZGJmOEkzNC84QWlwNHkvYUpzL0MrcVdGOTQxOFVhbmZSRFhsSzNzVmpKZVNQYnhPbTl4RmlQeS9rVTRHQlZUL2hjZndsLzZLYm9IL2czaC84QWlxUCtGeC9DWC9vcHVnZitEZUgvQU9LcndlTC9BQks0dDR5eStXRHhOQlU0U2xHVDVGTlg1VTFaM2J2RnVYTlo5VXV4eTQvaXFPWVVuVG5VZ2sybnBMdDg5dGJuU1VWeTkxOGJQaERaMjczTXZ4TDBRcWd5UkZxVWJzZm9xa2svUUN2Sy9qWCszMzhNL2gxb1QzZmhDS1RXTGhrQ3d5UEU4VWZtc0dDb0VZQ1NSOGhUdEFVRUVuZU1ISDU3Z01pemZNOFJHamg2TW5KdXkwZjVuaFBNY0Y3U05LRTFLY25hTVkrOUtUZXlVVmR2N2p5Zi9ncUxvUGlYNDFlUGZDUHduK0YzaHU1MTNXdEUwNisxRy90Tk9LeVBCREs5c21XVUhLSEtvZWVva1FpaXZVZjJPUGhYNDEwMysyZjJoZmpYcHJXM2pIeGUrRXRMaFZFdW5hZHU4eElXQVVHT1NSeVpKRUo0MnhMdGpLTW9LL3JMaHJGVitFOGlvWlZGUms2YTFkM2JtazNLVnJhV1RiVit1NS9WUEJuQjlmQjhOMElZNXVOVjNrNHByM2VhVGtvOWRVbWs3YVhXaDdQREpJQkV3a2JKNm5Qdlg1eS84RklnUEFuN1VGeXZnZ2YyTUx6UnJhN3ZCcFgraitmY084cGVWL0x4dWRpU1N4NUpQSm9vcm95djRhditIOVVkWGliL0FNa3JVOVYrYVBCZitFKzhkbFFUNDExY2t0eWY3U2wvK0twdzhlK09zai9pdE5XNmY5QkdYMy8ycUtLSHVmeXl4cWVQdkhSeG54cnEzL2d5bDkvOXFsUGo3eDF6L3dBVnBxMy9BSU1aZmIvYW9vb0lCZkgzanJhMy9GYWF0MS82Q012L0FNVlNqeDc0NjJLZitFMDFidjhBOHhHWC93Q0tvb29XNVMySFczanp4eTF3aXQ0ejFZZ3lxQ0RxTXY4QThWWDF2L3dTZjByVFBFL2pUeDM0dThTYWRCcUdyYWFOTy9zN1ZMNkZaYmkxM2k3amZ5NUhCWk55QUtkcEdWQUI0b29ycXcvOERFZjllMythUDBUd3QvNUt1UDhBaGY1eFB0MjRaaEdHREhKVk1uUHNhS0tLK2RsdWYxUXRqLy9aJyxcbiAgMC45N1xuKTtcblxuZXhwb3J0IGNvbnN0IGljb25Ub3dlck9mU3dlZXRDaG9hc0Rvd25BcnJvdyA9IG5ldyBJY29uKFxuICAnaWNvblRvd2VyT2ZTd2VldENob2FzRG93bkFycm93JyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWVBQjREQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDg1dkFQaVh4SCswSjhSL0Mzd2I4S2FSWnllS1BHZmliUzlCMHFXNnhBbHpmM2M4ZG5iZWRNQ3dTTVBNb1oxakIyamNWZGxGZm9uOFF2K0RYenc5NGpWZFExMy9nb3ViU0cwTGJMai9oU0tydFFubzdOcitEMjdEblBUSkZmbnQvd1Q2dFBCVmovQU1GRlBnZllXSGpxMmE5MHo0OStDSFMyaXU0Mml2RWsxK3hLK1VzamVjcFZTU3k1a0M3VDgzSXIraER4ZmZhMTR2MUNTNzFDU1R5TitiZTFEbnk0OFp3Y0FZTGNuTGRUbnJnQUR6cU9WL1Zxa28xMWVhZGo2dk5jM3I4OFk0ZVZvMjFWbHZmOUQ4c3ovd0FHMS9oaXoxdVBUUGhWL3dBRkQ3elZ2RU14OHJSSXJyNFBuVDdHZThZbElvWjd0Tllta2doWjlvZWFPQ2NvakZsamxJMkg4MDROWHRydXh0OVd2YnBZVGR3cEtQdEVvQjVVSEdTZVRYOVBQd3U4TlFSL0ZIdzNjK1NBeWEvWnNSdEpCeE9oOUsvbTArRTZmQVMwOEhhWkxlM3ZoZTcxR2JTNEd2ZjdiMXkzWjBiWXVWQ0V0c3dUakdBUjBQSXFjVGhJNk9Dc3lzcHpXdmVhcXl2dGJiL2dIM1ovd1RLLzRLNytNZjJJZEZmOW1YOW8vd0FVWHRqOEpFdWIyNzhDK0tkQ3QzaWo4T1QzTjFOZHkyTjdEYkFNMEUxeFBMNWR4OHhqa2RFZkVMNXRmMVE4T2VJdkN1dStIckx4UDRmMVd3MUxUOVJzNHJ2VHRRMCs3am50N3Uza1VQSE5GSWhaWkVaU0dWbEpEQWdna0d2NTdXdUlMclRaYlc4dFVtaGxWa2xpbFVNcnFRUVZJUEJCR2VLOUIvWkwvYnYvQUdnUCtDZjFwcjJ2ZURkUmJ4VDhMTkVzSUgxRDRZNjNxc2lSMnN0MVBJcVQ2YmNGSlRac0xodDhrVzB4U0NhWWxkL2x1bjJ1YzVYSENKNGlrL2RiMVQzViszbCtLOHp4c1poVkYrMGoxUDNKOGIrTy9BWHc5OEkzbmozNGplTE5BOE9hRnA0UTMrcytJZFNpdExXMkR1c2FHU2FZcWlCblpWRzRqSllEcWEvR3IvZ3JIL3dVaThYL0FQQlQyNGY0RGVCN2w3YjRRK0Z2RWtlcCtIL0ZHcngzWnY4QXhEZlJRejI1dTBna2xWWWJRcGNTR0lQR0ppcFZtS0dSNEl1RitNdjdXUHg3L2IvK04zZzIvd0Qyak5Ucy93RGhBNzNWUnIvZy93Q0dlbkhmcDJtd2JQTFFYVHRHajM5d0VSc3ZMbFZNMDRqV09PWXhEeTVyMUpkVHZKa2dBamU3bGFORHp0QmM0Rlk1TGdLR1B4RnNRcnh0ZXkwdnJiVnJYN2pMQjA0eXFybTlULy9aJyxcbiAgMC45NVxuKTtcblxuZXhwb3J0IGNvbnN0IGljb25HcmVlbkNoZWNrZWRXaXRoR2lmdEJveCA9IG5ldyBJY29uKFxuICAnaWNvbkdyZWVuQ2hlY2tlZFdpdGhHaWZ0Qm94JyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWNBQm9EQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlpckNMOWx6OWduNERhZDRWMGEwMDN3VjRKOFAyMGtOaFpXZHROTXgyUXkzRXprSUpKcm1ZcEZQUExLMitXUXJMTEl6SGMxZkpueFQvQU9Ddlh4WjhFZkd2VTd6d1g4SHRPOFQvQUF2aTE2WFNkSDFDS05yU1M4a2pTM0RYSDlwZmFaYlo0SDN5M0VSamhacElYZzNDTGN6MTZuKzFyNDJuMTc0bzJuZ0h4RGFYdXFlSHRQMG16MWFIUTlJMXk0MHVRMzV1cGpGZHozRnZpV1FSbTJVd3hLVVJKQThyK2E0Z052OEFBSHhoK0dIZzc0YmZIZlUvRmZ3cjhOblJMMlh3OURwK2thTHE1dU5VdEk0OERZQUJkVzBhZ0tCQ3JQRkpLaUwvQUsxbGJ5eCtGY2ErSTA2V2N2S2N0cnVsVW95dk4renZmVGIzbWs0cm1UMDFiUzBhdWZ0bmhud2RrdVA1Nm1jMGZhVTZrWXVQdk5KSlRVcGZEZWFrMGtycEwzWEpKcHRNL1diOWx2OEFhRDhQZnRSL0FQdzc4ZGRDMG1YVEl0Y3Q1UmNhZGN5Rm10Ym1DZVMzdUl0eFZDNnJORElxc1VRc29CS0lTVkhPK0pQK0NmdjdBWGpIeEZmK0x2RjM3RS93ZzFYVnRWdlpielZOVTFINGNhWFBjWGx4SzVlU2FXUjRDMGtqdXpNek1TV0pKSkpOZm54OEUxK0x2L0JPelJmSFh4VTBmNGc2bnI3VHhIWHBOR21SN2JTcmlXT0tSOVNNOXY1anh2UGRiSVdXNGpXT1MzTnZFb01rSmxobCs1LytIa3YvQUFUKzdmdHhmQ0ErL3dEd3N2U3YvajlmZGNFY2I1WnhkbDhwVVozcVV1V05UUnBjemplNnVsbzNmcHA2V1B6M2kvSWY3RXpPYzZVZVdoVW5VZEpOcHRRVXZkVDFlcWk0NnZWbmtYN1ZXa1dlcWZ0SmVGenBGNWUybXA2OTRHMU1hbk5hWDhnOCtEVHJ5eSt6THN5VVhZMnEzUjNLQXplYmhpd1ZRdnluOGZmQ3VnWGY3UUd0ZkRqeGY4YWZGM2h2V24rSGxwcVBnRTZiYjJMcGUzclhOOUhjeXp5WHR2TVpvN1VRMmJtMmc4dVJsdVhZeUlNTXYyUCswQjhFYnJ4bDhYYmJ4YjRkK0wvaWZ3cHFmaHUxMUxTYlc4ME8zMHljM0ZwZFMya2tzY3FhaFpYS0g1N0czSVpGVmhoaGtnNHI1MS9iQy9ZYWc4ZC9EZld2aWw0Ny9hYitJbXJhdDRTMEc0MVBScEh0UEQxc0lwN1NLV2FMbTEwbUpnTnhaVzJzQ3lPeWs0T0svTnVMT0JNNXgvRitJelBDVHBSVTRLSzVvOHpVdVZMbTVaUWxDVzNYMTNQU1dQemVYQms2R1g0bVZDc29TNVp4N3FUYWk3Tk5SYTBiVjdkbXRINWhhZUl2aVA4QUZudzlwZHQrMEJxRW5oenczb3hjK1BiS0xXOTFuNHV1SVFIYTJqa2tJTU9pdEdVbXVua0llUlpQc1FQeTNrc1BvVmovQU1GTlBqbnFOakRxSGdQOW1MOW8vV05EbmlXVFJkWDhOZUNMb2FiZldqRE1NOW9Ga1FmWjNRcTBlRlViR1g1UjByeEw5bVB3dm9IN1NQeEgrRmZoYjRzYVpGcUdpZUkvQmx4NHAxelF5TTJ0N2MycjJwaHQ1VWJKa3RSSk1KR2lZbmVZWTFjc2hkSC9BRXh0YisrRnRIaTdjRHl4Z0RISEZlRndKNGNZYmlySzVZekgxcFU2Zk00d3BVWnpweFRpMnB6azAwNU9UMGpkdmxpa3I5dnhES000ei9qM0RmMmxtbFpwcjNJeGc3TDNQZGxKNmZha20wbG9sM2JiZi8vWicsXG4gIDAuOTRcbik7XG5leHBvcnQgY29uc3QgaWNvblN1bmJlZEdyZWVuQ2hlY2sgPSBuZXcgSWNvbihcbiAgJ2ljb25TdW5iZWRHcmVlbkNoZWNrJyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVBBQklEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDJYOWpmeGwrelQvd1Q1L1p1c3ZnNzhXZkVQaEQ0Z2ZDenhNSXRhOFkrSXRHOEYzbHphMldzdkRhbUozam11Ym82bmFaZ2d0a25odGJabzN0YmVWb1pCUE5jUThCNFUrQi93SytEK3Y4QWlMeEw0ci9aNmorSVB4QitJL2lXK3R2aHo4SmZFZWgydHdQRGRqTGN5WEZsb052YnlHVzNzbXQ3WllqZDNMa1IyU1FTeHhtTlJPMTNwYUQreHorMDc4QVBEZmgveGI0Qk9xK0kzMXh6cWZpVHczWVNXTmpmZUZkWm1kcmgzc2pKZWlCcll1d1NTSmJsakhPcG1oWmttZEkrKytGMnZlRGYrQ2N2d3gxajl0Lzl0L1ZwYlRYdFZRYWJwK2dhVmJtL2ZSb0pGa3VJTkd0NUkxMlMzazV0eTg5MDdSd05KRWlCMWlpalovd210bEhpRnhCbVA5alk2WHNjTENiazYxRnVFcWxKL0RTaTd1VVh1cHlUdlpiN09YdzlHdnhabU9aeXdtTHBLRUl2bjlxbnE0dmFFVnJhVzZrNzJTMnZkTSs0L3dCbnZRdkh2dzErQVhnZjRkZkVMeGgvYW12NkI0UDB6VGRjMU9PNWVkYnU4Z3RZNHBwaExLb2trRHlLemIzQVpzNUlCSm9yOFF0ZC93Q0M0ZjhBd1UvOFhhM2VlTFBCSDdVUGdudzFvdXFYVWwzcEhoeVg0ZjZmZHRwVnJJeGVLME04bWtNOHhpUmxqOHhtWm4yN2lTU1RSWDdkSERWNHBKSDJ5NUVyWFAvWicsXG4gIDAuOTg1XG4pO1xuXG4vLyBOdW1iZXJzIGluIHdpc2hpbmcgdHJlZTpcbnZhciBiNjROMF8xX3RyZWUgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTUFBZ0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEMmUwbnRMRFR0VDBlMjhQYWVialEvMlRyUDRwNmQ4UUJZc05UMUR4S1ZzN2tTdGVaK2VHNmxubXMvczNUYkh0VWNHaXZmTGY4QVoyOEUyMEVHZ2pXL0VEK0c3UzdTNXRmQjBtc3lIU29aRW04OUFJUCtlYXpIekZoTEdKWCtZSURSWERPdEIyME8yRk9hNm4vLzJRPT0nO1xudmFyIGI2NE4xXzFfdHJlZSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFZREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RzdjJ4Yks2OEkvc2xhVnFmaGlDeThQZUxkQStMbW9lRjlYOFdlSEJORmRhN0REcGRuY0dhNWFXUjJaM2xuWnlOMjBFQUtBQmlpdnFueGQreTU4Si9IZC9keitMTFRVTDJ5dmRUazFLWFJwZFJmN0V0OUpGRkM5MHNYUlpXamdqVXQ2TDdtaXVCMVU3SFlxVXU1LzlrPSc7XG52YXIgYjY0TjJfMV90cmVlID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDFINHRlRzd2U1AyV2ZHOXQ0VjAvU0pkYzFTVFR0RStDUGkzUi9EbzByVXRWMUNBeW5XcmxwaEl4dUxZMndDbWFRN1pKNUNzWUFLa2xmUkY3K3pSNGUxYnd0WmZEclhmaVA0enYvQUFucHNNTU9uZUVydlhpMWhiUXhNanhSSW9RT3FLMGFFRGYvQUFqT2FLNHBWVm9ka2FiMXVmL1onO1xudmFyIGI2NE4zXzFfdHJlZSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFnREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QyajRid2VHSlBnOTQ3MUxUTmQ4TDMvaVB3UjRpOE5XT2xYR25lRnBMRFZ0RlNUWEk3R1RWTHUrVmZMdmx1b3NNMGFzMmZOYk8zT0FWN3pvdjdPL2hiU0xleDBTNThYZUp0UjBMUzVyYVhUUERPb2F5ejZmYnRia0czekdvVXlpSXFwUVNzNFFxQ0FDQWFLOCtyVVVtanVwd2NVei8vMlE9PSc7XG52YXIgYjY0TjRfMV90cmVlID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWtEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDZuK0dud1A4QUYveEsvWmk4VWVKTmM4RTYxNHUxSC9oU0hpU3orRXQ1RVEwZGxkYVphckJIcUxqSS93QlB2Ync3cmNmd1EydWNxWkdCdS84QURmdjdNUDhBMFVsZi9BU1QvQ3V3MTM5bTM0UzZ0ZDNPb2FSNGNYdy9jYWhZWGRockZ4NFkyNmZKcWRuY2dDNHRybG9RRE5GSnRHVmJQc1JrMWY4QStGQmZBci9vaS9oUC93QUoyMi8rSXJ6cHpweWl0RHZoR2NXM2MvL1onO1xudmFyIGI2NE41XzFfdHJlZSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R2dkhkdm92aS85bnkwdVBoaFBvSjFQd0I4THZEVVB4ZTAxUENJdGRkL3R4N2dXMTFleDZqY1FsSjFrdURFaktqaklFakFzR0lvcjZZLzRaWCtIbDFvRW5nWFhkYzhSYXA0VmR3Ly9DSVgrc3VkT3lITG9HalVLMG9SeVdSWkdjSzJDQUNBUVZ4eXJRN002NDBwOXovLzJRPT0nO1xudmFyIGI2NE42XzFfdHJlZSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q2TTByUnRVMGp3LzhBRDM0aGZEdnhCWmVJL0hyL0FBdHNmaVA0djBYVUVuZ3VMMngxZGtzN1MzaXYyQmdTMnRWbFJmSUFEU09wbEpMY1VWNmRlZnN4ZUF0UjhPdDRBMUR4RDRtbDhJK1dJNC9CaDhRekxwa1VheWVha1N4cVE0aVNUNTBpMytXakFGVkdCZ3JobE9nM3Fqc2pDc3RtZi8vWic7XG52YXIgYjY0TjdfMV90cmVlID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQVlEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDZCdC9pWDhBdjJPZmgxNHArSVh4MytCMmdmRW5Sckx4dlllRFBDU3dlRXJhSFVaNTROT2t1ZFJ1WkhpWE02SXoya0xTSC9scnZ6Z21pdmJyWDRGZkQ2RHhBMnYzVnBkM29XVy9sdE5PMUMrZWUwczVMMmFPZTdlQ0Z5VmlhV1dLTjJ4MUs5c21pdUw2elpKV092MkYzZTUvLzJRPT0nO1xudmFyIGI2NE44XzFfdHJlZSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q2SzBqd2g4SjlWK0cxcGRYT2hwcm5pT1g5bnZ3eDRzdXZCZWphWTlyNGxmVTczVWJlTzYxaisyemhXamxTY2d3YnZ1TndvNUFLOVJ2UDJaZkJXb2FDZkE5NzRzOFdTZUZ2czZXOGZoTC9BSVNXZGJDS0ZIRWtjS2hTSkJFamdNa1cvd0F0Q3E3VkdCZ3JsOXZUMDBPbjJGVHVmLy9aJztcbnZhciBiNjROOV8xX3RyZWUgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTUFBY0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEM1h3NW9md1h2L3dCbUhWUGk1NHkxclN0SjhPZUcvaHI0WnR2RWVySllYTnY0dXRQRzl4ZHcvYlhhNlpRMDBVc0RTWVdObVh5WFZncXJ5U3ZiZGEvWm8rRWZpUFVKN3J4Qm9semVXaytvTmY4QTlqM0dvek5ZeFhqUXh3TmNwQnUyTElZb2tUY0J3dTRERzVzbGNmMWlIWTYvWVQ3bi85az0nO1xudmFyIGI2NE5kXzFfdHJlZSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFZREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QxZTQrRUh4RS9hZytESGdQVHRSOFNTNkQ4UVBHK2xQNDk4UWVJWUZJbjA3UmlJdE8waXhROW9ydFlMdTlLOGZPdEZmVVh3OCtFL2huNGJmYUpOSHZOU3ZKcmkwdExScnJWdFFlNWxTMXRZdkt0cmRXZmxZNDBKQ3IyM0U4a2swVjUwNnJ2N3V4M3hwcTN2Ym4vMlE9PSc7XG52YXIgYjY0TmRfMl90cmVlID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RGYwZjhBNEppL0dEVlBnaDhPZjJjdjJYUGh6NFBmeHo0VzhKcDRxK01uaUh4bG9NTjFlVDZoNGdsa3ViVFQ1WkNBZk90TGUxMnVtZG84OUNvQWZrcjlWUDJKZkFOcDRhK0dtcCtQNy9YdFExbnhGNDQxMlRXUEZHdTZzWWpjWDF5SVlyWk1pR09ORlJJYmVLTlVWUUFFOVNTU3ZnOFZudUpwWWlVS0tTaXRFbXUyaDZhbysxOStvN3llcmZxZi85az0nO1xudmFyIGI2NE5kXzNfdHJlZSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QwUFhmaXo4R1AyY1BnOTROdi9DbndPOGFlSzlEOFR2ZnkrQXZEZmdieEpxR21SNko0VnRIaXN0UHZKb3JlWk44bXB6UVgrb3ROSnVra2U0a1oyWnNtaXZ2RC9nbkQ4RmZDMmorRGRhOFY2MWQzR3U2Z3NlbitHTFdmVjdhMXhhYVZwRVVrRmxheFJ3UXh4eG9vbG1ZNFg1bmxZK2dCWHhkZk9xV0VxdWpDaW1vMlYzdTlGdWVncUVxcTU1U2QyZi9aJztcblxudmFyIGI2NF8wID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUtBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RHp1RC9nbS84QXNKYS9aeDJmeGUrRmx2OEFEclE3Q0cwVHdQNHZoOFMzbHUzanV6a3NMV2ViVUhhNW5lT1lyUEs2N29GUkJ2Mll5dEZma2hEL0FLZk5MYlgzNzZPMmJaYlJ5L01zU25raFFmdWpQT0JSWDVyRGczUEpSdXMycXg4bGUzcnJOdlhkNjJ1OUVsWkxyZUlwL3dEUHRILy8yUT09JztcbnZhciBiNjRfMF8xID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUlBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RHhQNE8vREwvZ2xwZmVDdE1sOFgyL3dZYnc0ZEpoYlFOWTEzeHlsdHJWOWRHV2I3WUw2SVhhelJzbUxjSXNrYURhMlV6bGpSUlJYNE5Yd21KbmlLbisxMWxhVWxwVWEyazFmMWRydnpiMlBVaktLaXZkWDNILzJRPT0nO1xudmFyIGI2NF8xID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUtBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDQ4OEkvQVQ5bVh4Vit5VDRBOFhlSy93Qm5ML2hIUEZVT3Y2OW9maWFTSFZyNXA3K2V6TmtmTm5TZVQ5eklETzZtSkZWVndSak9hSytGanFtcDZuTTExcU9vejNFc3FyTkxKUE16czhqakx1U1R5ekhrbnFlOUZmRVF5SEd0eWtzWk5LVGs3WGs3YzBtN2F6YnNyMlhram85ckgrVkgvOWs9JztcbnZhciBiNjRfMiA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFLQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1Ti9hRS9aMytGWHc0K0NYd284VGZIWDlnaldmQ0hpbnhWb2x6cUgyVDRYMldzU1dkeHBoK3ovWTVibVc5dUowZTdZR1YzRVVueXJKSHZWQ1FLSytBSXRlMXpVWkhnMURXYnVlTzJPeTNTYTVaaEV2UHlxQ2ZsSEE0SHBSWHhPQ3lYRlU4T2xQRlRidko2U21sckp0Skp6azdKYUs3ZXgwU3FSYitIK3Z1UC8vWic7XG52YXIgYjY0XzMgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBS0FBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEaXYrQ1gzN0JmN0xIN1JQN0x1bStOZjJqL0FOanJUNDd0WGFQU3RUL3NEeFBwVGFwRHVZRzVhOGx2VGI2bGtnRGRhcEdrV05wR1dHQ3Z5RmsxWFU3cTdtMDY1MUdlUzN0WHhhd1BNeFNFTnkyeFNjTGs4bkhXaXZ5TEhjRFozanNiVXIwODJxMDR5azJvcm50SFhaZnZWK1Izd3hOS01VblRUL3IwUC8vWic7XG52YXIgYjY0XzQgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBS0FBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEd254WC9BTUVydmdSb2Y3T0h3enZ2aCtQQjNpclhMcVBVUCtFdjhXd2ZGUFNtdHRSdXR0cElzY0FTKzJwSENKV2kya0NUY0daZ0F5VVYrWVR1OGN6V3lPVmpUQldNSENnbnFRUGZBL0tpdnorbHc5bjFOTlBNSEozazd1RXVzbS8rZnR0TDJTVmtrckpKYUhVNnRKL1kvcjdqLzlrPSc7XG52YXIgYjY0XzRfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFLQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R3N3hkL3dTNStDR2pmczUvRFRVZmg4L2c3eFJybDJtb2Y4SmY0c3QvaW5wVFcyb1hXMjBrV08zQ1gyMUk0UkswVzBnU2Jnek1BR1NpdnpQbFZWdTVMWlZBalFLeXhnZktDZXBBOThEOHFLK0FwY081OVRUVHpCeWQ1TzdoTHJKdi9BSisyMHZaSkpKTFJKTFE2ZmEwbjlqK3Z1UC9aJztcbnZhciBiNjRfNSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFLQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1bi9hRy9ZMDBMeE40RytIL0FNUmYyZlAyZC9ocjRXOE82ejRkaU1jSHhGOEwrSmREMWE4blMxdEROY3UxeGUrWGV3dkpJelJ6d0lrWkRIZzhHaXZ6anQvR1BpNkI1Rmg4VmFrZ1ErVWdXK2tHMk5mdW9PZUZHVGdkQmswVitlVU1zelRDVWxTV0xjclgxY1czWnU2dStmVzIxK3AxdWNKTy9ML1gzSC8vMlE9PSc7XG52YXIgYjY0XzYgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBS0FBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENXMvYWQvd0NDTldoV3ZoL3dEZjhBd0srSVhoN1FyRzQ4SjJ4MWJWZkdNVjladHI5ODhFRnhMZVcwOHJQQmRXLytrTEdwdDBSVTh2REYyT1FWK2I2U1NhcE5KWjZrNXVJYk52THRJcHp2V0JEeVZRSGhSbm5Bb3I0ekE1UnhKUXd5aC9hUE5hK3JwSnZkN3ZtT2lWU2kzZmsvRS8vWic7XG52YXIgYjY0XzZfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFLQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1dy9hYS93Q0NPT2hXWGgvd0RmOEF3TStJWGgvUTdHNDhLV3phcnF2akZMNnpiWHI1NEliaVc4dHBwV2VDNnQvOUlXTlRib2lwNWVHTHNjZ3I4NXJRblZKcHJUVXlibUt6Znk3U0tmNTFnUThsVUI0VVo1d0tLK0t3V1Q4U1VjTW9mMmp6V3ZxNlNiM2U3NWpvbFVvdDM1UHhQLy9aJztcbnZhciBiNjRfNyA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFLQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1MS9ZcVgvZ25yby83TEhoLzRnZnQ0L3N1ZkR5Q2JXTlN2TEh3bnFXbnlhdGEzbXF3MmF3aWU1dXQrb09rakdTZFZEUkpFdnlOOHZvVitkVWFxOTFMRTZncXUwcXBIQUo2bjhjQ2l2enZFY0RmWE1UT3ZMSFY0ODBtN1JxU2pGSytpUzVuc3Z2ZXRsc2RheFBLa3VWZmNmL1onO1xudmFyIGI2NF83XzEgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBS0FBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENGgrUGV2ZnM3ZkRyNEZmQ0hXdkZYN0V2Z09MeGo0cThQWG1yYXZhZUZyN1Y3S05OUE02dzJNc3lUMzA3R1dUeWJseVF5cVFSaFJSWHg5YWdQNWlzTWhKU3FnOWgxd1BRY244NksrWHdtUTBhTkhsblZuSjNrNzg5UmJ5YlN0ejdKT3k4a2JTcXR2UmZndjhqLzJRPT0nO1xudmFyIGI2NF84ID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUtBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RG5QSC8vQUFUWS9ZT3R2QnZoYTZsL1oxdWJQenRNZ2FPNFRVZFEwWTNRZXhzcG1jM2Q3ZU5EcXg4eWFVL2FMUlVpWGRzMjVBb3I4ZXJSbTFXV2F6MVFtNWhzMzh1eml1UG5XQkR5VlFIaFJubkFvcjh5dy9CdWRxa2wvYXRSNy96OS9LcWpzZUpwMytCZjE4ai8yUT09JztcbnZhciBiNjRfOF8xID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUlBQVlEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RHdmL2dudDhQUCtDWnZpTDlsSFE5VS9hUjByNGJ0cnphcnFDYXhQNGc4VzZmYVhBa1dSUHM2eU5MZVIzY1JNVzhyRXNKdDJBTG1YZUFwS0tLL0FNMncrS25tMklheFZhSzU1YUtwSkxmdC9XaDZsT1VWVGo3cTI3SC8yUT09JztcbnZhciBiNjRfOSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFLQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R4RDRqZkJIL2dqcHAvd1QrRzN4SDhZdFkrRzdQeFRwTXN1aGpUNU5ic3RUdklZWTdhT2VYVVZ2SkNzc3YyczNJV1czVllHVUVMbmJ3VitaQ2Y2K1p1L21sYyt3NXg5TWsvbWFLK0V3L0NHS3AwK1Y1bGlIcS90OUcyMHV1eTB2MTMwMk9sNGlMK3dqLy8yUT09JztcblxuLy8gVGhlIG1hdGVyaWFsIHJlcXVpcmVtZW50IG51bWJlcnMgaW4gcHJvZHVjdGlvblxudmFyIGI2NE4wXzAgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEbkg4Vi9zNi9BZWE4K0ovOEF3V0R2ZkIvaVA0Ri9FblVQN1YvWW0wdTc4SEhWSXRKOEpMYTJ6T2xyYlFXSmZTNFBzazJpd20ybEVaTTlyY3krV1drZWVjb29vQS8vMlE9PSc7XG52YXIgYjY0TjBfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1ZytIWC9CU3YvZ21MOE5OVThWYXArMHdMajlvUHdaNGw4VHphcDhJdmhwZC9ET0s0ZjRSNlpMRkV6NlVHMVpvNFlVdzF2WnJiMkVrMXFpYU9ycXlpWlZvb29vQS8vOWs9JztcbnZhciBiNjROMF8yID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUhBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RGsvd0Rnb2JjL3NsL3M4V2l5L3dEQmFUOW1IeHA0eThMK0kvako0MHVmMlQ5TThCNnhiMjBHaGZEcUszME9IVFlJb0xQVUxaTEt5TUMyNGdzbVZaSW5qdVhlS041MmFVb29vQS8vMlE9PSc7XG52YXIgYjY0TjBfMyA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFnREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QwL3dBVC90WmZHanhmOFpkSjAzd1I0M3ZyQ1h4SGZheW5oWFM0clMzT25SUjJMM1VjQzNtOEdXUTNMV1U1TElSNVlLanJ6UlhsZjdSR3JSL0RMOW92WHZDL2hiU0xWSlBET3Z6UStHdFdrRG02MHROWk82NkVSREJEdGE1bk1SZEg4dnpXSEk0b3I1M2x4TTVQMmJXbmYrdTFqOVJqRGhxaGhLVXNaUWszS0thNUhiVGxpbnphNnZuNW5mczE2TC8vMlE9PSc7XG52YXIgYjY0TjFfMCA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q4Z3ZqSjhYUEZQajMvQUlKcGZBajRlZUpmRVJ1NFBBM3hOK0lPbjZCWm0yUlBzTmhjVy9ocTk4c01xZ3licnE0dkpNc1dZYjhaQ2hBQ2lpZ0QvOWs9JztcbnZhciBiNjROMV8xID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUhBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDh6LzI2L3dCcGlEOW9YL2dsUit4eDRkMUx4dTJzYTk4TzdqeDM0WTFpRnRQTUg5bnd3emFNOWpiQWlORWxDMlQyeDNvV3puNTJMNzZLS0tBUC85az0nO1xudmFyIGI2NE4yXzAgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEODMvOEFncWY0YitQSGc3OWtYOWxlMStNM3hSOFVmRU9QeFY0TzFIeHRaK092RmZpYVMrbGpuMVczMHBwTkNnaW5MVHdXOWpCYjJUN21ZeHl6YWhjTkdGQVlVVVVVQWYvWic7XG52YXIgYjY0TjJfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1by80SmQvOEFCVlA0Zi84QUJQTDltYlRiUnYyM1BEdnhDOFQrTElJanJmZ240aTZqNHdnMDd3RmEyaW1PeXNkUDhqUTd5T1NSMGxrTnc4YnBFQkZiUm9IRVJrY29vb0EvLzlrPSc7XG52YXIgYjY0TjJfMiA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RvUDJFZjJZLytDaTNnajlnMzRSYTk4V2YrQ1pIaHY5dXV4OFllQ3RPMS93QUZXUHhKOFdlRkxUUnZoZm9VdW4yY0ZocG1salZvcExvM0Z4YVc5dk5lS2lSMnltTzEyR1dkcnVRbEZGQUgvOWs9JztcbnZhciBiNjROM18wID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUhBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDZJLzROOWZCSDdUZmc3OWhYUU5SL2JuMC9YYmF4MXJ3OW90NzhMNS9pYmY2VjRyME81MEEyQ0N6YlE3VFQyUzYwTUN6Rml0emJYYlNDVjFpbmoyU1NYS0tVVVVBZi85az0nO1xudmFyIGI2NE4zXzEgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEaFArQ0Ivd0R3VjcvWWYvWWcvWnQxUHdCKzJaKzJsQmJheGRycHAwYVRUYkR4WjRpa2hzNDRIQzJNOXBmV0QyV255V29kWUErbnQ1YzZLaXVEOW1qbGxLS0tBUC9aJztcbnZhciBiNjRONF8wID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUhBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDVoL2JROE4vOEVndmozK3c1K3o3OEtQaEYvd0FGQ0lQQUhnMzRaYXo0dDAzVEx2VlBoUHIycFh1czNsekhvbHplVFhMSkVtMlhleVNIYVBLeGNoSXdxeGJRVVVVQWYvL1onO1xudmFyIGI2NE40XzEgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEemIvZ2lmL3dXQi80SnVmc0tlRFBFbndSMWo5clA0cmFWNEVUdy9vTjFvK24vQUJQOExOY0ZQRWp2cVg5dVBwc1dqcGRpMXNKQU5Oa1NHYVF1SkhtNWM3NUhLS0tCSldSLy85az0nO1xudmFyIGI2NE41XzAgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENGQrQ2Z4Yi80SmxmdHkvczkrQXZESC9CVm45cVc5K0htcC9Ddnd4YitHdkFWajhNbDErYVdmVElsRVJPbzIwK2wzMWxGYy91STVCUFpTTDV5emhaVVV3SUtLS0tBUC8vWic7XG52YXIgYjY0TjVfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R5cjRWZVBQZ2xyUDdPL3dBSy9paC93VXcvYm0vYUYvWkgweSsrRm5odlFQaFhaZkM3NHNhbHJPbitOTEhTZEl0TFNYVmY3T3NiQ2RkR0pqTmt4aWFVR1Y1cEdNYXNqeVRGRkZBSC85az0nO1xudmFyIGI2NE42XzAgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENGovYnArTHYvQUFSQStOZmlEUWRaSGkzNGlYRmxvT20yM2g3d2haZkNOTDk1TlA4QUQ5bHBXbXhXME9vcDRsMlJSei9hL3dDMG1IOW5reHVIYVNiTXJtU1Fvb29BLzlrPSc7XG52YXIgYjY0TjZfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q0Sy80TDIvQ240TzZUclB3MCtQWHdWMGpXdEk4SitMTGE2MGY0V2FQY2VMSk5UMHR2QU9sNlZvUTBHL3NvN2kxaHV0UGU1KzJYNzNOcmN0TEtMbEpaU3plZDVrcFJSUUIvLzlrPSc7XG52YXIgYjY0TjdfMCA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1Si9aNC93Q0M0ZjdZSC9CTEQvZ25mOEdmQm53TitNMWo0MThTL0VHNDE3eEJxK2xmRUN4MUcvajhMNkJhM0VHaWFQcDFtN1hLSXNmbWFWcWt2bHgvS2l5eExzWEdYS0tLQVAvWic7XG52YXIgYjY0TjdfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q1dS9ZTy93Q0MxSDdXZi9CSkQvZ256OE9mRmZqRFhkZStMR25mRmZWdFlUd1o0WjEveDNNbHI0UDBiUlRhMkVVZHQ1bHRLMFFtbmU2VXdMSjVNY2RwQXlJalN5YmlpaWdELzlrPSc7XG52YXIgYjY0TjdfMiA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q4NS84QWdzNysxRjQ0K0ovaEw5bi9BUFpyOFdmR2Z4SDQrSGdiNGZYWGkwK0l2SFdzWGVwK0lGLzRTeTcvQUxZMCswdnIyNHd0eEpGb0I4UEJ4Q3ZsUjNEM1NJN3FGQ2xGRkFILzJRPT0nO1xudmFyIGI2NE43XzMgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBT0FBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEN0IvWmUvWmQvWmwxcnhyOFRHL2FNK0dOcDRZMTdTZkZVT2pYbmkzUmYyaS9HRXllSzdpM3M0V21tZDVab0gzUUdaSVNtR0NFRlZPMENpdXUrSjMvQkhQeGI4YW1Ud3o0Ni9hUmJUL0R1aTZ6cXVvK0dvL0RlbHl3M2swMnBYVFhOM05mdkpNNnpTa2lGQTBZUmNSazdSbkFLOFNseEhnNmRLTVpUZDBsc21sc2paNGFiYnNqLzJRPT0nO1xudmFyIGI2NE44XzAgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEUi93Q0NSdjhBd1d2L0FPQ1ZQN0xGbGM2bjhjUDJnTkEwTzR2ZmdiOExmRFhueDZGNHUxUFVKci9STkVudDlRZ25oTmc5bFpRdzNFNVNKYkxLek1aN2lTUjNtd2hSUlFCLy85az0nO1xudmFyIGI2NE45XzAgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENWIrTGYvQld6OWxQUy93QmxyNE4rSS9pbit4WDRmK0ovaVh4WFphbnExeDREOFQzRVIwVDRmV2R1YlhSSUxiUVVtc1pWdGJHNWJScDUvc2lzVEF3d3p5Ymc1S0tLQVAvWic7XG52YXIgYjY0TjlfMSA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RIL3dDQ2JYL0JjbjlrZi9nbnQreDk0SytObjdVWHc0K00rdFMvRWZ3M3BmaFRRUEJXbVh1bTZ2b1dqUStFdFB0dExsMVBUb0xpZTMrd0RVWlpqTlBIOHp2YzI4enQ4bmxTU2xGRkFILy8yUT09JztcbnZhciBiNjROU18wID1cbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUhBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDhmdjJ4THJ3TjhQdmd6OEZQMlp2aC9xVnRmblJ2QlE4YStNcjliSzRobGJ4QjRqaHRicDRDWlhaR2poMHUyMFdGVEVGUXZITTUrYVJncFJSUUIvL1onO1xudmFyIGI2NE5TXzEgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOGkvOEFncVY0azBLRDlxeTQvWjM4QzZrTHJ3dDhDOUFzdmhuNGVtWFFZTk5XNWZTVmFQVTc0UXhGaUJlNncrcWFqbVYzbC8wOGgyeU5xbEZGQUgvLzJRPT0nO1xudmFyIGI2NE5TXzIgPVxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSEFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENVMvYWkrSy83RVA3VWQzNFIrRi8vQUFVbS9hTDhSZUdOZjBud1pwdnhHMUR4QjRkMEM0OHpYL0VQalcxaTF5N1F5ZVRxTWtsdFlhUC9BTUl4cGNIbW1KbFd3a1ZRMFlRSVVVVTAwdWhtNE51L00xOTMrUi8vMlE9PSc7XG52YXIgYjY0TlNfMyA9XG4gICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q4cGZqWDhkZjJhL2pEOEdQaEo4QlBISHh3OFp5UWZEdndaSGNYL2lYUi9oM0ZxTnhxZXVYNlJDNXRaSHZOVnRYOGpUckN5MFhTb0d3d1pkT2s4c0xBc0dTaWluZGRpSEJ0NlNhKzcvSS8vOWs9JztcblxuZXhwb3J0IGNvbnN0IGljb25zQXVyb3JhSXRlbXMgPSBbXG4gIG5ldyBJY29uKFxuICAgICdjb2x1bW4nLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFrQUNnREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5R29QRDNpUzYwTzc4VDZmNGN1N2pTOU4yL3dCcFg4S0FwYkEvZEpHZHpEMTJCdGcrWnRxODE1SG9IeDQ4ZS9IUkk3ajlrTDRWVy9pM1JYdWJ1M2srSW5palhmN0U4TUNTM0Z5c2l3WFhrelhGOGZOdC9MV1MzdDN0bUxFZmFReWxhOUIrRlh3MzAzOXBiNHFlTE5JOGI2Y3R6OE12QVVGcFkrTU5PTGxWOFZhM01zTjlGbzF5cEdYc1lJSHNydWVNWlM1YTd0NG1ab283eTNsc2ZGclhMdjRvK0g5VDFIU05lOFo2ZGQrRXZHUThNMlBoZjRieVhkbGR4M0NUMjBxWE14a3RsdDJpTm9ZMmppbVQ3Q0k1bTN5dXNzVWtQdGNPOE5ZWE1uR2RibXM3WHZzbS9oMjF0MWJiU1N0ZTdQZW5XcE9tNVdzbzNWMDkzcDNUU3QxK1N0ZE52eVRSL0hYN1hYd3c4U1F3Zkhmd0RvZmkvUU5UMDlEYWVJdmhucDV0STdDL2lrWkx1RjR0UXZqTGUyNDNSaU81aFJTenh6S1lzZ1k5UjhFK012RG54RjhHYVI4UWZCMm8vYTlJMTNTN2ZVZEt1ekM4Zm5XMDhheVJQc2NCbHlqS2NNQVJuQkFQRmZPL3gyL2JGOFdlRmZqSHFzdHg0aDhVYVI0WStISlMwaEhoQ0NlNHNKcmV5dnJtZStlK3M0b0hsQkZ0RzBFc3dLUnBOYTNVa2hJZUpHOXYvWlkrRnZqdndiK3hqOE9MM3hMcDlqWnZvL2hmU05EMWZUWmRWaCsyV2w1RnA4UWRHakJPY01yS1ZCMzhid2hqK2V2UzR5NFN3K1Y0V2hpTVBIbGxOTnVQTXZoU1RUcyt0bXIyYnU3NkhoWlBtT0l4dGVyVG10STJTZXQyN3U2L3JwdWRaUlJSWDVtZStjeit6SjRubjhKL3QzZkZQdzFwUi8wVFUvZzlvK3RYV2lMZG1LSFVOUldYV29QdExvQ0ZhWXhXMW5CNXBCWUxGQ3Vma1VENW11ZkZmN1ZmeHcrS2w4ZmlkOFhmRVBoSzVzZEEwalU3NVBEdWwzUGgrYU96dlpydFBMa3QzVnBicUcybHRibFU4NEdRb3hZQldka2I2WitJdndXK0R2eGZOa2ZpeDhLZkRmaVk2YVpEcHplSU5EZ3ZEYUdUYnZNUmxSakdXMkpuYmpPeGM5QlhKZU1QMlR2RFVHa1gzakQ5bXJ3RjRkOEwrT05LczN1N0xYTFhRVldHYUpNbDdYVVRBb2trMCtUY0ZrQlA3c21PYU1wTkRDNmZxbkIvRytDeVpRcFR3L05KcU1lYXlsWkp2VlgxMmV0bDA2MlI1T055N0Y0eThhYzM2Syt2M0dYNGQvWlI4RGZEL3dDRTFyOEpkSXZvNy9YZE91YnZXUERQaU5iV09LSFY3V2VWNVhnVlZ5Z1ZFY0lZd2NZQ3lEQ3V5cngvN08veHY4Ty9BZTIxVDluYjRqYWlOTnR2RDloOXErSGgreTNVeHVOSUVzVnRIcFkrKzl6ZVd0elBGYXh3cnVtbGh1YklMNXN6ekd2UlBneDhmazhlZkNSUGhmNGkweS84Rm13OFRIN1hwZDdISEpkZUV2RUFSYzI4cmdiTGkxWlpWYU9aTVJ5eFhTT01MS1BKOFkvYWpmVmJEeHhwL2pmUlBERm5MNHE4RmVJN0xXTExTVXhPNmVKTE81VjdKNFlYRzUxdUNZa1ZWQWFSTGhsall6QU12NlZqOG8vMXl3YnBWWjgwbStlRTA5MTE2V1NrdDFxb3Z5YVBtc05XV1QxWE9HaWVqV3A5VWVIL0FJaWZDMzRuTmM2LzhJUEVkcHFHbDJ6eDJWNGxwcmtPb0MydjRva0Z6RTBzSUFEQnpuWXdERGRuYkdHRWFGZVAvR3JUZmg1NFgvYTgrRHQ1NGYxQ1JmRTE1clY1NGZ1TlNqMUF4M0d0NlphNkhxOTFlUjNFY0xLbHpGRmR5Nld3OHhDSVplSTltNWd4WDRKeFZsYXlyTm5TVWsxS0trcksxaytscnZYVFh6UHJNdXhyeCtIOXE0OHJ1MWE5L3dBWHFlNVUrQzV1clJwbXM3cVdFM05wSmFYQmhsSytiQklCdmliQitaRzJybFR3ZG85QlJSWHowWnloTG1pN005S25LVUpweGRtZkxmaW0wbXR2Z3Q4Vi93QnNXODFXOHZmRm1oL0ZhNzhIeFd0M2NIK3piblFiZVN5aGdzSnJSTnFTQ045VHVwMW00bkVqbGZOOHA1SVg2ejlrRDRkNkg0eS9aMDhLL3RxZUxwcDlUOGI2L3dDTkxyUW9KNzRSeVE2UkQ1OHNiejJvS2J6Y09xak0wenlzTXVGMmlTVU9VVi9UdkQwcFUrRkthaTdlOUNPbjhyanF2UjlWc2ZCWWozczNrbnJvMzgwOURWK0dsdmJlSnYydXZpVk5xVVQ0K0dLV1hoVHduR3R6S1Vnczc2d3NkV3ZablZtSWU0bnVKSWxlVEhFZG5BcWhUNXJTRkZGZmdQRlZTZFRQcXptMjNkYitpUHI4Q2xIQ3h0NS9tZi9aJyxcbiAgICAwLjkyXG4gICksXG4gIG5ldyBJY29uKFxuICAgICdicmljaycsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWtBQ2dEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlFQ1QxSko5eWFXT041cG83ZUpvUThqaEZOeGR4UUprK3NrcktpL2l3eWNBWkpBSmJhamFhVlBjWGVvNkJEcUVjbW16d1FlZmZHQVdNN2pDWGVBcEVoaitiQ0hBK2JPY3FLK2VmR2ZpelgvaWY0SnQvalg4VS9pbnJuZ2o0U2FwYVdVM2dqd3o0TEwydml6eDAwa3F5UXl6ejdmTjA2enU0bEhrMmxwNWQ5SkRMNThselpBbUlhWkZ3MWpzOXhNSTBMU1Rhdlp1NnU5bXJieXMrWDBiZGttejNjUmlNTmhZUms3eWJmd3BXZnllMXU3NkhiZVBmMnV2aEY0RThjWC93MXQ3RHhoNG8xN1JoWU40aTB6d0Q0QTFieEEraVIzbS83TTE2ZFB0cGx0VElzVWpySElSSzZMdVJHQkdiZncrL2EzL1plK0ttdWFkNFM4QS90QWVFZFExM1ZiVlo3UHcwbXZRSnFwVXhHWXE5aTdMY1JPc1labmplTlhUYTI1VktuSGpYd3A4VGVQdE4wMlMyL1ozdTdqd0RvMnArSkwyYVBUUHNvMWU4TThNbHNMdSsxZVcrRTEvcWR6SXJlUVhoZHZLTUVFRFRPVll4ZXc2ZCswOUw0cStHOXA0SC9iWi9adjA3WFBDbXZQcHNpMzJsNkt2aUh3L2V5M1VadWJacGRQbVdWMjJxMXNJNVlWdTRtbGtCU1VIYm45R3hYaFhSbzRhTVlWSEtyYjNrcFJiVDIwaHlybTk2OW94bTI5ci9BR2lxRkRHVll1Y3JKV3ZzN0plY3VubTdXKzVucVUyaGEzRDRXcy9ISXM0NU5Jdk5UbTA5THFLNlJtanVJeG5hNlozTHV3NEhHZjNaeUZEUmx5dkxmMmhZZitHUGZEM2dqeDM0WitNWGlEV3ZET3IvQUJEc2ZEbXVlRC9pSVVsdWRIVFU1a3RyWCt5cndKRmNPOGNwaU0wZC93RGE3bVczdFhacDFrdHlaeXZ6ZlBjbXFaYlVwOGtQZGt0R3J1N1RhZTYzMjIwZTZISnFMNVhvMXY4QThEVjZlZjZIazluOFEvaEQ4Vy8yNC9pUDRJL2Fvc2ZDZXMrR3ZoaEZwZHA0SzhEK08zZit3dFN1NTlOUyt2cis2aGRrdGI2NFJMdTJoaWh1aTRpQ2VaQW5teU95K2hmSFR3WHBHdCtIdGQ4WUpvT3FlTGZFdW82L0pxbDU0ZzFGYkMvMUd6c1FMeDEwdXlzcnUwZTNqZ2pSYlV0UEM2M2wxZFBueTlueXI4cC84RkZOSjhPK0VQMnBmRWMxNWN3NktmRS9ndlF0YXNMdlVwQmJXMnAzMWpOcWR0ZWlHYVVxa2x3a0RhU3JRb1MrMW9qdHdjMTMvd0FQL3dCdmE1K0RmaGV4MHo0eGZDeTc4Vk8ybnh0WjZycHZpTCt6NUIrOGxSdnRIbVc5ejV6QWhWREw1ZnlwbHQ3TVdyK25PRXVHMWkrRThEbUdVeDVwT0VGS256S041UlM1bW0zRk5Ta25LVVc5WmF1N1NTK2ZlSXBReGs0MXQwOVBQdDkxMGF2Z0tYeFBvT3VXbmhyd1RydWlYR29hajRrMUN6aDBHMzhQR2JWOUd1YmhUYzNjZHJKSk5DdHMwVXJJSE41RUlvWFl2T0ZqVllGK3VmZ1o0WDhXL0JmNFhhbmNlT1BHMm5DeDB1MVM0MVhVcllUeDZicE1TcTVrbEVsd3p6VFRTczhtK2QvM3N3Q3FzU004d2w1N1hmakI4RWZEZndDMXY5b1RRUGpUNERhOS93Q0VjUTZYWlRhM0ZOZlhzcXh0SmFXa2x2QXpUQXJKY05tSjloaDgyVm04c2IySHlkOFlQMnIvQUltZnRMZUViMnorSytxNlhvR2dhWEV0M3ArZzZReldXbDI4cWxQT3U3aHBaR2FWbGlSdjNrOGpDTlMyM1lDYTJqbHVQNHBiWElxVkdFa3FrcGF1NnMzeXB4VjJyOTdMVnlidW92dnE1OVV3MU5SYTBXeWQrbHUveS9wSEUvRm40emVQUDJ1ZmpQNGExcnhGcUdxNmhwMFB4aDhNdytCZkMwdTR3MlVFT3RRWGM4b3R3N1JSeml3c2J1V2FZWllxampjVndLSzZqL2duaDhBUGl2OEFFeTQ4SWZ0Vi9FVk5NOE9lRVkyazhSZUFQREZrelQ2cGZ0ZFdsM2FRM3Vvek1QS2hqTnBlenlSMjBBTFp1a01rdVl2TEpYNHg0eFo5bG1aOFJVOExsclhzY1BEa1Z0bExtZk1sMGZkdGJ0dStvWmRIRU9FNjFmNHB1L3lQdkRSdmhSNFQrTFB3KytJVnA0MWlrdXJPeDhNcW45bmtJWUxoWjJrRXF5cXlrdUdqaWFJcm5idG1jNDNiR1Q4dk5ac0pyNzR1L0c3OW5iWGRXdXRUMDc0T2FUcENlSE5hdjNWOVN2eGRSdmRzYjJVQUpNeXMrd09xSXpLb2FReVNGcEdLSzlid0h4R0lobnVJcHhtMUhsaTdYZHI4elY3ZDdNclBvUVZHakpMVy93Q2tUbzVQQW5obVh3ZFpGZE5SSkxqVWJ5R1dkRVVPVTh1M3dNNDV4dmJHZlUxNTUvd1NhOFFwL3dBRk45YjhVeGZ0RmFCWVcramZEcTUwcTZUd3o0ZFI0ckR4RTF6OXMvZDZtczd6U1R3eHRiUnVzRWJ4UlNFc3M2VG9RZ0tLL2RmRWJGNHJEOEk0dXBTcVNqSlJsWnB0TmE5R2o1akwwcW1LZ3BhclRjL1VBWDhVMDAzaGlUU3JRbVBVMDFKTlM4by9hMS9jQ0g3TUpNLzhlL1dUeThmNndsczBVVVYvRytjZkJodit2VUQ3ZUNUamYxL05uLy9aJyxcbiAgICAwLjkyXG4gICksXG4gIG5ldyBJY29uKFxuICAgICdjb21wYXMnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFrQUNnREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q3dCtLSHhSdC9BZG8ybzNkaGRhcmV5d1hGN1BCQk1yU3gyMFFEVDNzaTVNend4czhTdjVNYzB4ZWVKRWlrZVJFYk8rQW54UzFyNDRhcGJlRjdid1ZjUWF0YzZpMWlGdExYVVBzOGR3aHRubmhrKzNXVnBjd3ZEYjN0bGN2NXRzaU5GZEswTHplWE1JdkF2K0NsdnhMOERmRG5VdkMzaUR4bHJGMXAxcnB0bmROcXQxYVhQMmE1a3NwSjdXVmx0R2VlTXp6bzlrc3llUkhNMXZkUTJFa3JXMGJxOG0xNEMrRjl0OERJVytMZjdTWDdhMXI0UDhOVGVmYmFwcG12ZUFkVDFhOXVybjdUWjIxK2tNVTE0TG43ZDVhYWRBenkyK29wRWROa0lrTUVMeFY5ZmxQQldIekxodW5pK1dVcWxTOXVWU2NuSlNrbEdLU2Fla2J0V2N0VmExMDE3RHhTbzFkWTNTM3U3WCs3VSttWjdlK3NydWZUdFRzSkxXNnRibVNDNXRwV1JtaWxqY282a296S2NNcEdRU0QySnBSYVhzbHBOZlc5cVpJcllvYmxsbFFHSlhjSXI3U3dabDNzcW5hRGpjQ2NESkh3NzQrL2IrL1pNOGE2dHJkaG92eHIvYU44ZWFmcDNpRkJQQjRxc2ZDMEduNjQxdmVxMXpCUDlpZ3RycG9MaU5aSTJpbkh6eHpaZGZtNDNQMlMvSFhnSDR0K0w3YlEvd0Jqcjl0cTcwYiswOWZ2ZFVqK0dIalB3UkRjNmZiV0JoZWU0dGRNdE5PdFJMY3lSQlpuUklOU2ppVjRTclJuemR4N2EvZy94TmhjdWxqYTlOd3MvaGxHYXRHemQzSnE4V3ROSEd6NzlCeHh0Q1U3MjBmVC9McjZiL00reEkxYVd6YlVJK1lGdXZzeG16OHZuQmQ1akI3c0Z3U0J5QXk1eGtaSzV6d2I4Ui9qWjRVMWJVdjJXdmp0YjIxdkxISS9pUHduTU5IVzNpMWJUM2RZWlpiZnpMaTRLUzI4NFBueHdzcGpYVXJaNVZRM2l4Z3I4M3pmQXd5M0d2RHhsZmxTdTczVGZrMXVqZGN5My9yOHRUSjBqdy80eCtPSDdTZXRmQ25TUER1a2FsWmVCZEE4SytLRWgxUHhIZGFheVhseHFXcStUTkdiZUNYem5pazBpT1JkK3p5M1ZIVXN4ekgrYXZ4eThkL0VEOXV2NDJTK0xkUitOR24vQUEzc05QbjA3VHJUd3JyRFdSbDA2eWt1akI5a3M3S1V4TkpQQ2l6TTZoNG9GYTNDU3lRdlBHMG42UDZ6KzBHUDJXZjJvZEc4UXdlQVB0c1B4QzhFMzJrM2VvUnhmTmNhbnB0eEJjNlhhTkk4cUtGVzF2ZkVGeDVTNGtsOGxnR1ZVWjB5dmlCK3p6K3lEOGQvQW5pSDRnK1B2MlV2RHJhVDRsMUc3dU5jMWp3dDQ1dVA3ZnRMdlVyaGlabnNabEZzazNuU3R0UkpKMkxNUExTWXRodjZQOEo4OGxrbVV4eGYxYjNaSlU0VGp5T1NsemUvN3M1cFhuYlJwY3owMGVxUEh6R25WclJjTVBOUnFkMnVaTHo1ZWFOL3Z0ZjdqbFAyUnY4QWduait5ZjR0K0cyaStPdFgwRDRYYUg0SnUvaFhhM0h4WjFxOVo3alU1ZFpoczVvNzVIdUpKVERZSkU4Kzl6QjVVNWxqWVBJRVF4eS9IL3crMUx3ZjRwMFhSL2hEK3pyNEp2TEtlMkdsM2x0OFNKdEgxU3gxSzNhRjBkVjBveDNNbHNKWHdrZTlzdEg1aGFIekN1NGV6ZUtQK0NUcWVMUEcvaVQ0S2ZCTDRMYVV2dzVzYnhiRC9oUDduVjRMUzV0N3ByT0c2RVRyR3NrOHNxUjNFSTh3cVVseHlvVU1nOTd0L3dCbTJ5L1l6OEVXbmpYVmZIbGg0aThUUWFXdHZwbXNhMWNpenM3WFVFaGNzZDhyZzNFa2dYS1N1STlvV1FtTU1WZFAwVEQ1dGhNTlhxLzhLRTY4Ni9LNFV0VmJSdUtuSy9hUzV1Wng5MUpLTGFTZmRsZU5XQXc5ZWxLTUtrcXFVVTVRWHVKYTgwZWJtdEo3YVBidTdOZG4rMGI0MjhkZUtQMlJ2Z2QrMFI0NDhPejJYeEc4SFhYaEtQeE0zOWxwRGNQTnJVVm5iYTNwdDFBdXk0V05vNTJ1eGJxQWh2ZExzUVVrZTNFUksrZHZqcjhUdFcrTXY3UUh3cThHL0JyWHZGdWw2RHJuaTdScEwvV1BFT3NYRTl4cTA5b3JhN2NKT25uTkZCRTl2cGtzQ1F3cXFlWkl6RlFoV09JcitadkVQS01Ea1dPb1Vha1c2a29jN1M5M2xVcE8wV3ZlMXVwTzE3cE5KMmQwczhIWFdKcHVVWHRvOU4ydDN1Nyt1bXZRNjMvZ3JUNG1UNGEvc0thcDhkOUM4UDJNdmlmNGNlTDlGMTd3emYzYlRNSTUydkk3S1NKNDFrVkhpa3RycTVpYmdQaVppcnFRcEdKZFcwY25oZTB1QkpOSExjcGJUbWEzdUhpa2prWGJNckl5RU1wV1JWSUlQOEk2MFVWK3ErRVU1ckplUytuTW5icGV5MVBCekp2MnNuMTV2OGp4UDRrZnRUZnRNK0RQSG5pRDRlK0d2ajU0b3NOTnZOWVRVYjFkTzFIN0pKY1hFdHBBak03MjRRbGRpSWdqKzRxb29DakZVL0NIeEE4ZWVNdkhmaFErTVBHMnI2c1g4VzI1TGFucVV0d2MrYkJ5UE1ZNEp6eWUrQm5PQlJSWDlXU3kzTHNQbGtaMHFNSXljZDFGSi9DK3FSOHBpcXRXV0tmTkp2WHVlNmY4RTcvRWVxL0d2eDU4V1BpbjQxdVcrMmVDUGlkcmZnWHc5WTJidEhhUTJNSDJTWjdsNDhuemJ1ZG1qRWtya3Fxd0tzS1FoNWhLVVVWL25EeDlVcVZPTGNUenR1elMxN2NxMFAwN0J4akhEUlNYUS8vWicsXG4gICAgMC45MlxuICApLFxuXTtcblxuZXhwb3J0IGNvbnN0IGljb25zR25vbWVMYWJLaW5nZG9tID0gW1xuICBuZXcgSWNvbihcbiAgICAnY3JhZnRzbWFuc2hpcCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWNBQ1VEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlxZkh2eG4wajRieDNHaFJ3RzgxUlozWkxiSkNScTUzaG5iNk45MGNuSFlFR3ZJL0VQeG4rSkhpU1FtNThUVFc4Zm5HU09Hdy9jQk9jZ1pURE1CZ1kzRW4zelhqUDdibnhFOGNhRCt5MzhXdmlub0d2elczaUxUdmg3cnVwYWRxVVNqZkJkeFdFOGtVaWpHTXE2cVFNWUdBTVlyNEcrQm43Zlh4MjhQZkcxYlg0WCtFTC9WdEorSlBqQ2E1OElmQzNVSkhNZG5wem9XZWEwMnBMUFp3YjFqRnRERUo0aEhIZHFJcFpBa3JmbXJsajgwaktkS1ZrblpSMisvOEFENTlqOWc0WTRGeG1kNEt2WHdxaTVVVW0rWjJjcjMwamZTOWszclpXVHU3MlQvVkswK0pueERzcmxMdUh4dnFyUEcyVkUxODhpbjZxNUlJOWlLOUIrSEg3UTg5M3E5cllmRUJvVVZZWGlYVW80OXVXYmFjeUtPQmtyOTVRQU05QU1rZkZ2eDkvYlgvWVYvWjQxajRnK0Z2MjNmRDk3ckd1YVJwa09pNlo4TFBFUGh4cnZUNzY4a3RyRFVYa2psTzdUTHFSVXZySGVaSkpKTFg3TVRDRiswLzZUdy8vQUFTay9hK3Yvd0JwL3dDSFhpelFQRWx6R2RSOEwrSVdsc2JlSzBlUDdQbzk0MHIyY1pMdStURzhWMUNxNXlzVU1RWXMyWkhsUXgyWDBWVzlwZDMxaStucWZQeXdFTVpoNVZIQzBWYTB0cjM2cnVscDVhbjZ5RFU3aGh1aDBhNlllbzhzZm9YQm9yem45bnI0bHhYWGh1Znc3NGwxSll6cGhSYlc0dUpmdnhOdXduT1Q4bTNIb0FWQTZVVjcxREc0ZXRTVStaSy9SdEh5MWJCVnFWVnhjVzdkYk0rYS9pMzRMdmZpSDhPdFU4RjJWKzBIOW9SSkhjUmlkNFJkMi9tS1pyUnBZaUpZVW5pRHdOTEN5elJyTXp4T2tpb3c1NzluNzRBL0JmdzNwbC84YnY4QWduNzRFOERhRjRoMU94MUovRlZ4NDhqMUc3MXJUTDk5TzMyMWhlWFZ6cUU5NXBzaVRYTnRMZFJSQUdTSWJ3eW55VEw2SldKNG0rSDJnZUs5ZTBqeFBmM3V0V2wvb2NyUHA5em92aVcrMDVzTTBidEhMOWttakZ4RVdpaVl4UzcwSmpVN2NnVjhiZzY3cFlpSHRKeVZMWG1qR3ljcnhhWHZhU1ZuWjNqSmRUN3Voak1SUWc2YW0rU1h4UXUrU1grS0thVXZudCtCODIvRkg0cWVHUGpoKzBUcVh3cThWL0NiVzVyTzhqL3NuNGxIV3JhOXRVczdDZlNyMndubDBxTUpIUHFjODE1YnphZkxxM2xSTW1ub2lRUjdacnE2cnY4QTlqS0Q5azN3QjRHdHZBUDdObmhPRHczWTZvbjlxV2tFdDJibVRXRWszRVhLM2pTemZiU0VRSEhtdkpERVlRNnhvOFFQakg3WldzUWZCYjRnL0V6eFY0RzhQYWJicjRIL0FHZk5JdnRBMG9XdmwyY0p0WmZFYnd3K1hFVTJ4RHlVWGFoWENqQUk0eFUrQzJrTjRvL2JBMEQ0RWExcWR4TnBGejROSHhFMWU0S3grZnFXcjJHcDJFVnVzbzJlVkhDSGRMaGhESEZJMDBLc1pNUE1zdjdHK0N1SHNYd0lzNGk1MHBPRGx5eHM0TGxuT0tYTHBkTldXNnRhNnZxbi9OR1krTEhHZEh4a253emg2VkdXRTlyQ0NUNTR5U2xScFZIN3k1bGVGNU9QdXZtdnlTdGRWSWZjSUNrZk1WSHB1R2FLOUwvWno4RmVGdkdUNnl2aWJSbzdzV3d0akI1ak1ObTd6ZDNRanJ0SDVVVitYWVBMcTFmRHhuRnF6OWUvb2Z2V0l6U2hocXpweWpkcnlYcjNQLy9aJyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdzbWl0aHknLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFaQUIwREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q2dThiZkYveEg0aWtsRnRmUHA5Z3VjUlF5N1NWNXlYY1lKNFBJNFgyNzE0S2YydS9nNWU2ZmVhaDRkbTFmVkYwdSt0N2ZXb285Rm10Wk5OV2FKNWttbFM3RUpLR09OeW9UZkpJVVpZa2taV1VkQnF6MkhqM1R2RnZoZVh4enJHaTY5NFd2WUx5YlNsMCt4ZlR0WThPendJcnlNTGlLYVYyUzQ4MUpaRjhxTlUrWGxnV0hrVStrYVY0UGxuOEZhVHFmZzlkTzhUUXozMm5hSnF5VzJqMmM4c0JqZVM3RjNiVzZoR3RyUXp5R1dUem5hQlNQTG04cFViYXRRcTRTZ3NYVXM2U3M1SzlwV2JXMm5MczN1emZEd3A0bVRvUlQ5ckw0UDVkbmZtNjlyVzh6NlM4SStOYm1HMXRmRXZncnhKdXRydUZMaTF1cks0RHczRWJLR1J4akt5S1FRUjFCQnpYcUhnNzQzYVkya3JhK0l4RmIzRVBCa084cktDU2NnS3JZeDBJUDRlZythdjJhYm5Scjc0YlBxSGhPNmprMEtmV2IwNklJMmhiYkVzekpJUzBUc0dMM0N6eWZOdGNDUUs2UnNwUmZRS3licHQzcHU4WHMvTG9aU2hPbkp3bXJOYVAxVzV3ZnhqK0YzaWZ4THFtaGZGTDRVK0lvdEo4YytEcnRydnc3Y1h6eUd3dmR5bFpMTzhqUTVNTXFGazgxQjVzTzltVGNyU3hTNDh2d1hzUGpoNGY4WGF0OFcvQXR6b1Z6NHp0eGJ4Nk5jYWlMMlhRZ3NmTXNETk5jVzZUZmEybXVJNW9WaS9kaTBEeEs4TzBlcVVWczhSVWxoblFlc1gvVnZUcVRHOEtpbXQxc2ZQMzdQdncvK0tQN1BPcy84STBtcWFWcVhnN1hwSWJsdGFsanVGYURWUEppaGFLZEFaR3NrbUFUWkorK2lNbHR0TGlXK0N3KzU2THIwR3JyOW5tczU3SytqdDRwYnJUTHphSnJjU0E3YzdHWkhVbFhVU1JzOGJHTjlqc0ZKcno3NHgvOGtOdGYreHI4SGY4QXFTNlRSOEpmK1RpZml2OEE5ZHRCL3dEVFlsZmQ4VDhNWlJrMlhjK0VpNDhyaXJYYlZwWGR0ZTF0TmR0eitjL0NqeEw0MTR5NGlkSE9LOEtzWlFtMi9acU11YW43Tlh2RnBYbjdTODd4dGVLY1ZHN3YvOWs9JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdiYWtlcnknLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFYQUJzREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q3VS9hYy9hdjBYNEUyTjI2NkJlK0svRkRhVmM2dTJpMmQwcU5IYlI3dDEzZHp2a1FRdEo4Z2JEeU94Ynk0NVBMazJmSTBYL0JVNzlxcldEUDQ3MG53MThNclh3ZkRjL3ZacnRibVdXM1g1Y1F5U3JlS2ZPTzVRQjVBWWwxR3pKQVBQL3R6NlZmZUlmMm5QSFZ6cWQ5ZnpXc09zV2RqTXdSbld5alhUTENaWW85eEFLWWxFeFFFS0pKbkp3WEpQSDY3OGR2aUxxdHhhK0I3VXgyM3cwc0xFYWJaL0RrTWpXWDJEREJ0L3dDN0N2ZXVYa2xlKzJDWHo1V2VNUktFalQrYjhYbTllR0puQ0xzb3UzK2Q3cC9MWS9vekwrR2FTd05HcTZYdEhPUE0yMjBsZlpKTCt0TjFzZmF2N0pIL0FBVUsrSDM3VG10eWVCZFc4UE40WThTWWQ3Q3lrdjhBN1RhNmtpNzJJdDV6SEdXbFdOREkwVHhvMnpjeWVZc1VyUi9STWQ3ZHhJSTRycVJWSFFLNUFGZmxQK3pmNGQ4UGVIL0gvZ3pWNGZFR28yOThmaUZvYVR6MnU1STBoZlVZSTFqZDF4a3l5UEhFVkh5bEpHRGJ0eEEvVk92Vnl2R1R4bUhjcGJwMi9CUDlUNXZpTEtvWlJqSXdwNktTdmJ0cmI3anh6OXBiOW1LNStLMnBKOFFQQXAwdi9oSVlyQVdWM3ArdUdSYlBWYlpHZDRvek5HclNXY3FQSSsyZU5aQVVsa1dTS1UrUzBQa2xwK3k5NEF0MXRrOGEvc1RmRjY4MVZNZjJqZGVFZkVuaGNhWTc1K2J5UHRtcVJ6eUlPenlSUk93NU1TRTdRVVVzVGsyWDR1dTZzNCs5dGROcSsyOW5aK3RybU9FNGd6ZkJZZFVLVlZxSzJYYjliZVI1amVXdnc5dC9pNzRmOE9lR0xPS0x4OWUrR1lkU05qREM4VmwvWWlhaGJTWE41TXFiRVc1V1dPTVEzRURMZExjR0IyM1J4bG8vV2ZoMyswcCsyUjQwOEU2ZDR4K0Rmd1oxanhoNFUxYTMrMmVIdkV0L3AraitaZldrcEx4dVBOMXl5bDJCV0NwNXR2SExzVmZOM3libllvcitvUEZUSFlYTHNIUWtzSlJtNVZKcjNvUFN5VGR1V1VmaWJibDNldTUvREhnRGttTHphdGlYL2FPSnA4dEdnN1FxS3o1blVWbXB4bXJRalRqR0ZrbkdOMG5aMlAvWicsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnY2FuZHlIb3VzZUZhc3RlcicsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVhBQnNEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlSZmlGOFN2RVh4RTFScnZWTGhvclZXSDJYVDQzUGxSQVpBT1A0bTVPV1BKeWVnd0I1LzQ5K0lHbGVDRTB6VFdtdEp0YThRYXRCcFhoblJwOVNodHBOVHZwbkNKRWhrSXlGQk1qbFF6SkhISTRWdHVENW4rMnorMXQ0RS9aWitGR3JlS3ZFL2pQK3lqWldrVWw1TllyRFBxS0NZeXJid1dkdkxsWkx5NWFDZElXbFZvSWhCY1hNcXlSMnNrTW5tVjMrMnI4SE5kOEs2YjQ3K0gvQU1OdFFsOEdmRkhRclM0MGpTaE5LOHZpUzBIbkpkMnVyMzhnZWUvTnRmWE9vV2NtbnlUVDJpUkxDRmdXT2FOaitRelRqUmVNeEhOSlgyU3UzK0tTWG5mUS9TOEpoWlY2c2NQUnN0T3VpMC9OOWJkZGJ0SHVQd3QrUE9yK0pmRUUvd0FOL2kxNEFnOEkrTU5OdUlMSFdkS3R2Rk5qcTFwYmFwSnA4V29OcHEzRnU0YzNNZHZLU3l5UlJDUTIxMllEUEhiU1NqMTZEeDc0MHRvVnQ0dkZGOEVSUXFnM0RIQUhRY25wWHhGOEtQRWZ4aStKdnhvaDBId2xjUzZScEZ4RmIydHY0RjhMMnFmYkV0M2szMjRzNHBCNWNMUVBhSlBHWjJodFFMVmhLUHNZdVk2K3IvQVhpTzQ4VytFYkh4RGRmMmF6M01aSnVORjFSTDZ3dWdHS2k1dExsQUJjV3NvQWxobEtvWklwSTJaSTJKUmM0VkhVdzBjVFJUZ203TlhlajNWbnBmVDFzN3J0ZThkZzFoTVI3R28xSjJUL0FNOUx1MnYzcjUyK1AvOEFndDkremhxZjdRSHdHOElXSGdMdzdwVXZpcFBHM2wybDljaFliaDdiK3lOVVo3Wko4WlVNNFJ0cFpVTEtDU01BMThUZjhFOWYybjMvQUdKNS9FMzdQbnh2K0hHdGFqTlpYTStvZUc0OUMxT3ppdnRNMTFvMHRwVWU3a1dWV3RyaUV4Q1VNdHdxeVdsdElzUlpTNEtLOXJMWkt2aEhoNmlUaFp1ejlUNkhodkMwc2RqSTBLdCtXemVqczczVDBhMVcxdlM2Nm4xTjhUUEJjZHg4TS9IT3RYV2kzZmh6dy80cFNmVi9paDRDZlVFMUdSNGJXeXV0bG5aM1RneEdTM2xlS1JUS2pxNzJOdnRlQ01OSEo3cjhOdmkvOFh2aFQ4Ti9Ednd2OEdmRG53aHJlbCtHOUFzdExzdFYxYnhwZWFkYzNLVzl1a1c2UzNpMHU1U0k1UWpDek9EalB5NTJnb3IrcFllSC9DT2FaYlJqV3dxWHV3bDdyY2RaUjErRnJUUmFkN3Ricy95eXpUeG84VGVIODd4WDFiTXB5WHRhdE5Lb28xRW93bmVOdWVNbmRYYTVyM2NiUmJhakJSLy8yUT09JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdmb3VudGFpbkZhc3RlcicsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWNBQ0VEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl0ZGU4ZStBZmhEcG1MWFJiZGIrZHBVanM3R0ZJM2RVZGxEU01COHE1R01uSk9UZ0hCeDVyci83US93QVJOWGxVMkYzYldFYVB1V08ydGxiT0d5dTR5YnVSanRnSDByamRYMWEvMTNWSjlZMVM0TXR4Y3ltU2FRanFTZjBIdDBGZkl2N1JIeEorS3Z4dytLR3M2TjhDZmlIZmFiNFQrR24yVzAxVyt0ZFVsMHJUdkVmaUc1bm5ndU5OYlVSR3BjNmRGRkc4c2R2Y0lpeTNvV2RnOXVJVy9QOEFBTE0rSU14amhNSkpRVDgrVkpkNVM2THU5a2ZVWTJXV1pCbHM4Ymp2ZVVkOU9adHZSUmpIcTI5RXQyZmMybmZ0Qi9GV3h1Vm5uMStLNlJlc0Z4WlJCRytwUlZiOGlLOUcrRy94NTBMeFpxc2RqcnNLNmRmU1c0ajNNLzdtVndlQXJFNUJPNXZsUHNBU1RYNTkvQUh4dDhTUGdmNHkwNzRXL3RDZkVLNTFleThhdVI0TXYwV2ZWYlhUdFRWN3lTWFRKZFlSREUzblcwVU56YlJ6eU5LY1hNWWtiWWtNWDBVck1yQmxZZ2c1QkI2Vm5qdjdXNGZ6R2VGeEV1Wng4K2FNbDNqTHFuMGEwTk1FOHA0Z3k2R0x3cXRHYTAwNVd1NmxIbzA5R25xbWZXLzIyei92bjlmOEtLK1pQK0ZuZkVML0FLSFBVdjhBd01mL0FCb3JvL3QrbC9JelArdzZ2ODZQSXYyZ2ZIZmlidzlwdmg3NGFmRDNYdEwwZnhiOFNkZWs4TWVFZGYxNjRTUFQ5SnYyMCs5dmZ0Yys0TjVteUt5bU1jQVg5L1A1RUJhSlpXbWorWVBIdnd5bitIdXVmRUw0UDZINGh1YjNSdmhicnZsNlNQN2Z0TGpYTlV2YjNVWjdxYStXOGZLTE84elN6WEsvSWR5QlhWR1R5eDZ2L3dBRlI3ZlQ0ZjJUVzhVemFUYVhGN29uai93bmM2Vk5kV3l5RzJsazErd3RaV1FrWlV2YjNGeEEyTWJvcDVVUHl1d1AwTjRjL1pZK0NuaXZ3QjhOL0hseDRWK3pTZU5oYVBmYWRiU2sydHBMYzJVdDQwc1NTYjJjck9DNFdkcFVPNWc2dURpdnFmRGZOY3R5cWpqWjRqbVVuVGRwUWpHVW90TmEybkpSMmV6VFQxdm9yUDR6eFV5N01NZkRMVmgrV1VYWHRLRTVTakY2WDNnbks5cnBOT0xqdkc3ZW53cjRTMWl5OFZyYWVILzJnZmlVUEJQZ2EyMHFQVjliOFIzTXRyQmQrSEx2VDlYMzJkek5lL1oyUzZ2RmF3aWxnaGtFMGNraitVc1JXU1NJL1N2N0hmeFk4Yi9FbjRWbnc5OFhKN1c0OGIrRGJtUFF2R0dwNmNrcTJXcjNzZHZDNTFHMEUxdGJTRzNuRWdkU1lJMEQrWXNmbVJva3NuRWZIYjRkZURmQ1h4azFIU2ZET2h4V2RxOEZ4YnoyeUV2Rk1JOVQxRzFZc2o3bEFrU0ZTOGFnUjVaZ3FLcENqd3o5bmZ4ejRnZjRtL3M1NmZZM1gyTnZpQWRVdjlTdTdabTg2eGliVHpyRW1uMnJPVzh1eWVaRWlhM1lPb2hqaTI3WklZcFUvUk9NZUdjRnhad3RUenFsVmFkT2p6UjVvUlRrb3R1U2tvdXljcjZjdnV4dG90ZFB3ZmdmeFB6WGcveERxOEtWc0xDVkt0aWxCdU01KzQ1cU1ZdVBNbnpLS2phWE43MVM2Zk5GdzkvOUFhS0tLL21ya2ZjL3M4Ly8yUT09JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdmbG93ZXInLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFYQUJzREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q2eCtJWHhTdXRYaGZSTkp1dnMybFc0S3M0TzB6cVA0bUo1QzRIVGoxUGJGVFMvaDk1WnVYK0p2aUtid1ZISGJQSlpSNng0ZnVaYjNVV1NTTkpGdHJJYkpwMWo4Mk15T2diWVpZaGc3eVY0ZnhoOFZ0RCtDdW4yL3hKMXpVRmcvc3ZVYmU0dEVOdkxNWjU0NVZrU1B5NFEwamdsUG0yamhBN0hBVWtlMmZHYjRTL0dDUDRyYWo4YlBGZXB6eGVGZGIwclJ0ZVRWZkRuaUdXNDBTMjBuVFVzcnVhMmwxT08yWkpyUVhjZHhMNWR6YjI4YzF0cWNrMExpU0s0V1A0YmpqaVRIOFA1Wk9yZzZYdEpKSzZWMjQzdnEwdFZIVDFkOU5tZlFjTllMTE16eDdvVjZpVW9xL0xkWGQ5bDExZXJWMWIzV2Nucm53ZjhXYWRhNjNyWGgveTllMGZ3K3NiNmxxK21ZSWdqZUZKd1pvY21TM2RZcEVlV054bUZXRE9RaERuRXRQRlBpZXd0MXM3RHhKcUVFS0Q1SW9ieDFWZS9BQndLOVV1dGErUFA3S243SGV2ZU81NytYUmI3dzc0SjBEd2pxbmlQeHBwTnplMzErKysxdGpLTHFlQ0c0MVM1dFRkWDhxVHRaeDI5eExkRWxPSmE4VTBpLzB2VmRLdGRVME8vaHU3SzV0MGxzN3EybUVrYzBUS0NqcTRKREtWSUlZRWdnNXIwZUVzNXgyYzVUQ3RqS2ZzNmpXc2YrM3BKTlgxdExsNWw1UGRuTm5PRHd1Q3hicDBaWDhyM2EwVDEwWFYyK1d0anpiOXAzNE0rSXZpbm8rbmFwNEtrUnRZMHd6UVc5dmRYOGx2QkpGY2VXSFptVE9Danh4U1pLdjhpU0tFWXVNZkNYeHErTlg3WkdwYS9xLzdGUGpuOXFyeEJhZUVkR3Y1Tk8xSHd6UHFGL05wTjdhUmJaNFMxc0x1UWJHVllaVmhCMmd2aHdHM1lLSzZNMXkvQ3djc1hHTnFqc20vUkd2QitSNVhpYytxMTZzRzVUaFoybE5YUzAxVVpKUFI5VTdXVFZtZTVmczllRS9pNSsxYjhJcmZ3OXEvN1duam5VTFR3VjQxdHROMFRUUEVPdXpYbWtKWXc2ZGFLOFZ2RktqU1dFeUxQSXNNeUI5b0NvNnlEYzUrbi9oRkZCWWZEK3kwbWJ4eGVyTFlTM0ZuY1FhOXBmbjN0dExEUEpFOEU4c001aWxralpHamFTTDkyNVRjZ0NrQUZGZnZYQ25CM0RlS3lIQjRpcGgxN1NkS0xsSlhUYlZ0MnJkOWVsOVQrRWZGTHhBNDN5RHhSemZDNWRqNTA0VTZzb1J1b1ZPV0NidEJlMWhVOTFicStxMlRTdWovMlE9PScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnZGluZXInLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFYQUJzREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q2YzhhZU5kUjhVWGp2YzNicFl3dXh0Ylptd3NTYzRKOVRqcVQvQUM0cnpoUGpqOFBiMVdrMEMvdXRWaUNobzczVGJDV1N6bUdjZkpkbFJidVFRUVFKQ1FRUWVRYTg2L2E3MTY4MUh4VG9Yd2F0M3RibWJ4SjRSOFJYbWdhQmVTckhGck90V2YyRDdIYlNzNE1aajJ6M0wrWEtWalowaXl5a0ExOFMrSS9oYjhkdmlYTGNlTmZIR3M2cmNYRm5QTXZpR1NmVWZzdHpiQ083OGhsV0YxRExpZVh5MVRMbFF4Ynk0MURLdmdZL05hMVBGU3c5Q3ljVW0zTFc5K3lUWDMzMzBzZnAvQS9oNVBpekRUeE1wMmpIb25iclphMmU3OGwwMTZINlg2TDR0aThadGRqUnZFTmhvVnZwR25EVWRkMUh4RmJrUTJsc1MyMGtpUkZLc3NjekdaWGRFOHJERExyaTk0UTFXNDEvd25wZXUzZ2J6cjNUb0o1ZCtueTJoM1BHckhNRTM3eUU1UDhBcTMrZGZ1dHlEWHlQcUg3TWY3VFA3UG5nL3dBQi9zSzZ0NFkxdlRUNDAxRzI4US9FQXh6ckk4dW0zRjM1UzZlelFPMHR1VmdoTWx4bnkyUkk0MHk2VHpLUHBYOW56eGt2anI0V1d1c1IrSVlkWWp0ZFQxTFRJTlhnbjgxYitPeXY3aXpTNDh3RWlReUxBSExyOHJGaXk0QkFybHlYR1pqaU15clJ4Y3VpNVlwV1NTMGJlN1RrOVVtOXZ3OHppM2gvRDVKZzZQc1krN0p0cVRkM0pPOW4wVnRHbHAwVDF2ZCtjZjhBQlFMOWx2eEYrMGY4TWJEVmZoc0xjZU1mQ2Q0OTdvUzNFZ2pGNUV5Z1QyWWRqdGpNbXlKMVp2bEx3SXJNaXN6ajVwK0dQN1IzaWY0clFQcEdzNnU4dXM2WGVUV3QyK3ZXY0dyWEZoY0xKbVZZcEwyS2FOVkRJd0RLRzQ2Q2lpdGMvd0FKUXFLTldTOTVCd2JtT0xwT2RHRXJKSzZhdW1yOW1qMjM0TjJHaGZHSDRYK1BXOFgvQUJFMWh0RzhMK0xwSnY3UmFCSUxabzdmU3ROdVpJNzNUYlJZcmU5dEJJck1iY1JxNUc3eTVFZVIzZjFyd1I4SXY3QzhNMittZUFQRW5pWHdkcEt0STlyNGY4UFhtbHkyVUJlUm5lU0pyM1Q1N2dpVjJhWStaSVdCbEl3dUFpbEZmMEh3cmsyVDFlSGNKS2VIZzI2Vk50OHF1M1pxN2EzZGwvbnNyZjUyK0xuR0hGMldlSU9hUEQ1aFhpbGlLc1ZIMnRUbFM5MlRzdWEycmszNU83alp5bnpmLzlrPScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnbWF0ZXJpYWxzJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBWEFCNERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOUp2aVY4UjdVeDN2eEErSkhpZXowK3p0WWQ5MWYzOXlsdmJXa0lQZG5JV05CbnFUMUpKSkpKUHpQNHgvYVErSldpV25oajRnZUcvR2NOOWQ2clp6VCtJZkJWL29mMmJUZEhSV0xwYmk5Mm00bHVtalV4K2FCNVc5bGJ5ZXNhN0g3Y09yK0cvQzExNFQ4WGVNTldndUxHMlRVb0lkQXVGK1UzY3NjWGw2a3pybG9VZ1JKclpwUUFxcHFqYm1WV0liNVoxUDl1TDRvclptMDBmNGZlRmRHV3hoekhGNGp0TGk1OG5hQUEwaXhUUmo1V0cwS3NrbTQ3Y2tjclg1TjRMOE1lR0s0V3E1M3hSS0dLcTRubWg3S1VYS1ZKSnlpMnRlYm1sZU0xVVhMeThxakdWK2RQNHJ4ZXpQNlFPWjhiNGZJdUFjdWxTdzFDQ25QRXptcWRHbzVwY3FUMFVuVDVaUmROKzBVdWZtbEJKUWt2MEQ4S2ZFejRmZU9ZYk9Yd2w0ejAyL09vNlhGcU5yQmIzaUdXUzBrVldTYnk4N2doRHJ5Ui9FSzdqd2Y4US9FWGdpSjdQUzV0OXJJUzMyVjNZSXJuSHpEYVJnNEdLOHc4TS90dy9EdXkvWW04QytIZmgzNEYwclZVdU5GczRmRC9ocTdzQmQyV2pXdW5tR0lXODdiMGFTUzNuZ21qUmtVWWUxVmp0SzdtdS9CeTgxYS93RGhycFYvcnJ2SkxQQzhrVHRmcmQ3b1RJeGlaWmx6NWlHUFlWWml6bFN1OTVIM08zNUg0aitGbGJ3NXdGRE9jQmpYS0ZTZkpHNjVadTZjdVpKYU9GbGFWN1diVzk5UDZLNGU0a1hFRmVwZ2NYaDdTZ3J2cXRHbGJ5ZDl2UmxINGtlRS9IRTN4WStIZnhYOEY2ZllYNmVFZGJubDFqVExqVTVMRzRuczVvZGtodHAwU1JmTlVxcEVNaXFrdlF5d2tMSVBqSDR5ZkNmeFQvd1VsL2JkMVM1OEphdHJIaC93Mk5JMCs3OGNhdnJNRmxIcU50YWhJb0xXR0JiWjVGYTRubjArK201TFc4U3l1enF6WWltS0s4Zmg3aWJOY0J3MWlxVkZwS2tvdU9tem5PemZaMnZkWDJmbG9mU1FweG5lcS9pUzVWNk4zL1ArdGpkK0ozdy8wWDRLNkttaS9EWFU5WDBUU1BDT3JYbHJvdmhiVE5Zbmh0TmJubTgrenRiYVYwWVMyc2h1TGt1bHpDNkJKNTVMaVJYZGpLdjBKK3pQOGRSNDg4WGVKUGcwOTVGZTNQZ3F6MDQzY3lXWXQ1TE5iaUFORERNRVZZWldjUnlTckpBcUlGUGx0RkdZMWVZb3IrdmZIbkpzb3hIZ2pUekNyUWpLdlNoaG5DYnZ6UmMrU00ybW12aVdqVHZGNzI1ck0vZ253Q3p6aUhFZU1sYkN6eHRWMFpQRmMwSExtakpVNTNoRnFTbFpSbE9Vb3VMakphUjV1UzhILzlrPScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnZ29vZHMnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFYQUI0REFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q3dy9iQS9hZStMR2tYdW4rRi9oQjhKZFY4YmE5cU1OM2ZhZjRhMHEybW5sc3RNaG10cmVhOVNHSkNMcVNPZlVMRUdBeVFsMGxrWVN4cEV4SHpyOElmMm5mK0NpRnhlWEh4WS9hbS9aWDFId0Q4UFBEV25XajY3WncrQ05TT3EzOXpkU0xGL28wVS93QytuamdWcGJxWllZV2FLQ3psZDJ5eVJ0MHY3VVBpUzY4Q2Z0bWZETHhuNHkrSk9xNlA0ZHM5SnViN1MvN0E4UFIzRjVITmEzRVkxSzJFN1RRK1N0OWFYVU1YbmJuYUFXanZIR3hkbmk1THhENHk4UWZIWDRoWDNnM3gzNEV2TDd3cExwbG5jMm1uZUVkRDFDSnRVaVdlM0tKZFhzbDQvd0J0RnE5c3BqWk1veVNXMDBid0NVeFIvZzNCM0JYRG1kOEhReHVZUVU2Mkk1MDUrODJuelNpdVc5a25GVzJXajExVmoramNpeTJoaXFOVER4Y1l0YTN0TzhJcXplaWFqSnl0SnB0MmQ3TnFXaDBueEIvNEtRK0J4cUduZUF2aDlQcFdqK0lydTRuL0FMYnZQR09xV1V0dDRYdElWZDN1YnEzczd4cFo5NkxINVNSc3F5RzRVZWFybzZEMnI5anI5cVBXUGpIOEdkSytLM2h5UnREMUhVclNNYTlvOER6ZjZIY0ZGa0NFVHhSU0ZXamVPV04yalhmRk5ISXVVZFdQd3o4UU5DL1p1K0ZQaTd3NzRKMEw0V1dra3QxcmQvZGF0cGZpL3dBUTZkb1drYUV5NE1ndUwrUU10dVVtbktaaWtiY3NjcVJNUzhMMVMrQi83RVg3WHZ4RStDWGh5KytCbnhDOEwvRE82MDNUaFpSL0VtMzhPU1JhdDRqaGE2dTd1NFdKSFJYVFMybXVvMWdMN0hsRmlzd2o4cVdFajRyaXJ3L3lEaC9BMFowY2NxZFZ2V1RVbHl1enZxbTIwN3BKSk9TU3ZiV1o3dkVlVFpQaytBZzZWYVZXck8xNlVvd1dscnQyVW0wcjI1ZWVNVkpTdXBPMWw5NS90RitBWWZpRjhIdGNzTFQ0YTZKNHExeXcwMjV2dkNXbDY5R1BKL3RkTGVRV3JyTHVWcmQ5N2JSTWpvNkIyS3V2V3ZrSDloajlwZjhBWk4rQlBndnd2OEgvQUJkOFpmRVBqcTU4YVNRVGVFYnZYTEs3VzR0RWthT09PM0VzY2ErWEUwbVdaamwwRXV4ZDBZSW9vcjBmQjNteHVFeHVFbkpxUDd0NlNhYWI1dG1ucDhQUzE3dTk5TFo4SVlLampvNGhWTHJTR3FiaTFlYVQxVm4xL0JkTkhGOFJMUFNmRTN4TytMbmovVnZGRnpwcitFdkZPbjZocG5pdUMzODZlMXRiWFF0RzFORk1iZlBKYU0yOW1oUXhUTkhjM0VZZVA3Uk9qK2l5L3RnZkdMNFhSV0hncndwOE4yK0luaVBVN1EzZGo0U2Z4RXRwSmEyRnVJNGJpN1RVcnBQMzhRbGt0UUlweDlwTFhUdnZaQVk0U2l2Nm80NHlQaHZNdkJyKzA4YmdLVldyR2hScUp1TFQ1bnBmbmhLTlRiVFNhdXZpdWY1MTRIaUhpdXA5SmpFWUdubVZlRkdXS3hVT1JUNW9ja1k4L0tvVFU0Sk9UdjhBRDdydTRjcmxKdjhBLzlrPScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnZGFpcnlGYWN0b3J5JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBY0FDSURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEN0crSS94cWswT0M1MHZRZFJodHJlMDg0M21xU09BcUtHSk8wbmhWVmM1WS9VWXhrK1BmRVQ0c2FiNE84T1hQanZ4Q3R6Y1JSMzBNTng5b3ZMZTFuY3p3clBGT3EzczBKbGdlTjBaWjAzUnNIWERISXEzclBpbnhQOE90ZDB2NHFlSGZoeG9makYvRFU0MUNMdzM0ZzF0OU90M3VJcFlwWTd0Wmxqa1V6eExIS0lWbFVSSk5ORmNGbGUyanJzZjJOUCtDa3Y3SXZnTDRZZUYvSDN3d2dleTFUeEY0enQ5QytJV3FlTE5jc0c4U25mSEpOL2E5KzVYRStucmRYRWdNckczaWdWNVBKampDaUN2WnkvTDQ0aWhLdDdPVlRsNlJhWGY0bnV0RnBaTyt4ODdtK2FWc0pYalJqS05OUysxSk45dmhXaWVyMXUxK3B4ZmgveFkydFdPbjM5L29OeHBhYXpIZHk2UXQzZldjejNjVnQ5bUU3N2JhZVV4QmZ0ZHQ4c3Zsc1JNcktwWG12VFBoLzhYZFUwSzlTMDhRM0RYVm82aEJOTTdGNFJuZzU1TEtPZU1FODhlaCtHL3dCdUw5b0c2L2JTK05Fbmk2NitJUGg2d1R3K3R0YjY3NFpzWnAvSzhTWEtheko1MCtrenpSK1ZLNzJrZW5oMnZCQ3M1czRHTWVMYUZWN3YvZ25UWitKckQ5bU94dE5kdVVlemkxblVJdENUTVpraXRJN2hveWtqUi9JeitjczV5cEtrRmNFaXUzTnVINm1YNEZZcVh1M2FYTHZ1bTlKYVh0YnQ1K1M1OGs0aWptV0tlRjBrMG0zSmFiTkxXT3RyMzc3Nlc2djlBNEx5K3VvRXViYUcxa2prUU5ISWw0U0dVaklJT3prRVVWODZMZDNTcUZXNWtBQXdBSFBGRmZNbjFSd3Y3UitrNnpydndKOFZhUm9kak5keXo2TktzOWhiUUdXYTl0c1p1TGFKUUNUTExENWthWUgzM1hwMXI1OCtEZndZK0RmakRXSDBENGhlS3JEU05JdU5NWnZEOTVIQXNrRi9QSzBjY1lpbkpFTUkyU21ZU3l5UlJFUkJIbnRoSjU4WDF6WG4ydS9zMC9EYlViclU5UzhQL3dCb2FCZDZ2Y2VmZlM2VGRCb1hrSnk3aTF1Rmx0VWR5Tnp1c1FkbXl4WWtrbjdmaFRpTEQ1WGhxdURxd2Y3eHBxVWJYVDJzNzIwL0xYVFc2K0U0djRheFdjVjZPTG9UUzltbW5HVjBtbjFUVjdOZW12eVBQZkZQd2Y4QUdsMW9HdG40WC9EZlRkQTFpMTBhMzArMThLZUpQRDFycFZ3Zkl0RE1JNUxoSWxNeGVlVWJQdFdIZmJiVHpYVHlXc0xWM1g3UEdqNlo4TFBocnAvZ0t6dnI3VXRPZzFHZU8zMTJmVG5nWnJtNG1ubm1odWJjamZZdWs1bGhBa3pHVDVLQ1V5eUdKZm43OXBqeGo0NitFM2lieHArelI4TFBIR3BlSDdHeitBdXNlUEpmRXVueUovYTF4cUZ2NWxxc1BteUswVnZBeUJHUDJlS0daWGpESktoTGJ2VFAyRE5XUDdRSHdGOEgvdE0rT3RQdDQ5VzFDeWxYU3REMDBORG8rZ1JRUExacEhZMm00cEdmTGpmOTgvbVRnWEVzWWtXSFpDbm9aOW5HVTQ3S1BZdU03cXpXeVhOYVNUZXIwc25mNVd0cXo0SGhuSk9QTUZ4bDdaWXFqOVhjcHB3Y1hKK3ppNmZNazFHRFVyeVhJNzJWNU9hbjdzVjc5UlJSWDV3ZnZKLy8yUT09JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdsYXR0ZScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVdBQnNEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDdROFMvRWY0aCtQOEE5cGJ3dit5cjhJTlUwL1ROVDhRMzAwY3V0MzhYbXBhSlp3MnQ5ZjhBbVI5U2ZzZHpBa0tManpaTGwzYWEzRm1JcjNFVDlsZjRnYTM0ZDhMZUlQRC9BTzNsOFdORzFEeEZiMjBjVjFxUGh1UFVMR0s3bWMrVWx3MFZvTGEybmJkQkcxcEpJdmxTU3VnbW5NUUVuekgrMXAvd1ZOMHY5bS85b3RkYjhOZkMyNDFxN3Q5YW1zTFNEVGRhYXgxUFRudHJxVzB1THFLNVcwbjhtYS9rMDgyb3QxV1dON2V5dDVadHJ2R2x2OWIvQUxMM3g0MTc5dUR3UHFmeHErQ0g3V2Rpa1YxcU1WbDR4bHR2aHhCcGVyUW9JNHAydDVMc1J3VE00aWtRTE91K0lzRzJsakd5ajh5V1VPZENNdVJ0dExacnFsdjd5NjMydm8xMnMvMUNHWS9WS1YzS01JOVhLUE5kM2V6NUo2V3RvN2FwMnZlNngvMmV2aXQ4WWJUNHNlSWYyWWZqcnFPbjY5NGo4SVdOdlBxSGl6UjdaYmUxdS90TzZTQlBMTzFoTnRXZU9TTVJoWTNzMytkekpzaTlzeWZXdkJ2aWZGOEMvd0JuenhSWStIdmc2Mm1lSXROOFR6V3VteCtLdFF0My90ZGRmL3RTMTAvN2RaNmtFaWluanNuMUdLR2V3dDJDRFpkeFRSRnJpN05lODF4NWhnSzJBY0kxRlp0ZG4wZHV2M1B6VE9Lbm1HRHpLYzZ1RmFjTHJhM1pPOWszYTk3cGRtajQrL2JrL3dDQ1d1ai9BTFJPc3krUGZoWGQyTmxxVnlKbXYvRCtvWDh0bFkzbHhOSWhlY1RSUXovWjhuelpwRlczWnBaaUhXU0JwTGhwK0crQW5qajROL3N4K0EvRmY3R243Ty83Tk9vWG1yZjJScTl4NHAvNFN6NHYzbzBuVTVKSXBCSTh0dkRaTmJ6N0VFY1VhdFpvZGtLRm1NaGVSaWl2V3luRlloMDdPVzJpL0FXSW8wNjFMa25xdGRMdjlCUGlkNHEwRysrT01ud2svczB0NGdzL0FEYTdxdXMzVnNrMEUzaDV0UTh1NDAxNG1iYmVHYjdKSkZzbVVMRXNnZEhQenhQM253MDBmOXZiNDIvRHpRL2pMOEcvanhiZUhmQ2ZpelNiZldQRG1qNmpxTnZkWE52WlhNWW1pODU3blNibVJaV1J3N3hlZktrVE1ZNDNhTkVORkZmdnZpbmlaVXNOU2FoQi92Skwzb1Fsc2x0elJkdk5yVjlkaitJZm83NU5nOFJpOFJlVlNOcU5KKzVWcTA5WlNsZS9zNXh1dmRWazdxTjVPS1RsSy84QS85az0nLFxuICAgIDAuOTRcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ21pbGtXZWxsJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBWkFCNERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOURQai9BUEhQVzlBc0xmeEJlYUhxSGlEVjlRdW85TjBIUnJGRzJ2S1VabFZud3kyOENJanlQS3dPQXAyaVNWa2pmNTkrTnY3WW5pdjRQZUVOVDFMeHZxMm0yZmlkSkVrOE1lRE5DYUthNnZIbEg3aUc1VmhLOHR1U3NtNmFNV3hQQVhEN1k1UFNQMnFQZ2JvdjdSR2krRS9obGUrRmJQeEZxVjE0d2piUVBER29hcE5ZMitxM1gySzhWa2x1WUdFdHZIRmJ0Y1hUU1JpUmxXMEpFRjF6YlRlOWZzNGY4RWt2MlQvMlpkWjA3eGo0SytIMzJyWGJEZVl2RXV2M2JYbDJ1WFZsQ1JIL0FFZTJkZG9IbndxczNYYklnWmdmeXpEWlBpOHlncTZxSlJ1K1p1OS95MSsvMVB2NTV6bCtXUWxRblI1cDJWdTF1MitubmROOWprYmViVUJkWHVsNnpvZHpwdC9wMS9MYVh0amRsQzhjaU5qSWFObVJsWlNycVF4K1Z4bkJ5bzIvRFBqZnhWNE9lUi9EZXRTMnZuQUNWRndWYjBKVTVHZmZHZVQ2MXRmdGYzbndhOEorQUgxand3dWxhYnJQaC9SOVgxV0UyTU1kdk5jUjZiRk5OY3hNSDJPOGNra1RSRUtaY21SNVJHeGlFMFBJVjFaNWxNc21yd3FVcE5SbmZsM1RWbnF1K2w5K3ZZODdLc2ZMTWFVcVZlSHZRdGZzNzlmdlR1dWhrK0o5TzE1cm5TUEYvZ3VlM2g4UStHZFhqMVRRcHJwdHFlYXFQRk5DejdYOHRaN2FhNXRtbENPMGEzRFNLcFpGRmVrNjcvd1VJL1p0MFRSejRVK0x2eHEwendGcW1xd0dPMXMvR092d2FmZVd4WkJsejVqR0oxVXR0ODFXa3QyWkhWWkhLU0JPTW9xTW56NnJsY2ZadUNuRzk3WHMwL1d6MDhyZnJkNWxrME1mVVZXTTNDUzAydW12TmQvTStKdjJodkhuZ0R4WkhjblhmaWc2YVo0aDhmWE1IaHhwREJkSjRsdkJlTFp3STFvR01Pb3d1bHRhQXlRbE0ya1M3Wm9yVGVsZXdmc2MvR254bDhRSnJud2RyRU41ZlE2UHBNTU9xVGlVM2tHaGFwQnRnbjB4dFNkZ2IrYmNybGxJa25oZUNWcmlVZmFiZU1mRzM3Y0gvSmUvalQvMlNmdzUvd0NySHZLKzNmOEFnblAvQU1vL1BnYi9BTmtoOE4vK215M3I5SDR6NG53MlljTlVxTThIRG5rb0pUKzBuN09uTnlWa3RYeld0ZTFscW5wYjhTNEI0SXpMQmNkNHZNdjdVck9IUFdtNlYvM2JVc1JYZ29OTnlYTEZ4Y2xaSnFUOXh3VG56Ly9aJyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdiYWxsb25GYXN0ZXInLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFkQUNNREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5cHZISHg2MDd3UGJEdzNvZG10N3FOdVdobTgwa1JRRlNWK2JITHR3T0FSMTVJUEZmTXZqai9nbzE4RHJEVnB0UDhhZnRxZUJ0S3U5T3ZKYk81dEp2SGRoWlBiM0VjcGlraGRGbFRiSWttWTJWaHVWaHRQUEZYdmlkcjJqNlg0RThRK0ovR25pYTYwelQ3YlNMdTYxWFdMZVJoTmFRckU3eXpxeWhtM3FvWndRQ2Nqb1RYeXQ4STc3eDdvWGd6UXZEdmlwOUgwclZOTDhIV2VuM2VsK0ZacFk3U3dWb25pbXRyWlNRWTdMQ2xJNHNBQkF5bklyNW5ockpjUnhoVXJjMWQwbFQ1YkpLNjF2dnF1M1h2MFAyamcvZ2lqbmpxeGpKUmNFbTI0M3UzK1cyMy9CUHFmd2IrM0w4TjlhMGFieDM0Si9hMThPYXJwZG5lcFkzT3AyM2pXMXZMU0c1a0h5UU94bGVNU05uNVVQekhzSytoZmhkOGZJdkVPci9BTmwrTDRZcmE2bmhTRzNtaEIyVE9HT0FSL0N4M2V1Q1IyNEZmbkZmMkZrbXNSK0liTFFyR2JXb05PbnQ3QytuVlVsU0oyamQ0UE9DczhjVHlSd3N3VUVFeG9TcEtyWHRuN0llczZMNGkvWlArR0hpTHczYlF3YWRxSHc5MFc2MCtDMzA3N0hIRkJKWXd2R2lRZWJMNUNoU0FJL05rMkFCZDc0M0d1Sk1ocjhIcWxPR0pkWG5iVm5HeVZrdXZNOWRmSTI0eDRHdzJSMDZhbFVVM1U1ck5SNVdyVzgzZmZZKy9QdDAvYlI1eU94ekZ6Nzh2bWl2Ry9EUDdUMTNvdWcydWs2dDRXdk5RdUxlSUk5NHQwZzgwRG9UdTV6akFKUFVnbnZSWEZITmNDNHB1ZHY2OUQ4c2xsT09VbWxHL3dBMS9tZVVYTnRiWHR0SlozbHVrME15RkpZcFVESzZrWUtrSGdnampGZkpYaXJ3YjRlL1k0dHRQMFg0aFRlTS9FZmgyQ0dLMDhMMzNoYnc3ZWF6ckYxQ0pKRit3WEZ0Q2hFMGtNZjJiWmNOS0pKdzhwMktZNVdsK3VLd2ZIL3cwOEdmRTJ3czdEeGxvNHVmN092aGU2WmNKSTBjMWxjaU9TTHpvWkVJYU4vTGxsVGNwQjJ5TU9oTmZMNEhNY2JnTHFqVWxGU3RmbGs0TjJkMG5LTm1rOW0xclp1elQxUHU4Tmk4WGhyeG8xNTBsSzNNNFNjWk5KM3RkTmI3YnA2Nk5QVStNZkVueFErSG54S2ZWOVU4R2FyNDY4SjZWcE5qZVdmaWpXdkYzaE9UU3RVOE9RcEJhM2NvanNaaDVrVnhQRE1waXVyai9Sb1BzNnl5QnR5dzNQMXQ4R2ZpRDhLOWQwTzM4Qy9EdXdnMFZkQ3NZYmUzOE1DM2pnTmxhSkhHc1hrSkdURkpicXBTTVNRTThTc3JSYmc4Ym92eFg4YVBFOC93Zi9hTThUL0NUNGRXN1cxOTRoOGFYYVdPdjM5MUpkUHA2NmQ0TDAzVkhZcTdicDVKSTRIZ1Jta0FoTHh1VmxXUHlYOVIvWUM4QjJueFZ2OEFVUGkvZTZoTFo2WjRFK0pYaWJTdkQzaHlORmwzYWpCZDNsamRhbFBPK2VaVmtsTU1FQ1FSMjZUeXhuejFFWGxmcU9lWlprRlRnMmpqTVRqS3pyOGtaUmpKdW9sT29tK1RtbHE0dEw0cFNiaWt2aXZZL0I4RDRoK0srZGVKVlRKcXNJVjh1cFZLMFl6cVRhcXhwUm5GYzErYWJjb3lmS291TGRUVG1sRGw5cFA2K2pXUW9DdWNVVll0TkltdXJkWjB2UWdiUHkrWG5IT1BXaXZ5bFlPckpYVjlmUS9hSGlLVVhabi8yUT09JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdtYXRlcmlhbFN0b3JhZ2UnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFaQUJvREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q3ZS9hMCtKbmlmNFgvQUFWMUR4ZjRWMVJiYlVuMVBUN2MzUmhFODhWdExld3BlejI4UkRlZmNSV2h1WjQ0OWttNTRsekhJTW8zeHczeHMrQ2Z4ZThMVzN3YzBqeG44UU5KZzhTK0s1bVhXNHJQY21pNm5xMXhKRkpxajI5emN4dEE4Y2txdjVpa1BHREdZeW9RRk9xLzRLamY4RkNvL3dCbFQ0NmZEM3dETjhQN2JVNU5NbnMvRituVHk2NUhiR2U2amt1N1pMZGthQ1J0ZysvdmphT1RjVkNzQUdEZkhIN1FQL0JSSHc3KzBkOFlqOFp2R1h3ZzFEVHJ0NzZ3dXJuU3RBOFdXOXRaWERXeWxXV1Jmc0RTTUo4czAzejVZdTIwb0Rpdm11RU05emJoN0N5V0VvMDcxSHJPVWJ6NUhaT0tkOUUrMW5xN25xY1hlRUdUZUllTndtT3pQSFlpRWFDY29VcWRiMmRLVTAzeXluQlFiazliWDUwcmU3YlYzL1k3eGg0czBYd0Q4VE5OK0ZuL0FBc0xTUEZkL3FNcFdadERzbXRXMDBmWjJtVXlwSk5Jc2lrUmxUNWNobFJwWXQwSWpFa3lkSXVyYXFpaEUxS2NBREFBbE9BUHpyODMvd0Jrbjl2THg3OFhmaXhhZkd5YjltSy9pOElmOEpuWStHdGU4VlI2b2J1MzA3VU5ZdVBKZ0VhK1hGNWszbjNGcUpKU1ptdDRKd3A4c1hhbVQ5R0srVjRncTVMTE5KeHl0cHhoYU05VnBVc3BOTkorNDdTaStWNjJhbHMwZlZZS2pqY0xSOW5pYWtaVFQreTcyWFJOOXo0bC93Q0NpUGllUzAvYmYrQXVtMy9pYXk4UDJlbjY5cDEybmlHK3Z4YlJXTFNhcmJpU2VTVW45MUhFc0NTR1E0Q2pKendhN0g0aTY3OEZZTkdqUHhHWDROZkcvd0NMTnI0UzFDMmkrT2EvRnp3WHBhUmFqSnBZaTA4dFkzdDVMRnJYMmFiWkY5czFLMUVpckNKQmJ6RlZSOFgvQUlLZmY4alA0Ui82OExyL0FORGpyNGsrUFA4QXlLRnQvd0JoSlA4QTBYSlcrV3FLb3J6dCtIazdycHZ1dWpSOXhETzUxTXF3K0RVTGV6ak9QTXBPTW56eWsvaWp5elM5Nnpqek9FckxtaTdKTDdpdVBqZit6ajRoK0FQaTZ5MWI0SmZFdlc3RFV2aWRwRm5xMmx5Zkd4UEVHdGFsNGdlWFJWMCtTMTF1RHhKZExFVWtrMHNMdDFLRVFtRTVWT2QvU1dYano5b0hTYk9IU3REL0FHTWZqL0RaVzBTeFdjVjM4UnZDZDFLa1NqQ0s4MXhyTTAwckJRQVhsbGtrWTVMTzdFc2ZqMy9nbTE5enhYLzJVUDRkZituYTZyOVdxL0hNcTRId09YWmxtTk9PS3hNdjMrcmVKcmU4NVVhRSthWHYrOVAzdVZ6ZnZTVVlwNkpKZmt1VjVWVXA0ckZ3ZGVkbzFHbGJsV25MRnBQM2RYcnZwNkgvMlE9PScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnZ29vZFN0b3JhZ2UnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFZQUJjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QzdjlxZjRzZnQwK05QRzNpTDRZL3NoandiNGUwL3czZTI5aHFmakhXL0YyalFYVVYvSmFXdDhJeGE2aktNeC9aNXlDQkMyN0laSmdVa2pIbXZpTzQ4TmZzL2ZDRzgvWkg4UmZ0SzIvaHE3OE9lSG9kSjFiVXB0RFZJb3BMclRCTlBOYUVQQk41S2lXVll4Rkd1RnQ0U25rSmhoNC8rMlYrMVYrMGQrenArM3Q0LytHZndkMWZ4elBlNm5CQ3VpZjJQZFhGeGNmWlo3TDdXNGhVMjBtVEZjWEYwWTJVdDVNY2F4cVZWWFErRitJLzJ2djJoUEdYaXkyOFUrS2ZEWGo3Vk5SdDlMbDA2MmZVWUpiaGxobGtoY2dtU3lacFcvY2dCcEM1QWtrNXkrYStTd21Ib1J3Rk5VSHlTbHkzbHkzNlhmVlhmYlhTL3lQNlI0WnhHVjROVXZicmxUVjV1TWJ5ZDc3ODAybXQwcmNxZDIybTBqOVdmMlJQMmtibjRwMzJ0ZkNEeEg0YzB1eTFId2pwOWhMcDJwNkhNVnNkYjAyWkdXRzVpdHBNVFdNcStWKytzbjh3MnBsaWpNMGpGdHBYd2oreGo0ZC9hWDFuNDErRy9pVkw4S05lOElhSDhUYjdVdkRHaWVLSlBFOE5yRnAyb1cxcEpjM01hNmZHRnVnekxvTHd5TktpSnVWQUpQM2F4RXI0aUt3dFdjNHd4RUo4a3BRYmkwMXpSZHBKcUxseXlUVFVvTjNqSk5iV1BnOHpqbDlMR3lqZ0p1cFMwczJrbnNycHBTa3JwOXBOYmFucW43VUh4SThKV24vQldQU2RCOGRmdEg2SjhLUmErRlpiT3c4YTZucll0RHBBbDBtK2FLNkRMSXJxd25tS29RVkpiYU55NXpYWGZFbjl2ZjlsdUM4dU5UOE02UjRCOFFlTklyTFQ3YS84QWpyQjhjUENHaGVKdGFSTHBKTlJranRyTzRWTEtlYTNhNXQ0cDRybU82S2VTc2wzR1dhV01vcjZMQzRPRmJBT256U2p6TFZ4ZG5yRkxSN3hhdmRTamFTZTBrZmZZaU1NeHlYRFVLeTkzMkhJck54YVRsSzc1b3ROMzZ4azVVM1pOd2JWenFyZjlwYjRKL0V2NE4vRHJXL0RYN1BIeEE4U1FlSmZIZXJEd1RwK2krTTdTVFdQN1pVYXkxN2REVXhyaXdTYjQ3ZlZXTXFhaEo1aVNsUUR1S3FVVVYvUDJSY0FaUTNqRXNSaUZiRTRoYVltc3I4dFdTNXBXbXJ5ZHJ5azlaTzdlcC9QV1E1YkxGUXhLbFhxTGtyVklLelMwakt5djd1L21mLy9aJyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdmb3VudGFpblN0YXJKZWxsaWVzJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBZEFDTURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENzM4Ui9FdlF2aC9wcWFSYld3bXVvOXlSV2NKQ3FpcTVVRmlCOHZBeUFBU2ZiclhubXRmR0R4MXJiRlRxYVdzUktrUTJrUVVLUjBJWTViUGZyWFBYOTljNm5mUzZsZXlsNXA1V2tsY2dETEU1SjQ0NjE0bDRydWZGM3hzOGJhdGNhSllhc1BCWGhkWTdQU2RTbTFuVi9EK2thL3dDSWhkM05yZmFkSmYyTWx2UE0xdXF3RlBMdVliWlhOeUpua2VPSkU2TUxocXVNeEVhTk8xMzFic2t1cmI2SmRXOUVjMk54bUd5N0NUeE5kdFJqMlY1TnZSUml0T2FUZWlXN1BvRHcxOFgvQUlxYWw4UjlLK0dmZys5bjFPOXZTWnRTa3U0Wkh0ZEx0RmluZFo3cVdPR1F4Q1Y0R2hpVTRNc2hPQ0VpbGVQMTd4RS94aStEbmpmVGZEbng5OEM2VHAwR3RXRUZ2WmEvNGQxdHIyMWJWY3p5UFlTUnlSUnl4TVlWVjQ1ZHJSeW56RUxSdXNheS9GdmdxNStNSDdIL0FNYy9DM3hOdnZDMnUrTXZDWGlMUUxqVGY3TjB5L24xT0RUYjZXN3VuK3hXK3RYOXhsZk5XT3psRU45UE9Ka2dtamh2STNNTnRYcWZ4TCtMUHhLL2FQMXp3aEhyM3c1SGcvUXZBOStkUkVlb2VSTmZhemZQYVgxc3B6YlhVa1VVY1VOODRaM0RTU3Z0VUNOWWQ5eDZHTHkraGg4S3IxRjdTTGZNdDAxZDhyZzFvNHRXYWF2ZS9rN2NFS21PeHNLV1lZS3JHZENmS25CKzdVaFp2bjUwN3ZtVzFrMG90V2FsYyttMTFLMngvcVoveHRaUC9pYUs4dDBmOW9TZlROTWhzTlkwSzR2TGlKZHNseWpnQ1RuZzlPdU1BKzRvcnh6MkR4ZjRoYW5ydDlybmhMNFFlRmZHbWorRjlYK0pIaVJ2RFdsZUxOZnZZNGJiUkozMCs4dWhkN1pFWkxpWUMwWlliWnRxM0Z3OE1UU1JySVpGeGZISGdQUnZCMnRlUHZobnBLMk43bzN3OTFld3RmQ1dsK0hOY3QwMUxVaFBQUFBKUGI2OU1seTZTQ1ZwNVpoTVdhVjJjeVluanhXVCsycnJONTRKL1o3MVQ0d2FLNGkxYndGZldYaVhTYmhZMU1pU1dkekhMSkVqTUdFZm53Q2UxZHNNREZjeUt5dWpNamZTL3dBUGRUOEIrSnZoZDRaK0xldGZCcncxREpPOE4zcVdtNmRCTUlHMytZenBDbDFKUEdtNjRZT2ZOU2RSSHVqVlVZck1tMkM0dHlmaGF0WFdZeW5GVnFmTFRkT01aU1U3Nys4N0xwdW10Zkt6OHZpSGhIT3VLTUpncDVYQ25KMHExNmtha3BSaTQyWDhxdTdwdU9rNHRYdXQyMThuZUtyZng5OGFQQ0NmQmp3N1lhOXFRMXJTTktzcnV6MDAvYmRROEczZDE0bk5wcCtzWHQ1WUxETmV0Wm0wT28rWkk4Y2JyWlR4b1lZbGRVOVI4UDZaOFEvaFpQUDhMZmpqNGlrMVRWTkoxbURROU84YTNQaHM2TGJlTXBqcGNXb0dlMGdhV1ZDNm8xekhJa1VqZ3ZZWExoWTFVeHg5SiswNFBIZndBMEcyK01Qd0QrSU12aG5UOVcrSlhodlR2RUhoQ1BTN2FXeDFIN2RyOWhwTTE1bllyMjl5MXRPcXQ1SlMySDJhRVJXOE9KREp5TnQ4UnZqajhUZmpYNDMwdnhEOGFkVWk4TStEL0ZkdllXbmhhenNyWllMNVpOQzArNnpjeXRHMHpoWnI2U1JWUjArYU9QSklCVS9qK1plSVhIbkZIaTFSdzJYeG92TFlVV21wdHhxeWpHcFQ1NjB1V2xaVms1dFJwUmZzbkdXc3JwU09IS3NteFBDZUllV1lpQ1U2M05XdEdUY0lyM1lLTWVhOHJKSkwzbTVTdGR0YUk2MVhjREFVL2xSVU1sd3lPVkdlUGVpdjFvK2lQLy9aJyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdmYXN0ZXJUcmFpblRyYWRpbmcxJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBYkFDSURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOWFmaUY4ZDlkdjR4NGE4SVhiV1ZqYm9JbXZJWElsdU52Y04xUmVCZ0RCUGM0TzBmRXQ1OFRmZ1ZyM2hpYld2aGQ4ZmZFdXZmR09UNGhXWnROZnNOWDFxZndtbWlYR3JRWEppOGxibGRDa0VYaDI1VldQRXpONWN3eGRUd1BKNzc4UWo0Ri93Q0VCMXcvRkM1MDJId3ovWTl6L3dBSkZOck15UjJhV1BsTjlvYWQzSVZZaEh2THN4QUM1SklGZmx6L0FNRk5QRittZnRGWFdtNkpvUDdZRi80ODhRMi9pcnhBbXJlR3I3d3RhNmZyZW1DMGoreHpSWHJYQmRiYUtDNnNOTnRraEZyWkc0YWQ3cDBsZEhsSDVaaDY4OFZXY3F6ZnZhTFJ0TFJ2cG90dXR2TS9VTW15ZDQzRjBzSGg3cHlhMjNiMlY3YnA5ZjhBSSszL0FBSDQwL1krdjlLK0hsdDhDUGhickhobjRxUlhFamZFalVkWTAvVS9Lc1k3cmRlNndsN3FVOE50WjYrejNzYTIwRXNNamlON2hiaTNUN05ITEUvMS93RENYNCthbHBGNGtXdjZxZFIwKzVSWTB2SkpUSTBBREhEYmhrdW8zSEk1T1B1OU1IOE5QaXAreGord0xiK0RMMVBnWjhlUGlsZWVKMWtnTmhiNjVaYUxGYVNKNXlHYmN4MDJQQjhrU2xNc1BuQzhIb2YwTi80SmRlSHRHOEovc0orQlBEdWg2aGQzU1dxYWlsM0xleElzZ3UvN1N1amNwKzdqalJsV2N5cXJvdTExVldWbkJEdHRpYXRURHRZaWxKcDZLMW1yN25vWnJ3cGlzQmxjY1JpYWMxQ2MzRmM4WEdTYVNrN1gxUzEwN3RTM3N6OU5JbTFpZUpaNE5Sc1hSMURJNjJwWU1EMElJazUrdEZmTHR0NDI4WFdkdkhhV3ZpZlVZNG9rQ1J4eDMwaXFxZ1lBQUJ3QUIyb3JwV2ZRL2svSC9nSHhQOWlTL25YM0hoLzdlMXZxK3Ivc2FmRWp3WDRkOE8zdXE2bjRyOEtYWGhyU3JPd2c4eHZ0ZXByL0FHZkRKSnlOa0VjbHlzazBuL0xPR09SOEhiZy9sdjhBRGJVZkJ2d2ovd0NDckhpLzRrYS80NTBDWFM5TitNMnVYbHZvdmhwVnQ3MHdKNGpOMnhndEpmbGl4RkJ1U0V1MnhXakRISEovWGo0dWZCZjRmZkduVE5Ncy9IOWpxTW45aGFtZFQwaTQwclg3M1RaN1c2TnRQYW1SWnJPYUtUbUM1bmpLbHRwRWh5TWdFZmtuOExmZ3o4TG0vd0NDNU5wOEJkWjhGMmV0K0VXOFo2M0pjYUo0bkRhdEhkU0h3NVBlbDUydkRLODdtNXVacHQwak1kN2c1K1ZjZWZsMG5QRDFhTXZnY1czM3V2Tysxdno4ajlGNFl6REJaWGluaWE5RjFPUzd0emN2U3pzMWZXemR1aTZwbjZFZUt2OEFnb0pxbjdSbW9mRS93RjhHNzNSdGM4RWFick56NGZ0TG14c3BiTzd2MS9zcXpsbWFPYThieVpIRjNQY3hxcnhSd1RSK1hJSmlnLzBpVDloN3hiNFkrRVh3dzhOL0FIWGRZa2xtdmRYdkY4TmFyTFl2YkhWWnJyN2JxMGtEMnpGcExTYUtOTG5LdVNoU0ZDSkRJend4Zm1WNGM4VTY3OE1mMmw5Si9aYzhDWG8wN3dENGkvYkY4VitHTmM4T1JRbzBWN285Zy9oKzN0ckYzWUdRd2lGM2lkTjJKa2RsbDh3TVFmMGkvd0NDWU9pYVg0OStDcS90SWVNclFhajQwMUx4QjRqMGlUVzdwaXh0N0cwMXU3dElyZTJpejVWcEdZclMyRWl3Skg1N3dwSkw1a2czMStnNXJsUEJHVDhGVS9ZNFdTeEVvMDF6cVZyejVMODBrMjFaeCtKSks4dHVYZC96VGsrTzhVc1Q0ajRqQ3JNNFBLMVVyVFZHY0ZLWEpHbzZhU2xHTUdwcVNrb3ZtYWpENGxVMGpENmZvb29yOHI1VDl2UC8yUT09JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdmb3VudGFpbkZhc3RlclByb2R1Y3Rpb24yJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBWUFCb0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENkd1SjVaNVh1cnFabmQyTFNTU05rc1R5U1NldjFyd1N4K01QN1FueEJnazhiL0RmV1BEdi9BQWptcjNWNlBCeTZWNE5rMTgzTnJhMzg5Z1o1N21QVnJWUTAwbHVaNDQwalA3bTRnTzV0MjQrdGVJdmhSNHovQUdrZjdaK0VYaExTcnVUUWRNMGxOUStKVjdGcFR6cTJreSthaTZaRHRkU2JpOE1jaU15Qi9JdG83bVY5ai9aeEx3bml2NHBhMTQvdTlDK0lHdjYzNGM4SnQ0cDA1cm0wdGJyVEo1MW1qZ3ZKYmN4Mm4yUzI4dXpZTlpOR1V1R1JWVlZmelFtUEwranlMTDhEWG8xTVppNVE5bENVSU5TazRMbW5LS1h2UjFUczdwV2ZNMVoydnpMNUhpak9NendWZWxsK1h4bDdhcEdVN3hncWpVWVJtN0tFbHl2bWNmZWQ0dUVmZVhOOEw3SDRTL0VNZkVMUTlTVFVMblJtMW53NzRrMUx3LzRqZzBMVmx2YmFHL3NidVMya01jZ0NreHlDTlo0OXlxeGluaVlqNWhYVTE1MTQ5OFgrS0xMVFBFZjdXR3QzWGhYUWJMd0Q0cC80UW54NXAxeGVXb2JXN1NJWE56RU5QdXc4VWQzZTJQbVN5ZlpvMWtrdXJlUzRhTkRLSWxmMFJIV1JCSWpBcXd5Q080cnk4MHdQOW1aaFBDODNOeTIxOVlxWFJ0YVhzN05xNjNQYnlYTTFuV1ZVOGNvY25QemU3ZTl1V1RqdmFMczdjeTBYdXRkYm5uK3RmRmp3bit6ZjhjTHp4UDhBRTNVdkYxaDRDK0puZ1dUdzE0dzFyUWRRTUZ0bzkzRHFOazloUE16dkhieHh5cGNYc0VyWE1pS1lpVWpramFSMHVPazBEeFovd1RxOFMrRWZGZC9vSDdRU1MyR2lhVzcyc09uZUpOSGx0bFdVWGswa01uMks1dkliVlBsbGJ6YnlXemhjc2tJY2J6TENVVjhybUhGM0VmQzNOUnl6RU9uQ28xS1NVWU84dEZlN2kzc2xwZXo2bjJXRThQdUZlTmZaWXJOcUxuVXB4bkdMNXBMM1VtMHVXL0wxYXZhNld6VDFQblUvdGtmczF3K0R2QnZ3bzBEOW9YUUg4VzNYaDdTYml6di9BTzFJbXRyTHlyZVdOWUx4b3pKRmN1WXA3Mk5OTXk4MG4yaGxqTnQ5b1c2SFpYa3FYOTNMZmFKK3lkOFk3cXlta2FTMHVkTytJYjZWYnpSRTVSNHJLVHhGYlBab1Z3VmdhM2dhSUVJWW9pcFJTaXYxREdjVjQrVk9QTlNwdlhyQlBaTFhXNnUrcjY2ZEVqK2JjbThJK0hvNG1wT2xpY1RUNWtwZnU2OHFmeHltMnIwMUY4cWF2R0xiU2JrL2lrMi8vOWs9JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdtYXRlcmlhbHNGYXN0ZXIyJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBZEFDQURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOXRmRUhqN3dGOElOTFZiUFJMY1gweGtqanRMR0ZJM2RVZGxEeU1COHFrakdlU1NUZ0hCeDgyZnREZjhGRVBGbmdyeGRvSHd1OERYL2hpNThhYS9xTnN0bjRhdXZFRnZwNldWaXp5bHRWdnBKRW5tZ3MwRUVrZm14d3lCNXZMaUNqZVdYVzFiVmIvWE5UbjFmVkxneTNGektaSnBDQU1zVGs4RGdmUWNDdnp0OGFlTnYyaE5QL0FPRXIvYXgrRkh3VnM3dndGNHg4U1NhMW9uanZVclJydHJuVC9zOE5uSE13eEd4aS93QkJKSHpyNVVkemJ4RUZrT2ZqY2l4V1dZL00vd0RoVHJ1amhvSnl0Rk51VFRWbzNqcXI2M2V5dGJSdTUwOFpZZmkvTCtIWExoakF3eG1PbTFGS3BValRoRG1UdlVibnBKUnN2ZFNjbmU5ckpvKzcvd0Jsai9nbzE4U1BqZTJ0Nlpya1ZucCt2K0dyd0pxZWlMTkhlVzAxcks4cTIxN0JPc0VFa2tNcGduUUZraklsdDUxQVpVV1IvcGY0Y2ZIanc5NHMxUmJUV292N092cGJaSS8zamp5WlhWandqRTVCTzQvS1Iyd0NUWDVtZnNpZkVQOEFaVytJM3dJOFVmRUQ0MS9zOGVIL0FCWDQ1dWZGcDBMUU5kOFBXMFZscTl0NUZyYnk0dHRTZ0NYZGdBYmwzQmlrZVF2ZGxsQ3hTcERGNzMreTk0NDhSZkVQNEcrSC9IbXZhcExldnFNY3MrbWF0S1lQTTFIVHpQSjlodldOdXFSRnByVVFURmtTSldNbTRRd1o4bVB1NGl3MGNzcWYybGxzM0xDVlpmdTR6YjVrbXIyMTFhV3FiOUwzYk51R3FlYTR2TGFlQ3o2bENuajZjVjdWMHRhZk5mbzdLL1I3THJheUdmdFQrTEpmQXY3UEhpN3hpMmwzbDVaYWJvOGx4cnNXbWFtMW5lSnBTa0cvbHRabElNZHlscDU4a0pCWDk2a1l5TTVIRUo4U2YyVElOSC80UnRQK0NXZWxDd1dhU1g3Q1BoajRJRVBtT05ydnNGMXQzTU9DY1pJNE5kUCsyMy95Wmg4WGYreVlhLzhBK202ZXVJay8xamY3eHI4eXh1Wll2TDZVUFl1M00zZlZyYmx0czEzUDBmQ1lLampLa3ZhZExkdlB1bVVQRnY3UTM3Q1h3aThINnZmK0tmOEFnbUZvK2o2QjltbHZ0Y21Id2w4R0MwWlJ0Vm1tS1hCUXlQdUNxamZQSWZsUU1RUVBSLzJZUGlIYmZFSFN2RmNta2VBWi9DdWo2ZjR4dWJmUWZEdW9OQXQ1WjJ6UXd5eWViREJQS2x1alhVbDJZSTFLcDlsK3ptTlJFWXlmbWY4QWJHK0xjUDdQdndWOFYvSE9Yd3d1dGp3OW9zSmswZVM1RU1kN0hOY3JBMFRzeVNEWVJMa3FVWU1CdEk1elcvOEFzbzZSNGx2ZjJseDhNSVBFNnhMNEU4UFErSU5TMUg3TTdTM3lhdmVYNGJUclg5NS9vVm5ITFpLZkpmN1FyeHJBb0NTVzZUMSt2eTRTd2VJOFA2ZWVZbkd6NTNUalBra25LS2xLVW9xSzF1dVpxeWYyYlBtMGFhL25haDRuY1N2eFhxY05VTXVweXc2cjFhWHRGTlFueXdoVGxLYlQwZnMxTk9TMGRUbmp5V2RPU24vLzJRPT0nLFxuICAgIDAuOTRcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ2dvb2RzRmFzdGVyMicsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWFBQ0FEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDdkOFlmSENXeGhUU3ZDcVJ5VGlKZlB2WEc1VmJieUVYdVFjY25qam9ldGZPbmlYOXJodkcveEIwM3dWNEErS1BoSFd4ZDZCcWV1YWhxT3FlTmhiMkZuRGFUV3NKVm5nam1XSGViaVFxKzNhRGF1cENvWkpvTWI5c2J4WDhHZkQzd2RmU3YyZ0xJemVGTmJ2MHR0VkJrVkFJb1k1TDF3cnVqb3N6SmFPa0htSTBUWEx3TEtCR3pzdGZ4ZiswdC93QUUwdmdiNFU4U3ovc2ZmR1g0VWFKOFJJSXZLbjhUNng0L3VkYVM0czdxYWE5RnVrekpGOXFrZ3g1SUtJWElhMVNhNklGeWt2UGlLc3FkTnRkRmZwZlRzdXJQdU9FK0hjQm1sT1dKeGtueXAyNWJKSjZLOHBTNTR5U1YxOE1aWGVqYVYyZWdmRFA0Ny9FMXZIMnAvRC9XSllkTzFIUy9EK25hdFBCWWF0YzNLUUM4dWRRaFMzbWp1cmFCbzUwU3dWM1I0d3lOTVl5b01lOS9kUGgxOFlWMWk2YlNQRUZ1RnZMaDFFTWtSQ3BNK051TU1RRllnRHZnbk9NY0EvbUg4UlAyMGREK0pkdnB2aUxSL2k1OElOQzFYVkx1emswN3hQNGU4UXhhWnFXbHpYVjliU1NQZUxKdmU3aVdNWEN5eDNPMkROMDA4bHN6MjZpdnNYNFQvRUZQaWI4UDlKK0lWcnBVdW5mMmpCNXEyclhrRndZbURGZmxtdDVIaWxYS2txNk1ReWxTT3VCeDRESDFLOVNWQ3ZUY0tpU2RtMDd4ZlZPTGEwZWpWN3A3Nk5ONjhlY0pTNFp6QlRwY3ZzYW53OHM0enRvdEcxS1crclYzcnJiWXBmRkx4VHJmZ0s5OEhlUHRHMFhSTlMvc254L28vbldHdTJSbWpjM0Z3TEtHVkNDR2psaHVMbUM1VmxJSit6bGNnT2E5Ny80YWgrUGYvUEh3ci80QTNYL3grdm5qOW9EL0FKRWpTLzhBc2Z2Q3YvcC8wK3ZVNi9QT1A4UldvWmpTNUhhOFBMdXpYZy9EMHErQ3FPYTJsK2lLM3hSLzRLRS90Ri9EQ3gxRFVMcndKNFh2SUxXZEZqdm9CZWZacldJbTJEWEYrd2N2WndJSnBwWG1DU3hKRmFPV2RaSGpoZnpyNExhejRudU5BdU5JK0kvOW4ybmladFN2ZFJ2TkUwMC82TnA5cmQzazF4YTI5c2RvV1cyaGhrUzJTU1BNZWJaNHdkMGJCZXdtQVh4c0pWR0dFOFdHSFg3aVY0SDhFOWExay84QURQOEFvcDFhNit4M1B3dXZicTV0UFBieXBaMHRkS1ZaV1hPR2NMSklBeEdRSkdBUHpIUDd0bFhBbVQ0TGczRDV4UmNsV3FVS1ZTVjNkWGxHSE1rdWliZk41TzYyc2wvSTBQR2ZpbkhlSytKNFl4VUtjc05UeFZXakZxTGpOSlRyY2pidTAzR05QbGVudkxsZnV5akp6Ly9aJyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICd0b3lTdG9yZScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWFBQjhEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDY1OGVmRmJWZFFrZlFQRGQ2MXZZd3N5R2FJa1BjRGNjSFBWVnhnQURHZWM5Y0R5N3dYcVB4TitKZmdXODhjK0IvQTJsdkZFOFl0STlXOFNmWnpJWGVUNVhDUXlPcktxZk41YVNLcjdrWmhoV2ZWdmhya2lwQjRkc3JPNXVuWWtRM3VvZloxWlZWbmZhUWpzNzdWT0VWU1QzS3FHWVl2N1Azd04rS0hoelRkRHN2R2Z4cmswaTY4T3BCREplYWJHMXdkYWhsbnRwZFNpa01zWWlpKzF0QU15cXYycFpTWlk1STkwcTNQbjRuR1JwMVZTakwzdXZsMis4L1ZPQWVFY0huR1hZckdZNmh6d2p5S0ZwTk52bTk5SlJhNld2emRMOHQyalI4WDNtdmVCNDlJdlBFTm5wUzIycTMwZGo1VUdxTzkxOXBmQXhGRDVJODJOYzduYmNwV01GeXVBYTdmd1Y4VXRmOEh2NVRIN1piYkFnZ25rT1VBNkJEL0NQYnAxNEdjMTViZmZBLzlvelUvaWw0VzBHeUdrNjVwK2dYczB0dGR0clZ6YTJOdW90SHRnSW9adk9samNwTnVDNW5VUnh6QXp2S0kvTjZYVHJ3MzlsSGR0YXlRTTYvUEJOdDN4TjBaRzJrcmtISU9DUmtjRWptbmdzWkhFTjA1TmM2MWE2MmJhVDlHMHp6L0VUaG5BY080K2pIQVIvZFNnbTNkdjNtNWFPK3FhU1MwOTEyZHRVemx2aXhKNGhtdS9ER2grRWJMVFpOVTFMWDVZTEc0MUcxbGMyekxwdDdNend2RThiUXlsSW5qRW05QUJJdzNmTnozM3d0L2FpL1owL1ptOE8yM3d4OGYrTU5KMUM0dTF0TlF0ZFExcnhIQzA4MTEvcjRXa20xR1R6bGhXY05OSHZlWDdQNSswQUtVQzRQaWJROUU4U2FGY2FSNGkwZTF2N1NSUTcydDdickxHekl3ZENWWUVFcXlxd1BZcUNPUlZEd3Y0UThKV3ZoeTRzN1h3dnAwY09yaHBOVmlqc293dDY3cnNkcFFCaVFzb0NrdG5JR0R4WG41emxGSE9vdkRZaHZrYVQwdW5kTjMxVDFUV2x2WHl0Ni9DbWI1WmwzQ0ZSNG5DdXIrOVVkS2tvWHZ5dFBaclRwWko3NjdXZytMUGpMeFA4QUdUWGZHUGg3NGRlTnJjUXdheWRLaG5oOHkzdENyV3dlWjdhWk1zazBVOXlDbHd5T3IvWUlsVDdPSkh1R3ovaHQ0MDAwYUZvV21Rd3dRYWJlcE5aYVJLd2h0V2puZ2FYYllHQU50bGNRUXlNazFxWklKa3RacFFJWXpDci9BQlRxUGpEeGFmMk5ya0h4UnFKR3IvdENhYnBHcWo3YkovcHVueldsakZOWnk4L3ZJSkkyWkdpYktNcElJSU9LK3JQaE5CRHF2N1hueHAxUFZJVnViblJOUTBUVGRGdUxoUTcyRm5Ob2xoY3kyMERIbUtKNXlabWpYQ3RJUzVCYm12MCtPV1pOaCtFYWRlT0hTcU9FUGVUYWQzeldidmU5a3RWMXZlNlovSzNFZkVuSE9MOGVNZmswOHpsTENVY1JpSXdwVGlwUlZPbTRYZ3JPTFRmT25HU2Z1T05tcFFmS3YvL1onLFxuICAgIDAuOTRcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ2NvdHRvbScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVlBQnNEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlLL0dYak85MUtTNThWK01OWWVUeTQyZWFlVWtpTkJsc0tCMEE1d29IZmdWMDlwOEJmaWZlYUpwK3BGdEF0N3JWdHJhZnAxMXFrb2taVEdaTU95UU1xdUZCeUFXUVkrK2VNeS9CRHdKNHAxTk5UK0tCdlZnMHA5STFTdzBxNXNMbkUwRHBpT1c0T2NGSmhOSEpIR1ZCMnJGSXhZK2NvWDIyOHU5S3NrbnNkWXZvVGRvOFJNMXpPSTJtUmlwTWlGaU5vVStaaFFjRGJ6bkl6OC9rdkRHRGxnbzE4YkhublBXMTJ1VmRObXRYdTc2cmF5MVo5L2lzVEhEcFVhTVU1SjY3MlczdTJYTHRmM25mUjZhV2JQbGJTdFd0Tlh0Mm50V3cwVXp3WEVSWUZvWlVZcThiYlNSbFdCSEJJT01na0VHdW8wMzRvL0VEU0xHUFRkTzhWWFVjRUs3WW93d08wZW5JclorT2RtZkZlalhYeHV0TFc1a3NQRDN3OHY4QVVFOFJRcGJwYVhxVzA1bEZxOGU4WERPOEVjakl4QWpnTDVHOHlTUjF3OWZOY1E1TFd5REZKMDVQa25mbDExVnJYakx6VjEwVjk3SFhPTkN2UmpXaFp4bGV5dXBXdDB2YnMxclpQeXR2YitHL3hBaStEZnhKaDhXK0p2RTNpYi9oRnIzZW1wYWZZbDdtMXNyc3hoSTd0NFZEU0NFaFJHNGpEQlhNVXpMR2kzRXRhMDMvQUFVRStCc3V1UjZHbXBhVnJ2aDN5cm01T3ZXaXh6YVZwUGxsZkx0N3E4aTMyOXJJWTNiWUh3TVJrRmdYaUVoUlgySENtUHhHSXlscXErYjJjb3dWL3dDVi93Q1Y3THlzZlZaTmtlQXpqQ3p4T0pUY28yaXJPMmkyZW10L2V0ZSt5WHorRDlPK0lQeFF2dkIvZ2Z3RmYvSEh4VkpheDZaYzNkbDRZMW54TGRYOHQzTjUxbE9tb2g1L3RIblBaVFlrUVhhVDI2elhrSTNSaExlT3R1OS80S0pmRk9HNWVEd1A4QjR2SE9teDRTTHhSNGUwcnhaTGFYamdZbFZHMDN3L3FWcm1PUVBFeXgza3hWNDJWL0xjUEVoUlg2ajRoWlZrcXdGR3RVd3NKUzUrVzc1azdPQ2s5WVNpM3E5bmRMb2xxZjU5K0R1ZThaWnpuK0t3MVhOOFFvS256Sk4wNmlUVmFWTlc5dFRxVzkyT3JWcFBhVGNZd1VmLzJRPT0nLFxuICAgIDAuOTRcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ3Jlc2VhcmNoU3BlZWQnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFZQUI0REFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5S05FOFIrUHZqOThiZFgrRmVrUlJTdDRZOExXT3FhdmV5WGtiU1dpWDh0N0RZcGIyaFpQT1V2cHQxNXJTU3dZQWoyR2RqTDVNdWwvQkh4LzRLMUsrc1BqViswYjRZMUdPN1Z4WVdIaHZ3UmNhUGZhWXJLTnBsbWt2ZFVpa2NaM0RNS2hzcjh1QVNZL2d6NG04R2VEZjJqcjdTckN6SThXK0ovaC9QcWdrUmdEY1dHaFRORXNKMmdPZjlJOFJvUjgyQnVPQjh4TmNUKzBuOGUvRHY3T3Z3YThUZkh2eDZ0M2UyMmlXWnVIZ2dWcEo3KzVrY1J3d0tlZm5tbmtqakRzUXFtVGM3S29aaC9OM0RXUWNPNDdoL0RZeXBoVlVyMWsrYVUyNVhhazQzU2JzdFZaV3RvdFQ5TG5VekdXWXp3MUtvMUdMU1VZcXoxU3N0RmQvbTJ6NTIvYXAvd0NDamY3SXY3SUwrTGZoeDROL2FWK00vd0FYL0YxbGVTeFhOeHB2aHp3NVBwM2hqVUkyZ2tTeGxuTnJwYVR4bHQwRTBjZjJpZU5mdE1iUzIwNnh5UjlML3dBRXQvOEFncXY4UVAydi9HdnhSMGpUdmh0QjRhMFB3cytsVDZIYXphakpQTk5EZUc4VE54czJvc3dOa1hQbGtxQlBzeS9saVYveU8vWmQvWW0vYTMvYjIrSlV2d3orRWVtWFdyM2kzTjdQNHc4ZmExZnppenNyMkpUTGRTM053RmI3UmR5T3hieUF4bmxhVGNRRUVrcWZ0Sit4Wit4aDhPUDJFUGc0L3dBQy9oOXJFMnIzVU9zWEV2aXpYYm05TThtcGF3bTIxdVpEZzdZd3B0MWlFYWdCUkVBMjU5N3N2RkRMdUh1SDhsamlNSGhvMHNTMm9RbFRTaHk2cVVuSlJzbmVNWEZYVGZ2TzNVOWZMS2RPVlQ2dlVxeXFYWE5KU2ZNdkszYlYvZ2V0V1hpblJQaGQ0NTAvNHdhaDROMURVcE5Pc1o3QzV1OUpnOCs1c0xDU2UxdkozU0JRWkxuZEpwMXNoaWlCa1lObEZkbENueGo5dFA0R1dIN1F2ajd3SDhXRDhlL0MvZzM0QUR3L2ZYOXg0cjFEeGF0clo2cEZxVnBlYWZlUUpNWVhpMlRhZGNtQzN2STdoV1NEVWI1d3lUSmJTVVVWMCtFR01xWXZLNTRlb2xhbEpjcjF1dWROdlcvZlk4SFA1endlSmpYcE8wcEozN2FXWDVmOEE4ZDhFZkh2V2ZCWGhyeEhiL0RQNDNXMEdsNjE0MjFqd3Y0UnV0RTFhYVN4dnROcy9FVjU5bXQ5UFd6a0R4cUxPM2FOSnJJaGt0azN1czBWc2l4K28vc2cvRnZWL0ZPdjZ6NENzNHJqV0xXUFV0WjFqeExyVTF5Wm4wYldielVmdGt1bFRUcHVodUp2TXU3dHRpTWtsdEZEQXNpUDUwY3psRmZ2UGp2bG1UeDhIbFdlRnB1Y2ZZTlNzMUpTbEdLYzA0dFhsWnRhM2krc1c5VCtVZkIzTWMreFBqbGk2TThmVzlrcDRxOU56NW9PTWExUzBPV1NsYUtiNWx5OHNvdFdqSlJjb3kvLzJRPT0nLFxuICAgIDAuOTRcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ21vcmVTdG9yYWdlU3BhY2UxJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBWkFDRURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOVpmaXA4WmRWMXk0dWZEUGhpL2FEU2hOS0hsaE8xN3ZjeEp5ZW9Ua2dMM0I1endCODdmdEMvdGEvQUg5bHpTSTlSK01ueEF0N0M0dUlXbHNkSHQ0MnVMNjdSVGd1bHZHQy9saGlxdE13V0pDeTczUUhOY3Qvd1VSL2FubC9aQy9aYzFyNG9hVklrZXMzY3FhVjRldUo0c3cyMTVPR3hjU0ZsTWVJbzBrbFZKQ2l6UEdrRzlXbVUxK1dQd0MvWUMvYVQvYnI4QjYvKzBKZi9GSFJuU08vWnB0QzhRNnZxZDNybXJ3d1F3NXZqYld0cmRYZW9oSTdtQkhMbDNqU1dOWkVBWGRYNWRTb1R6QnZFVjVPM1JLMTM2WDBTWDlhbjYza1dRL1cxeXhrb1U0MnZKM3RyM3NucStuK1NQMHYvWnAvNEtyZnNoL3RNK0lJdkJHbCtKNzd3bDRrdXJndzZmNGY4YlJRMnN0ODI5RVJZSm9wWmJhYVIyZkNRSk1abUNzd2oyamRYMWY0QitJM2lINGZhb2w5cGMzbVFaSW1zNVdQbHlBNHp4L0MzeXI4dzUrVWRSd2Z3WTA3L2dtUGQrTHZnaDRxK092Z0Q0Ky9ET0R3NTRZZ21odXJsb05kc0lOVnZCYXZjLzJiYlIzbWt3dzMxMjBNWmJ5VllPc1pETTBTTUhyNm8vNElQZnQxZUtQaTZOWi9aVThkZUpiblhHMFhSbjFqd3RmUzNZdTJzck9LZUsydWJKNXkyNW9sa250M3Q4Zy9JOHE1U09PR01FOEo3T2w5Wnd6Y2JhMjh1NmEzWCtSNlBFSERjTXRjb3FhbkZhTldhYWVtalRTYWVxZnozUDJUL3dDR2ovQnYvUGZWL3dEd1h3Zi9BQjZpdkRLS1g5dFl6eSs3L2dueFg5bDRUcy92UE1QMjNOQjF2eFYreGg4WGZDL2hyU2JpL3dCUzFMNFlhL2E2Zlkya1JrbHVaNU5PblNPTkZITE16RUFBY2trQ3Z6aC9aUDhBaTcreVRENFcwbjRoL0VYOXB2dzdhWFh3KzhVNm5xOWg0TzB6NGcyK2phbjRndVo0Tk9XMWhpdjJsUmJLMzh5MWs4KzRSek9pRGJFaFp4SkgrdHRGY0dIclFwVzVvM3RydmJ0NVBacFA4ejdmSXVKc1JrV0RyMEtVRS9hdU4zZXpTU2ttbHA5cU0ybTAxSmJwcG41NldQN1VYd1kvNEtFL3RHZUI5UitPSHgvK0YzZ2JYUEJOMVpYRUhoSHczNHlzOVEwenhuYzMrcXpUU1FXZHM5NXN0cmlZd0NLNmpqa3U1YmczTUx2SEZsQk45R3A4V1BDSGhiOXByV2RFK0dQeDI4SDY3NGc4ZmVMckhWdkVmdzBhMmlrMTlJeHB0bHAwbDRaVnZ3MXRCRGEyTVZ6dm10WEVnajhoR0RUd2xmVmZqSC95SnNQL0FHTWVqZjhBcHp0YTgrL1k1LzVDM3haLzdLVkQvd0NvN29sZm1lWlpaajhiNG9Vc3dXTnFSWHNHK1MxTnJrVTZLblR1NFg1YWtrcFNsOGF0YU1scGI4NHpyTmN6eDNHZEREcXB5VWZaem5HQ1RhZ2xOTndpMjI3TnlrOWJ0WHNlMVVVVVYramNpUG9ULzlrPScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnbW9yZVN0b3JhZ2VTcGFjZTInLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFkQUI4REFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5dnRiOFFmRHI0U1drK3B5YUhhVzA2M0xSVzBWamF4ck5OdVZYSVhHTUtvWVpKSUFBQTZrQS9LSDdhWC9CWG40VS9zcGFUSkw4Uy9HMXJwbDY5djhBYUxYd3pvMFVkenFjOERpWGE3Q1pna1NIeUp3c3NoaFIyaWRGWm5BV3UwOFgrS2RUOFplSUxqeEJxeHhMTy95eDVHSWtIQ29NQWNBY2UvVThrMStVSHhqL0FHWmROOGEvOEZJdmlpL3hwOEc2cjhZNythM2huOE9lSHRFZVRScm1JM2MxamJXNlF0YUZnODF0WjNjY1N6U0k0YzJnZVJXV1NSSy9PSG1Nc1ZXY1l5Y1lMWkxSdjFhVGE4N2VpVForbjhOY0xRelRGcWxWZDVKT1VtN095Vzl1WnFQcHpOSys3U3UxOVJmc3ovOEFCeWg4UHZpbDQwZndkOGFKN3I0ZlhMMzh5NmJlNnZGRlBwZDFBc3NjY2J5ei9aNFpiWXZ2Wmk3eGkzaldNNXVNa0Evb3I0RS9hUjBIWHJ1MWZ4ZEN0bEtJSkI5c2crYTNkVzJzRzZsbCs2QUI4d09jNUhTdndmOEEybVAyRy9nQjhPUDJWWlBHZnc1dEl2RzF6ck9yUzIwWHhJMHllY2FkNFZ1N1M5ampPbStTdC9kd3k2bEpHM20rWkk3MnhnTE5hL2EwSzNhZmZ2OEF3VEM4UGE5NGMvNEo5ZkNLRHhENHJsMWlXKzhEV09wMjgwc1JRMnR2ZVJDNmhzMUJkdmt0NDVrdDB4Z2JJVXdxajVSTlRHMThJK1pTZDlMeGJjbFo2cHB2MDZOK3U2UFg0bzRTeXJCVXFkYkRYOW5OemlycFJsZUZsTFJOMnM1Vzk1SitWck4rN3lQNWFOSVZMYlFUaFJrbjZWK0x2dy8xRDlyRDl0Lzl1UHhkNHpzUDJnOWErQ2ZpalU0TCtMUnJXMzFHNnNieVM0aGVLMVRRSTMrMTZmSEJLVXhiNzdtUzNFczBFaXlCSkpFUi93Qm82L0wvQVBacytDL2duNHJmOEZDZmlqcFhqelJyYlZvTER4RjR4MUd3MC9VRWRyT1M4R3V1SURkUnh1anp3SThvZDRVa2lNZ1RidlVNYTRjdnJTb3pUU1RiYVd2YlZ2OEFMYzlmZzdCNFhGMWNYS3U1SlU2TXBlN3Y4VVkyYXVycjN0VmRYMnVqeVQ0bGZCMzlzM1VmMmZQRm1zL0dIL2dvRjhZdEcwOGFSckZ6bzNndjR4RFVOTkhqVy8wWlB0VTJtMjFtMnYzTTAweVN4cEdKSHR6Q2wwWW9DNnp5Unh0K2puN051czZCK3gzb0dqZnNRL0d2NDY2WHFlb2VFZkN0aC93aS9palZMQ0RRNGRYMDE1TDJHQ3lnaGU0azgyZXpoc1FraFZtSmlhM2tjbDVIcmhmam5xUDdaMzdML3dDejc0MS9hTDBuOXBMd3I0ajE3d1g0SHZic1I2MzhNekJiMzJtV0VGemVRNmNZN0MvdC9KRVVyemkzZVBhc1NYbHdra1Z3cTJndE56VkxqNDdmdFVmRTd4TCt6cmNmRnJTL0QzZ3JUdkNXaWFyckR3ZUVJdFExaTZudTd6VXdxMjgxN0xMWXd4bzJtUWtpYXd1V1lTU2JXaWZ5NUkvaCtMODU0NnA4WllIQ1liRDAzaEpScU44MVJLVTdleXZLVnFNM1Q5aTVTNVl3bE5WRk83czFaZkFjVlo1anNMeExSeTJoVGpLbFBtY09WdmxkbEhtZDVxTWsxb25lS2J0b3JXUC8yUT09JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdmYXN0ZXJCYWxsb25FeHBsb3JhdGlvbjInLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFhQUI4REFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QzNzQwZkc3eGw4Ui9pL29Id1EwVHhUUDRXMHJXdEUxVFZOVDFpeTBsTCs1Z3RiTjdPQXJGREpORkdaM212NEdXU1V5UlJDSWd3eWxobmwvRHZoYnhRejNtaGE3KzB4Tks2UmsrSDdLMjhKV0s2bmRyQzZSM1V0MWQvYURDNnBKSXFrUTJFVzB1aXN3SkRNYWY0aitIK2ovdHpmQ0dMNHM2VmJham90bnBQaUhXTk0wKzduOHZPdFc1MDZLMm5pR1I1c3NWdmRYN2VYaDh4bVp0aEtCbGkrSTNnZnhQOFRkUDA3eEQ0TjhZLzhJdnJGaGJYRnB1MHUzM1F4eU1ZMWJFbHlzbHk4VU54YnhUZVQ1b2p1UkFJcGk2T0hYMzhtdzlIRktVS2xCdEt6VTdxemJiVGphOTdwSzcwdFpxMnAvUTNocndsa1dkY09xdmk4SXB5VXI4OTk3U2t1WHVuWmFyVldjV3JTTXcyZjdTdXUzRjBmQlh4ZStHODJtZmFaVnRkVmw4STNkekpBOE1yeFNXc2tNV3BJa3JoMUlhWlpJOWp4TW5rSGR1VDE3OW1IOXBMeEg0cDhJbVQ0aFRXeXp3YXhxZW0zMTlEdW1WN2l4dlpySjVGQWRtQ1NOYkZ3ak16eDd3akVsVFZENEs2UjhPZmg2ZzhQZU90SnZ2RVNSV0dveVdVL2tXMXRJTHU0TWdhZGx0N1pMZnpDYm1UQk1ZT1MwMkpKRU9mTWYyUzlKMDNRZjJkL0RHajZCSEIvWkZ2YVNwNGZtdHd1TG5UUFBrK3hYREVmZWVXMjhtVm1Qek0wakZ1U2F3emZEMGNOVzVLZEp4WDh6ZWtyN3BLN2Z1OVhwdjFQQzhWT0djaTRld3RENmpodlp5bEozbHpOcDZYdEZOdlJhWGVsbnByZTUxZmpyd0xwZmp6UzRiUzh2THV4dkxHNkYzbytzYWRJcVhXbVhhcXlMUEN6S3k3dHJ1akk2dkhMSEpKRktra1VqeHRnZkRuOW9YeExaejZqcDkzK3h2NGw4WCtLTkV2ZFNzL0dMZUZOYTByU3RNU0dLNURhZmRySmZYVXlTeVRhZE5aTkpFWEYxR3pabFJZcExSbjdtdktybTZ1ZEMrUFB4RnZORHVKTE9hNzhHK0VZN3VXMGN4dE1qeitKbGRYSzRMQmxpaUJCNmlOQWZ1akg1L3hiU295eXYyMVZPU3B2NFBhVllSbHplNjFMMlZTbTVLenVydmRkcnAvQjhKWVpadG1Dd0dJcVZQWXRTYmpHcFVnbm9rN3FFb3FWMGx2ZlpIUDM4bmpINDcvQUErdnRZOGIzK29lSC9COTVyK3JwNDA4S2FtOEZqcTFucE1GN2RRbTBrdnc2UUpid1F4Z1hVUldPVndMbG83cmxZRDZiNFk4VjJXa2ExcHZ3cTFpR3l0dFVmUTViM1RvOUxpS1dzOW5ienBBeFNNL05ibEJMYkZvbitWVFBzaWt1QkU4ZzhJMURXdFltL2FRK0NYaHFiVnJsOU8xYjRoZkZhNTFYVDJuWXdYczl0cUU4bHRMS21kc2p4T3pQR3pBbEdZbFNDYTdyOWg5RTFYNFRhbDQ0MU5CYzYxcXZqVHhCRnFtc1RqZmRYa2RyckY3Yld5U3luNTVGaWdqamlqREVoSTBWRndvQXI5YnpIQlpYUTRab1ZhZEtYTzFUczNVbksxNmNKUDQzSjh1dGxHNnM3dFBWby9tVGhUaWpqelBQRWJGNExNYzBxVjhOUjl2eTA2dDU4c0lZaXBUaEdNM0xtanl2Vyt0NDJnMCtXTW8vd0QvMlE9PScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnYmFycmVsSW5uJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBWUFCZ0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOU0vRCttUitJWGt2TG5WSTRveHEwV214QjVVRWw1ZnVpemZabEx1cW9UQ1MvbU1lcklxTEs3YkJhOEUzSHduOFcvRVN3OEYvMnZKY1JheFozc0Z2TG9lci9BR3A3UzRqUkpmT2N5VzBIbDRUY3FaamxTUm1ZSGJzT1BpRHgvd0R0eGZ0U2ZzYWY4Rk8vK0ZQZUJQSGxwNGk4TGZFdXgwTFZMUHdOck51NmVSZFhGekZwVHcyMXhseER1V3hadzJJNHcxNUkwZ2syS1I2RiswVi93VUovYWU4QmVQZmlwbzNodS84QUF1Z0N3MVhVclRSOVYwM1FaYm05bmpzak1zUDJwa25aSGJaR0JpWlVUTE1pN1RqSDQ3OVhtcWxLY2FsbGRPVVhDL010N0p1UzEwYWVuVmIyOTc5SWxScXpVckxwbythMXI2YXEzZHByL2c2ZlFuMlhVN0JtMC9XMWhGN2JPWWJ3V3pGb3hLaDJ2c0p3U3U0SEJQT01VVjhBZjhFaHYyb05hOForSzc3NE1KNHMxUFh4Y1I2aHJldnpheFk0ZUc1YVMzRWN0dk5zalo0blJ0MG9rUnlaYm1Nckp3M21sWlZJT0ZSeGFOS2xOMDVXdmZxWnYvQlZEOW1QNHdTL3RMMlA3VjFzbXU2ajRUdGZDdHZhTHEvaG0xRTJvZUVibTBubG44enlZL0xMMnJyTEpNWm1jdEhJakZwWVVXT09YeWU5K05udysrSkdpK0s5TjhKZUo1UEdsN0xZeTNHcTI5bVV2SkhnWm5FOTNPWUd1WEVTcTRlUjVFQ1pKRHVnUG1Bb3IwTXZVcDQralBtYXRLSy9IK3RyZmVhNHVVWmNONHU4VTdRbCtSNjc0WXUvZ0I4R2ZpTnIzaUw0YTZscGVnM1dqVGFjUEdqYU15UldXbFN0Y1RDM2hqZU9SUHNWM2NYQmpSN1NJU3BPUEtqbHRRTGtOS1VVVi9TM0VlSXk2alhoejRDaE8vUDhWTzlyVkpMVFZiMnUvd0M4MitwL0EvQXZEK1pacGhxei90akhVdVYwbGFuaVpRVDVzUFNucm83dVBOeVJmU0VZUjJpai85az0nLFxuICAgIDAuOTRcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ21haXNvbkR1Q2FrZScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVlBQmdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlBUGlwOFhmaDc4RmZDNitMdmlQNGdGaGFTM2NkcFp4eDI4azg5NWN5WjJRUVFSSzBzOHB3eENScXpiVlpzYlZZajhoL2pUKzFqKzBqOFliZlV2SEdyYS80cXNOVzFMV2xPazNPaitNN3kwdC9ET1pJOXRySERiTXNZS0lWVHp0b2tjU2IyTGxsTmZyUDRwL1pqOFdmRmUvdlAyaUxhKzBxOXR0TDBtWFNQQStqWEVnanVHdTQ3aWIrMHBVazh0d29sYUszdGdyN0FIdHQ1WlZJOHprUCtDYkg3SnZ3dStIMzdHZmo3OW0zNHIrTS9DUGkvd0FUL0VmV1gxSHg3TDRVbmhrdXRIVVFXOE50WmVjZHhtbHRwTGRwMVo0L0tqbW5kVlNWUVpKZnkvRFpkTndwMUZOSnpUMGErNUsvVjczVjdMVS9wN2hUTytFT0ZjaXFZM0VVL3JPSW5PRk9jYks5T0RjdWR4MGRtbGE3ZGxLWDd2U3prL2k3NGY4QTdiMzdaWGhuUTlBK0szanY5b25SL0V4azhRMldrMkh3NzFIU1k3Vy8xaTZ1NEo3R0NhSCt6clErWkN0d3pYRWtNcks3TkJHc1cwdW9CWDFQOFpQaFAreS80VjhDeCtPdmh2OEFzejZDTERVTFN4OEhlRnZGVjNOSGRSR0xXOVF0YkdEVkxRczhwdVpWbHZsbEYyNGprYVBLd3lpR1JSUldPTWhScE9QS2w5elNkdTEwcitxMFBnK0xKWlBudWJQRTVTcFlTbTByd3RGNjk3UmsrWFMxMDNlOTM2MS8ydS9pTDRwOEFYZmlINGUvMm40UjAzVHRkVFM5WjBqeEY0KzFVTFllSDRsKzEyMnM2Z0xSNUk3ZTUrelNMb0JpU2RYSDJqVldMRXhGbFQ1ajhkL0JaUGpHM2lUNG1mSGZ4WDRvK0tHcWVFdkRYMm40ZStJUEJmaFY5SjBHUzBTM2xsZVI1b2JOdEttZ2hrRWN5cmFYU1N5L3ZRd2tiWkdwUlhKbE5XZFhPb3dqYVBLNGFwSzh0VnBKdE8rL2srek9yRzV6aXNEd1ppS2RKSk9WT3A3MW56SmNyVFVaWHZGTkt6U3NuZDMxT2cxVFUvMmQ3WDRuMytxMnNHbDNON1o2NVlTK0twVXRHbXRQN1V0V3VZTk5nc2xpeElOWlc2aW1TS1BUOTBtK0s0amtqRThzZThvb3Ira2VKdUlJNFN2QytEb1ZPYm4rT256V3RVa3ROVmE5cnZ2SnQ5VCtET0FQRGlHZDRPcko1dmo2UElxQ3RTeE1vSjgySHBUWE1rbmZrVWxUaC9MVGhDQzBpai8vMlE9PScsXG4gICAgMC45NFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnamV3ZWxyeScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVlBQmdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDc5K0lXbXozZnd5aDhUUDQzOFBQWitJTlF2dEptMHhkUmpsS21DNGFFUkRqelB0Qk1Uc1VpWHpRMjZOZDVRRnRTOStHdmlQd044VTlIK0czd24wTFRKL0RiZUJHV1hYYjNVdnNOZ3VyV2M4UWVFcEhBZkxtbkYxTXpTZVdxczFxVlB6Qnd2bmZpWDluYjRheStNZFkrSVUveFcxbndUb25oUFI3M3huNGtsMHlXRzRnMHlWSkZtZlVJTE9XQ1lwSS9sWE16K1VqUk82enM4TFQzWG5WYTBmUzlhSGhlKytOSDdUTjdKREZhYVpOZHhlRHdxUzZmNFpzRTNUK1MwVnNwUyt1MFhKa3VTcmt5R1g3T0lvNUNqZk5aM3haa21ZY0lVc295dUg3Nk9rcndzb3lmTFozVHZPVnRuZjhBeDlFODhwNGI0Z3d2R21JelBNS3E5aXRZZTgyM0ZxVjR0V1NTdStacnBaY3IxdWRib2Z4QTA2KzhWeWVBTlphMnRkYlN5Tjdid1c5Nko0TlF0VlpZNUo3V1hDK2NzVXJMRktDcXZFN1JsMENUUVBLVjhpZkJqeEhvbmlyOXZqWC9BSTIzK2gzbGxwUGlqWFlOTzhIL0FHalRvNHhDYlMwZXhOOWVCZ1RhenROYWFoWTI2dTBjKzNVNW9qRUgrMEpFVitlZlZzVmhZUmhYMWwzdHkzdG83TFhacHhkbnVudHN2MHYyK0R4RHZoNXhrcksvSzFLemNWSkoyYjNpMUpYNk5QWm8rZ1AycVBoTjRtOGFlRHRjdi9BOE9xM2sydGVGYjN3LzRpMERTWklSTnExalBienBFSWpQYzIwY2NzTTArL0x6S2p3dmNSc0dkb1hpOFU4UitEZjJpZEQrQ25qZTQvYXI4TWVMZmlSYko0TzFPNDhQeFh1cWFYYTZkNGVsUzBrSzNOM0RZT3N1b1RSRDk1REc4TjVpNXQ0R1Y0Vy8wbFNpdWpMNjBzUGpLYzRKWFVvdjVwcjUvd0NhMGVoam1FVmlzdHJZZWUwb3RYNnBOTmFQNW5IWGZpWFd2RlhqVzB0dEQrQW5pblV2N1UwWVdtbC9iUERwanV2R09sTjlwVzV0a3RMdVNCRnRMZVZZZDExcWV5RkJkSkhHTm1wUVRURkZGZnNHWitMSEUxQ3F1V0ZMWG1lc0gvUEpmemRrdnozWi9PR1RmUnc4UFpVNXB6cjZjcTBxSmY4QUx1RGUwRnZLVGZaWDBzdEQvOWs9JyxcbiAgICAwLjk0XG4gICksXG4gIG5ldyBJY29uKFxuICAgICd0cmFpbkZhc3RlcicsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWJBQm9EQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlOUGpYOGMvSGZpaWUxc05NMHFYVXIzV2RYaXNQRFhoUzB2WTRSY1hFaHlNczVHNVlva2x1WnBNTzBjTUU4aW9RbXlsK0ZId1oxSHdOOGVOSytNZjdSUHhRK0ZhYWxvbmhpNnROTzhNV1duTkplYUZlWFp0bW1saTFXNnVFYVdNeHdGTWl5dG1kWmVTQUNyZVQvdE1mRWZYZmhQNFMwajRpZUNMMnl0ZkVPZ2VLTkwxRzExQzcweUs4R2w2YXQ3QkRyRis4Y2hYYmJ3NlZjWC9ueUI0aXNMeUFUUk15dVB4MjhOL3NrZkRCUGpxL2gzeDkrMEhyL2luNGYybmkrNmd1UEhQaG1EVEhlK3NKZE1hOSswUVBOSGRHNGtHcXpOYlBJSGxCMlMvS20wN1B6TEF1bldmdEtyYm5xNzJleXR0MDYydDkyeCtxNVp3N2pNNzU2R0V1bEdMazFHUE5KMjNzcjlyYmF0Nkg3Zy9HL3dEYUQvWisrTm5qL3dBTitJLzJhUEVFR3ArTjlEMTZHMVQ0bytHMGpOdFk2WXJpZThzZnRabGlYVkxXNlFTV3BodHpkUlEzVEpOSWlTMmlNdm9jUHg5K0pNTUtRcnFrSkNLRkIrenFPbnNNQWZnTVYvUDc4WnYyYnYyWC9DZnhYZ244RWZFUHgzcUh3cXNvdENsOFdhbnIxbFlMY3JiUzZuTkhyRzFiV3lTVmtoMDlZNUY4cEM2c3pITFlDajl6cWpIVnE5QnhkT2JTZlRidC9tUE0rR1o1TFNvUnhOTi92SXVTNTQya2x6T05tbnF0WXQyN05QcWZPWDdhSytDOWN2UEcwTjdxZWx4NmpvdjdOZmphMnVMblc3T0NleTBqKzFGdFh0TGliZk9rdHUwamFOZHJIY3h4eXJGNU14a0M1VGQ4cS84QUJIbjlzTDRjZnNaK0UvRVdvZkZ2NHJhV1BEVWZobTdrdmhvaW02TjlyRWQ2WnJTMWliWXJKSzBWM09xSTVqVjNsakJ5V2pOZlVQOEF3VWwrQlh3OTFIOW1UNHMvR3QvN2V0L0VjSHd2MVpQdFduK0w5U3RZWm83ZXd1NUlZcGJhRzRXQ2FKV2VRK1hJakkzbXlibElrZlA1MGZzN2ZCSDRSZUp2K0NVUHg0K08vaUg0ZGFUZStNdEU4VjZkWjZMNGt1clJYdTlQaHQwMHU2aldCenpEbVc3dUM1VEJsVndraGRGVlZtblNXUHl0NGF1LzNkMGxiZlZwdTdkK3IwN2ZpZlE1SG1XQndPWFlpblVvdWJxeDluZTZYTGRxU2FWbW5hVVl2WFhUUngzWDJKL3dVVjhVL0Z2OXFqd0RjZkR2eHY0cTBqVFBETnphM1ZsSHJVT255ZzJXcDNsMUZZYWRCTmJiMll4TXQxSkc5ekV6a3lTbzdReExHRWsraWI3OXJ1Q3p2WnJPSDRGK0xMdElwV1JMdTExalFCRk1BY0IwRXVxSTRVOVJ2Uld3UmxWT1FQeWcrUDhBKzFKOGZkTS9idCtPMm0yWHhJdWt0UEFHZzJNUGcreE52QzF2cGh1TmMwRzFtbVNJb1VNN1crbzNzWDJoZ1pRazVVT0FxaGYxaWcvWUYvWW9qZ1JMMzlscndQcU15b0JOcUd0ZUhvYis4dW14ekxQYzNDdk5jU3NmbWVXVjJrZGlXWm1Za245UDR0d3ZoemticDBLV0JxUlY1dEtFMUZmRlozdXA5Vm9yS3kwdmF5WDhpZUh1TDhjczl5cUx4T2MwSndoR0RpcXRCMUxlMGhDcHA3T2VIcytXUzVwT1RVbjloU1VxbFQvLzJRPT0nLFxuICAgIDAuOTRcbiAgKSxcbl07XG5cbmV4cG9ydCBjb25zdCBpY29uc0dub21lTGFiQ29va2llcyA9IFtcbiAgbmV3IEljb24oXG4gICAgJ3Rhc3RpZXJTdGFySmVsbGllcycsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVlBQjhEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDZFOFkrTXJQUjRKTmY4UzZnWGtsWUpDaElNMTFMdE95Q0plc2tqYmRxUnJ5ZUFCWHVQdzEvWVgxanh6YjZTYkw0MnRjNmkrbXdYWGlxMnR0QldhMXM1aVAzbHRhNWFHUWhXd0JMSTBtUnpzN1Y0NzRBMUM3MHY0NStIN3JTNFdra2ZTdFNpMUFIRzJPeFBrTTdqa1pmN1FsbWc2L0xJNXh4bGZyL0FNRGZFanhQNEF1WmZIL2hteXMyMC9XcGxpOG0rbUJNWjNIQzhFTUFEbjFPQUNhK3V3bVVmOEk4Y1JHSE5Lb25adTFsYVRTU3V2SnU2MzI2YS9HOFE0VGltZU9vWXFqQ1N3VUcrZVVISlNidGZaTkpwYlcxMGJhczBlQS90RmZzNCtJdmdWcmh1dEx0TmIxZnd6Slp0T2RZZlNta0ZnMFkvZkpjeVFwNWNhZ2JaQkk0akJWeU9mTFpqd2VnYTlmYUhlcnFlbFRwa29SOHloMGRTTzRQRERvZnFBZTFmWXZ4dThRL0duU2RMMWp3TjRFMUcxdmZFZDk0ZnVMelQ3cXdsVjdhd2xNYmlPNG1NdUZDSXhRNUlZdHVWVlZ5UXArSXRCV0t6czI4T3RwbHpwOXpvN2l4dnRLdjFBdUxHVkZYOTFJQVNNN1NqQmxMSTZPa2lNNk9ySDRwNGlqREZmVmFrNCsxdHpLTjF6T0Y3YzNMdnkzc3I2cS9iUysvRGVaNHJIU3EwNVJrb1Ewdk8vTnpYZDFlNzVrdStsdEZxNzJYVmRCMDNWM2h1YnBaWXJpMlpqYTN0bmRTVzl4YmxoaHZMbGlaWkV5T0R0WVpIQnlPSzZlVDlvRDRwM1hoM1JOQW04RVEzZHpvMm4yMXBxTjNmNjk1TVdxeVFSSkNMc0dPT1YvTWtWQzc3MVVobklEUDk0bEZmUlpaeEJqOHJwdW5UdEtQUlN1MUh1NHE2dGZyMzBlNlRYM21BelRHWmJ6ZXdhWE1yYXBOYTIxczdxK2x0anpmOW5QNDNmRnZXUDJrZmluOEwvMm5QaVQ0VWl0TEd4MGZYdkEwWjFjUXlRNmRmM1dyUm0wa2FjeHJNMXViS09NU0pHdVVLRi9tYXNMUlBGWHhMK0ovN1pQeEcxNGVQZkQwL2dUd01iZndyb3RocEZ1czF4cVZ4THB1bGFtMXhjWGF1VlpMZHJxZUtLSmNnRzVuSjJuN3hSWDh0NUxsbUVxL1NTelhHU1RjbFFVMHJ0cU1wUm9KdFhiZXFsSldiYVhNN2RMZkJZV2hULzFzcjFPdkw2Szc1VzlGNnZUWmRFZi8yUT09JyxcbiAgICAwLjlcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ2NoYXJnZScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWNBQjBEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlISjlWK0xYeGUrUCtsL0Nud3Myano2anJIaFhWOWR1dFg4UWFsTWdoV3l1dE5nRUtReFF0dkRIVWM1M29JeENGQ3R2eW5qWGc3VGYyK2ZpYjhQUGhQOFZkQStPL3dhMGEzK0xmeEN1L0RzZWdTL0NyVmRUUGh4WVl0Vm1ZdGVqWGJZYWt5ZjJZWWkzMmEwRHRKdjJ4N2ZMT0YrMHgrMXRCK3h4KzJuOEpQSDE1OEZ2aUw4UVJyL3c5OGFhRFplR2ZoVjRmVFY5Wmt1bnUvRHQ0c3EyZm5SeVBBa05sYzc1RURDTXRHR3h2QnI1KytDUDdSdnhxOFhmQXY0TC9BTE5uakg5a0w5c3o0UTMvQUlUK011cCtKdGYrSStrZnM4M3Q0dWw2YkpjYTNjUkxBaHRyenpaWkk3NjN0MlY3U1dOVEpLU0hWY3Q4dGtXVTVkaXN0aFhxd1VwdTkyN3ZhVDgreDYyYTVuamNOanBVYWJ0Rld0c3Vub2ZZV2pOKzEvNE0wSDlvQ2Z4dkg4T1BHMG53UzhWMnVrV045b1p2L0RrdmlHV1hRTkkxZHJaTEdZNmlzTXVOVmlnaFkzYkNlVWhXVzNBM3Q3bjROK01malh3UHBoMGJTcnVLUzJEYm9vcm1MZUl2WGJ5TUE5Y2RNODlTYy9FZngwaS9adDhOZkM3NGhlTC9BQWovQU1GQS93QnBmVVBHL2lYeGJvM2lYL2hBZml0OE9kTDBDRFYvRXRnTk5UUmJ2VTdXVHcxWVh0anBCazBpd1NlN2dlMmdraDArNy9mTTBOeGo2dnRybTN1N2VPN3M3aEpZcFVEeFN4T0dWMUl5Q0NPQ0NPYzE1dkVtWHJLS2xHcGg0T0NtbTc2NjJkdEw2V1hsMTlEdXlUR3h6U25WcDFaS2JnMG10SGE2dnJvbW42OVBVNEQ5b0w0RmFqOFk3TFF0ZThEL0FCTzFId0w0MThJYXErcGVEZkcya2FkYVhkeHBjOGx0TmFUS1lidU9TR2VLVzN1SlkzaWRTQ1NqakR4b3k0SHdpLzRLRGZ0US9EejROZUVQQ0g3VUgvQlBuNHorSVBIdHRvdHJwL2lueEQ0Sm04SzNtbjZ0cUVVU3h6WDhaVFZyYzI2VHVyVEJIZ2hFZm1iUUFGclUvYWQrTkhpbjRMZUhkTDFmd3RZV0Z4SmU2bXR2S3VvUk82aFQzR3gxNS9Pb2ZpUjhiL0ZmZys0bWkwelQ5T2tFZWhwZUR6NHBEKzhiR1J3NCtYbjYrOWVmbFdkWmhsbExrcFdjWDBkOVBTMXR6cnpIS01EbU0rYXFtbXVxNm5sM3dzK0dYd0I4Uy9CYjRFK0wyL1pyMTc0aTZsNG44UVBwM3hJMXR2aWFVdmI2L25ON3RzVEVMM2N0eTJScUJ1SmZzNVpZb2ZObVkzRncwZm9ud0VmNFRlSHZqMzhUL2hsK3pqNG11TC80YjZaTFozL2h0SkxyN1JFbHpkWGVwL2JwSUppTXl3dlBDV1dUYzNtZ2VjV2tlVjVaUG1YNGMvOEFCUDc0UGVJUGlmQjhPMThlZkVTeTBxODhNeDNEdzJuajI5TEtwYUtVUTdwWGN2R0hpaVlCOXpib2tZc1dVR3ZyRDltdjlsTDRhZnN2YVpxbGg0QzFieEZxTXVyeXhOZVgvaVhYWmI2Znk0dzNsd29YNGpqVnBKV0NxQjgwcms1engrcDhlY2ZaWHhEdzg4REQyemFhNUZOM2hGYy9OczZrbEZ4WDd1UHM0d1hMdnVsSDgwNEs0RXpMaC9QZnJzL1lwU1Q1M0NLVXBOUVVVcnFuRnlVbmVwTDJrcHZtYXMxWnVYLy8yUT09JyxcbiAgICAwLjlcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ2RlZmVuc2UnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFjQUIwREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q2MC9haDhVL0dxMjhSVzJnL0JSUEYycTYzSC9aS2FGNE04STYvb2VqL0FQQ1EzbDdxUDJkb3J6VU5YMDIrVzJ0NDRJcFpNd1JwS1RsUTJXVXB6ZnhEL3dDQ2NQOEF3VTgwMTVMMnc4SC9BQUswelNyenhaRmQybmg2YjlvYjRwM210THBvai9md0h4SjlzaWtnSmJaL284TmtMVjJ4SThaTVNLZXkrS3Z4RDBMNFZmdE0rRS9GWGlKdHRyWlcyaytJZFJ1bmJaQnArbGFmNG4waXcxRyt1SkNOc052YlJlSVk3dVdWeXFSd1drN3VWVkN3Ky9QajNyT2srSE5FaDhRNjlxVUZuWTJGdmMzRjdlWE1nU09DSkZWbmtkandxcW9KSlBBQXJ3dUc4TGhwNWJTbHlKdDN1N0s3MVozWi9pYTlPdlV0SnBLMXRYcHNmbHoreXo4YWYyaXJ6OXEvVi9nZjhhZFAxL1FwTEdYeGJaNmw0UDEzeFpwWGlDSFRYMHlQd2hkMkUxaHFObHBkaE5MQk5hZUptTExlZWZQKzZpTHVqaVJUOWorRlBpTDR4OEVRelcvaG5XV3Q0N2hnMHFHTlhCSXlNZ01EZzg5dXVCNkN2akRUSnZqRmYvdDFlS1AydnZBMzdPM2pUeEo4UHZFWjFPLzhNMzJsK0c3NWJ6VWJYVWRBOEpXeGNRejI4YVJzSi9DY1lqVjVBSGoxUGRLMXMxc1k1ZnFEd2I0MDhNZkVEdzdiZUsvQitySmUyRjNFc2tNeW95SERLR0c1SEFaRHRZSGF3QndSeFhsOFk4TzV0a0dOaGlKNGQwcWMwdVZwV1Y5ZEhiNFphTjhydEsydHJIUndweEJsT2ZZU1ZDblhqVnFRYjVrM2Q5TlZmNG82cjNsZFgwdmM1YjQ4L0FYVGZqZFlhSnFWaDQyMXJ3ajRzOEk2eXVyK0N2RzNocWFOTC9SYjBSdkU1VlpVZUc0Z21oa2xnbnRaMGtobmhsZEhRNUJYNXorTVBoZjl0VDRiZkFuVy9oMXF1aWVGOU8rSG5oL1M5UzFYVTcvdzc4Y05hMGJ3NWEyY1RvMjZEUko3UzV1OU5qaXNZMmpqMGFEV0JvZzJIZkFxWWlQeXIvd1RydGZpSDhkZmpqNDE4Ri9GSDlwYjR4NnBZYVY4SjlZMWpUbzVmakZyeStSZXcybDFKSEtNWFlCSWFKZUdCSFhqT0NPOC93Q0NmWHcrMS80Mi9BUDRhK05maVorMEw4WXRTMVB4TDhHL0gvaURVcmwvakhyeTV2dFB2cjZDMGRWVzdDNGpTMVRBWUhsM0p5ZHUzcnliQTVybHJqT2pXVGplOW1uMGY0WEx6TEVaZmpveWhWcHU5clhUUFlQQWYvQlhQOWpid3pmZkMvNDV3L3R0YWRiNm44TXZCaDhPWG53NVBqeXpWZFJqZ3RyV0MzV3hkTFpyZGJTNmtqV2E4YTVmN1NubEVRaVh5TFVqMXY4QTRKdzZuNGYxMzluZFBFSGhEeERaYXhvOTNmUWpUZFkweTZTZTJ2RmkwK3p0NUdqa2pMSSsyV0dXTnNFN1pJM1E0WldBK0cvMnE5RjhjL0RMOWxENGMrTlBCWDdTSHhpczliZlVmQ2RscTJycjhZZGVhYlZsMWJ3akpyRnc5eG03MmwxdVVBaktLZ1dNbFNHNEk4UDBQNGwvdERYb2tFMzdYbnhuK1RHTWZGbldlK2ZXNTlxK3o0MTRrcmNUNVovWjZ3OGFWNXhuZFNjcktQdGJRWHV4MFRxeWQyNVM3dG54WEIzQ3RMaGpNZnIzMWlWVzBKUXM0cFhjdlpKemZ2UzFhcFFWbzhzZDdSUi8vOWs9JyxcbiAgICAwLjlcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ21hZ2ljJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBY0FCMERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOUZ2Mm52MmxKL0Fmd3Q4Vi9IcjRsZjJoZmFSNFAwQzkxbTgwM1NZMExyYlcwVHp5TENram9tL1lod1hkYzRHNXdCa2N0ZWZGUDRuMm11cDhQRCt4ajhiSlBHc2thTXZoYVB3RzV0d3pJSkNyYThKUCtFZlVyR1N4UDlwWXlwaUJNeEVSNHI5dkw0bmZESHdyOEVwZmc3OFJmSFBndlFaUGl6Sk40TjA2OCtJT3Z4YWJvOEF1N2FZWFZ6ZHp5U3hBUVFXcXp5bU1TUnZPeVIyOGJyTFBGWDNiNFMrSy93NDhVZkJmUmJMNFFmRyt5K0l0bDlnaXNENHVzdGN0TlNiVVBLalZIbW1tdE1STk5JY0Z0aXFwTE1RcWpBcjRMSThtcDV0U2xWeFBOZStqdnYzM3VmVDVybWNzc2FqU3RhMjF0dXg4bGZBUDRyK0ovaVRvV3JYZml6dzdwMmllSVBEUGk3Vk5BMWkxMEhYWmRRdEV1cks2ZUV5Vzl6SmJXMGtpTUZSd1hnaVpTeFhCMmhqOUMrQlAyamIvUk5JL3N2eFBDOXkwUnhEY1J3aG5ZSEpJZjVsNUhyMzcrcCtKUEFYeForRU9rZnRXM09tZnNrL0VGZkdudzgrS1BpUFVOVjFxWmRNdkYwN1N0WmExbXVibTgwalc1WWhaYTFiM0VsdXdrc2JlYWFlMm1lYVJEOW1qbGl0Zm9xdk16Q05YSjh4bkNqSzBiNldkMWErbC9OYmE2blpnNVU4MHdFSjFVNzJWN3F6djF0NVA3ano3NG0rRDRQMmpQaXo0VC9ZbnY1VXQ5RThiYVZxbXUvRUs2bXlQTzhLYVhOWVJhaFlRRkdEcmMzazJwV05vR1hZMFZ2UGR6UnlwUERBSCtjUGpkcmY3VTM3VlgvQzN2MmxQMktmRzNoM3dMOEsvRmZoZFBocnBHaFgxZ0lvYjN3ZnBTWDBVL2lYU3BMRjI4cThMM04zYjZjUDNVRDJrY004cWt2Q0l2cWI0dS9BdjRLL0gvQU1Pd2VFZmpuOEpmRGZqRFM3YThXN3R0UDhUYUxCZlF3enFHVVNvc3lzRmZhenJ1SE8xMlhveEIwWlBBUGhXUDRldDhMTkYwaURTZERYUmpwVnBwK2syNlFSV1ZwNVhrckZDaXJzalZFd3FxRjJxQUFCZ1lyWEI1MUxBWUdOSER4NVp0M2xMdXY2L0x6SnhPVnh4bUtkU3U3eFNzbzluM1BETlcrQVg3Ry9oTS9CM1RQaVI4Yy9pTnJ1cStLOU50bzd1Zndab05rOWhaVzFzMGxqYldzVWNVWVNDU0NiekVraHRvcGxEeFhXTGEyTnhHaDlaK0QrbTNmaGE4OFkvRE4vaUxlK0tMUHdiNDB1dEEwdlZOU2w4MjVOdmF3d1JpT2FVZ1BQTXJieEpLNVpuazNuZGdxQitDbmhmL0FJT0Qvd0J0L3dDSHFYVmg0VjhJK0FMY3lUeXlSM1FzTlRNMW5PNEt5M05vL3dCdnpZenlMOHJ5MjNsTzZoVkpLcXFqOVNmK0NEbngyOFYvdEcvc1k2cjhUdkYya2FYcDA4M2o2OHRvTk4wU0NTTzF0WW9yT3lSVWpFc2trbUNRem5jN0hMa0RDaFZYOXU4VWErWFYrRlkwcVNkcVUwcWFjS2NWR01wVGs3Y3FUaG8xRnhUa3BmRTdOSS9HL0RmQjVoaCtKWjFxdHIxWXQxR3AxSk9Vb3hoRlg1MjFPN1VwY3pVWlErRlhUYlAvMlE9PScsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdzdXBwb3J0JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBY0FCMERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOUJ2R1h4QjB2d2pkMkhoNjEweSsxdnhIclROSDRiOEk2RkVzMnA2eEtySXBTQ0ptVlFpdExINWx4SzBkdmJvL216eXd4SzBpMy9pUjRQL2FUK0MrZzIvamJ4MThOZE8xaXhOcExkYTVvWGd1NW52dFUwV0JaaXFQRkdZbC90WW1FTk5MRkFzYzBiSVliZVBVSFpHYnhTNy9hWC9iai9acytNdmpINE0vc3dmc2UrR2ZGL2puNHNhcGJYM2hiNG5mMjM5c3VMWFE3UzNoaWt0THJTSGxqbWI3Rk5MTUlUOW9zOUpFdXJ4eXozTnRQZFQvYU9XK0pmN0MvL0JUNzloMzdaKzJab1A3YmR0NDA4ZHpXRW1xZkUzVFBGZXEzaytrWDBEbDVyajdWOXF1STdScmEwa1JSRExwdHBvOGxwWWlmWkRldXEyYy94dVU1Rmx0YkJxZFM4M0phdGZaOU83WFhkK1I3MlpacmphTlp4ZzFDejJmMnZYc24wMjlUNlM4S2VMdkMvanJRTGZ4WDRMOFEyZXFhYmRiL0FMUGZXRndzc2JsSEtPQXlrakt1ckt3NnF5a0hCQkZlcmZEcjQ0V0hodlJ6cEhqWFJyalZWaHdMR1ZWUjNqVG5LRXlNT0J4akh1T2dGZkEvN00zN2JtcmZHVDR6K0lmanI4WlAyYjVQZ2hvdmkvVFlMR0pOUjFHYTVoMXJXTk1qdUd2ZFF1cGpGQkRhbU8wRnRBc3MwVWM4c1Z2QWs3SXFXTU5mV2RlUm1tVzVsd3htUEpVaEtLYXZGeWk0ODBYMVY5N1BSdGRWOGp1eTdNTXY0aHdUbENjWk9MdEpSa3Bjc2wwYld6YTExNk04aXN2R0gvQlFENFNlSWZpYjRDL1p1K0hId3IwZVQ0aDZ6QmUySHg0MXZXYm03MVBSYk5iUzB0eGJ5NkliVVIzdHhia1hqV29GM0ZhNGtWNVkya2FjWEhsL3hmOEEySVBBdndyMGZ4YjhlOUkrSzN4RjFmeG40bXRubStJbXMrSlBHYzE2bmplV0MybEZrK3BXemo3TURhTnNhMk5yRGIvWmhHc2NXMkxkRzN3bDhIditEZ1g5dHo0c2ZzOWZFTDQwYXI0UStIV242aDRJc283aXdzZE0wSzdGcmVGblZTdHdKYnVTUXJnbi9WdkdmZXRyNG5mOEZULzJnUGpQK3k1NGx2dmlwNEU4QmE3WVFlQ05HOFF5NkRxUGg2U1N5dWJtYTVWeEc2bWJmc2plTkhqS3VzaXNvSmM0RmUva2VZWnRsbWE0TEZ6YWxUb1RoTGtUY2VaUWttNHQ4cjNTdHFtdkk4dk9zQmdNMHlyRjRTTjR5clFuSG1hdnl1Y1drMHJyWnUrNmZtZm9mNHkrT0EwRHd2OEFGZndQcDNqajROTjhIdFo4STZ6ZmZEblNMTzhoa3Y0YnE5WjVkUE50YUphaTdGekZlbTFOeEJNcXBaQUkyNExDbGVxL0RMVE5PMFQ0YmVIdEcwZlRvTE8wdE5EdEliVzB0WVZqaWdqU0ZGVkVSUUFxZ0FBQUFBQVlGZmczKzJ4KzExb1A3SkhpbnczNGM4Ry9zYy9CdlhZOWU4T1E2cGNUZUpmRDkrMGtNajlZNC9zdDdBb1FkdHdadlZqVGZDSC9BQWMvZnR4ZUF2RE9uK0MvQ0g3UFh3TjAvU05Jc0liSFN0TXRQQytxeHdXZHRDZ2ppaGpSZFRBUkZSVlVLT0FGQUZmUmNiNS9UNHJ3dExEVWFIczVRbTVTazVYNXJ4U3Uwb3E4M2E4NTM5NTJkbGJYNS9nemh1cHd4aXF0YXJYOXBHVVZHS1VMY3FVbStWUG1mN3VON1U0Vzl4WFYzYy8vMlE9PScsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdib21iYXJkJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBY0FCMERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOVdQaTc4VDczeGhyZDNwbWphbElORUU0TU1DZ3FzekFBR1JoMUlMRElCNmNjQTVyeW40cmZFSzArRi9nUys4WHpXVXQ1Y1JLSXRMMDIzczd1NGx2NzJRaExlMmppc3JlNHVaR2tsWkVDd3dUU2NrckcrTUhIL2FGK0kzaXI0ZWVCTFcyK0cxcnBsejR4OFUrSXRNOE1lQ2JYV0M1dFcxYlVidUswZ2xuV01pUjdlRHpXdVoxaklmeUxhWXFRUmtmU2Z3WC9BT0NibjdPWHdxbDBUeGg0b3RkWDhjK1B0RjFOZFRnK0pmaTdWWkp0Wmh2Tm9XVTJra1pSTk50cFYzSTlsWnBEYXZITEpHOFRMSklHL09Nc3ltdm5WUjRpckswYjY5MzFzdTM2ZG1mWDR6SDBzc2dxTk9OM2I3dk45LzYyUGdEOWxIOW8vV1BqUjhTZkNmd2wwSDQwK050WGk4WGFuTDRIOFQrTnZIbWhhSHBOdm9QakxTTEM3dU5YdE5Jc3JDS2FhNGtraGdhNTNYUmxzSVBMQ2krbmtZV2pmUlhodlV2RTluNDI4WWZEYnhGSmEzamVEZGFnMHBOZnM1SkFOWExXRnJkR2N4dENpeEgvQUVrQXJFMHNlUVFIeUdST0IvNEtxZkE3OW5PZjl1ajRiZkZENC9mczNmQ0greTllMU82MFIvaVByZW1XOGwvcXQwK2pTeVJhRGZXODBYbHpoeGFmYVlOUWVWMmkreEd5U0dMN1Mwcyt2K3pSNGwvWnUxcjRjd1dmN01PbGFKcFBoK0hkSW1oNlI0Zi9BTElOb0RMSkh2ZXhhS0tTQU8wTW0wdkd1OEp1WGN1RFhvOFE0S2hoNk1uU3d6U3ZHOVJKcUt1bmFPbWliNWIyNjZ2ZTV3WkxpNmxhdW96eEN2NzFvTnJtZG1ydmU3U3VsZnpYU3hTL2FyOEcrTjlZOEorR2ZpaDhLdkM0MXZ4ZDhML0gramVOUERtaWYya0xRNm8xamNnM2xna3JLeUpKYzZmSmUyc2JPTml5WENNeFVBc1BzdjRJZnR4L3MzZnRNZUJKL0huN1AveEN0L0VzZGxkTlo2eHA4VVVrRjdvMTZvL2VXZC9iVEtzMWxjb2VIZ21SWkZQVmU5ZUZlSW9FMG0vdjdhMkpLMjAweVI3K1NRckVET1BwWHlPbmhYNEQvdFArRmZGZnhyK1BIN0pYd2w4VStKTkV2UnA5cnFldmVBclcrbWt0MEpDSThsd0pKQ0JrNEFZQVpPQlhEa21kU3kybktsT1BORy9lelRlbjNIYm1tV1BHeVU2Y3VXVnUxOVA4enBQR243Ulg3T3Y3YVgvQlZieFI4SWRRK0ltbGZFYnd6bzN3dzB1THc1NGRpOFhYVnJveDhjTmRhNG9nanZMZHhHazBsdThkcXpLNVV1cVc3RXpSaU5lYjhmZkJYOWtMUnZnOTRLbS9hei9aeHRmQjNqQzd1ZFZsL3NDYS93QlpudVdzbGxpamh2SkxPU1dTU3hFakpLaTdzQ1VXNWRTUjhxY1IrMG44Q3ZoajhWZFUxbjRnU2FIY2VIZFI4SGVGZEowVFMxOEk2dGM2ZmJ5YWRHOGtrRnM4RWNubEJJV3VaL0w4dFVJRXBVbGdxQmU0OE0vOEVudjJlTlI4T1dHb3Y4UnZpWkcxelp4ek9rUGplVUtHZFF6WUczcGttdjJ2SlBFemgvQzVKUXd1S1dJaWw4YXBOTFZTcU5jcmMwck5UanpjMU51OEZaN2N2NHpuZmh4eERpczZyWXZDU3c4bTlJT3BGdlJ4cEo4eVVISzZjSmN2TFVTdE4zVjc4My8vMlE9PScsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdyYW5nZScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWNBQjBEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlLOVQxSysxbS9sMVBVYmhwWjVtM1NPM2MvUWNBZWdIQUhGZkxuamI0OWFKNHYvYnA4S2ZEUFZwTlF0ZkNGLzRhMXJ3dG8valBUWkxuVUxQUVBHMTVyV2kyV2lhcHFGbFp5d2tXWjFLM3Y5SGlrODd6SjdoZFl0WkVndFlicWQrKy9hKzBYeGRxbW1lQWRTOEtmQW0rK0lDYU44U3RPMUxXOUlzVTBxNEthYkZGY0c2VnJMVjdxMXM3NWJpSXRZYlpKUTF1YjhYc1FhYXppRmZMZmpqNGhmQVB4cG91cGZIWDRGZjhFbEgwblNkVzhZZUUxMGI0ZldYN1ZHdWVBdFl1TlZiVXJMUXRMdVc4TzZKTyttYVRKQnF1bnRhb3p6eFN4eWFQSzhnaW1oZEYrQTRmd1dIcS93QzAxSnB1OXVWLzNtbGQydTlidEs2V3A5VG0yTHEwdjNFSXRLMTdyVGJXMnRscFpOMjZIM1RwZXIrTmRJOGNhcjhIdmk1NEtqMER4am9HbTZmZmFuYWFmcURYMm5YVnRlTEtJcm15dXpGRTA4Sm10cnVEOTdGQk9IdFhMUXBHOEx5N05mQU52OGVOSnUvamhxSGduOXIvQVA0SkJlTEk5ZjhBQi9oMWJtMTFQeDUrMlJyZmpsL0RRdnJ1MWprbHNaSkwyN09qNmlJVldkTG0zTU4xR2ZzWDcyQmJ5Q1krNGZzM2Z0YitGOUQrRjhXaWZHUFVmRWtPcFE2aGN6YVlaOUh2ZFVhVFNMaVEzV25CTG1HT1dXNmpodEo0YlA3WGNoSnJwN0tXZGcvbUNSL1h6anc4ei9DNWZITThMaDV6b1RsWldpMjFvdGRMdHgvdk5KYXBYYlBIeTNqdklNUm1UeTJ0aUlScnhqek5PU1Y5L2xmUzlyM3NyMlNQbzZ2bFQ0d2ZzbGF4NE8vYnk4UC9BTFlmd2IrRzNpalc5U3YvQUF6cmxnczJtZUtMS0N6OEdlSjcrTFROTWo4VkxhMzcrVTBnMG1PN2ltVllidFpUWjJlYlIyM1NWK1kzaXI0ci90RmFiY3VsdisxMzhhTUxmeFJjL0Y3Vy91dE1xSHBkRHNUWDFWOGIvQWZpSHd0KzJaNHkrRjNoNzlvWDR3MnVnYVAreXhaK01yRFRvL2pIcnhWTlhsYXhqYVlzYnNzY2ZhSkdBSis5Z2trWkI0Y3R5WEhZU3Q3YWpWU2EwMVQ2L1A1K3FQVHgyWVlYRTB2WlZZTnA2N3IrdkwwUFZ0SS9iWitDMzdFdngyL2FKL1psMWI5c0d6K0gycWVNYnZTWFBqYnh0NGxsMWpVN1lRNkZCTjVNa2x4T2IxVnVUY3ZFbHdwbSt5Z0lzTUFVaDRZL2lwL3dWRC9aeStQSGdYd1A4T1BFL3dDMmo4T3ZFbW9lQTlGbHQ5UzhaYXI0d3NiRnRYdWJpWWtySDlwbldXZUtHR0czakU4cXh6VE1IbGxqamFUYlYvOEE0WngwZUg5b1BVZkIzL0M2dmkrK2wzK2llQmJLM3MzK00vaUFycDhtcmFicU54ZFhjSisyYnZ0RysxaTJ0SVhVRGRsVG12enA4TC9HWDlwTFVmRHRscUYxKzE5OFpqTE5hbzhoSHhiMXJra0RQL0wxWDdGbFhIdUk0ZXBZZVgxT25PcFNqRktiazd1U3BxbTV2M2VhOG9Lemp6dUtiYnRmVS9KODA0QnBaN1hyM3hsU05Pckp0eFNWbEZ6ZFJRUzV1VzBadTZseUtka284M0xvZi8vWicsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdoZWFsJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBY0FCMERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOVd2aVI4WXRhOFV4RHc1cEZ5MXRwTUFDQllzcTF5RjRET2V1UDlucDY1SUdQR3JuWGZqdDQvd0RpTDRrK0ZIN05QdzI4SmE1ckhnenczcFd2ZUpYOGMrTnJyUTdVV2VveTZuRGJDMmt0ZE4xQjU1UStsWFBtSzhjS3Fyd2xYa0xPc2ZTV21tZUpmRm54ZStIL0FNTjlGMXEzMCt5OFIrSTdtMzErN2UwTXR3dG5GcGQ5YzdiWWxna2N4bWdnRytSWkZDZVlOaFlxeSsvL0FBNS9aSDhDL0FqeGg0OStNbmgveGY0aTFUVnZHSGhEVE5HMUZOWm10VEREYjZZK3B6VzVpV0MzaUlkbjFTNDNsaXdJV1BBWERidmdjb3l5cm0xZFluRmU5VGQrcld2eTZIMU9ZWTJubDFCMGNQcEpMdC9XcDh4L0R2eFQ4Uk5RdnRYOEUvR0x3SHB2aDN4Vm9NOFExQ3kwUHhBMnE2ZmNRVFJpU0c0dHJwN2UybGRDTjhiTExid3lMTEJLQWpSK1ZOTDZYNGErSy9qenduYW15MGZYWEVSQ2hVbVVTYkZHY0t1NEhhT1R3T09UVS9qYjROZUFyZlh2RVh4bDF6NGdhdG9iVDZURWRWdWplMmNkaGFRV2lTc0ozOCszWW9xaVJ5N0dRTGhSOTNCSjhuK0NIampYUEgzZ045UjhVZlpIMVRTL0VPczZEcWR6WVd6UVFYbHpwbXAzV25TM1VVTHlTTkJITTlxMHF3dEpLWWxrQ0dXVXI1amMrZFpUaU1ucnV0UzkybTNhTm5ydGUzZnVQS00wb1pyUVZPcDcwMHJ5dXRQWHNTZkV6NGI2MzQ2dlBEbmlId2Y4WC9FL2dYeEI0VDF4OVUwUHhINFRXd2U0aGxleXVyS1JIaTFDMXVyYWFONEx5WUZaSVd3MngxMnVpc08wL1lZK0pYN1ExLzhBSFQ0MS9CVDQwZnRMK0pmaVJwbmgvd0NHM2hUVzlDdVBGV2phSmFYTmpQcUZ6NGtndVZWdEowK3lWNDJYVGJVZ1NLNVVxMkdBWWlxdGVUL3RKL3NMZnNoL3RmeVdkMSswajhBUEQzaXE3MDlWU3kxTzh0akZlUlJLWEloRnpDVW04ck1qdDVXL1p1YmR0emcxejVQbkZUTGFxVTIzVDEwWGQ5VHJ6SExvWTJrK1d5bStwRDhhNDlPK09Qano5bzIwK08veFc4WjZkNFYrRUM2TmErRzlHOEpXalNSU1NhcHB0amRpUzdoSVdHNkVkMWI3bEx1cnhyTElxeXdyS2ZNOHkrS2ZoWFJQaGw4SlBoeDRrL1l3L2EvOFo2SG9QalBScnZXOVIwQ1hSZElhL2l1NWJwdlB1Wlk3MjF1UkZGTmNpNktlU05ra3NkektKN29TSzZmblQrM1ArMS80cC80STNmdG9lSS8yZi8yS1BoZjRSMDN3dGNhUFozYTZackVGN2NSckRkV3NBdWJCMFM2alM1dEpYdHhMSkRjTEtIZVI5eFpOaUo0WmVmOEFCY3Y5ckh4SGQvYk5SK0gzZ0hkREFsdmJ4cmI2cjVkdGJwbnk3ZUdNNmdWZ2dqQkt4d3hoWTQwd2lLcWdBZjFSa21aOE9aamsyRmhqcWNxbUd0R282YnAwbkZ5ZE5SZW05K1pjL3RPYm1md3VOcnQvelRtdVQ4UVlMT3NSVXdWU05QRWEwMVVVNnFrb0tvNXAzMnM0dFE5bnk4cWZ2cVYwa2YvWicsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdhbWJ1c2gnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFkQUI0REFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5R1BqRDhUL0dsN2NXdDNZNllQRUhpbnhEcTFyby9oblI1YnN3UjNGM08rMUF6S2tqUldzS2VaY3p5Unh5dkZiVzl4TUlwU2hSdVkvWi93REhuaUw0aWZDNjExZnhzMm5ueERwMm82am9maW4reWJkNHJSZFgwMituMDYvV0JIa2taWWhkV3M0VEx2OEFLQjh6ZFRuZkhIeEhZL0NueDU4SmYybC9FZWYrRWUrRi93QVRVMWJ4VklweDlsMHk5MGpVOUNudm5ZL0xIQlpqV0JmVHV4QVMyczUyemtDdVorTkh4SjhLZkNYeFBybjdaMzdJUGlUdy93REdqNFBlUC9HVm5wZmliUlBoVjRsMDNVYnJUdkY5MUxiMmNFMWd3dVZ0NTJ2SG5zWXJpejgyTjBuSzNLTEkxemNtdnpqRFpTOHd5aVZlbDcxVlMxNzJ0dDY2M1Byc1JtS3dXWlJvMU5LYmpvK2wvd0N0RDJxdXMrSHZ4ZDhRZUFiZVRUb2kxeFpQbGt0akp0OHQrT1FjSEF4bkk2ZDYrZlQrMTU4TXZESGkvV3ZoaDhYcnhQRHZpcncvNDN0L0N1bzZYYnZKcUVjbDVQcDFycU1NOFVrTWU4V2pXMTNDVGNUUndvajdrZmFRTjNwMmthdnBldjZWYmE3b09xVzk3WTN0dWs5bmVXY3l5UlhFVHFHU1JIVWtPcktRUXdKQkJCRmVYVXd1WTVhMVVuQ1VFMjBuWjJkdDBuczdhWHRleDNReEdBeDZkT000enNrMnI2cFBadGJxL1RhNCsrc2JMVTdLYlRkU3M0cmkzdUltaXVMZWVNT2txTU1NcktlR0JCSUlQQkJyNGcwbi9oYnZ3TDF6eHo0dStGWHdVOFRhbisxRDQ2OFhYTC9EM3cxclhoNisvd0NGYmZEZTFnMFNPd092YWZkeGVaWVQzVTlqWlJXbjJ5NGEzdlhlV0NEN0ZZUXpUcko1Rit5Wi93QUhFdmlYOXNyNGxQOEFDandwK3lsWStFTHRiRjdzYXJxUGpGOVZqMnAxVHlFdGJZNVA5N3pPUFExdWZEei9BSUwyK0tmaVI0czFmd3RaZnMwYWZwNTBieFJGNGZrdUpmRkR6K2ZOSnVBdVFvdDAySUNNK1ZsaWM0OHdkYTkvTE12ejNMSnluVG9wdHEyc2xwK1A5ZVI1ZU94V1Y0NkNoT28wazc2SjYvZ2QxK3dML3dBTFQxLzlsUHd2KzBSNGYrRGNueE44US9HYTVQaGo0cHJkUEZhTGRQcUduYVBkSy83cnkyaHY3aWFPVjExTWt3UU5HQTZzK3dwN244RGs4T2VGUDI4Zmp4OEl2aGw0Z3ZuOEdhQnBQaG01MGJRYmkrU2FMU0x5N24xcVMvZ1h5aVk5NlRxWUdjRml3dG93enliQXgvTHJ4UDhBSEw0RS9EbjRNZUxQaXZwM3dOOFd3Nkw0TTFpWHc0M2hQU3ZpNWZXOGM4WUlWUkRLOFVuMmUzQ3FpaUJrbU9FQU1oeFhNZnM0ZjhIREh3Zi9BR1c3dlhOVytHLzdBV3UzT29lSTQ3U0xWZFIxL3dDT2s5OUxKRGJHZG9JbEVtbWJVVkd1Ymh2bFVNeGxPNHNGUUwrdThhY1M0ZmlMaDJlQXcrR21wdFJVYjhpaXJTaExYOTYwdVNNWENEakNMNVpOU1orVThJOExZdklNK2hqYTllRGplVGxibXZyR1MwL2Rwdm5jbE9hbk9TVW9ybFIvLzlrPScsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdhbGxDb29raWVzJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBZkFDSURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOXJmRkh4ZDhGL0REVEl0SzBEUkxkcis0dGtsZTBzNDFqamlKVVlNcFh2Z2toUms0QXpnRUd2SlBGdjdXZmkyMzEySFMxMTdacUxXcjNVR2g2RG9yM3QwMEtrSkpPTGVOSlptalV5S0dmQlJTeTVJeUs1blZkV3RMQzF1ZGMxelVZNElJSTNudTd1Nm1DcEdpZ3N6dXpIQUFBSkpKNEdTYStjdjJiUDJ2RytLM3d0OGI2WDRNOFo2VmZ3MzN4SDhRV1hpVy8wMTRKWHZVdGRWdUlyQkRLbWNSTHA2V0lRS1ZEcCs4TzR6T3ova09hY1FTd3VIbFhxT1VZTFNNWWQyblpONldUNnZwMFRQMFRMTWhqaWFxcFFTbE42dHk3WFYybDg5Rjk3UHJyd0grMXI0cThTV0gvQUFrWGh6eHJwbmlHd01zdHVaSTQ0bmpTYUtSb3BZeTBPMHJJa2lPaktUbFdWbFlBZ2l2WVBodDhadkRIamE2dUxaMU5oZXliWEZyTzRPOGhkcENOL0ZnS0QwQjVQQkF6WDVqL0FBbStObmhid3Avd1VCbitFa1hqZlNMS1B4VDhQM3U5WDB1NjFKSTVialZyYTZ0WXJKbzRuWWJwSkxXZTRRc3FscEVzMFVraTJVSjlhV2Q1ZGFmZHgzMWpjUEZOQzRlS1dOc01yRG9RYWVVNTdqS21HcDE1WHRKWHRMVjcyMy9MdjJGbW1SNFduWG5SVmxLUFZLM1JQYjgvelByUWF0WmtaRVYzL3dDQVUzL3hORmVYV1A3Vk9nSlpRcHF2aCs4ZTZFU2k1YUNFQkRKajVpdVNlTTV4N1VWOWNzendiKzMrQjhwL1pXTy9rL0ZIeUwrMkQ0WCtMM2liNE8rYjhFTkFzTmExL1NOZTA3VllQRHVwU1JSeGFxdHRjcEw1SWxsSVNLVldWWjRuSkE4MkNNRmxCTER4NzRiL0FCUytJUHhGOENXUGpMeDlvVTJtWGwzTGNJbG5jWDhWejhrY3p4YjBsaGtsaWtSaWhLdkhJNmtjZzlRUHBUNHErQ2JqNGwvQy93QVNmRGkwOFMzZWpTK0lOQXZOTmkxaXdPSjdGcDRIaUU4ZkkrZEMyNWVSeW81cjQyajhFZjhBQlNENDNmRVVlRE5kOEZlRlBCR29hVVpManhiNHN1cjc3ZnBON0tvSWdqc0xhM3VrdkdobllCd3N4dHpCQ3JLeGtmYXAvS2M4eTJwbU5PRWFjYnl2cStheVMzMVhYN3IzMDZvL1ZjaHpDamduVTl0SzBiWHRhN2IyMGY2UFRyM0lQamg0ditML0FNVXZBL2p6NFQvRFR3MzRvT2dXK2tvUEZQaWJ3L3A5ekxCWTJzcVRpNWxNc0JLd01pMnNzWmtuVllsSnlyVEdHZUZQcVA0Sy9Idlh2R210cDhNUGl2OEFDbnhINE04YVI2UkxxY21sYTFvbHpicGNXU1hUVzYzS05OR2hUZjhBdTIyT0I4enlKRTg0Z2xrSHg3NGYvd0NDaytuL0FBRitDL3hJL1lRL2FCOFczM2hQeERMcmw0MnJMNFVrZTZndDcrYTdkakJjVGZaQTgybjNOalBhM0RHRXJNaW9Jakc1a21oSHQzN05uL0JRL3dDRW43WXY3VXVtL0QzNGMvRUR4WHJVUGhiNFQzRVdtVGVPb0kyMWU5aWoxQzFNOXpjelF3SkdXVTNOckFBWGtkaEVKR1ozZVZxL29ML2lIdkMrVWVHVk90UmhGWWlNSTFaVDl2elNibkNscHkvQmJubEtLaEZLY2VXN2JzMi93U1hIdkVtYmVKTThQVmxMNnM1eXBSaDdEbGl1U2RYM3ViK0pkd2pHWFBKdW5MbXRGSzZTK293MGdBd244NktuajB2WEpJMWtoc2Nvd0JVK2F2STdkNksvSVBZMUgvWC9BQVQ5WTVvbi85az0nLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnYXJlbmFUaWNrZXRSZWNoYXJnZVJhdGUnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFlQUNBREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5czlaZytEWHczOFBMZGE3NFQwdHN6U3dRUUxZUnl6emJISXhseGxzREdXWTQ1SE9TTThGcm43Ui9pTzZpRmg0YzhPNmZwdHBHVU1DYlRJOFpVNXlEOHFqbkhHMzg2NG54UDRsMVR4YnJVK3Vhdk1HbG1ja0lvd3NZSkoycU93R1QrcE9TU2ErTGZCM3hCK01XdWZGNjkrTUhpVHhMZlhQaHJWZFlWZkJsem8vakNTTzFqc0xtUmhZVDNPbm1meWhGTGJ2RXdtbGpVRm93UnVNd0wvam1kY1R4eStLbEZPTVc3SlJTdS9OM2EvQjlVdFQ5S3liaHVuall6ZGVyRk9LdmViZG0yMGtvcnErdTJ5YlAwRTB6OXBmNGtXYkFYcTZmZHJrYnZOdGlyWTc0S3NBQ2ZvZnBYb2Z3OCtOdmh2eHZxYXdUeERUYnhyWWlXRzRtQlYyRC9JcVB4dTRaamdnSG5nSEdhL09mWFBqeDhRdmhuOExkYTE3VC9pOVA0aHVkT3M0ZFhtMWpYL0NzV294dzJEdVVVSkZwZ3NWSWR1Qkk4aEM4RnZsNXIxLzltNzR5eWZITDRQNkg4WDdUU0x2UzIxRXptS0tlUHlwUDNOeEpDSmxVTTJ4WlBMRXFqYzJGZGZtUFU1NVB4ZkhIVGZzcHVWdDFKTmZqYjlUZk4rRDU0VEQrMW5GS04rVlNpMDFlMTdXOU82S1A3V0h4U0h3WS9adzhZL0VXSHhIYmFSZVdlaVNRNlBxTjRoYUtIVVo4VzludkE1SU56TENNZTlmblZhZUs3bjR3ZVB2QVA3UjlwcEhpSzFqOEQrQ1l2RFYxcHZoYTh1cktCN3kxVzYreHdyUERLa3RsQTl2dGVlZFdrVHpRa0x4cWtzRVovU3I0Ni9CandsKzBKOEtOWStEM2ptNHZvZE0xbUtOWjU5Tm5FYzhUUnlwTkc2TXlzdVZralJzTXJLMk1NcktTRDRkZGZzTC9BQlI4TVhVLy9DdnZpbDRZbjBhMXRpbWorRzd6d3ZOWnk3Z1BsRXQ5RmN5SW8zY2xrcysvM2M4MTg5bm1FekRFOGp3OEZQU1NhNXVWKzlaYVBvN2FKMzA4ajdiZy9Oc2p5eW5VV0xialVrN0oydXVWeGxHUzB1OVZKNnBYVHMwOUxIeGxxZjdYUHhzK0gycC9GTFFmaVhwbXA2aDRaOGlmU3RFMG54UmFhaGNUelhCa1NlMUxYRis3Uy9aN21PMW1sTnExMCsxbXdFZElqbjlPUDJlclB3Ym9Yd1c4TStDZkEvaUp0VHN2RG1nV0dsK2RjUk5EY3FZclNIYUxpRndyd1RGQ2p0RklxdXUvbFJYd2o4V05kOFMvc21YL0FNVGZILzdUUGc3UlpyYXc4SGVIZnQyaCtFYjg2ckRmMnQ3cUYvWktrelhsdGFpVW1RNGRXUXFJMVhHNXNnK3BmczRyOFJmRW54eWsrRC9nVFhiYlJkUzhFV21nYW40eDEwelhFN1NhUkpjM2hzdEppODU1Sk5TQnQ0citDU2E3ZFBKZWY3VkRHWlpOc1g2emsvaGZsMkY0SC90K2RmMk5hY0l5bEJ4NW9weGxPRnVhTjIzS3lzN096dnpPelRYODhjWCtPdWE0L3dBWHY5VWNKbGNaNGFGUlUxVmhOUmxMOXhRazZrb1Q1VTVRVGJxYTgxVG12SDNvOHMvLzJRPT0nLFxuICAgIDAuOVxuICApLFxuXTtcblxuLy8gU2F2ZSBmb3Igc3VwZXIgbWF5aGVtIGZyb20gQXVnIDksIDIwMjNcbmV4cG9ydCBjb25zdCBudW1iZXJJbWFnZXNTdXBlck1heWhlbSA9IFtcbiAgbmV3IEljb24oJzAnLCBiNjRfMCwgMC45KSxcbiAgbmV3IEljb24oJzAnLCBiNjRfMF8xLCAwLjkpLFxuICBuZXcgSWNvbignMScsIGI2NF8xLCAwLjkpLFxuICBuZXcgSWNvbignMicsIGI2NF8yLCAwLjkpLFxuICBuZXcgSWNvbignMycsIGI2NF8zLCAwLjkpLFxuICBuZXcgSWNvbignNCcsIGI2NF80LCAwLjkpLFxuICBuZXcgSWNvbignNCcsIGI2NF80XzEsIDAuOSksXG4gIG5ldyBJY29uKCc1JywgYjY0XzUsIDAuOSksXG4gIG5ldyBJY29uKCc2JywgYjY0XzYsIDAuOSksXG4gIG5ldyBJY29uKCc2JywgYjY0XzZfMSwgMC45KSxcbiAgbmV3IEljb24oJzcnLCBiNjRfNywgMC45KSxcbiAgbmV3IEljb24oJzcnLCBiNjRfN18xLCAwLjkpLFxuICBuZXcgSWNvbignOCcsIGI2NF84LCAwLjkpLFxuICBuZXcgSWNvbignOCcsIGI2NF84XzEsIDAuOSksXG4gIG5ldyBJY29uKCc5JywgYjY0XzksIDAuOSksXG5dO1xuXG5leHBvcnQgY29uc3QgbnVtYmVySW1hZ2VzUHZQID0gW1xuICBuZXcgSWNvbihcbiAgICAnMCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU5BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3Q240aDhEZkJXQysxajlqMjAvWjg4QzJzT2pmczZXL2p1MCtKMGVpQWVKL3dDM0RheDNUYWhKcUdkOGx2STdORUlpTnVCdEpaZmxCWEErTFBpVCswTmVmQWE5L1orbStPbDJmQmlhRTJueDJQOEFZVmtMOXRQVEx4NmZKcUFqKzB5V2lzQmlJdjBBVXNWR0tLOWJJZkN6eGU0V1ZhbjliZFBubGQrenE4Nm5KSktWV1h0SEZ4bFVlcmlyMjZzK0xxOFQ4STVtb3lsVFV1Vlc5NkZyTGZsVms5RnNmLy9aJyxcbiAgICAwLjlcbiAgKSxcbiAgLy8gbmV3IEljb24oJzAnLCAsMC45KSxcbiAgbmV3IEljb24oXG4gICAgJzEnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFOQUFZREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R4MzlzaUQ0Y0wvd0FFMFBBUHhDOENmczhlRVBBbmlmVC9BSXJYdmh2VjlaOElRTzE3cThVT21RekdXNXZad2JpY3ZKSVhLdXhDa0tCOTNKS2o4ZGVGTmIrSVhnSWZDRHhQNHhubDhId2VJNU5lczlDanNvVU1Hb3lXOGR2Sk41NFh6R0JqaVViQ2RvSkpGRmZyUEQzaEx4YmtsUEUwS1ZibHBPdlduVFRxMUpQMmM2amxDN2QzZmx0ZTdidnUyZmw5ZmpISmNSR25PcEM4K1NLaytSZkVrci9LL3dBai85az0nLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnMicsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RFIrR1ZwOEtiYnhSNHUwejRuZkRMNE4rTWZobHBPaTZsckh4QytJZDk0S0V1dDZlMHlsckNDSFd2dERadXpJeUpid3dvR1ZRR3l1VTNGZWUrR2Yya2ZqUDRKK0dWajhMdkR2aWJURThOK1BSL3drR3M2SmVlRU5KdTdlSzl2U1dsYUVUMnJtTlYzRUlNbllNQUdpdnkzSDhPWnZtK2M0bkd3bThQR3BKTlJwWW1wRmFxN2xPOU9WNXR0N1dTVmtscHE2T0pvMEtFS2I5NXJTN2l2dzEyUC85az0nLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnMycsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RG52Mk80UGczOFMvaHg4UnZodjQ5OEIvczhlSzRQRFBoYldMelR2QytpZUVWaStJMnNYS3dmYW85UWoxQ1NRSis2TXV6ekVmZHR0eU5xbm1pdkVmZzkrMWI4ZHRJMFJQMmRQREhpalRkRzBiWGRKbE9wNnBwSGhMUzdmVnBZTHNtZWUyKzNyYmVlc1ROSTQ0WU9xa0FNQUJnclBMZkN6amJpSE9NeXpITDhWRERVcWxhVFZOVjhScGZWL0JHbW52dTA1ZDI5RDViRThTWlBsbUhvWWZFMDVWSktDOTdraHJiVHEzYmJaYUgvMlE9PScsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICc0JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTkFBZ0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdDNXJ2N0YwZmdyOWdMeDE0LzhjL3M4NjdySHhYMURSZEw4U1dlckh3akxjcDRiMHBybFREWTJkd0kyL3dCSjhuZk5jK1VjcnVDdmdLTWxlWFd2aTM0NTZUNFUxVDRkNkQrMHA0L2g4TmE5WXgyZXQ2TmZlTEwyK1dXQkdCQ1F5WE1yeVdnSUd4aEN5aGsrVTBWK244SGVIZmpQa0dLekdyak1aaDZzOFRXOXJ6T1ZWM3ZHSzkxSkxraXJjcWowU1B5ek1PSStEc1hSb1JoU3FKUWp5cEpSVnRldDNxK3Qvd0JULzlrPScsXG4gICAgMC45XG4gICksXG4gIC8vIG5ldyBJY29uKCc0JywgLDAuOSksXG4gIG5ldyBJY29uKFxuICAgICc1JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTkFBZ0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEai9pakI4UFBpdCt5ZFlTL3NpV1g3TnVvYWI0TitGT2tUL0ZxenN2aC9GSDQ2MGE2Q3BIZDZnbDJZVUIyekZkekxKNWdPNGdra0FsWWVtNi84V3RQK0Q2L3MrSjhRdFB0ZkJaZ2lndjhBVDlGOEc2ZFlYbXJRUnZ2U0M5dllZaE5jeGhzRWdrRnNZWXNNZ2xmclBoWjRVY1VjTFpmaThQbUtwcFNxdVVQM2s1VGNiTFdjb2V6aTIzZTN1M1MwYlorVmNSY1haVmo4UlRuaDNKMmpaKzdGSy9rcEp2OEFRLy9aJyxcbiAgICAwLjlcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzYnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFOQUFnREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RKK05IN0kzaGZ3UjhFZkNVbncyOFErQU5YK0pHaStCSWZpVjhVN0NjM0k4VDNtbjNjWVdLS3prTVJoV3pnU1RBdHQ0TWpwdnlEbkpYTTNYeE8vYUcxTDRWRDRGYWo4Y2JtVHdnTklUU0d0MDBDeFRVNWRLUmd5YWJKcWF4QzVlMVhBQVRjR3dBQ3hBb3I5YjhPT0RQSERoakw4Vmg4YmlzUEp6clRxS1UzT3BLVGxaeWxlS2paTi9ERjNjVnBleCtTNTduUEErWlZxYzQwNm51d1ViUnRGSkxaV2ZWZDFvZi8yUT09JyxcbiAgICAwLjlcbiAgKSxcbiAgLy8gbmV3IEljb24oJzYnLCAsMC45KSxcbiAgbmV3IEljb24oXG4gICAgJzcnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFnREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RsSDFmUWRWL1lSOFdYSGpyOW5iNEwyK3BTK0xkSThHZkRueEw0VStGVnBwV3B2ZFJ4TFBmM1RYS3RJN1NRd0JDWFVxV2N2bkdLSzVId1MrditOdkVsdDhMdkV2aXU4bjhQZUZMeTl2OEFRTkxXQzJqUzF1TDc1N2lRc2tRZVZpY2dOSXpNcXNWQnhnQXI5ODhNZUJNRnd6aHN4bFZpbDdmRlZad2hDVTNHRk9MVUlSVGxaM3RIbWwvZWIxYVB4ZmlQUE1WajZ0QlUzZmtweFRja3J5azFkdlRTMnVoLy85az0nLFxuICAgIDAuOVxuICApLFxuICAvLyBuZXcgSWNvbignNycsICwwLjkpLFxuICAvLyBuZXcgSWNvbignOCcsICwwLjkpLFxuICBuZXcgSWNvbihcbiAgICAnOCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RGI4Y2ZCajlsMncvWmcxbXowYndMOE00OVIwNzluUFRmRmRqNFBzZkMwS2ZFTFQ5YWtDUEpyTnhxVy9kSkMyU3hUZXhLSEJqeDhvSytkMS9hbS9hRDhSM1Z6K3l0ckh4SEV2aHRQRDBlaTNGK1BEK21ycTkxbzhXREhwa3VvTGJDNWUyVUFLRjM3c0FEZFJYcStHUGhYNGc0WEM0MVBNMUg5ODE3dFNxN3RKS1VuN3NOVytydkovYWsyZkY1OXhSa01LbExud3psZUthdkdPaWV5M2Y4QWtmL1onLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnOScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3QzlIOElmMlp2RS93Q3hENHQ4Y2ZEend6OERadkIzaFA0TVdGMURyK21SS2ZpRnAzanpLK2N0L0wvcmtEeUIxV056ODRPMEFvUUtLOEppMWJ4VHFBdS9oQmQrTHJ3K0U0dGRUeEEzaDZPR0NPQ2ZVVEVpTE5NNlJDV2ZZRUJSWkhaVWJsUUNCZ3I5UThOdkJ6UDhrcDVncXViMUZHV0lueWNrbTI0eHRIbXFjeVg3eVRWNVcwODJmbHVmY1pZR3RLZzFoSXlmSkZ2bVMwYjFzcmRGMC9JLy85az0nLFxuICAgIDAuOVxuICApLFxuXTtcblxuZXhwb3J0IGNvbnN0IG51bWJlckltYWdlc1dpc2hpbmdUcmVlID0gW1xuICBuZXcgSWNvbignMCcsIGI2NE4wXzFfdHJlZSwgMC45KSxcbiAgbmV3IEljb24oJzEnLCBiNjROMV8xX3RyZWUsIDAuOSksXG4gIG5ldyBJY29uKCcyJywgYjY0TjJfMV90cmVlLCAwLjkpLFxuICBuZXcgSWNvbignMycsIGI2NE4zXzFfdHJlZSwgMC45KSxcbiAgbmV3IEljb24oJzQnLCBiNjRONF8xX3RyZWUsIDAuOSksXG4gIG5ldyBJY29uKCc1JywgYjY0TjVfMV90cmVlLCAwLjkpLFxuICBuZXcgSWNvbignNicsIGI2NE42XzFfdHJlZSwgMC45KSxcbiAgbmV3IEljb24oJzcnLCBiNjRON18xX3RyZWUsIDAuOSksXG4gIG5ldyBJY29uKCc4JywgYjY0TjhfMV90cmVlLCAwLjkpLFxuICBuZXcgSWNvbignOScsIGI2NE45XzFfdHJlZSwgMC45KSxcbiAgbmV3IEljb24oJy8nLCBiNjROZF8xX3RyZWUsIDAuOSksXG4gIG5ldyBJY29uKCcvJywgYjY0TmRfMl90cmVlLCAwLjkpLFxuICBuZXcgSWNvbignLycsIGI2NE5kXzNfdHJlZSwgMC45KSxcbl07XG5cbmV4cG9ydCBjb25zdCBudW1iZXJBdXJvcmFTdG9ja0luVHJhZGVCaXJkID0gW1xuICBuZXcgSWNvbihcbiAgICAnMCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3REMwSHdWcE4vb3VuK0NMcjQwL0V1ZjQ2My9BT3o5ZC9GMkR4aC93a0NSK0hZMHR4NXgwazZZRTJORTBIeTc4aHR4emtZNUsrYzlSL2J6K00zaGo0TjNmN09sbG9maG1XZXd1bStHRm44Uko5SlkrSkl2REVzbTk3SVhJa0VYSStUY1ljN2VENjBWK2RacGt2QWZMUmVKeTZuSzhWeTJwdzBqMFhROGl0aHNydEZ6b3A2YWFMWS8vOWs9JyxcbiAgICAwLjdcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzEnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RMOEtRYUpvbndiK0UveDY4TWVPL2lySjQxMUw0cWF0NEorS1duK1BOYXRudEpyMjIwQ2UrbUZ0YTJ1WVlZbzdoVUViS2R4VkRuclJYbnVsL0Y3eE5xZjdYbi9ESTF4YVdJOExhVjhaOWQ4WFcweVJNTHMzOXg0Y1dPUldrM2JURmlWeUYyZ2c0K1k5S0svaVh4U2VXVmN5d0Zlbmg0MC9hWVdqTnFFVkdONU9iMFMrUzlFajg1enIyRXExS1NnbGVFWG9yTFc1Ly8yUT09JyxcbiAgICAwLjdcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzInLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFOQUFrREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RuUGgzb1hoM3gzNHgrSnZnSDQxNjE4VXRBOGNlRGZCR3RlTHJuNG9hUDhTclp0QzBSWVdadE90WDA1RTh0Rm1YYXZsemZ2SEliQU9RYStlUCtIalg3YTMvUXZSLytDSjY5TytQbjdUL2lYNEQrRC9paCt4Yi9BTUtxOEIrSXZEL2ovd0FRNm5ydXFhdnErajNhYWdaNS9NZUVTU3dYY1luRnZsUkVIRzBDTlBsT0srUk4vZ1AvQUtGcldmOEF3cmJxdnhiTGVIK0YrSytIOERQMk5DYzRVNDh6ZEp4WHZKYUpLMjFuMWZmUzU4NVJ3dUN4MkVwUGxpMmtyKzYwZi8vWicsXG4gICAgMC43XG4gICksXG4gIG5ldyBJY29uKFxuICAgICczJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTUFBY0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEbGYyZGZBM2gzNDNmc1ErSnYyc2RWOFEvR1B3aEw0ZFd6aGcrS1MvRTIxMVNQV3IxNzlMUzRqL3NOSXliYUhheEtNeUxna0hKeHlWOHVlRmYyMi9GL3dSL1pJdFBEUHdkK0Rudy84TjZ6NDJlUFRmRnZqZlQ5R3VEckdxUTJreHVVTWp5M0R3aG1salVzVmlVRVp3QlJYeTJJeUxoUk9LcTRHbEoyVnYzVUhwMjFSeFN3MkJWdWFsRi85dW8vLzlrPScsXG4gICAgMC43XG4gICksXG4gIG5ldyBJY29uKFxuICAgICc0JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTUFBZ0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEVHMvaGY0dS9hcitGUHhUL2FXMUxXL0dPbWFKb1BoWFY0dmd0bzNocTR1Ylk2dGU2ZVYrMWFyY3REamRHWC9kUXh2OHJoR2JCendWVytJL2dQWC9nWFpSYWQ4QmZqcDhTdkJlbmVJa3U5TjFiUk5GOGVYcjZlME55eW1VeFd0eThzTnErZDJIZ1dNamMzTkZmZ3ZDM0VQaDB1R3NMR2pnRzRLTmx6VTZiazJuYVRiNW5kdVYzZjhGc2ZMNExGNVQ5VGh5MHRMZFVyK2ZYdWYvL1onLFxuICAgIDAuN1xuICApLFxuICBuZXcgSWNvbihcbiAgICAnNScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWNEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RHozOXM3d0RyUDdQMzdML2hINDYvQW40Zi9BQlM4U3g2djRKOE82ajRoK0sxbjhhVGUydGpxbDdBclhGckxwVWNjandnc1Npc3dWUVhHT1ZvcjU2MHo5cGZWOUYvWnY4T2ZzMWZDejRXK0R2QTFuOFE1Vi80VFB4UDRWMDZkTlkxUTZlSko0QzgxeFBMR3VaSTFMN1lsRGM5S0srRnpUTCtGYVZlS3JZU04rVmJVNmJWdm1qeks5TEF4bXVhQzI3SS8vOWs9JyxcbiAgICAwLjdcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzYnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFNQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0NQeDU4Ty93QnFMOWxYNGFmREg5cUg0bFMrTXZHZzFyUkYxMzRvVy9oL1dMQ2F6ME96MUNEYnBkbEZwYWtYUllTTkV6M0p3dTRsY0hyUlh5UjhXLzhBZ3F4KzBYYmZzM1dHbFdIaER3UmJhOXFFTnY0UDFmeDFCb2t3MWpVTkowbVF2Wnd6U0djeEVneHB1WllsTFlvcjhtenp3bDRFenpFd3IxS0xwMmdvcFU3UWpaWHMya3RYcnErdGtlRmlzaHl2RXpVcFJhMFMwMFIvLzlrPScsXG4gICAgMC43XG4gICksXG4gIG5ldyBJY29uKFxuICAgICc3JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTUFBZ0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEZ1BEV2dlR0l2MlZmaVg0OThVYUY4VHZEM3hVK0hkOTRkMEhTOWRYNHZ6NmxwK3VlSmRRZUdUN0w5bE1TUnFCQTI5a09kb1lqcUtLNTc0Uy9GL3dBUytQdjJ4cnY5a2ZXYkN3ajhLZUdQaTk0ajhZUnRid3VMclVkVE1jZmxOZE96RlpFaEVyQ0pWVlNvQXlUaWl2NUk4UXVNc0hrMVhBVXY3UG9WSnp3OU9wSnVuRks4K2tVcjJXbmMrRHpiTUtlSGxTajdLTGJnbTlPL1kvL1onLFxuICAgIDAuN1xuICApLFxuICBuZXcgSWNvbihcbiAgICAnOCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3Q2V6L1p2ajhRZnNKUi90bmFwOFovaUZGZTNud1VmeDFjL0VteitJa0VWdmI2c1pkbzBlUFFEQ1Q5bUlJUVQ0TzBrRWtrY2xmRnVuLzhBQlRiNDF4L3NaTG9jUHc0OEJKcmtQaHB2aHJiK04wMFc0R3JRK0hYYkxXcXQ5bzhqT0J0M21Fbkh2elJYeXRmaDNoU0tncDRHazdKSmZ1b095NkxZNFpZVEFLeWRLUDhBNENqLzJRPT0nLFxuICAgIDAuN1xuICApLFxuICBuZXcgSWNvbihcbiAgICAnOScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQWtEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3Qi9oVDludld2RmY3Rm4vRFd1bWZFcjRsNmo0Z2orRGJlUHJqNHN3K0xZVjhOMjJxeHk4NkErbGhOb1VvQ256RVNaT1NSMytXUCtId1A3VlgvUnFsLy9BT0FNMytGY2I0Ky9hQjhiZkRmd1g0OC9aQjhDV09tYVY0VDhXVFJhNTRyZXp0M1M3MWRyZlNMZTZXMG1rMzdmc3pUWmQwUlZaeVNTMlRtdmR2OEFoN1g4YlA4QW9odndwLzhBQ1l1UC9rcXZ6YWZCbkEzRldFdzlhdmdJSzBJdEtLVWJLU3VsN3RyMnQxMjZibmovQU5uNVpqcWNKU3BMWmVXL29mL1onLFxuICAgIDAuN1xuICApLFxuICBuZXcgSWNvbihcbiAgICAnLycsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU1BQVlEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RHh6OW9GL3dCb2Z4SjhGL0FYeE4rRVhqSHhzZmlUOFZyM1YvRkZqNGMwelhvN1cwMHZ3ZEJOSGEybStHV05nczBrcksrN2dzR09PQlJXYjRGK0tQaWo5cWZ3cnJIeG84ZHZEcG1xNlRINGE4SzZSRDRkVnJhM3NkS3M5TW1hT0NKV1p5b1pwU3prc2R4VkQvRFJYODI1L21HRXluTnFtWFlEQTRiMmREbGd2YVVWS1R0Q0x1MnBLKy9yMVo4ZmlxdE9oWGRLbFNoYU5sckc3MlhtZi8vWicsXG4gICAgMC43XG4gICksXG5dO1xuXG4vLyBUaGVzZSBhcmUgdmVyeSBzbWFsbCBpY29ucyBpbiBzZWFzaWRlIG1hcmtldCBkZXRhaWwgcGFnZVxuZXhwb3J0IGNvbnN0IGljb25TZWFzaWRlTWFya2V0RGV0YWlsQmVhbnMgPSBuZXcgSWNvbihcbiAgJ2ljb25TZWFzaWRlTWFya2V0RGV0YWlsQmVhbnMnLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBT0FBd0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEMnZTL0VlaGEvNDBuOEUydXFYeGtzTGFWOVdmU2RNVzZlM2thM1pvSU12SWlSeU03UXVjNzlrUkJaUDNzUlpuaE8vd0JldnRQZFBFbG1ZN3VHWGJJNjJ3aGpmY2l5WVJmTmtiQ0Z6Q1dmYVhlRjNWUWpKbUhYdEMrSVYvUGNOb2Z4U3U5UGgreXpuVHJkYlVGYmE1WkkxakxGR1F5MjZza2ptSnYzak5NMkowVUlpN0p0SURxVjlyQzJzQ1hPcFhJbnZwbzRWUnAzV05JbFp5b0c4ckZGRkdDMlRzaVFaTzBWL0ZuRkdLOEc2SGhCbCtBeWFNcXVjU2xHZGFiaEtMcHZsZnRJT2JqR01vWGRxYWc1NlJVcE5QZitVc29oeC9VNDF4VlhNRlRobDZpMVNqR1hOS1RUWExMbzAydVp5dXRHK1ZjeVNrdi8yUT09JyxcbiAgMC45NTVcbik7XG5leHBvcnQgY29uc3QgaWNvblNlYXNpZGVNYXJrZXREZXRhaWxBdXJvcmFDb21wYXNzID0gbmV3IEljb24oXG4gICdpY29uU2Vhc2lkZU1hcmtldERldGFpbEF1cm9yYUNvbXBhc3MnLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBT0FBNERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEdnZFdnc5L2FVK0hYeG8wYndMOE5kUmg4YWVLZmk2a00ybStGZFYwTythMjhONlR1dWpEcWpYZ3VZcmUza0xJSS9zc1VNeHVMYTNkeXkzTzNmdGVGdjdZK0kvd0N6WDRjK0x2aHZ4dG9QaUMrdnRSbXRkZmgwMndXS0RUTGxRU0lCbWU0RXkvZVZaMWNDVHluSlNKc3hKamZ0ZWZFbndMNGU4QmVHZkF2amY0ZHY0MDA3eERxdW5lR2RBajhaYTlxRjIybDZqcU4xY202V0tTRzVnbHRiUXFJdHJSU2IxaGtOa0kvczhSKzBhZDM0VDhYK0x2aXpmZkV6eGhmYVhwdHV1bmkwMHJ3OTRXdFRCWXA1dmxUWEVubHZueVZXWkdXS0ZDVlhmY1NsdjlKV0MxK0I4UU1vOEVhL2dIaDg2dytIaERNSlllaXFkU05GODg2a0ZEbWpMM1ZUNVZCOHJkbzJVWHlUbmVOdmo4WThsZVVTbHlYcXVNWEdWa3JKTFZOZmFiZHJPOFVvM2padHByLy8yUT09JyxcbiAgMC45NFxuKTtcbmV4cG9ydCBjb25zdCBpY29uU2Vhc2lkZU1hcmtldERldGFpbEF1cm9yYUNvbHVtbiA9IG5ldyBJY29uKFxuICAnaWNvblNlYXNpZGVNYXJrZXREZXRhaWxBdXJvcmFDb2x1bW4nLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBT0FBNERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENkYxVzM4RVhQZ002VmZhWDRqdmZIdXZlSE5VdWZDbWhXY0xXRmxaUVFUWG1tQzV1cnFPNkl1RExKZHgzRWtpeVJDMHRJYmVRUjIxNUNqM3VINHIxQ0hWRGRSZUZJYktXV0RWYmlGOUx2aTZYTnZISExKRUpIdDVsU2RJMmRIRWN6eHFrd2prTVpZSzJOZFBIT2wvQ3VLYjRtNnI0Y0dvanc5QTJvUkdHNGFHNnQvS0crUjdXWWY2aTRhSVN4TEtWYlo1eFlEY0ZZY1Y4SVBqZllmdE0vRHZTZml0NFowb3c2THE1dnB6ZTZoQjlrMUtTVkwyYTJpZ0VOcko5bnQ0STRMZFhiYjVobm51SkhBdHdoRS84QU0rTHJlSC9HbmdCOWRlRWpnc1ZsazZkUG1oRlQ5dlVuQkxWeGpCcFZPVG1mTzVjdWpjNXliY2Z6U3ZYdzJPeTJNK1ZSbFNTam90OXRYYmR2WGZiYSt4Ly8yUT09JyxcbiAgMC45NlxuKTtcbmV4cG9ydCBjb25zdCBpY29uU2Vhc2lkZU1hcmtldERldGFpbEF1cm9yYUJyaWNrID0gbmV3IEljb24oXG4gICdpY29uU2Vhc2lkZU1hcmtldERldGFpbEF1cm9yYUJyaWNrJyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQU9BQTREQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDNydzE0dThOK0ovaExxbnhtOEYrRE5hOFJXM2g3eEhmNkRlV1dseTJsMjB0OVp5Yko1NXJWYm1HOGl0Uks2MndSVk1rcjJzN0xKRWt0bzgvTWY4RklQaVRxMzdGZndvMHpXdkIvdzQvNFQzWGZGUGlLenVVOEhhZnA4ODE3YjZiL0FHYVYrMlcvbFJTR3d0MXU0cnFPYTNua3ZYa21uaTh1NkMyMGtWTTAzNFo2NTRIOGR6ZVAvZzk4UWI3d3RQZHpOYzZqYVd0dEJKYlhOd3l5aDNNT3hZeUdMcTU4MVpYRXJUU2J6dlJJci9nTHczckZwQS9qSDRsNjVxbXIrTU5SMG5UTFhVNzI3OFFTWHNVWDJlR1FQR2p5eHE4bzN5QUxJUkdmS2lqUXBoVjJma1VNMitqVnc1NFE0Zkc0ZkJ3eG1LbENNSlU2bE9yQ3M2N3B4ZFNFOFJHRVZHRUZKcFRvTzA3cGNzWGVjZmhZNHpJYU9UOHNhU2xWYVN1NzNUdGQ2cExkYVg3NzZhbi8yUT09JyxcbiAgMC45NThcbik7XG5cbmV4cG9ydCBjb25zdCBudW1iZXJJbWFnZXNQcm9kdXRSZXF1aXJlbWVudHMgPSBbXG4gIG5ldyBJY29uKCcwJywgYjY0TjBfMCwgMC45NSksXG4gIG5ldyBJY29uKCcwJywgYjY0TjBfMSwgMC45NSksXG4gIG5ldyBJY29uKCcwJywgYjY0TjBfMiwgMC45NSksXG4gIG5ldyBJY29uKCcwJywgYjY0TjBfMywgMC45NSksXG4gIG5ldyBJY29uKCcxJywgYjY0TjFfMCwgMC45NSksXG4gIG5ldyBJY29uKCcxJywgYjY0TjFfMSwgMC45NSksXG4gIG5ldyBJY29uKCcyJywgYjY0TjJfMCwgMC45NSksXG4gIG5ldyBJY29uKCcyJywgYjY0TjJfMSwgMC45NSksXG4gIG5ldyBJY29uKCcyJywgYjY0TjJfMiwgMC45NSksXG4gIG5ldyBJY29uKCczJywgYjY0TjNfMCwgMC45NSksXG4gIG5ldyBJY29uKCczJywgYjY0TjNfMSwgMC45NSksXG4gIG5ldyBJY29uKCc0JywgYjY0TjRfMCwgMC45NSksXG4gIG5ldyBJY29uKCc0JywgYjY0TjRfMSwgMC45NSksXG4gIG5ldyBJY29uKCc1JywgYjY0TjVfMCwgMC45NSksXG4gIG5ldyBJY29uKCc1JywgYjY0TjVfMSwgMC45NSksXG4gIG5ldyBJY29uKCc2JywgYjY0TjZfMCwgMC45NSksXG4gIG5ldyBJY29uKCc2JywgYjY0TjZfMSwgMC45NSksXG4gIG5ldyBJY29uKCc3JywgYjY0TjdfMCwgMC45NSksXG4gIG5ldyBJY29uKCc3JywgYjY0TjdfMSwgMC45NSksXG4gIG5ldyBJY29uKCc3JywgYjY0TjdfMiwgMC45NSksXG4gIG5ldyBJY29uKCc3JywgYjY0TjdfMywgMC45NSksXG4gIG5ldyBJY29uKCc4JywgYjY0TjhfMCwgMC45NSksXG4gIG5ldyBJY29uKCc5JywgYjY0TjlfMCwgMC45NSksXG4gIG5ldyBJY29uKCc5JywgYjY0TjlfMSwgMC45NSksXG4gIG5ldyBJY29uKCcvJywgYjY0TlNfMCwgMC45NSksXG4gIG5ldyBJY29uKCcvJywgYjY0TlNfMSwgMC45NSksXG4gIG5ldyBJY29uKCcvJywgYjY0TlNfMiwgMC45NSksXG4gIG5ldyBJY29uKCcvJywgYjY0TlNfMywgMC45NSksXG5dO1xuXG5leHBvcnQgY29uc3QgYk51bWJlcnMgPSBbXG4gIG5ldyBJY29uKFxuICAgICcwJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSUFBWURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEN0YvWlkvYU0vYUUxcjQreTJmZ240c2VKUEZmaks4MHZ4UEw4Vi9CbXB6dFBiZUdidTMxeUNEVFVqZ0tnV3U2MmFjQlFmM2lJSDl5VVVWbEM3UnBLeVovL1onLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnMScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUlBQVFEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDY4c3ZodjhjdmhmOEFIRDR2ZUN2Qzk5OFI3L1I3WDRrTytrWHVxWDkvZHZQRkpwZW5TTXl6T1R2WHpYbHhnNEJ5QmpHS0tLS3dzYko2SC8vWicsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICcyJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSUFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEM1A5b0h3MzRnOFgvdGEvRU95L1p1L2FOK0svd1gwWFJiMlBUOVV1YjIxOFJhaTNpblZGbXVtdWJ5UFlHV09CTjZSUmtIRGhTUUFBS0tLSzVkMmIzc2YvL1onLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnMycsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUlBQVlEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDdnK0FkaDRsay93Q0NvM3hLOEpmRGY0cytNZFE4Sko0VnZiaS9UU1BGdXJhdkZGcW8xV05DbDJtb0JZclNkRk1xUngyNWRQS1VuTkZGRlpRMk5KYm4vOWs9JyxcbiAgICAwLjlcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzQnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFJQUFZREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q3WitDYmY4RkE5UDhBK0NybmpMNHkvRzc5bFh4bGQyT3RmRFM4dGREMGUyOFI2YTJtV05uSHE5dXRxSXB4Y2VTSldpalozamRoTVdsZHRtd1pvb29xSXh0MUtiOGovOWs9JyxcbiAgICAwLjlcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzUnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFIQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QzNzlrNzRrZUR2Q1BqSHgvOEpQaFo4SC9CM3hqazhPYTAvd0RidmkyNHRielNiNWJxZS8xQnphM0p1NWlMa3hBQkVraVZVMkFBNUl6UlJSV0VOWW0wdEpILzJRPT0nLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnNScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUpBQVlEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDdqL1padHRZOEovdDRmRkw0ZjY5ZmVJL0htbzNWeHJtcnRyL2hMeDlyVTBPajI4bXNMNUdsWE5uZEJMUzNtV04xMm1EY2RzTGpPMDVKWDM1NFUvNUR1dC85ZmEveU5GUkdOa1U1WFovLzJRPT0nLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnNicsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUlBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDYzL1lXL2JPLzRLS2VEMDhhcjQvL0FHV2RmK0lmaURWdGZmVXRlWVJhallTYUZkUFBjdy8yY1JkZ3dNaVF3UU1ndFFFQ09DeFptM0Vvb3JHTitYYzFrbGZZLzlrPScsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICc3JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSUFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEN2Y4SWZzTytMZmpiKzFuOFp0UDhBZy84QUdqNGsrRC9CbmhIVTlNMGUxbTFEeHBxbDBOVDFZd3pYVi9KRjlvbVlwR24ybTJpQVRDZkprZDZLS0t6VUl0RnVUVFAvMlE9PScsXG4gICAgMC45XG4gICksXG4gIG5ldyBJY29uKFxuICAgICc4JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBSUFBVURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdDaisyNThXLzI2dkRIeFcxdTkrRlh4bitKa09xWFhqcnhKRnJzWGhueEZyYlh5UVE2Z3lXUXZMTXNMYXlRUWtpQVd4SWVNTVd3UXVTaWl1R1YrWTYxYXgvL1onLFxuICAgIDAuOVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnOCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUpBQVVEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RHBJLzIzZjIyeGZ6dDRFL2FYOFRRNm85eGVIeE1kTXVwZGVuZWRkVHZvNHZ0RmlVVWFLNGhTTlJiZ3NKRlVQeFJYN0ZmRFAva29YanIvQUxEaWYrZ0dpc1ZUYlc1cjdSZGovOWs9JyxcbiAgICAwLjlcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzknLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFJQUFVREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0QzN1RQZzEvd1ZmdC9qZDQ5OEEvQmI0bmVJWnRXMERVRVh4dDRwL3dDRXh2cjJ4MW04dUo3cTRnTnZIZElxV3JSV2tsdWp4UUFvTW9DU1FRQ2lpc1ZCUHFhdVIvL1onLFxuICAgIDAuOVxuICApLFxuXTtcblxuZXhwb3J0IGNvbnN0IHdOdW1iZXJzID0gW1xuICBuZXcgSWNvbihcbiAgICAnMCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUxBQWdEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3REsvWnQrQVh3TjFINEtmQ2I5bUhVdjJkL0Rlb2VFdmlaOEMvRW5penhmOFNialNBOTlhNnJiTE8wTWlYbi9BQ3hFVFJKSHN5TTd2VTBWK2Uya2Z0ZWZ0TitCdjJXZFkvWis4SS9HN3hCWWVETGh6SEo0ZnQ3NGlEeTVUbVdNZnhLamtmTW9JVTl4UldEU1dsalJOdlc1LzlrPScsXG4gICAgMC44XG4gICksXG4gIG5ldyBJY29uKFxuICAgICcxJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBTEFBWURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEemY5a0hUUGdKOGN2K0NhY010OSt6SjRNMHpWL0NYeEV0Tkx1ZGZ0TEF2ZDZ2NXRsZVN0TE84aEpKeWlEQXdCdDZVVjhJZkRiOW9INDAvRDM0YzNuZ0R3VDhTZFUwelJydldJYis0MDYwbjJ4U1hLUlNScktSajd3UjJIME5GZWVxMGJLNk5YR1Y5RC8vMlE9PScsXG4gICAgMC44XG4gICksXG4gIG5ldyBJY29uKFxuICAgICcyJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBS0FBY0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEelg5aGpXZmhuclg3Q25pSHh2KzI1K3liNEdzZmhIb3R0WmFaNFQxNng4SjdOWTEzV2pleG1TVkpWeTh5ckQ1Z2tiN3ZBSFhORmREK3l6OFRmaVRGL3dUTzhOK0ZvdmlEcmk2WmF3djhBWnRPWFZwaEJGL3hNR1B5eDd0cTg4OENpc0lxOFVhSm4vOWs9JyxcbiAgICAwLjhcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzMnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFMQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R6Ylg3SDRSZkdIL2dqcnIveFM4UWZEVDRlYTM0aThPWDNoKzN0Tks4SWVDSk5FMUR3MHNrNGlkNTd0MUMzWm5WUXhLRS9mb3I0citOUDdhSDdVM3hPK0JXZy9BL3gxOGJ0YnY4QXdsYVJRSkRvVFNxa0JFQ2hZZHdSUVpOZ0EyN2ljWW9yaG5PTGV4MXdwTnJjLzlrPScsXG4gICAgMC44XG4gICksXG4gIG5ldyBJY29uKFxuICAgICc0JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBS0FBY0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdESCtLZi9BQVNKdWZnei93QUVYL0Z1ajZQK3p2YzY5OFl0UzFEdzNyMS80bGd0WTJFRU4zY2dtd3MyTFpDeFJFZWI2bVRIT0tLL1A3NGUvRjc0c1Evc1AvRlRRWXZpaDRpV3htMXJRak5aTHJjNGljck0yMGxOK0RqQXhrY1VWenRSZHRETjJscWYvOWs9JyxcbiAgICAwLjhcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzUnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFMQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R6NzlyRFRQQ1B4MC9ZUTAzeG4reFVmaGhjK0h2Q1hndndwYWVQTkhsK0hadE5adDlVZFk0NVoxdjVvd0psZWJBWlZQVGNlUWFLK0lmaW4rMkgrMDU0MC9aNTBINEMrSmZqTnJOeDRQdFJFSXRBRWl4d0VRNU1XL1lvTW16SHk3aWNVVnhUbkZzYXBTbXJvLy9aJyxcbiAgICAwLjhcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzYnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFLQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0R6Yjlzbi9nbFI0RTAvOWpUd1I0Qi9acjhSK0dHOFdlRVBCdWorTC9pRjl0MEdhUFVkVWZXQ2tjYkxxREh5akRHWkZVUXFPMjZpdk5mai93REdYNHYzbi9CSXp3SnBWMzhWZkVrdHJKY1c5dEpiU2E3Y05HME1VaE1VWlV2Z29oQUtyMFhIR0tLNXB4aGZZYnF6aTdJLy85az0nLFxuICAgIDAuOFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnNycsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUxBQVlEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RGlmaFArMUY4Sy9DZi9BQVRmOFBmdEIvdFkvc3pmRGU2dVBFUGp0ZEY4R1E2WjRSdHJTZVd4c3JLUVhGeElWVUdRTkk4UTNIK0pXb3I4eGZpUDhYdmlkNDg4QitFZmhuNHg4Y2FqcU9nZUVyYTZqOE42VGN6bG9kT1NXUlhrRWE5Z3pFazBWeWUxMFE0VTNPS2R6Ly9aJyxcbiAgICAwLjhcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJzgnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFMQUFjREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0RyL2pQK3pKK3lNMzdKT29lRU5PK0VIaHJVN2pSUGhkNE8xaTI4QjZUNFZGcHJta1hWM05BdHhmVGFxY0xjTE1ISU1ZWWticzRvcjh2UEd2N2RYN1gvQUl1L1o2MHo0TWVKUDJoZkV0MzRaZzhxMmowcVM5K1h5WURtR05tQURzaUZRVlVzUU1ERkZjVXExTnZZNkZTbDNQL1onLFxuICAgIDAuOFxuICApLFxuICBuZXcgSWNvbihcbiAgICAnOScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQUxBQWNEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3QmZHUHcyL1lEOFMvOEFCTlMrK01tbjZOOE5VK0dPamVIdkRGam8xMVlhRThIaUMyOFR2TEd1b3BjenNvTTI0R1FrS1dBR0R3S0svSTN4TDhadmlycjN3ZDBYNExheDQ5MU80OEo2VHFWemU2ZDRma3VUOWxndUhDQjVRblRjUnhrNTlxS3IyZHpIMnRqLzJRPT0nLFxuICAgIDAuOFxuICApLFxuXTtcblxuZXhwb3J0IGNvbnN0IGljb25TZWFzaWRlTWFya2V0SXRlbXMgPSBbXG4gIG5ldyBJY29uKFxuICAgICd3aGl0ZV9wb3dkZXJfaGVhbCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWFBQ1FEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl5S3ArSXZFT2crRWZEOTk0czhWYXphNmJwZWwyY3QzcVdvMzA2eFFXdHZHaGVTV1IySUNJcXFXTEVnQUFrMVp0N2lDN3QwdXJhVGZIS2dlTnNFWlVqSVBQdFhnZng2L2J6OE9mRGZ4VzN3OCtFM2hDTHhucmRqZnZiZUlwcHRYT242Wm96ckY1bmtTM1lnbU10MHhaRkZ0QkhLNjdzeStVTnU3K2VFdXA5VFNvMWE4K1dDdXo4MWZqNy93V2YvNEtQZkhUNDIyVjUreTM0Smg4S2VBV0NhajRjc2J6U0xXNy90T3hMcjViNnRjeWgxaWQxUnBQSXRYaWtqU2NwdWxaQkxYMzUvd1M3K09meDkrTzN3QW4rT1A3VmwxNFIwK2FieGhkNlA0YnVmRDhUMjlyZnhSeVJXaGNlZE16aVQ3ZjlzdEFqS2hjd0l5cVE2dkorYVUvN1B2eFIrR2V2NnplK0NOUHVZOU92YmtUNm5vdGxhV0QyNHVwY1BkU2FZUE1zMHRJV2tkdHNNa0FTTWc3SWxYNVR4ZmlyNEdlTDRkSHVMSHdscVdncGRMcHNlbmlLK3NwTnQzRkhQSklQUHVFQ3paazNyNXBRS3p2R0pBeUhDanFxNG1qVWlvUVNpdE9sdlcvL0F1ZldWTWtoTEQ4c05Hdm5mMDIvRzNvZjBIVVY0SCt5bC93VVMrQWY3Uy93a2g4ZDYzcjloNEYxKzB1bTAveFQ0UDhVYXhERGNhVnFDSWp5UkpJNVJicUFySkhKRmNSamJKSElwSVJ3OGFGYzdwelR0WStSbFRxUWs0eVZtanEvd0JyTDR6NjUrenQreTE0aitLbWk2WTl6clduYVhCYTZQYlNIejg2amN5eFdscjVoSlh6RUZ4UEdYT1FTb2JITmZsdiswaCsxSG8vd0g4R2VKdjJkUGhwNG84ZFQvRVMzdG9yQys4YUxxS1d6YWRmTmR3WFdvdXM4VHROTmNPNnp3VFRBeCtZMDB4NUIrYjlJLzhBZ3BPQWYyUU5jeVArWmo4TmYrbi9BRSt2amY4QTRLcWZEN3dGWS9zdi9EcjRuMlhnalNJZkV1dDM5cWRhOFF4YWJFdDlxQk9uN2laNXd2bVM1SUIrWmp5QlhaaEl3Y2J0YXB0L2wvbXoyc3NTOWcvN3pzL2trMGViZnNzZkg3Ui9qRDhPZEIrRG5qajRnZVBOYytJRU1Hc2FscUdwK0xXRi9iWEJSSHVERkZlU1hUVHh4aTB0VTJSR0hiNTdTOGdTN2h5M3htMUMxOElYUG1CRU54TVNZb005ZlUrdVA1MVYvWVBWUjRoOGV5aFJ1ajhCNWpiSEtFNjNwS0hCN1pWbVUrekVkQ2F5UDJsWnBwUGlDMGNrck1zY1NpTldiSVVGRU9CNmNrbjhhajJVSzJMU2V6L3kvd0NBZlNVSnlvMEpOZFAxdC9tZVUrTS9CSGhqNGk2c3V2ZU1ORGl2N3BJUkNrc29QeW9DV0NqR0FCbG1QNDBWMmRvQUxTRUFZL2RMMCtsRmVySEYxYWE1WTZKZVp3VHM1TnRYWi8vWicsXG4gICAgMC45NlxuICApLFxuICBuZXcgSWNvbihcbiAgICAnd2hpdGVfcG93ZGVyX3N1cHBvcnQnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFsQUM4REFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5eUtLS3JhME5aT2pYWThPdmJMcUJ0cFBzRFhxc1lSTnRPd3lCU0dLYnNaQUlPTTRyK2R6NlE4RC9BRzUvK0NrSDdLLzdEdWtKbzN4aDhYM056NG0xR3hGMXBQZzd3OWFmYXRUdW9QTlZETHNMTEhBbWQrMTU1SWtmeXBBaFprSzF4SDdQWC9CVEg5aWo5cm5XOUYrR253eStKOXJmK0tOYzBuN2JCNFIxTFRIUzlqS3dHYVczYkttSjVva0RsMGprZi9WdnRMQVpyOGlQaWQ4RGJmNDdmdFErSjArUGZ4WjFTYjRwYVpydC9iZkVxNHM5VFNaN3pVSTM4b1BhdVFVaXRFS2xJa1JQM2NRaWlLeHNnQTlyL1ljOFhmczVmc1ovdGhXL3hhOFJmQmJWZFIwandWb2IyR25YZmh1MGhsdm90YzFTV09BVHp5WE56QzB3VzJlYU1LUE8vd0NQN08xVEdsZW5Pbmg2Rkp4Yjk2MTc5THZSZmU3V1BvSVpYS09GOXBGdVQzVnU5cjlPM1gwUDJVMDc0SWZCUFdOT3Q5VTFMNFIrRkwyYWVGSkd1NS9EMXJJNzVVWU80b1NlTVk5Z0tacTM3TzN3T3ZiY3h4ZkJMd2VTV3kyN3c3YnFUOUdWUVJYbm43RWY3ZVBoYjl0Uzk4ZGFaby9nVzg4UDNYZ3ZXbzdjMjEzZGlkcml6bTh3Vzg3c2lCSTVXYUM0RHdLMGdRSWg4eGhJTWU5VjVNcWRPYnUwbmYwUExxMXNkaDZyaE9VazEwdXlycmV0Nk40YTBhNzhSK0k5WHRkUDA3VDdXUzV2Nys5dUZpaHRvWTFMUExJN0VLaUtvTEZpUUFBU2ErSWZpWCsyeDhldjJqdGV0ckw5bmZYTHp3VjRHdTVKUDdJMUt4MFpicnhMNHF0d3UzejRMZWVNcHA5cklHbGVPUmxOd1ZoamtDb0pDaTlaL3dBRmRQaWplMnZnSHdaK3pIcEY5Y1d6L0UvWFprMXFTSldBbDBhd2pXNHU3ZmVqcTBabFpyZUxJNm84b1BCd2ZuYjlwYlUvQWZnUDRiYUJEOFovMmgvRXZoblJ0ZjBocmpYUGhyNER0UW5pZnhwSkpMY3dLYmk3ZC84QVI5Tit6bU1MRzRFY3dGeGdHVFlhNjZkRnlTczdYOHI2YmFlYmQ5OXJmZDNZRERVNDBmYjFJODEzWkk4aStKbi9BQVQ0MW53bGRhUlA0dThCVzExSGFSUjIraWFuNGd0RFpYME50SEg1Zmx2Y1djYXBjT2dBVXJzaXdEOHczWlp1RDhUZnM0K0VMU1M0MHZYdE10bnM1Z2lOcCtqV3phYmF5eG96TW5teHhQbVpnV0IzT3hBS2dxcVpiZDlIZnMvZkJud3JiNnpvUHhyL0FHTDlPV0w0RStPN2hkUCtKWGdMeEY0d3Q0NWZDVi9IbUtTK2plNmtjaVNPSVIzQ2pkSk5JdVZ4NWNxS25NZkVpeHR4YlRYMGhDb2k1RHN1Q2Y4QTY1OUt5clU1VVd1VnY3MytWN0w1SDFlRHhFY1I3czFxdkpkZS9YN3psZjJUdjJuUGlqL3dUdThXU2VMdkJPb2E1NHArRzExSnU4WS9EYWU5RWd0cmZjU2I3U0E1VllMcUlGaTBKSVM3VUZYWVNpS1ZQMlA4R2VNUERQeEM4SWFWNCs4RjZ4RnFPajY1cHNGL3BOL0JuWmMyMDBheVJTTGtBNFpHVWpJenpYNE0rSy9GYzJyVE5ZMmprV3FuR09tOGc5VDdlMytSOXhmOEVCUDJncDc3dy84QUVQOEFZNTFTZU1RZUJkVGgxbnduRzBxS3kyR29sNWJpMmppUkZ4RkRjNWZjU3hKdmd2QVFaN1pZU3E4SzZzL2lYNWJmaHA4dlErY3p2RFVGTDJ0SmV2OEFtZFQvQU1GZHJueVAyaC8yZjRQTERDNGk4V3hzVC9DQmEyTFpIL2ZPUHhyaVp2aUY0ZnN2aUplL0dyd2g4SzlBMHJ4MXF6SytxK0xXaGU5dVN3ak1YK2pMZE5KSFpneGtxd2lVRWpqTzBZb29yR3BPVUtWUGxkcngvd0RicEhvWlJTcDFjQkRuVjdOL21kUDRhL1owOEdmRHJ3SDR6L2FhOEdFNmJvL2ozd3dzZXFmRCt6RHgyRnZxYTZsQ2kzc0xCL2xSSDgxMGdLa0o1N29yK1g4dGZOWDdTZXIzVmg0TFN3dHpnWExzWkRucW93TnVQK0I1K3FpaWlxYXZYcDM4anV3aTkycjVOcjdrckhoV213Umk4Z1oxRDcxWWtNTWdIR2ErbC84QWdqRmJ4UWY4Rk85ZWVGQXBsK0F0eTh1QmplMzl0V1M1UHFjQURKN0FDaWl2U2s3d3FYL2xmNW5rNWd2OWxrZi8yUT09JyxcbiAgICAwLjk2XG4gICksXG4gIG5ldyBJY29uKFxuICAgICd3aGl0ZV9wb3dkZXJfY2hhcmdlJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBbEFDOERBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOXlLcTYzcmVqZUd0R3UvRWZpUFY3WFQ5UDArMWt1YisvdmJoWW9iYUZGTFBMSTdFS2lLb0xGaVFBQVNhdFY0ci9BTUZGZkJYaG40ai9BTEVueEg4Q2VML2loclBnNngxWHc4MERhNW9Fa2Yyb1NHUkRGYktrcm9rNlhFZ1MyZTNaMEU4Yzd3NzA4emVQNTVpb3VTVW5aSDAwSXVjMUZkVDg4LzJzUCtEbHpScnJ4ZzJnZnNnL0RIVHRUOE82UGVzOTU0aDhhbWVGdGJqUm1ETGFXc2JJOEN0dEJTYVppNDNFUGJLVndmcGIvZ25ML3dBRkk5WC9BT0NnL2pqeE40SFQ5bUx4TjRJYnczcGRycVRYK3IzQWx0cFlKNW1paVJtTWNUSkpKNWM3cGhIUjF0NVJ1VXFNL2xsOEpIK0hPbStMYmkrK0xmd2JYUmZIVmtJWUpvNXREbG1EUEFCREZMWUtGZjVTcXFCNVF5dTNieU5yTjdQK3piL3dVRytKSDdFNmVJclB3aEo0S2cxRHg5NGptdTlWZldQQ1Y3UHE5cmIyOEN3V2NHWTdrYkQ1WWprampsaDJxOTNOSmdnK1VmU3J5dzhLZkxUalo5SHZmcjA2VzYrbmMrbHFaUkZVUDNhVGw1NlcxNjMvQUNQM0dKeXhxcnFOaE5kcUd0N3lTSngvZGtJQkg0VjRwL3dUWCtObmpYOW9UOWpMd2g4VXZpUjQvd0JPOFRhL2ZyZC8ybnF1bXpXVGJzWGN2a3BLdGtmS2htV0R5UThXRmRHeUhTTjl5TDdyWG1OT01yTStibkYwcWpqZlk4bi9BR3gvMmxUK3pKOEpENGwwTFJvdFc4VWF6ZkpwZmhEUloyY1IzVjg2czIrWmtCS1FReHBKUEs1S2dKRVJ1VXNEWHcvOFN2aDVvL2p2WDc3NGpmdEcvRWZ3TDR0OFJtSzBoMUhVUEgzaWJTNHJiU3Z0c1MzRm5wOXJwdHpQNU5nc3NNRHpSTEpINThxK2E3TXhMRTluKzJCcnNIeDQvd0NDamkvQzg2bGNDSHdEb1dsNlJhMnNrVWJKQmY2dElaNTdtTWtBaGpiaTBqNmdmSXc0eWErZC9pcjRwL1oxVDlvVnZpWjRwL2FOMGJ4QytuZkdmV2ZHSGlUUmRNMFRWV2ZWSWJWWVYwTFRGbGtzUHM5eDVSaHVJUzdNSTFXL2sydTZFdlhaVHdxcSs2MjBySnUzVytxWHBhMm5XK3Q5TGZRNEtsOVV3OEtpaW5LVjN0ZXk2ZmVkcFA4QXNXZUpJTEc0Ynd4YWE1cVdtMmwzZGFmZjJuaDNYazFWTGU3aVllZEROTkEwMDl2S2hmYnNNcWJjWUFHM2p4L1Z2QVdrK0ZaWmROc2RKaldCMEtPMG1aSG1VNUo4eDNKYVFuY3hMT1NXSkpKSk5hWDdHMmcvQkw0Z2VNL2hyOE92QjJ1ZVBmRGVxK0h2SHVwK0o5VnU1YlcxdVlaclZrdEhaSkwxTG0yZTNTSzNzTnJTbUp5enl5T3FqY3NRMy8ybXZHQ3kzMm8rTk5RdFVTNzFqVUpybElJOGhWYVJ5N0FaN0F0MHpuSDBybXJZYU1KcFEzZjlkRDZEQzRtck82cTlQWFQ4WDJPWS9aNC9hU1AvQUFUeStMRWZ4cThFNmV3OEwzemhQaVI0TzAyWllvOVJzT1MxL0RDY1JpOHQvbWtWanM4MVBOaVpnWFZsL2FQdzU0aTBEeGg0ZXNQRnZoVFc3VFU5TDFTeWl1OU4xR3d1RmxndXJlUkE4Y3NicVNyb3lzR1ZnU0NDQ0svbitta3Y5WXVYZWN2UEpKeStSbi82d0hiMHI5Ti8rQ0RQeGE4UWVQdjJLYjc0Y2VKTlRhNmY0YWVPOVM4TDZiTmNYYnpYRDJFWWl1SVBNTGtrQlB0RHdJQmhSSEFpZ2ZMWGRpTUx5WWJtYnZKYitqL3kvWHlQbWM2cFU1VDl0Qld2di9tZWRmdHQzWjhGZjhGUE5Tc3ZDMGYyU2ZWL2hIby9pUzl2bzVHODM3WmI2bGRXVVRJUVJzeEdxYzhuS0RHT2NwYy84RTJ2QTM3WWxySDhlOUI4YS84QUNHNmhmWEgyZlhkUGcwQ0M0dGJxNWlqamphNWlTRTI0aE1yQjVYVTc4dklTR0hTaWlvMVVvK2NWL2tkdEdjbzViVG10MXA4aGZHZndUOEQvQUxJa1orRDN3NzBXMWJVYi9RclZmRS9pMTBrKzJhb0RJOGhpVVBJNjIwQlpVTFJ4NDMrWEh1Wmd1RDh0L3RJWHR4cVhqU0RSSldBaWhWUXVQOXhXejlmM2hINENpaXNhY3BQRmZmOEFrejJLU3ZnMUxxMG0vdlJ6eWVDMDByd3NuaVdIVVN5M0UzbHRibUxvVjc3cysvVEZmYlgvQUFidzZIWnI4Qi9pNTR5alp4UHFIeG8xQzFsakxaUlVodGJWMUlIci9wREErdUJSUlhWR2NxbURyT1Q2cGZpZk81cTI2Q1AvMlE9PScsXG4gICAgMC45NlxuICApLFxuICBuZXcgSWNvbihcbiAgICAnYmx1ZV9wb3dkZXJfaGVhbCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWxBQzhEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl0OUYwdTl0NDBtdmJtVUVqS3c3eU1lbWY4UHo5SzVqOW96OW92NFNmc3AvQ0RWdmpoOGJmRk1XazZEcEVhK2JLeEhtVHl1d1dLQ0pTUnZrZHlGVVpBNXlTcWdzTzRyNHEvd0NDd2Y3T0h4bjhXNkg0YS9hNCtCbWhhZjRvMVg0V2FmcVAyN3dacXVubTVlV3d1V3QzdUw3VDFFc2YrblFKYmNSN2cwMFR5SWpCd2lTZno3aDRRcVZsR2IwZjlXOHJuMU5QbHFWVXB1eU9KK0lYL0JYWDlwN3hXc2szd0IvWnk4T2VIYk9PN2I3UGQvRVBVcDd1ZTd0c1pSbXRySW9MYVRuNWtNMG0wNUhPTW4xUDluNy9BSUtaZkNuOXBmeGw0TytHdXArRXZGSGczeDc0cTBqemJid3I0azhNYWhhcTkxRGFmYWJ5QzJ1cHJlT0c0V0JRNUxFb1dVQWhjc0ZyeVA4QVl6K0xIN1NWejhFYnJUMC9aNThGNjBQRmw0K28rSHZIbDdmcW1tQ3hhR05vSmpBWGt1NUhhWGVURjVNSVpDQVpGUHpWNTk4UFBpMSt6eDhFUCtDbE9xL0hMNHZhaGVlSXB2Q1BnblVkTTBiVk5QOEFESWsrMCtLWm1oTjFZMkt4emVUWXh3V2tNc01XOVFOMTVxQzNOM21OZDMyVStIOEpYb3FPV1NsWHEydTR3cHRjdW10MjNLL3ZOTDB1OU5qdzNubGJCcDFjNHc5UEIwbGRSazYzTTV5dTdLM0trbHlMbWJ2dnBHNnV6OU1QRCtsZUlMZlc0YmpVZE9NVVNvK0hEcXd6dHh6ZzhBNTQ5Y0hPT005TFhEL3M0L0h6d2grMDk4R2RIK09QZ1BTOVRzdEsxdHJrV3R0ckVVYVhLR0M1bHQzM3JGSklneThMRVlZOEVad2NnZHhYeHVJcFY2RmVWS3NyVGkybXV6VHMxOG1lcFNyMHNWU2pXcE5PTWttbXRtbnFuODBZM3hFK0lmZ3Y0VGVCdFYrSlh4RjhRd2FWb2VpV1QzZXA2aGNaS3d4S01rNFVGbVk5QWlnc3pFS29KSUIrU2J6eHorMEgvd0FGQVBCZXA2MVA0NGorRDN3WjFYd3hmL2FyTnhaUHJXdGFUTkJPa2wzZDNWMUc4R2x4Q0h5NUZFU3V3VnBTMHk1allhbjdmdXVUL0dqOW83NGJmc1pSWFJmUVV0WnZHL3hGMDhaWDdiWTJzcXc2ZmJPR0JpdUlKTHpkNXNESzJSRWpBb1ZCUHpML0FNRkJQK0NobXF3Nng4UnYyUlBoL3dERDYyMDZ3Z3ZIOFA2djRubnY3aiswTHhyYThScDJWVmRZNDRwR2dNZXdxMlltT1dPL0ErZ3lITGZyRlJWSDBhYjhscmF5czlYYSt1eU9qRVR3K0V3WE5WanpTbW5aUFZXMjFOSS9zMWZ0ZzZkOFBydlQvZ1I4VmZBL2lUd2VOVGFPM3ZQQkh4TG1zVmU2MlJ2SWcrd3h6clpPZk04MW8xdWYzaGRwVzN2SXhQTHYvd0FFMS9GZHhEZjZ0NDE4WGVKNFlybEpoTGJXR3FReDJNTTAwaXM4dUFzazBzc2lvUS9teVBISThrc2hRTStSUC93VEsvYkUwenczRm9YN0dzbndtMUxVbjhZZkVJWEg5dldXdnFoczN1WXJlMk1qV3h0bTgyT0pJVEkzNzFQbE1uSXI3UThmL0ZiVC9CM3cvdU5JMTJKWjRwVHRzTFpUaVIzM0J0dlQ3bzV5eDZlNXdwK3d6ZmlQUE1MUGxwelZPTXRlYUVZUmxPU3RmbWNVbTlYMnRyOTN5bVQ4RmNNVm9LZFdtNnJndVZScVRuT0VFK2tJemJTMDB2dXRrKy96NSt3cjhlOWUvWUcxL1IvMlhQaXJyZDdySHdsMTdXaFplQ3ZFdHhhSzkxNFMxTzduTEN5dm5pVmZOc2JtNWxieXJrb0RieXlpS1ErVXlQSCtpOWZtTjhTdkRJK0wzaEhXZkRIaTYwWjlOMWpUNXJhOFNGUWdXS1JTcE1lN1B6TG5LdHlRVkJ6a1Y5VGY4RWwvMmpmRVg3U243RC9oZlhQaUJySXZmR0hoWjUvQy9qT1I1NUpadnQ5aXdqRHpQSXpNODB0dWJlZVJzbkx6c2VPZy9QOEFNS05Tb25pWkozYjE4Mjc2L3dDZi9CUHJhdEhEMG9xTkcxbzZXWFMyM29jZjhmZEFlRC9ncVBwbmlnWDJWdXYyZnJpMU52NWYzVEZya1RodDJlL25FWXgvRDE1NDhGLzRMYmZFWHhScVB3ZytGdWlhcmZ2ZFIzZmlUV3BaSlozTFNadDRMQll4dVBVQVhNdlhKNTYwVVY3R1FTa3NURlgwY1RUTWtubE1aUGRXL005Ky9aaitIWHdoOEIvQmo0YmVPL0Ivd1c4SjZkNG5tK0dXalR5ZUtyWFJrVFVUTGVhVkE5ekw1by9qZnpaRkw0M2JYWVo1cnovNDk2cmVYM3hCbTArZC93QjFZd1JSd0lDY0RjZ2NuR2NaSmJHUmpoUjZVVVZ6WmpYclY4ZFVVNVhVWEpMeTFPbkEwNmRQQ3djVmE2VGYzSTVEdzBkUThUYW1kR2ZVNVlFalpraUtBSEFBSjVIOFgwcjIvd0Q0STYrQng4UGZoMzhZOUJHcG03ODc0OGFwZm1VdytYZzNPbWFWY0ZNWlAzZk4yNXp6ak9CbkFLSysyNHF3T0VvOEkwYTBJSlN2Rlg2MnMzK1orQmVIMmM1cmorTjgxb1lpczVRVjJvdlpOU2lrMHRsbzJ0UDhqLy9aJyxcbiAgICAwLjk2XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdibHVlX3Bvd2Rlcl9zdXBwb3J0JyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBZEFDc0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOWNMZjlqejRGeHhlWGVhSGYzUnp5OG1zM0VaLzhoT2dxajRvL1piL1pyOEYrSDc3eHRxT2d0cDl2cEZqTGQzV29YL2lhKzhtMmhqUm5ra1l5VGxWVUlHSlk5Qm12WHE4MS9hKy9aeDB2OXJQOW5YeEg4Qk5VOFZ6NkVOWlcxbXM5WWdzb3JuN0hkMnQxRGVXMGp3VEF4enhDZTNpOHlGc0NTUGVtNU4yNGZ6bFN3dUVqVWkrUkxWYTJSOXM4M3pTbzdUeEU3UGYzcGZsYytNSXYrQ2dId3UxUzVzOVcvWjUvWkFuOFcrR2JtM0Z4RnIzaWJXRzArTzhRbjVURkE4RnpNWTNRaGcwcVJIRGNwMEorZ1AyWFBqLyt3dCsxYmYyZmczdzE4STlLMHJ4dVBDc0d1YXg0TzhSZkR5YXh1N0NKaWtjb1Y3dXppVzVXS2VRUk5KQ1dRc1FRY01LK1VmMlN2RnY3UmZ3emk4Y1czeGQrT0h3MjA2MnNiNyt5L0U5OTRwMEtNU2FiYzJseGNXNzNOaUprdDFrc3JveCtaRmN5T1UvZEdOb1haSk1aZmdEOXYzNFgvc2EvRjM0bmZGeXcrSDFwNG51TmJrc3RNMHJVYnp4VkRhTmQyZGhQZHhYbDY3ckZObVdlNmxVcUxaRnR6YTI5c3BTMk5zaXpmZXk0UWptTkRsd0ZLVTZzVmVjWEZRVWR0NVNkbnZmUzN1NjZiSHl1TjR4V1dWSlR6R3RDRktUdFNsQ3JPcEtvN3ZlS2pwWkt6MnRVVGl1WldrLzBzYjREZkJ5MmpCMGI0VWVGck9WQis3ZUx3NWFqSHQvcStQd3FyL3doTUZtVGJRZUU0VlZTY0NDeFhaK0dCaXU1QnlNajlSUlh3aXAwMXNrZlFmV3NSMWszODJCT0JrMThPYXY4V2ZEdjdXNDFUNDQvSDN4VGNXL3dRdHZGbHRwZncvOEFCOXI1cXI0cWVPNHhEZHoyME82NTFLVzR1WVhNRmswYW9rVUcrU0k4ekQ2Wi9iTXY3L1N2MlA4QTRyNnBwVjdOYlhWdDhOZGRsdHJtM2tLU1JTTHA4NVYxWWNxd0lCQkhJSXI1MThUNkg0ejhPYXg4Ri8yTXZnbDQ0WHdtdmpRNnhwTWZqTnRQKzJham90cnBHa3c3R3M4eUlJYmlXRzRuaE53RDVpTElTaFhMYnZvY2d3dFBFNHRLWDlKYS9uYjVYSjlwOVh3azZ5K0xaSE0rRlBnbCt4ejhYZFU4UjZCNEYrR1hpUHdKcm1qdEJOclhnVFc3QjlGdnJDeGtqaUVNOEZtczBzVWR1UTZJeGlDTXNqaHBGVnBVZDA4V2ZzQi9zNitEdkFNdXFhVDRRMFc5aHZUR05UajFTemdtYVpvZzNseVhFa2lCcHBGM3kvUElXT1pHYkozazExUDdPT2dmOEluOFR2aTE4SHZFdDRmRkdxZkJtOXM5QjhIZU85ZWhXVFdFMERWQkpjZjJiTE11UE5XRm9NSkl3SlZacGtqRVViK1dNSDlvSHhUcUY3NGdpOEt0OGxwYUlrektySE1yc001UDBIQStwUGZBK2l6ckc0Mk5lT0c5dE53U1ZvdWNtbytpYmZiYnAwT1BKc3F5dUtuaW9ZZW5HcEp2bWxHRVZLWCtKcEs3ODdtbit3UiswTnFYd2wrTG1sZnNjK0piNTdud2o0aDArNGI0WVhEUTNFajZUZDJzVFRUNkx2RVpWTFUyeVNYRnFKR0hsQzJ1WUZQbExiUlIvYnRmbGw0MThQMnVvZkZYNFhhblozVnpaeitHdmpaNFJ1b1hnbUk4L3dBN1ZiYTBlTnU0VXgzY2dJNzlEd1NLL1UydmxNMnduMVd1azkydGZ3ZC9tbXZtYVU4VlF4MUpWNlB3dHlXdW1zWk9ML0ZNLzlrPScsXG4gICAgMC45NlxuICApLFxuICBuZXcgSWNvbihcbiAgICAnYmx1ZV9wb3dkZXJfYm9tYmFyZCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWNBQ1VEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl3YlBUZE8wNk1RNmZZUVFJdjNWaGlDZ2ZnQlhpWDdjdjdYSGhmOW1Md3BwT2tRNkZkK0lmR3ZpaHJ2OEE0UXp3bFlzSTVOVGUyaUR6czB6bFlvSW8xa2pMdkl3KytxcUhkbFUrNlY4dWY4RlNtL1p1K0p2d0kxYjluYjRtYXplVGVOYnJTWk5kOERhWjRaOE15NjNyRmxmVys0VzE3SGF3eHVVaGFYZGJzOHBpaWxTV2FGcFZEc1IvUCtFaHo0aU1iWDE2ZjF0MzhqNmltMXo4MHIyV3I2NkhoMmpmRWIvZ3E3NGdzYmY0KytHdkZPaXZwOXJxZHRKZGVITGJTWUxmUlhndDJqZTl0M3VaSUxxN1JYaFNiOStHeXBjT0ZDcnRIMDcrd0YrMlpyUDdhL3c4OFVlTmRjK0ZOdDRVbDhOZU1wTkNTS3c4UnRxbHRxRVlzYk83UzdobmEydDJNYnBlTHQvZDRLaFdESGRoZmdqNGEvSFQ0QS9DZjludXhsdGsxblhYbDg3N1A0WXVkYWdIaGV3MVIzZVIzRWZtb3M5bzE2NVpQTkZ6Y1JiVTJSb3loYWkvWmovYngvYWIvWjR2ZkM4SGpmVS9FTmg4TExieFhxdXNlTU5TMWZ3RkdaRFozazMyelViaTVpaGhXNWhNZDVOZVNKNWFJdTJUY0JQRWdBL1E4MTRRbjlUOXBHbDlYY0ZyN2FTVXB0SnQrelVZKzhsYXlmWG1UMFZ6NGJMK0w2ZUlydWk2c2NYS2NseXZEVTN5MDRPU1M5cTNKOHNwY3liaTd1SExKYzBuWm42M1QyVnBkTUd1TFpISUdBV1htaW9kQjE3US9GV2gyWGlmd3hyTnBxV202bGFSM1duYWpZWEt6UVhVRWloNDVZNUVKVjBaU0dWbEpCQkJCd2FLL05OajdVNFg5ckg0NFhmN09mN1BuaVQ0dDZSNGRuMWpWYkcyaXQ5QTBpM3RqTTE3cVZ6TkhhMmNPeFdWblZyaWFJTUZPN1p1MmduQVB5TGZmSGo0US84QUJQQzBUWHZqYmY2eDR5K0tmamZUbjF6WDc2eHRvV20xcTVIbXd4bWU2Znl4WjJJbWprdDRJNFVkb1lZM3hFdVEwbnF2L0JXSyt2ckx3SDhHL3NkN0xFczM3UlBoV0tkSTVDRm1ReVQvQUN1Qjk0QTdXQVBHNUZQYXZoei9BSUxNenVuN1FYZ1NGT0FmaFhBNTl6L2JHcUN2cU9IY0xTcTFiejdOL2MwbDh0YitmVTJ4RlNlSHkzbnB1emxLejlMSDE5K3ozNHI4Yy90SGZEYlFQMmlQaU5jZUhJOUUxZTQxNjNpOE1YZmdQVDN1cHJVVFNyWitWcVVLcVgrenlHRlN3aWhEN0xoWFRjZ2FSZjJnN1g0WCtIYld6ajhNYVpIYVRYRnNyTnA4Q0FNV0RNREkyQmdEZ0FFRG5IQTRiSFAvQVBCTy9RdE0wUDhBWWM4QlM2ZGJsWDF1VFZ0WDFCbWN0dnVUcVU5bGtaT0ZYeWJLQWJSM0RIdlhFZUs5ZXY3bnhKZitJTGtySk9icDN4SUNWR0RoUjF6Z0FBRG5nQWVsZG1iVloxOHk5am9rdVZMVHVsL21WZ2xIQ1pZNis3czVQWGUzL0RGSDRPZjhGTi9obC93VFlndnZnZjhBSHJSZGNsOERYWlRVUGhndmhyUTRwUDdNVjNsTi9wckZwMHpGSE1ZcDR1UGtXOU1LNGpoalVGZkVYL0JZUFc5U3VuK0hrczArV0kxVThLTzYySjZmalJYUlBoM0RPYjlwOFhXMmlPWEtzZGhjNnkrbmphVVdvMUZlejMzdDB1Zi8yUT09JyxcbiAgICAwLjk2XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdibHVlX3Bvd2Rlcl9kZWZlbmNlJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBZUFDb0RBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOW5ydTJ1dFYxaVpZWThrU2JTeDZLQnhrL2xWcldkVzhNL0RUd2xxZmpMeFhyVWRscGVrV0UxOXF1bzNUYlk3ZTNpUXlTU042S3FLekgyRmEwY1VjUUlqUURjeFk0N2s5VFdWNDc4ZmVDUGhmNFR2UEhueEg4VzZkb1dpNmVpdGZhcnExNGtFRUlaZ2k3bmNnQXM3S3FqcXpNQU1rZ1YvUEt2SnBIMDEzS3lSOFMrSnYyMi8yeHYyc3ZIeitHZjJNZFBUd3A0WGxFVno0YzFtNjBpMnU5WThRMm9pTWozYXh6UEpGWjI4Z2RUSEhMRDlvQWozU0NJc1lsaCtEdjdZWDdhL2hYNDllQlAyVnYybVBoalkrSjlTOFVlSXJ5eWo4VzZUcTBjRjVaMlR3WGw5YVRYdGw5a2d0MFlXOXBPZmttRFRKYlN0RkhJeUZXOFBzUEQvN0xIdzIvYTM4UytKZmhNdmkvd2w0UDFTT08vd0RCUThQYUZQb01rbHZOYnh5NmhaeExQc21iVFduTUpoa2hTRjRaWkpZa2FPR09GanoycmZ0VitQZE4rUDFsOFQvMllmaDNyT214NkQ0ZjFQVHJjZjhBQ1BXdW95UnZkd0QrMEwrNHVOMHFUNm9aYk94d3J6dks0ampadlA4QVB1SUQrbFlYaFY0ekxJT25RZE9UWE43V3BKUnBXZDdKTzEzSjNTYWIwYWQ5TkQ1SEhjVjBNdXpXcFRkYU5XTVh5cWhUcHVXSVR0RzdtdWJhTFVwS1Z1V1VaS0tqZEtUL0FGeThOYUpxR2xTVFM2aEpBNWtWZGhpSnl2SnlEa0RQOEp6N2tZNHlkYXZuTC9nbUwrMTFxdjdWMzdPa012eE8xeU0vRXJ3eGR6V1hqM1E1OU9heHZMSm1ubU5sTkxic2lZV2UxV0tSWlkxOGwyRW9UQmpkRStqYS9POFhScVliRlRwVGFiaTJycloyMHV0dEh1bjJQcUtOWjRpakdxNHVQTWs3TldhdXIyYTZOZFFyNHUrSm5qbUg0Ni9GYjRnZkhqeHhvZXMzM2dQNENQZVFlRlBEa2RrMDhkeHJka1RGZmE4OW96V3d1bHQ1Smxpai93QkpBUkxTN2FNeFN1R0gyUnBBbEduUkNaeXpGY2xpeE9jbkk2K3hGZkhYd1E4THh0OEUvR2Z3ZDFIWHJpYTN2ZkZQaTdSTlJ2N20zODlyaUwvaElMMFNlWXBkV2RKVkJqbDJTUlNsSlpCRk5CSVVtVHZ5aFVJNHhPcnNtbCtkL3dBcmVqTzJsQ2JvMUpVL2lTMCtaNXI4TGY4QWdxSHBmN1NOMVA0RDEzOW5heFhXSU5DdjdtMjByVGJpZDRkVmdzN1dhOGtqRXJNLzJSa2hnbDJvTFc3ODkzVk0yK041K2dmSHZnUDRSK0ZkTzhRMjJvNkxwOXROcDA3SmFhbUxORUdFa0NuaEJuY1IwNjV6Z2M0ejRoOElQK0NjbHY4QXNOL0ZTeStMbnhDMU9aYnExMXd6K0dMbncvNG5lOWxGdUpQTWl0NUZheXN4RTdMR0laNXQweVRXODl4RXR2RXpwUEhQKzFMOFdiYlMvRWVsK0FycTN1V1dhRmJ3dWdVaDJjc3E1eVFSdEFicDEzbjBCcjZiTzZkR0ZXRWFjVXBPOTlPbTMzK2ZTeGpsRHJ5aEoxWk5yU3g1dDRvK0pvL1p5K0pXbS90aWVBUERrazE3NFFReGVKb1lvVU56cXZoaVNSRzFHencwMFNGbzBYN1hEdWZpZTFqQXlyeUkvd0NvR2s2dHBXdjZWYTY3b1dwMjk3WTN0dWs5bmVXa3l5UlR4T29aSkVkU1F5c3BCREFrRUVFVitjR3EvQXp4aCswRjhGL0VYaHJTTmUwL1Q3YlZ0T3ZkSUQzQ3VXVXZiUGx5RkhZSEl3UnlPZXVSOWgvc00zTjdwZjdFL3dBSHRNbk1iUGIvQUFzOFBST3d5UVN1bTI0SnlUazlLOC9Qc2h4ZUJ3bEN2VVh4N2FyeWRucjB2K0o0MlZjU1pkeEpXeEVjSmU5Q2ZKTFJxL1pxNlhacjVlaC8vOWs9JyxcbiAgICAwLjk2XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdibHVlX3Bvd2Rlcl9hbWJ1c2gnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFsQUMwREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5eExPenROUGk4aXd0WTRFSDhFS0JSK1FyeXo5c0w5b240Vy9zcWZDaTQrTjN4ZzhTcHBlaTZhQkc4cllMM0V6c0ZpdDRseDg4c2prS3E4QWZNN2xJMGQxOVhyNGcvd0NDdy83T2Z4aTFQVHRGL2JaK0M4Tm40anZQaGJvVittcmVDdGJ0Mm5qWFRwV2psdWRVMDVmTmpDMzhNY1RCbExBendGa1ZsZEVTWCtmOEpHTXE2VGR2MTh2bWZWVUhGMWx6dlE4NThZZjhGU3Yyby9Fc3Y5b2ZBLzhBWjg4TzZGQkJlbHJTWHg1cVUxM1Bld2NHTW0zc3lndDNPZVVNcjdUa1pPTW42TC9aWS80S25mQUw5by94UDRVK0VHdjZENG84RC9FYnhQb291NGZDSGlmd3ZmMjZ5WEVkcVo3eUMzdXBZRWpuRUFWL25PemVvQkM4a0R3ejlqTDRyZnRKM1h3VnVOR3VmMmUvQTJyeCtKZFFsMURRUEgxNWZLZE9hd0tSR0NieUJKTGN6TTBubVA1T3kzVmt3RElwTzZ2T2ZocjhhUDJjUGdML0FNRkZOZCtOL3dBWDduVWRmdVBDSGdlKzByUTlVdGZDMFVvdi9Fc3J4TmYyOWh0bDh1d1NDMmdOdkVYQ0RkYzZrazl5U04wdjJOZmgvQ1l5aW9aZEtWZXFsZHFGTnJsMHRycTIvZWFYK1I0TXM4cllTTHE1elFwNE9scW90MWxKemxxMHZoU3R5cTdkOTlGZGFuNnAxbVgzaG0ydVpCSmF6bUhPUzY3ZHdKOWhuaXVhL1p3K1AzZ3Y5cUQ0TTZQOGN2aDdZNmpiYVJyVFhLMjBHclF4eDNDTkJjeTIwZ2RZM2RSKzhoZkdHT1JnKzFkeFh4VmVoVnc5YVZLcXJTaTJtdXpXalh5WjZ1SHhGT3ZTaldveXZHU1RUWFZOWFQrYU1QNGxmRXJ3SjhIZkFlcS9FNzRtK0pyYlI5QjBXMGE1MUxVYnNuWkZHT09Bb0xPekVoVlJRV2RtVlZCWmdEOG1hbDQ3K092N2NXblcxajQxK0prUHdZK0dmeEMwalY3RHdwNFFpMCswdnZFdmpPMEZoUExjUzNMM0VVc1duUXBicWpueTFmYVp6RTBoWjR6V2orM3pybHo4YVAybWZoMyt4dzE1dDhPV21teStPdmlCWVNFaGRUdExlY1FhZmFNQ3JKUEUxM2xwWUpGMmxZMVlFTXE1ODMvYlE4VStNdmdUKzFkOEt2Mnk3and4THF2dzA4UCtIYmZ3NXJnc05TaU0xdmMzdjlweFhpaTNNb2tFelJTeVNvNUN4dXl4S1hHTUQ2VGgvQlVhdGJtbjhTVjE2MzAvejh0RGZGUldId0tuS04rZDJkOVVvOWRPNzh6Z3RaL1pnL2JZOEtlRjdud0g4Ti9GdWd6NkhGUDV0cEZvL2piVU5Dbm1rWXJ2a1ZJTFp2c3VXM095SmNNSFpuZGk3dXhQSkgvZ21oNGtlMHU5UjhjZUsvRWNFTThVOFJ0dE8xQ0NDd2drbWtWbmNLcXlTeXlTTEhoeExKSWpzOHNteFdmajdnMHJXL2gxNDEwVy93REVud3M4ZGpYckhTUEVOeG9Pc3ZKcFZ6WlMyZXB3SWp5MjdSM0NJeDJySW56QUVaT0toOGZmRmF3OEovRHlmU1BFU0xPc2h4WVd5c0JKSTRJT09uM1JuSmJ0bnZ3cCtoeFBGbkVWTnlwU2txVXQyNFFqR1VudjcwbzczMzdYZXZsNE9ENEI0VFNqVlZPVmFLWExGVkp6cVJndTBJemJTN2JYdG9uMzhBL1lNK1BIaWI5aER4Tm8zN0p2eFIxSysxejRVK0lOWld5OEIrSjVMUlh1L0N1cVhjN04vWjkrMEtMNXRsYzNNcmVSZGJRWUpaUkRMKzdhSjQvMFZyOHdmaXg0T2krTkhnZlhQQ1hqT3gzYWRyT255d1hJU0JNUkt3TzJTTU9DTjZIRG8yQ1F5S2M1QU5mV1gvQktQOXBqWGYycWYySFBCL2p2eDFyTUYzNHQwaU9YUWZHT3k1ODJaTlFzM01XNjRKT1ZubGg4aTVZSC9uNEJIQkZmR1pqUnFUWDFtU2QyOWZOdlcvejF2L3dUNkdyU3c5T0tWRzFscFpkTGJlaHdueDZ0WGgvNEtuMmQ2SlZLM0g3UHBRcHM1VXg2NWtFSFBRK2Fjakg4SXIwSHhMK3gvQisxOW9YaHUwOFUvRlRWTko4RTZEcXp5ZUsvQm1tYWZiSWZFVXNhU3RBLzI1VVc1dGZsdVhpa1VQSXJ4Z0JCQytaQ1VWN25EUDhBdjBGL2RmNUdtWmE1Vkg1Zm16NXcvWVMrTGZpL1EvaUg0LzhBMkF2RkZqb3VvNlg4SUUxbit3dkV0anA3MlYxZFNRNjdEYlNtV0paV2lJayswbHhoZDY3RkJkK3Rhdng2MUs3dlBpSGNXTThtWXJPR0tPQlIwQUtCeWNlcExubjBBOUtLSzA0anB3aG1DNVZ2SDlXdnlWaWNtbko0V3plaWIvSkhINkE5L3dDSUwvOEFzdDlTbGhSWlRGRVV3Y0QzSDhYWHBYdDMvQkhEd2RENEMrR3Z4aTBTM3ZET3MzeDMxUzkzZVhzMm00MHpTcHlnR1R3cGtLKytPZzZVVVY5THhYZ01KUjRTbzFZUVNsZUt2MXRadjh6OE84Tzg1elRNT05NMW80aXE1UVRiVVhzbXBSU3N0bG8ydEQvLzJRPT0nLFxuICAgIDAuOTZcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ3B1cnBsZV9wb3dkZXJfYm9tYmFyZCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWRBQ1lEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlyTkt2TmYxQ1ViSEFqQitlUXdqQS9UclZINHZmRjd3cDhGZkNMK0t2RXR2cUY3TklXaDByUk5Fc1d1dFExZTVFYnlDMnRZRjVra0tSeU9ja0lpSThrakpIRzdydjN0N0hwWXRiS0NKTjl6Y3BiMjZOS3NhN21PQmtzUVB3Nms4QUVrQS9ISDdjUDdRZmlyOWsvd0RhUDhPZkh2eHY0UnNOUzhKK0ovRHg4S1dkeGVlSW1pZncxZXd5M041ZVIvWlFzaXltOTh1MWpGeXBqaVI3R0ZiaVdHUFpOWDRubFdWMWNmaUtYdFc0MHB5NWViZlhleTYzK1I5ZFJoQ3RXU2xvajA3VS93QnNmNHMrQzczU2ZFM3hXL1pidnJEd2ZxR3J2WlhGMzRjdnIveEZyV2xSbUs0a3Q1Ym5UZE0wMlpRcm1GSTM4bTRtV05wMU81MVV0WFVmQzc0dTZKOFl0Q3ZOVytIMWhxYzRzQmMvMm5wK282UGNXRi9ZUERHa3BobnNicU9PNmdtWkpZSFNKNGxkNDdpR1VEeTVVZHZDL2lqKzFYY2ZDNzRQMi9pYVh3dDRxYlZvcitDQ1hVL0UzaEM3MCtQejVDenJEYjJOeTloOXZrMlJ5bGxNdXhZb3BYWjBieW9wODM5Z1A5dEQ5bEx4N3FuaTJYeFo0eDF5RHhUNDQ4WlErSU5WdnZGK25XOXZZUVhkN1pKYVdlbFc5eGIvQUx1UHlyTFRvTGRSY0dPUzVrVjJRTXp2SEgraTU1d0hoY3F3VHpQQjA2bGJEUWRwemdydzAwdXArc28zMjNhdGRPM1ZYcFVlVDJsQ01rbnBacDMwNjJldm5yWjJ0cDMrMk5JV09UU3JXVXdnRnJkQ1FWNXlWRkZXVlVLb1ZSZ0FZQUZGZmowck9UWjVqYnVjQjhmUGlEcVBocTM4UGZEendkQmJ5K0t2SEd0blNmRFQzVGp5ckNSTGVhNm0xQ1ZBNlBKSGJ3MjhrbXhDclNTZVRGdmk4M3pVODcrTnY3TEg3RjN3ZytDSGkzeFo4VVBCU1h1cjZ4cHhPb2VNcGJ5R0h4UDRnMUtDTVRXOXZhM2JCUzl3ejJ5aUd4aUMyNEMrU2tBaHpGWFZlTTVZVi9idCtHTUUxdUg4ejRZK013ajlHalA5b2VHY2tISEJLN2wvNEYrQi9OVDl2VHhQNGorSmY3VVB4QUhqVFhMaStPbStKOVEwblRmTmZpMHNyZTVsamhnakE0UkZYSndCeXpNeHl6TVQrN2VGMlVRcTRXT0pVbkdYTnpYVzY1V2t1WFhSNlh1clBic2ZSY1BaRFd6L0FCRXFWT3B5Y2tlWnZXN2Q5RXRyZXZUc3o2Wi9aSS9ZKy9aQzhVL0dIVm9ySDRTL0dQVTduUS9EZW5YYUw4YXZDbHJaYWFHa3Q0OWxzc1NRUS9hYmkyU2RGS3lMSkFqQU5GOXlOMitnSi9nQjhMUEExcEo0UnN2aHA0ZjAzdzVxY3pmMnZvR242TGIyOXBlUXVxeHpJMENLc2JxOFFFWkJHQ3VGNllGZGwreVZhalQvQU5sYjRZYVJieXVJTGI0ZWFFa01aY2tLQnAwQjR5U2VwUFVuSFRwV1o4Y3ZFTi9aNms3eHFqdkhkMmxsYSthQ1VScDVvNHZNWUFnc0FaZHhVRWJndU53NjErbnh4K096UE5iVmFrcEszTDcwbkxUYnJ0ZDYyNmVaNGYxakdZV25WaFVsZVNUVGZWSysxL1U0ajltRFVKUGdWOFpkVC9ZM2h1OVp2ZkNCOE5EeE44SmI3VkpKYmsyV2xSekphM3VpdGN1ZzNteW5rdDJpVm5sa1cydm9GTGtScVNWMlB3ZitHdWhlSi9qSERjK043aTd2ZFk4TCtIYjZLd3Y3QzdlemlhMzFOOU5sbmphT003aVZmVG9kaDh6RzBrTXJOaDZLL0QrSk9BcTBNNXFQRFRqR25LelNkOW1yOUVlZkxGcUVZdXZmbWFUMDJkOW52MVdyOHovLzJRPT0nLFxuICAgIDAuOTZcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ3B1cnBsZV9wb3dkZXJfZGVmZW5jZScsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWJBQ29EQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl5S3lmSGZqand0OE12Qk9yL0VieHhxeTJHamFEcGsrb2FyZXRFNytSYnd4bVNSOXFBczJGVW5hb0xIb0FTUUt1NlpxdHZxMXMxemFxd0N1Vkt1Um5PQWVnSngxNy9YcGcxNForMWo0MitHZC80TmorRUh4UitJbXI2YnFuaXU0TXZoYlQvRDNoYTV2OVlnMUxUcmlHOXQ3bTBzN1pKM3YxZ2xoaXVIeEcwU29nRTRWSEsxK0Q0SEw2bU5jbkY2UnMydnROTjI5MWRXZlVRZ3BTMTJNY2VLdjJxdmpWSy9pclhmRzk3OElQRHNrYnlhVDRhMDNTcktYV210blNKbzV0VW4xQ0dlRzJrMitadXRZWVFZV2JEWEVtMGdVdkMzeE4vYWErRzgyazZIOGQvQjNoM1ZQRHQ5cUVlajZQNDk4TitKcEo3Mit1WnBWanNacnZUR3NvRmhXZmVpU1BhU1hDeFN0dk1TVy9tU1FmT1h3YS9hcCtJdmd2VHJyWHZqejhSZkMxejR5MDh6NlZyc0hpNk9lOGswYTdpdVdzcGhiMm1sNlpKRGN4ZWZiUzNBaEx3enhDNGFGenRSTDI0eHZoaiswcCsxL3IzeGcwRDRoZUNmMmU3N3hmYU5yai93RENPZUpmRjJoYWcybWxENTFuZFg1dkpIbWpzTHRvMWNIN0V3Z2lTK3VZekJkbG81RS9lcCtHSDFySm8vVThKS05SUlQ1cXI5a25KN0pTblpWSGIzdmRiMHYxc243VTZjSjBWR0ZPM1o2WGw1cmQvZnIyVDNQMHc4TDZqclY0MDBPcXpXczZwSEM4ZHhaeHlJbVhqRE5IaVJWT1VZa2RQVElWdHlMY2swZUtSMmMzZHdOeEp3SmE4NStBL3dDMUo0YStNV3UzL3dBTnZFUGhxODhLZU9OSHRZNTlUOEw2cEtqaWVGbFRkZDJOd255WDFvSkg4dnpWQ3VqYlJORkM3S2g5UnI4RnpTTldubUZTTTZYc1duckRWY3ZscnFlTE5WS2NyTldaelduNnhwdmdQd2hxL2lueG5mSnBtbmFiRkxmYWhlWGdFY2R2Ynh3aHBKV2IrNnFvU1NjWUMrbko4RXRmajdwbndTL1pqMG45ci94YmNhZTNqZjRwV2R0ck01MWEwanViN1ROSm5LVDIrbVcxcWJpMWU2anNrdXJhMmFOSllBWko1NzEwM3ZMSEo2cisyamFXK29mc2RmRm13dTQ5OFUvdzAxNk9WTWtibE9uemdqSTU2R3ZqVDlyYlZyL3hIL3dUSy9aazhRNjNNTGkrdlBDT2x6M055OGFocEpKTkd0WGRqZ2QyT1QrSG9LL1FQRExCNGJGWm5PZFJhNkwwVHUzOTlrZXhrT0NwWm5tOUREMWZobkt6OUZGdjgxcVRXSDdlWDdMdjdSWHhwanN2akw4Q2ZocDRsMVc1c3o5cWw4VC9BQW5UVExxYTB0MGVXV1dQVVRkYW5HZkl0NHBHOG03UzF0d29MdmV3TEdRMzNQZmFCSDRnOEtXbmliVk5Pdk5MTTJud3pUNmRxeXhMYzJMTkdyRzNsRWJ5UitZaGJZUWpzdTVTRlpoZ244aHYyYVBDK2crSXZqdERwT3M2Y3MxdmYrRlBFbGxkcHZaZk1nbjBPL2lsVEtrRWJrZGhrSEl6a0VFQTEreHZ4VnVKbzlBTEpJUVpkUkN5WS9pR0hiQi9FQS9oWDdubXRDaFN4R0hoUnV0T3IyMXRvdGt2bGUvWHRybmVWVmVIYy9sUW96OXhwTkx0K0hrZk4zN1YzaDlQK0ZCYXA4VFBBK2oyOXQ0MitGc1YzNDE4RDYwWVozbmp1Yk9FWEYxWnQ1TThUeVc5NWFXOGxuTER1Mk1zcXN5c1kweDlIZUN2R21uZkVMd2JwSGo3d3JwMm8zR2w2NXBsdnFHbTNIOW55RHpiZWFOWkkyeGpqS3NEK05lQm8wLy9BQWttditLbnZMaDd2UzlaZ3RiRVNYTHRERkRJdHVraWVTU1ltRHJJNnRsVHVERUhPYSt4b2tTT05ZNDBDcXFnS3FqQUE5SytONDU0UnkzSDQybmlxcmFjbFo4clMxU1QxdW5mU1NTMjY2Ykh5TXNUVnAwdmFTOTVTbEsxK2xyWFhwcmRmUFEvLzlrPScsXG4gICAgMC45NlxuICApLFxuICBuZXcgSWNvbihcbiAgICAncHVyaXR5X2NyeXN0YWxzJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBWUFDWURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOXlLOGovYkIvYlQrRFg3RnZnTzI4V2ZFMjZ1cjNVOVh1aGFlR2ZDdWpSaWJVdFp1U1ZHeUdMSStWZHk3cERoVjNLdkx5Um8vcGF5YXhxUGhUek5HdjRJTlFtc0Q5bHVyMjNNOGNjNVRDdkpHalJGd0c1WkZaQ2NFQXIxSHdEL3dUVDFmeGRhL3RwK1ByYjlzdTMremZ0UDhBaHY3VmM2cG8yc1EvYXJUVlBDOHNvUzExVHczZU1xQjlOMmxvM0VjY2MwRWp5UjNDQWdvdjVMd2ZrT0N6ekh1T0pxV2pEWGtXa3ArU2RySmZ6UGZWV1d0MTlHOUh5M3MvUHYyMmVyNlgwTGVyL3dEQlRuOXNUOW5ieHRiei90K2ZzVHRZZURmR0pGNzRhc2ZERHgzV3FhUGJ1SFNHQzRqa2s4dTRrWmxpVnd4dDNqYVZpVkc2T0FkMTQ4OGVmOEZDUGlYOEt0ZitOSHc3OEc2QjhBdkR1bldyeStHLytFNTAyYlUvRXVxVHBPOFVLVDIrREJwc1Z3REZHNGRKM1F2dkRQbFhIMHo0bDhSK0FibnhKWS9FSDRwV2RnbHRhWDRuMFMzdjRmdEVyWGl4TWthMmNlMHZMYzhrS3NTbVFzMjFSdVlBeGZESDQ0K0FQajlvTVhqV3lTYVR3MzRxczViT1cwdm9YaFlSRm5oWkpGMzRWbFlPck1wSzh1eWtnaGoreUxoVGg2TlpZbWxnWTgwVXVaWGxLRjEwVVcydVpwYTN1bmE5cnRzNVpWNTRhYWpWbHBvMmxwNnIvZ25EL3NPL3RwZURQMndmQVdvUW55ZEo4ZjhBZ3k0aDAzNGxlQzVEdHVORnYzaUVpT0VMRXZhenBtUzNuVXZISWdZQjJhT1FLVitjdjdmL0FNR3YyMC8yY2YyeWRRK0lmL0JNNzRoalFmRmFhQkhwR3ErSmJqdzFKZFJhMW9jenJjUXBOSE5aWE52Sk5CUEM2SmNReERjRE1wa0czeVl5dmpjeDhKczZ4R01sV3k5UlZHV3NVK2E2VDF0cEY3Yks3djM3bWxURzVmR28xR3FyZWQwL3lQMUgvYU4rS25pVDluRDltenhaOFh2Qi93QUpkWThmNmo0UjhPVDM5bjRTMEdhR0c3MU13cHUySTByQUFBQXUyMFBJVlZ2S2lta0tRdjhBSEgvQlBINE5lTWYyOVBqTmEvOEFCVFg5c0w0MHBkZU9QQTVLL0RUd1I4UGRia1h3L3dDR0xDN3RzSThFMFQ1dm11VmtjWEV6RmxtS0xHR052R2lFb3JIdzJ3bUZuaGNWaW5CZTBnNEpTM2FVblpwWDBYcWxmek9YTWE5U0RqRmZhdmY1V1BzUFcvaDM0M1h4emEvRno0YjZIbyt1ZUtMSFJqcEZqcDNpWFU1YmExdFVkZ0JkeE9rVXBqZU5TNnlJcWd5eHY4ckl3YnpWOEgvc1BXbmdmNGNlS3ZEbmhiNHEzdWxlSWZGR3QzMnJuWE5LMGUzanR0UHVaMkJSSUxPUVNBUUlxb2hReUZ5QTIyU01sU2hSWDZKV3pERlVhbHFjcmJmOEJhOU45UE00SzFTVmEzT2ZraisxRDhJLzIzYmI0bHplQjlhOFlmR1BRdkEyaFhONUZxdmlIOW5ud3hQcW12YXY0amViZjUxNS9wTnZOTlp5V3Y3eEoxeW9QbGlSVk1rQllvb3I2WEhZWEVZeXNxMzFpcEM2V2tYR3kwVzE0dC9pZDJDNUZTY2VWYU45RWYvWicsXG4gICAgMC45NlxuICApLFxuICBuZXcgSWNvbihcbiAgICAnc3dpZnRuZXNzX2NyeXN0YWwnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFoQURFREFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5eUs0ejQrL3RFZkJIOWxyNFpYM3hqL2FEK0plbCtGZkRlbktmUDFMVkppQTc3V1lSUklvTHp5c0ZiYkZHclNQZ2hWSnJsdjI1ZjJ5L2hmOEFzRGZzMCtJUDJtL2k3WmFuZDZWb2lSeHhXV2syYnl5M1YxS3dqZ2gzQUZZUThoVmZNa0tvdTRaT1Nxbjg3UDJTUGdsNDUvNEtyL3RiV243VS93RHdWdjhBQy9pVFNkSTAzUTR0WCtFWHdmdU5LbXR0QzA3VDU1UVlwTHFTVUF5U3pCQklUdHpQNVkzU0lJRXRvL3ozZ1hnS1hFOU90bUdOcU9sZ3FDdlVsRkp6azlQY3B4NnlkMWVUOTJLZDNmWXo0azRud25EOElVNU9QdGFqdEJTZkxHL2VVdWkvRnV5VjIwbjZEOEZmK0RrejRCZkVuNHYyWGhINDhmc3plTWZocDhPUEZseEpINEcrSnZpVUdXeTFGVVBEM01hd2hZSXl3VkM4TXR5aU5Jdm1GSXc4cSt2ZkYzL2dxMyt6bEo0cmI0UGZzT2ZERFdmMmp2SG9VUDhBMlI4TXI5VG9saVpFRXNadmRZWmphVzBib0pTaGo4M0R3c2pLaE5XZitDanZ4aC80Sjk2eHJlai9BTExmN1N0MW9rMXhxTmh0MGZ3cHBIaHk5MWZVNUxXTkdZT0xiVFlaWnJlSmRrbmx5bEYydkM1amNGWEE2LzhBWkUrSVg3SGVsZkNleTBEOWhPMzBKdkRlZ2FzMm4rSnRGczlIdWJIVUxTV05pSkk3cUNkSWJpSzRiNTJCblZXYmNHQUt0bXYxZkdlSG5DR0l3MUROY0psdGVNSkszSTV5OWczMGxLcTF6NnE5NFFsRzdXamdrNy9sVlB4TzRrbzFjVGhhcXB4Vk9TdFcxZDR0MjkybjdyZkxLOFcvaHNsTk9UYmhIeTM5akwvZ3F0OFFkYy9iVDhWZjhFN1AyNmZocjRlOEIvRUMwa2h1ZkFjdmg3Vm51N0RVYldXemh1aHBzdHcrQkpxRVVVcXMwcUtrY3g4d0xGRVVUei91bGxWMUtPb1lIcUNNZzErTlAvQmNIL2dudjhQdjJmOEF4N0orMko0WCtLQThJNkg0dzhTRFZmRDNpU3h2NUxXNjhQOEFpRUEzWTJTbHNzMGpwTFBGNWJLNENTS3F4bUZKRyszUCtDTC9BUHdVZnNmK0NqZjdKRnQ0cDhVYXBhdDhRL0JzNmFMOFFyV0thM0J1TGxVQmkxSkk0U05rRjBnWmxPeEU4Mk81alFGWWR4OFh4ZjhBRGJJOG55bkJjUjhPelVzTldwd1ZhQ3VuU3JLS2pQM1hLVW93bE5OV2NwV2RrcFNVa3o3cmd6aXpFNXRpc1JsdU9nNDFxTDBrL2hxUmVzWlJra295MDEwU3QxVWRqNnovQUxKMDcvbjFYOHpSVmlpdjU4dXo5RXV6RCtKZnc0OENmRi80ZTYxOExQaWg0YXRkWjhPK0lOTW1zTmEwdTlVbUs2dHBVS09qWUlJeUNlUVFRY0VFRUExK1BYN0FmN2EzaDM5anJYdjJoLzJZdmhEOFZOUS9hQytCM3dvOEw2MTRwK0UrdkMrazNhSEpwdGpMY3o2UUx0NGlyV2IrVUlmUGc4eTJMTEZjUklQdExCUHFML2c0YStHL3grOFlmc3BhSjRyOERmRUx4TGFmRERRTmFrZjQ0K0Z2Q3NETGNhbm9jcUtvdlpaWWMzRFdkbzRMWEZ2RXBFa0U4a3JGZnN5c1BOditDYTN4dy9aVytHbjdIT3IvQUxOZmhMd0pvbW42MExwWTcrMHR0TUV0dHIybTNMNWFhUjNMcEtoaTN4T3ZDL3ZGd3AzbGorK2VGbVNWbmsxVEhVNU9zcWs0d2RLUC9MdDMvaVR1cjZMK1g3TDk1MnZ5L2tmaVJuK0N3a2xnTVRTdEZ3Y25LUzkyU1c4STY2eWJ0YTlyT3pUdmEveDh2eFA4Wi9EdlIvRDNqdlcvanBwbmh2eEY0OHVoclh4dCtJL2lCN1M1MUhWZFJFTUpqc0xWN2hSQWtRVjdxTzNoV0x5NElyWmRpY3VKZWcvWmovYkEvYWQrT1BqVHc5OE9mMmNmRjhsbHFYaVd4ZzBueEQ4UWRFOE54UWFsNG9hRVhKU0tCYnFLUkxhenRmT3VKNXJ0b2xmZUpmSVMyVnBnZmEvRnYvQklUVVBpTnJTK0dmMmJQaUw0V2J3aGNXYVIyV2hlTnJ5NWE0c2dNNHRkeVc4d3VJa1VJRmxrSWtJNGNNeW1SL3FML2dtVC93QUVpUEZmN0tQank3K08zeGM4WmFYcjNpYWJTSDAvUzlPMGkzWTJXbEk4cE1rcVRUS3NrMGp4SkVvSWppRVllWlAzb2NNUDYrNGs0eDhPY2g0WW5YVmFOV3FvSnd3enB5YzNVMFVWS3l0eVJhdTNvbWxvN3RLWDgrOFBjSTR6T016OXZDSE5VY3BOMWx5L0M3K1RrM3l5VUl4Y25HQ1ViUlRTbEg1Ri93Q0NrLzdVUGlud2QreHA0cS80SjhmRlA5b081K0tldCtMbHR4YzdkUHRJeG9NMXUwTndMZVMrZUxNOEtYRVN5Z21IN1NmS1pkOEc1QW5pdi9Cc2Q4Q2YybG8vMjM3L0FPTVB3TzFPNlQ0VGFMcFY1bzN4VjFlOUtyWWF2Y3RBWHRiQzBCUnZNdW9yZzI5d3pLUjVVQVlOSW91STQ3ajZCLzRPSlBoWit5ajQ1OFE2VVBDRjdaUi9GNjRuVzI4U1dsamM0ajFMU1Fra1JsdVZRSDk3QzZMR3MveTVSWklXYVI0NFk0OXIvZzMrL3dDQ2x2Z3pRTlMwbi9na2Y4UTdDd0d0ZUg3RzZsK0hQaUx3NW9pd1E2bGJJSmJ1NHM5UWpnWFpGZXhqelpQdFhDWElEaVVyY2pOMStLY1ZZbk5jWDRQNG5OOERsaWNhNzVhczVwUjVJdGF1Rk5LS2s5RStaSjhxdEpwV2QvMlhnbDRTbnhBc0RXeGNwU3AvQ3J0cHRPelRrNzJzOUxkWGRYYjIvV1dpaWl2NHdQM2d4L2lKL3dBay93QmQvd0N3TmRmK2ltcitkLzhBNEp4ZjhobjRkZjhBWWp0LzZLU2lpdjZVK2p6L0FCY2Yvd0J3L3dEMjgvRFBIRC9rV1lYMW4vNlNqOWJmMmJ2K1BQd1Qvd0JoTzUvOUsxcjdiK0p2L0pMUEVYL1l2M2YvQUtJYWlpdlI0cS81SGIveFQvOEFUc3o1VHd0LzVKL00vUi8ra3lQNTVQMnkvd0RrOXI0ai9UU2YvU09uL3dEQnBOL3lmMThVdit5VWovMHZzS0tLL2J2RjMvbEhuQmVrdi9TbVB3Zy81SEV2OEZIL0FOSVA2Q0tLS0svenNQNmRQLy9aJyxcbiAgICAwLjk2XG4gICksXG4gIG5ldyBJY29uKFxuICAgICdzdHJlbmd0aF9jcnlzdGFsJyxcbiAgICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBWkFDWURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdEOXlLK2VmMi8vQVBncFYrejUvd0FFK2ZBWTFIeDdleStJZkcycVJxdmc3NFkrSG5FMnM2OU01ZFVLUXJ1YUszREkrKzRaZGlpTmxVU1NsSW45TS9hYzhTL0hmd2Irejc0djhWZnN4ZUFOSThVL0VEVDlDbm04S2VIOWUxQjdhMXZieFZ5cU82RExIcVZqM1JpVmdzWm1nRG1hUDgwZitDTE9qTDRDOFJhdC93QUZLdjJsTWZGajRpL0V1OWwwelgvSE16U0RWZkJlclFoMXZ0Qm1zcGtqanNwa0MyaXJHQkdCYnFQSlBrNGlYOERvUXdkT2pMRTR1ZkxTZzF6Tkp1MTNhN1N1MHI2WDBWM3V0MStrY1A1SC9hM3RLcmFsN05YVk5TakdkUi95eHZ0cGR0NnZsVXVWU2tyUDByNE5mOEhCSHdHMUdmeEY4UFArQ2h2d1E4VmZBejRoZUhyNVYwN3dwSnA5OXE3YXZGTGp5NDRUYjJvZExrU0F4UEZMR3E1S0ZaQ1drU0d2OFlQK0N0MzdWdndIR2kvdEY2bit3Wkw0UytFTDZuczFmUWZpRjRyZ2g4ZjY1cGZsbnpiMncwbEc4dXlhMGs1bGd1WlhNNm1BS1lUSzB5NG5qWC9nb1Qrelg4Ty8yMU5mdmRkL1ptOFhmRmI0bDJNVWR0Y1RlRXRLMDVvN2ZWSjJpbnQ3SlpiNjdpa2VkSS9JUU5Da3JSSkpIRXJaUXhKOUErRi9oSnJuN2F2d0IxcjRBZnRTZUZWOEplTGRidVg4UytIWW9mRkExUnRFMU5VTVMyOGwwc1VVZHlCQjVheVJSUWVXQjlwOHR2a2hscnpzTm1sUEdZK2pUalJWT05Wdmw1NWF2UzhiUlRUaXByYVRja20wcks2Wjk5VTRYNGV5L0dVNjJOcFZvWVNhaTVTZXRvdjNadWs3TDJpcFNhbEtYV043UlVyVytsdmdwOGEvaFA4QXRJZkNqUS9qaDhFUEhGaDRsOEtlSkxJWGVqYXpwN0V4enBrcXdLc0EwY2lPclJ2RTRXU09SSFIxVjFaUVYrRG4vQk5iL2d0YnBmOEF3U2ErTDN4US9aZy9hcytIZmlhTDRjdzYxY3RvWGgzd25mV21zZjhBQ002L0RjbUc5aHRtTHhSL1k3a2g1ZHNjelF4eVFrd3BpZVJxSzl5cmttUDU3MHFibEY2cDZQZjAwdXRuYlR0b2ZtZWJaWFV5M01xdUdnK2VNVzFHU1R0S1BTU3VrN05hNnBQeVIrejMvQlFmOXVUd1Avd1Q3L1oxdXZqdjR4OElhcDRpdTduVklORzhNZUhkSlhhMnFhdGNoL3MxdkpPVktXa0xGR0x6eVpDS0R0V1NReHhQK2ZQN0RQaC80NitLbjhkLzhGUFBqTDhhdkQrbjN2eHExeTEwZlVmaHg4UGJTTjlKWnJYY0VHb1JTNy9LdW8xdC9PaWwzTk92bWtzNi9hSkVyNnAvNE9DditVUi94VC82L2ZEUC9xU2FYWHduL3dBRTR2OEFrMnp4MS8yV3JUZi9BRTB6MTQyYXlxNGZoNmRXakxsY3Bjc24xY1hhNjhrNzY5WHNmcG5odGtlQnpEQlN4TTE3OGFzSXR1elRqbzdKUFJhMmQ5WHBwWjJhNUw0MC9zSjYvQisxOTRlK0FuL0JPYnhmOFMvRm5qQzRnT3ZmRmp4dDRnOFFRTGIrRnI3VWJoNXJlYWJVTENPS1N5dVdFZDdlT3BVVEZKTFpyY1NNK3dmYW5qRDlocjlwbjluTDlpUFhJL2hwOGN2R0h4RitKS3hOcUdxM1d0YXhmNnZjektGeEpiYWFsN1BPeTdZeGdSNExURXlGVlYzalJMbi9BQVJyL3dDUXgrMGwvd0JsNXVQL0FFMDZkWDFSKzJEL0FNbVllTmYrdU52L0FPbGtGZkwxTVJpOHh4MzFPVWx5MFllMGJhdnp1TVZOcDdXVDJWdGxiYzN6WGl6TjZ1WjRUS1c0dU5LcEduR1RqRnp0S1ZrdWF5a29SVXJLRVdscGR0dXpYNGJmOEV3ditDWUh3Ry80SzUvRmp4NS93MGorMFpxbmgxTkJpRjNwM2d2d25xS0RYdFpubGxYN1JyVTl6Zldzc1UwQ3U0aVpZeExJc2s2K1kwQU1SdXl2aVg0di93RElzYUQvQU5jbS9rS0svVzhMVHh0YWlwVWF6cHgyVVVyN2FiK2U1OUZ4bndIanFtZlRxZjJoTDNvd2xia1duTkNMNVZhU1NVYjJTU1ZsWS8vWicsXG4gICAgMC45OVxuICApLFxuICBuZXcgSWNvbihcbiAgICAnYXJjYW5lX2NyeXN0YWwnLFxuICAgICcvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndCREFBSUJBUUVCQVFJQkFRRUNBZ0lDQWdRREFnSUNBZ1VFQkFNRUJnVUdCZ1lGQmdZR0J3a0lCZ2NKQndZR0NBc0lDUW9LQ2dvS0JnZ0xEQXNLREFrS0Nnci8yd0JEQVFJQ0FnSUNBZ1VEQXdVS0J3WUhDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dyL3dBQVJDQUFnQUM4REFTSUFBaEVCQXhFQi84UUFId0FBQVFVQkFRRUJBUUVBQUFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSQUFBZ0VEQXdJRUF3VUZCQVFBQUFGOUFRSURBQVFSQlJJaE1VRUdFMUZoQnlKeEZES0JrYUVJSTBLeHdSVlMwZkFrTTJKeWdna0tGaGNZR1JvbEppY29LU28wTlRZM09EazZRMFJGUmtkSVNVcFRWRlZXVjFoWldtTmtaV1puYUdscWMzUjFkbmQ0ZVhxRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVIaTQrVGw1dWZvNmVyeDh2UDA5ZmIzK1BuNi84UUFId0VBQXdFQkFRRUJBUUVCQVFBQUFBQUFBQUVDQXdRRkJnY0lDUW9MLzhRQXRSRUFBZ0VDQkFRREJBY0ZCQVFBQVFKM0FBRUNBeEVFQlNFeEJoSkJVUWRoY1JNaU1vRUlGRUtSb2JIQkNTTXpVdkFWWW5MUkNoWWtOT0VsOFJjWUdSb21KeWdwS2pVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmdvT0VoWWFIaUltS2twT1VsWmFYbUptYW9xT2twYWFucUttcXNyTzB0YmEzdUxtNndzUEV4Y2JIeU1uSzB0UFUxZGJYMk5uYTR1UGs1ZWJuNk9ucTh2UDA5ZmIzK1BuNi85b0FEQU1CQUFJUkF4RUFQd0Q5eGJhMXQ3T0VRVzBlMVI3OGsrcHJ4Yjl1Zi9nb1YreXYvd0FFNi9oWi93QUxUL2FiK0lTYWN0MUhQL1lQaCt5Vlp0VTF5V0pWWjRyUzNMTHZJM3hxMGpGSW96TEg1a2lCd1Q1ai93QUZodjhBZ3FsNFovNEpkZkFLeDhTYWI0T2w4VGZFTHhwY1Q2ZDhPdkR6MjB4dEpydEFubVhGM0ltTVF4ZWJFZkpWaExPenJHbTBHU2FINGgvNEpvZnM2ZkQvQVBhRC9hWThTL3RPL3dEQlpyV0wvd0FZL0hKYm1LeTBMNGZlUDlITUdsYUZiSzRrRUVVRXY3dDNFa3hSYlhhcUlHa1lKTVpYZGZrL0Q3d3R4L0ZlRm5tMkxqT09DcDZ2a2p6VG5aMmZJdWlUMGxONkxWZDJ2ck1OZzhaanB1R0dwdWJTdTdKdXk3Nkh1LzdEUC9CeWQrekQrMGI0MGsrRS93QzFmOFBMdjluL0FNVFMrZGNhVkw0ejFsVzBhNnRGVGVoZS9taXQvczB6Ykp3RmxqV0p2S0NyTTBraXhEVStPSC9CZEw0UCtLZkdsejhOL3dEZ245K3pUcjN4L3dERU9uMzNrYW40a3M3cit4ZkRXbnN2bXBJcmFuT2hNN0lZNG5DSkdZSm81UTBjN0ViVDVkL3dVTCtDUDdNWDdTL3g2LzRhVC9hNzF2d0Q0SzhNWE91UjZkcG12YTlyRVdreGFzWWtsRnU4czkwNDN6U1FRcGxBUG1odGxYWWRtNGVuK0JQQS93Q3pUOERmaVI0VitGVnRvbmhqV1BoRHJHa3lhWHFFRnRadGFRMm9uaU1LVDcxbFZOaS91OHpGMndqU1NmZlJDUDJ1WGd0d0FzMVZXbXFrNzB2YVBEcVRhaEpLOG91ZWtwTmJSWE5GeTd4YnN2dDh1NEd4RXEwNDRtcGVVWU9mSlRhbFVkbGR4dmJsaStudmF0N0puYS84RWpmK0NrOXArMmNmRTN3VitPbmhqUi9CM3gxK0hzMDBYaTd3cHBGKzhsbnFOa1pWV1BVckh6WkpIZUFIYkV3OHgvTFoxTEg5OUhYMjFYNEdmOEZRL3dCbW5XUCtDWHY3Um5odjQvZkN6NGpXV2llTHZDbW9EVy9oTDRxMSs0YTNYWHJLSng5cTBxNE1HMzdRREhLOEUwUzdNaTRVbnlZN283djJOL1lBL2JZK0dQOEF3VUkvWlA4QUNmN1V2d3VsZ2hoMTZ4QzYxb3NkNTU4bWlhbkdBdDFwOHJGRVptaWt5QTVSUE5qTWNxcnNrVW44WThYT0E4dTRWeldPTnllZnRNRGlGelFmOHJldksxZHRkZEhxdFU5dGZsYzJ5LzZoWGk0VFU0VGlwUWFkM1o5SkxkU1d6VFMrV3lYOXZ2OEFabi9aWS9heC9aWDhVZkNqOXNkYkMyOEVmWTJ2cnp4QmVhaEZaUDRmbGhWaW1wUTNVdnkyMHNPV085c29WWjQ1RmVLU1NOdnpGLzRKWC90TStDZjJwOUVrL1p1K0s5L3FIalMvK0VlcHZwbnd5K08xcm9NMXV2aTN3M0ZkaUczdDlTZ3VDSHQ1bzQ1SVpJdDdNeXhNWTJ3OFJhNTZQL2c1bCtEUDdRUGpmNGcvRFR4aDR3OFNhbmUvQVZMTTZkSDRlMDY0VmJhMDhaUExLWUxuVUlodGVXT2EySWhnY21SWTVvbmpJaSsxRVQ4Uit6SCsxSjhLdEYrRDNncndqOE1mQnNQaDU5RnZURnJlbldiWVNLV0ZBQzVQV1h6ako1bTV6dkJVN3M4TWYySHdHNFZ4OVRKMWlzSmlwVGxWYmFoQjJWSnBOU2NtMDNlU1NVbzZKM2p2N3JYMFBCdVUxTVJpWGpZVi9adUYwclAzbTlOSDBzMDlkN3IwUENmMklOSytIdjhBd1VrK1BYaFA0dC90NitMTkk4UmVJUGlCZWl4dGJYWE5QaWJTOUFzVWtsTnZwV20yc3U1SVRLeXJFanR2a2FXZmNTN3lTR1g3UytNUHdSK0lIN09uN1ROdCt5MSt6Rit4ejhNZkRmd2h2ZkRzK3R4WEdsNnJjYWZjWGN2bVdrVjdmeVlzMmllVzNIazI0dFY4eVNVWE52TEpjeElGalQ1WDhWZjhFcmZpVjRjOGVIeFIrd0I0eHRMand5THBkVzhONk5MNGdGbnF2aHU0TW5tTmF4eXVGV1NLS1hEd1QrWUpBcmlOMTNRaWFiOUEvd0JoZjluUDl1dlJQaHgvd25QN2RuN1IxOWZ2cCtueng2RjRjdXRZamFDd2hZTDV0NXFWM0dBYjZRaE1wNWtrMGNhczBtNHlNUEsvYTg1dytVNVRsdUJ4K0h4RUtjNlVPV2RCdHhxdXM3cHpzbHpTdkxyUDNYRmFQV3o3Y0xpTWZsT013OHBSZEtVR2xKOVpPL3ZTY21uelg4NzNYUS9Qei9nc1orM0Y0cS9iQitGR2pmc3NlSmRUdERvM2dqVTRkWHU5WGlqdzl4ZFFXMHRyNWtqU2xwSjNZVHpaOHJ5NDh5S2YzaEFGZXlmOEdsSHdqL2FlOExhTjhWUGlxMDJwV1B3SThUVHdyNFVzZGEza2FycmtEbUs1djdGZk1DeHhKR2h0NTVSSGllUklVRWhOazZMOCsvOEFCU2o5bkw0ZS90RGZ0SjZyb253ajFlR2FKaC94VTEzWlFFVzhOMEhQK2t3dU1lWjVuUHk0QlprWjhsSk53L1REL2dpZi93QUZUUEFQN2J2Z3JWUDJiQjRBc05BOFhmQ1hUYmF3dkY4SGFPMGZocTcwNk0vWnJlYXhhTmZKdEZJakFXMExmY0FNSmtSSkJGK1crT09GelBEZUhVSGc4c2hDaEthZFdwdE9MM2lsRGRLKzh0WGY0cldTajR2RnVIU3pEMnNLVVlRdTBuRldUZlg3cjYzdTc2TjZXWC8vMlE9PScsXG4gICAgMC45NlxuICApLFxuICBuZXcgSWNvbihcbiAgICAncG93ZXJfY3J5c3RhbCcsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWdBREFEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl4TFcwdDdLQmJlMmoycUJ5ZTdIMU5lWGZ0aS90b2ZzOWZzSWZCVy8rT3Y3UnZqZVBTdEt0UVk3Q3hoQWt2dFh1aU1wYVdrT1FacG05TWhFWGM4alJ4bzdyeUgvQlMvOEE0S0hmRGY4QTRKcWZzM1QvQUIyOGVlR05TMTI5dmI5ZEs4S2FEcDhMZ2FucWtrY2trVUVrNFJrdDAyeHlPenRrN0kzMkxJd0NINE4vNEo3ZnN3K0N2MnlQMnJ0ZC9iQi80TE9YbXI2aDhXTEcvc1p2Q25nUFg3SnJMd3hvZGo1YjNWdmFSbzdFT3NZWkpCRklWamNUSzdOZHZjeXVmd1hDNGFoSktwaWFpcDAyN1hrN1hmYTcvd0NEcm9rejlNeVBockZacGhhMlBuR1RvVVZlZkpIbW0xZEswWStyMWJhUzNiMFo2VCt5UC93Y3dmczIvR3o0dDNQdzQvYVgrRW1xZkJiVHRUblVlQ1BGUGlUVWpjV09vb1pkbUx4eEJHTlBmYThMN2laSUZWbkx6UmhVYVgwYjRyLzhGaS9oSjhRZmlOUDhGLzhBZ24xK3o1cm43Ui9qVzBuOHUrdnZETit1bWVIOU0yU0JKUE4xbVZTZ3h1UmcwS1BESUhBODBISXJFLzRLWGZzOWZzeC90Yy9FMXZISDdTZjloZUZmQ2ZoYlZiZlR0WjhSYXJxUXNZbXNvWnd1WlozbFdLRmd4dUFrbzJ0c244dDk2cW9IZGZBLzlwUDlnendONDQwRDluNzlpcnhmNEM4UStETkdoajFIeFhiZkRjdmVXdGlqdUlFZTV1N1JaSURLeEN5Q0o1V3VMbGJhVDVTaU9UNU9Mem5LNTFadkJRY29RbnlTbks2cHhYTW84N1h4dUszZG5wdmRYUjlSaWVIK0hZZXdxNGVFM1VxMCtiMlBOOEVrcnRTcUplOWZSd1NzNVhzM0JyWG1mK0NaL3dEd1U3aitPSHhxMTc5aW45c3Z3ZDRiOEFmdEMrRmIyOEVPbWVITDZSdEc4VTJVWmZjK210TExLZk5nVkhFbHNYWmdJcEpZemdYTWR2OEFkMWZocC93V28vWXMxWC9nbjE4U3RJK09Yd204ZEo0SnRkTzhRRFdmZzM0dlJUY2YyWHFFSldVNlpNSkZrWitGMjdYRWl5eEJYWVNsSll4K29IL0JLMzl2endwL3dVay9ZdThNZnRIYVFJTGZYdkxHbGVQdEl0cmRvbzlNMStDT1A3WERHalNTRllXTHBORHVkbjhpZUhmaDl5cjdtTnkrdmg2ZlBPTm1ueXlTdmEvZU4vc3kzV3J0OXg1ZkhXUVpSbGRmRDQzS01RcTJFeE1GT0QwNW92N1VKeFVwT0VvdTZzMi9KdXpTOVQvYVcrRy93RitMbndFOFdlQVAyb2RKMFc4K0gxN29zeitMRjhRM0t3V2NGbkV2blBjU1RNeS9aL0o4c1RDY01yUXRHSkZaU2dZZmt6L3dUeC9hZjhNK04vRjNqMzlqK0w0ZytJZmlyOFBQaHFXbStDUHhrdmRPbFhVVjA1cm1ORjBPL2VWRUZ4YktacFdobWZ5M2hOdk1JVmVGNDdlTDFUL2c1WStGZjdRV3NmRDN3bjhUcGZpOXJBK0JjTThPbGZFRHdUcDB4dGJlMTFGNXk5anF0N0pIR1RjV2pTK1RBeVRTSWtFeTJzaUFtU1FqbGYyTXYycXZnSEgrd1RwbndGK0ZIZ2pSUENIaVRSdkVWdGFlTDlJMHEyYk9vMjZpV1pMNTVIQllzOGlSRGxqdDJzaVlSZGllWG0xV1dFeUNhOW43V05YM1duOE1mN3o2OHlkck5XczdPK3g5SjRmY09ZckYwSVl6RHpjbTZpWExCMmRQK2FVcnB1M0xvMGxhU2RtN2FyNU8vYjh1L2pSOFp2MmdQRWZ4ditMdjdMUGpJZkNyd1NWOFBlQ3RZOFVlQTlTaTBhSzE4OVlwTlF6ZHhpQlh2YnBrQ3lNa2NqUnBheG41Z1ZyNkkvNEp4L3R6UjYvYzZGK3lOOExmMkg3MXRMRnUwK3IrTC9DL2lxM3UvSXdZMGUvdnJlVzJ0VnRvQWdBQ3BMTXlLa1VLZWM1WFBlZnRKL3M3ZkdQL0FJS2FmRXo0WC9zd1hmaXMrR1BncjRmdmpyL2pEVW9OUXQ1TDdYTlFFVW9odHJTRHkyZUkyOGNjbVpKWFdJdGZySjVVeHR0cC9RUDlscjlqL3dDRlA3Sy93cXN2aEY4QlBBa1dqYUxiWmxudUpXTDNGL09SODl6Y1ROODgwallBM0hoVlZVUUtpS2kvTTRuRjBNWmxOTEEwNkh0S2x2ZGhGeWFnbG9uTGxhdko3dGJhM2xabjFtZjhYWURLZUcxbE9Mb09OZUUzS0xpK1MrL3YxVzR2bmJmTmFLV2kyY1ZZL0x6L0FJTFIvdG42RjhlZjJkOVAvWWdpc29yMWRCdVliMlRXbU1jZHRZUGF0S3ZtRWticEpJN2JkQUkwQVFpNGFSNUdLYlZ5UCtEVXI5blQ5b3J3djhWdmlWKzBuNFlqbTB6NEllSTlGVFNOMnJSRGY0bTFxMXVjdzNWbUFnUGsyeVBleFNTN2doZTUyQlpYU1EyM0kvOEFCZlhUL3dCbGY0b2ZHMkdiNENlTVk3N3hGTkk5djhRcld3YmZZc3lxalEzc1JBeXNoK1pXUEN6anlwSXd3RXNyZlozL0FBUVgvd0NDcHZnejlwM3dIYi9zTmVLL0NsbHBIajc0WmVGMCt6U2VHZEdXMzBuVjlGdDJodDB1VmloR3l5dUVhU0pKWU1DSm1kWklTRmthR0Q3TEtzUml2OVgrU1VwU2swbEpTZCtWS3kwNlc5MVd0cHZQVnliUG4rTHNveCtINEhvNHFqbHlwVXFrM0tjNUswMUozZGxGMmFXN2N0VzlJdmxTU1AvWicsXG4gICAgMC45NlxuICApLFxuICBuZXcgSWNvbihcbiAgICAnbWlsaycsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVhBQ1VEQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDl5SytXUDJnditDbkhnTHdiNC8xUDRMZkEvd0FFangxNGgwTFVFdGZFT29TWGYyZlI5SnVnVzNXL25xa2pYVjVFNnB2dDRrMm9TVWttaGtYYlgxUFg0NGVNdkNuL0FBVWYrRmdsMG45bXp3ZmVlTS9BbWgrTC9Fdmh6VE5WOE02SkhyR3FNOWxxVjFaTEhyRVVFWmtpdTFTQ081RXl4cEZNdHpFN3M3eU5HdjRKaGNGV3hWS2M0UmN1VzE3YTc5YkgzR1VmMlk4WWxqSHAwVitXL3dBLzAzZlErbTliL2FuL0FHaHRMMERVdmlUOFR2amRkK0N0TjB6Umo5cHMvQzJnNlZZMmtUcVNVZEUxTzJ2Sm5kZ3dRUkNZNzJ3RUNsc0gxYi9nbkorM3hwLzdWbnd0MGkzOGQ2WjRpMHJ4SGVYV3JSYU5mZUpORFd6aThUV3RuZVBGOW90Sll2OEFSN2lXT0l3aTRXTGFGbUUyeEFpWkh4VDRTLzRKWS84QUJRNzlxVFhOSzhTL3RtZU1aUENIaFVYTUFUN2ZKRmNYbDBIaW1ZQzAwK3ovQUhhVEVva2JOY0dBZ1RCaDVwUXhuOU12aDUreGY0SitIM2h6d0JvWGdYVGJQU3RQK0dHbTZoQjRRdC9zd2tuOCs3Z2pTVzZ1R2phSkhsZHpkdktvQVdSN2plR1VxQ2Zwc240V3I0NmhWbGlJT0h1dmt2Wk56NlhYOHZSK1R1akhpbk5jdlVxZFBBUmp6S1M1dVZhY21xZXEzZlZhdlZhN25vVkZlUGFwKzF2NE4rRWx5ZEcvYUgxZURTSlppNTB2VmJMU3Jzd1h3V1Jsa2lhSUxJMXRjUTRqODJGbmZIbXhzck1yakJYbFYrRitJYU5WdytxemxickdNcFJmbzBtbittenM5RDUrR2NaWk9DazYwVjVOcE5lcWIvcmRhSHNOZUpmc2xmQ2pUdmliOFl2aVYrMXJyUGhteTB6KzJmRXVvZUU5RzAyeHVYYUNlMTBlNnVOTW4xSzd0K0lwZFJudUlydU5aM1YyaXNvN2VGQ1BNdWZNS0s5bmdpS1dMclZPcWlsOTcxL0lNeDk1Umk5dFg5eDlDdytBZkRVRFIzTDJKbWtpZzhsSG1sWnNSZzhJQm5hRkhaUUFCNlZoK1BQRTFoNFFBZ3RmRHRuTFp4SkhjNjNLMTVKYm0xdGpNcWVhcXh4TjV6QUdSZ21WL3dCV1JrYmhSUlg2UlRWOFZGTnV6WGQ5MHYxL0JkRHo0UWh5dlE4QzhmeGZDejR6M3lYM3hROEdhWHIybndySGRhVzlwYXlvMXROZFcxdlBKR3pUUHVtLzBkckUrZHRqM1pJTWNaVXFDaWl2WHhVNmxHczRRazBrbCtTUE5saGNQT1RiaWovLzJRPT0nLFxuICAgIDAuOTZcbiAgKSxcbiAgbmV3IEljb24oXG4gICAgJ2NvdHRvbicsXG4gICAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQWtBRE1EQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDluOU0wZTUxT1VLZzJwbjU1RDBVZjFybzdPeXQ3R1B5NEU2OVdQVTFKRERGQkdJWVVDcW93QUtxZUkvRXZoL3dob2x4NGs4VTZ6YmFmWVdxaHJpN3U1UWthQWtLTWs5eVNBQjFKSUE1TmZ6MUdOU3RVVUlxN2VpUzFiYjZKZFdmVTNxVjVxRVZkdlJKYnQvcXk0ektpbDNZQUFaSko0QXJtSmZqUjhJR2paWWZpMTRhRDdTRlA5dlcvQi83N3JtdEowKzcrUDN4ZGV6OFRlSHRaaThFNk5hd1QyZG5xV21YRnJiNnpkRWlUZktrcUl6b2gyZ1JzQ3JGQ1NDR0FyMG54c2ZEZmc3dzNEb1doL0RpeDFLT1YxdFUwbUNLR0tHTkNwKytOcFZFd01jamIwQklCcjlOeXp3OFZURDAzamFrbzFKcFBsVmx5cDdjemw5cnVyTGwyYnZkTGZITEJaUkZSeEtuT2RsSnhndmhUNlBTVGNyYnhVVnk3TjN1bHlkaDRjMVBVYk5OUzBMWHRPdmJXNFVTVzl6QktRa29QYks3Z1IwTzhFNXdSdDcxditHZEt2ZEhzSkxTL2xqZC9QWmc4Uk8xbHdBRGcvZHpqcHpqcGs5VDV2OFMvQ0Z6OEhQR3VoZkVQNFJlRTIwK0RVV2hqOFMrR2RFczJuaXViZmNxU090dkFOdm14S3daWGpBenRmTzRNUWUvOEYvRVB3WjhRN1M0dXZDT3VKZEd6dUhndnJaNDNpdUxTVldaV2ptaGtDeVJObFc0ZFFUalBTdm5lSnVGOGJrVW8xSXlkU2pKWFVyV3M3MjVaYnBPNjAxMVdxdHFsdmljRzFoSVlxaGVWS1MzdFp4ZDdjc3JYU2Q5dGRWMmQwdHFpaWl2a1R6QXJ4UHhoOFZkVStKM3hGMG5TL2g3NENoMUhTL0NIak9PUysxVFdwVEhCZjNFSWtobWl0WVJHelR0RTBqRkpXS0t0eEFoWGVGelhySGpmVWRiMGZ3WHErcitHckQ3WHFWcnBkeE5wOXJ0ejUwNnhzMGFZNzVZQWZqWERmczBmRER3djRpL1owK0VlcXBMTkZhYWQ0VXNOUk9uV3NoV0tlOWxpaG5hYVRISkltTWpsYzRMT2M4WkIvU2ZEckxNRlh4ZFRIWWpYMlZsRko5V3BPN3MwK2xsMDFkOWoxTUpXaGwrQ3FZejJhbks2aEZPVFNYTXBjMG5iVzZTOTFiTzd1MWE1M2ZrK0xiajRsMytuMkhpS1J0TnU3V0NXNHQ1R0pheG1WUXBXSTRHRVpkakVaSkxrbmdacmFzYkhSNTdIN1ZZNko5b2g1Q3l2Y25mS0FTQ1ZBR09vNDZaOXFqMGt5V1hqVFV2dFNGVnZZb1h0WFBSdGliV0dmWEp6ajBHYXpadGF1L0FrYzJsYW5hM0Q2Y1MzMks4dGdDMFFiK0hKNHlNOSs0UFVkUDFPZk5VYVMzU1hsZlE4K2Z0TVE0MDZkcnFNTEphWDBzOXJYYTBYZlI5U1NmVms4TFQyK3I2ZGNDWFNMNThPSFA4QXFqM1AxR0Q5Y0VIb0RYbEh4WWcrTnVqZnRGNlY0LzhBQXZ3MTBlN00xbGU2ZlBZanhEYldsenJkcWlMSkh6S3hMTkd5bGhoQnRERlNRcExEWjhaK1B0UHU5WjhLL0REd3hhbExmV2RVbFM0dTlRWUIxa1dKblhZQTJDU0E1STlFd0JrNUhYcjhFZmgzWS9GeTcrTzkzRmN2cmIycVJpYTV2MzhpMUNSTkV6b21RRjNSa0JzNVViTXFGTE9XM3FZWEN5d3NvWXVITkdyQ1NTM3ZyWlh0S050dDlXcmFhNnJ1eXpOTUZnTVhYVldGNXhqT0RVb3Q4M05HTGhlMDRXVFV0Wkp0cmwwVjdNWjhPUGlCb1B4UzhGV1Bqdnd5dHlscGZvKzJHOHR6Rk5ESWp0SEpGSWgrNjZTSTZIQkl5cHdTTUVsZkE4bndML2FzL2FLMS93QVFmRzM5bnp4Y2svZ3Z4RjR1MW02OE8zRVhpRnJkSnJmKzBiaFJJc1pJS2hpcFlaQXlEbnZSWDVqaStBdUhLZUtxUldjVXFkcE5jc3RaUjErR1Q1bHF0bm90VnNmb2xYdy80ZlZXWE5uRkdrN3U4SmZGRCs1TDNsNzBkbm90VnNqOUZLK0JkYTF1OStDUDdiT3Jmc29lQjlpZURKYkk2M1kyRXc1MDJXWlBOZUczMmJWU0hjN1lWbFlxRGdNQlJSV25oQk9heit0QlBSMDd0ZE5KSzMzWGR2Vm5rY0FlOWlzVEI3ZXp2YnBkU1NUOVZkMmZTNzduMzc0d2FUVHZEVTkzYlNzSnJRSzhFemNzR0RBWno3Z2tIMUJJNkdyZWc2aE5xZWlXbXBUb3F5WEZ1a2poQWNBbFFTQmtuaWlpdjBGL0FmblUwdnFjWDE1bitVU2w0M3VwcmZTbU1UWUpUazk2K0k5WCtHVnQrMHorM2plL3M5ZkZYeHo0cW44QmFYOE1ZZGV1UENOaDRqbnRyVFZMdVRVSjdZaTZhTmhMSkVGQ01JdzZxR2pVOUN3WW9ya3phdFd3K1FZbWRLVGpKUWVxYlQrOUgzWEJrcFVzdnhsU0R0S05LVFRXalRWck5QZE5kR3RUN1IwVFJORzhOYU5hZUhQRG1rV3VuNmZwOXJIYldGaFpXNnhRMjBLS0ZTS05GQVZFVlFGQ2dBQUFBVVVVVi9PTGJrN3MrTWJjbmQ3bi85az0nLFxuICAgIDAuOTZcbiAgKSxcbl07XG5cbi8vIFRvd2VyIG9mIHJlY29yZHNcbmV4cG9ydCBjb25zdCBpY29uUmVkQnViYmxlV2hpdGVDaGVjayA9IG5ldyBJY29uKFxuICAnaWNvblJlZEJ1YmJsZVdoaXRlQ2hlY2snLFxuICAnLzlqLzRBQVFTa1pKUmdBQkFRQUFBUUFCQUFELzJ3QkRBQUlCQVFFQkFRSUJBUUVDQWdJQ0FnUURBZ0lDQWdVRUJBTUVCZ1VHQmdZRkJnWUdCd2tJQmdjSkJ3WUdDQXNJQ1FvS0Nnb0tCZ2dMREFzS0RBa0tDZ3IvMndCREFRSUNBZ0lDQWdVREF3VUtCd1lIQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnci93QUFSQ0FBUEFCQURBU0lBQWhFQkF4RUIvOFFBSHdBQUFRVUJBUUVCQVFFQUFBQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkFBQWdFREF3SUVBd1VGQkFRQUFBRjlBUUlEQUFRUkJSSWhNVUVHRTFGaEJ5SnhGREtCa2FFSUkwS3h3UlZTMGZBa00ySnlnZ2tLRmhjWUdSb2xKaWNvS1NvME5UWTNPRGs2UTBSRlJrZElTVXBUVkZWV1YxaFpXbU5rWldabmFHbHFjM1IxZG5kNGVYcURoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1SGk0K1RsNXVmbzZlcng4dlAwOWZiMytQbjYvOFFBSHdFQUF3RUJBUUVCQVFFQkFRQUFBQUFBQUFFQ0F3UUZCZ2NJQ1FvTC84UUF0UkVBQWdFQ0JBUURCQWNGQkFRQUFRSjNBQUVDQXhFRUJTRXhCaEpCVVFkaGNSTWlNb0VJRkVLUm9iSEJDU016VXZBVlluTFJDaFlrTk9FbDhSY1lHUm9tSnlncEtqVTJOemc1T2tORVJVWkhTRWxLVTFSVlZsZFlXVnBqWkdWbVoyaHBhbk4wZFhaM2VIbDZnb09FaFlhSGlJbUtrcE9VbFphWG1KbWFvcU9rcGFhbnFLbXFzck8wdGJhM3VMbTZ3c1BFeGNiSHlNbkswdFBVMWRiWDJObmE0dVBrNWVibjZPbnE4dlAwOWZiMytQbjYvOW9BREFNQkFBSVJBeEVBUHdENUIvWXgvWXk4R2ZHVHdGY1RwK3p2NG0rTS9pMjgwelZ2RUUraitIL0VWM3BQOWc2SHBtcXZwVHZCQmFUTExmelNUaFpKRi9ldUZtaFdLSWVYTTc2bjdXdjdOSHdZL1pxKzF3L0Rud3BwZmhyeFY0U09teGZFZlFiVDRoWHV0d1FDOHZQc2Nsazg5MkdSdFNzcmlld0V5MnNyUUlzdDFHelNTMjcrVjRiNGErSmY3UnY3UE9xLzhKdCt6ejQzYTB1TEc3bTFEVFhiVnIyejFEUjVKRmwrMUxwOTVhekk4QzNBbGxEUnNTZ01zdU5vbWxETDRWOFNXZngrOFEyR3VMcGpXM2czU1pFdnRHc05TczRHdWRSdWxWNDF1Sjlwa0VNY2U5d2tLT2R6Z083SGFpandKNVZ4RkhQa3J2MmNwTnQ4M3VLQ3RaS05rK1ozdHJkYU45ZFAzVjUvNFVWdkRTZE4wb1J4Y0tNSXhpcVRXSW5pWlg1Nms2N2xLSHNJY3JtbEJRay9hUnB0V2kzUC85az0nLFxuICAwLjk2XG4pO1xuZXhwb3J0IGNvbnN0IGljb25HcmVlbkJ1YmJsZUJsdWVHZW0gPSBuZXcgSWNvbihcbiAgJ2ljb25SZWRCdWJibGVXaGl0ZUNoZWNrJyxcbiAgJy85ai80QUFRU2taSlJnQUJBUUFBQVFBQkFBRC8yd0JEQUFJQkFRRUJBUUlCQVFFQ0FnSUNBZ1FEQWdJQ0FnVUVCQU1FQmdVR0JnWUZCZ1lHQndrSUJnY0pCd1lHQ0FzSUNRb0tDZ29LQmdnTERBc0tEQWtLQ2dyLzJ3QkRBUUlDQWdJQ0FnVURBd1VLQndZSENnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ29LQ2dvS0Nnb0tDZ3Ivd0FBUkNBQVZBQm9EQVNJQUFoRUJBeEVCLzhRQUh3QUFBUVVCQVFFQkFRRUFBQUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJBQUFnRURBd0lFQXdVRkJBUUFBQUY5QVFJREFBUVJCUkloTVVFR0UxRmhCeUp4RkRLQmthRUlJMEt4d1JWUzBmQWtNMkp5Z2drS0ZoY1lHUm9sSmljb0tTbzBOVFkzT0RrNlEwUkZSa2RJU1VwVFZGVldWMWhaV21Oa1pXWm5hR2xxYzNSMWRuZDRlWHFEaElXR2g0aUppcEtUbEpXV2w1aVptcUtqcEtXbXA2aXBxckt6dExXMnQ3aTV1c0xEeE1YR3g4akp5dExUMU5YVzE5aloydUhpNCtUbDV1Zm82ZXJ4OHZQMDlmYjMrUG42LzhRQUh3RUFBd0VCQVFFQkFRRUJBUUFBQUFBQUFBRUNBd1FGQmdjSUNRb0wvOFFBdFJFQUFnRUNCQVFEQkFjRkJBUUFBUUozQUFFQ0F4RUVCU0V4QmhKQlVRZGhjUk1pTW9FSUZFS1JvYkhCQ1NNelV2QVZZbkxSQ2hZa05PRWw4UmNZR1JvbUp5Z3BLalUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2Z29PRWhZYUhpSW1La3BPVWxaYVhtSm1hb3FPa3BhYW5xS21xc3JPMHRiYTN1TG02d3NQRXhjYkh5TW5LMHRQVTFkYlgyTm5hNHVQazVlYm42T25xOHZQMDlmYjMrUG42LzlvQURBTUJBQUlSQXhFQVB3RDlhZmdsY2Zzci9zbGZBblF2MmNQMksvZy9hMkZoWldDV1dpZUh0UDAveWxNcEFHKzVra0lhNG1kbVozbFptYVJ0elBJTnhldkVQaVA4V05PK0JsM2NlRmZqWmU2eGFlSmJlZWJkby9oc0pmcDVCSmEyZnpwcGJiRFBFWXk2N2RxU015bzh5cDVwOFM4VC90d1hIN05YN1RlamVNZkZQaEdUVWRHMXpRclhUdkJVbHpxRFFXMmxhOGs5MUplSTVDTkc4MXpBMWtzRFNnc0JhWEtSbU16eXJONUgrMG4rMHQ0bjhmZkdyV3ZIbXFlSFpyZzYxTWw1RkpQZHVBaU1nL2NvV1Q1a2hJTUFJNFBrMTR2Z1I0RlpQNCs4UFliaUhqQ25UeE5Cd21xVktqT1ZLTkdTbWxLTXVXb3FqcVN0elZPZDl1Uld2S1g4eGVMUGlybXVTcW5nTW1YKzEzVW56Ujl4MG5GM2NYS3lrK2JsV2tuYTBsWldQZlBnSiszVm9QeG8rSW1wL0RhL3RMdncvcWtOdzdhRGIzK3BCMjFTM1Jjc2RwQzdKMUt1WGdYekFxQU1IYkxCUFdyalIvQ043Y1NYbC84QUQvdy9jVHpPWG1ubTBlSm5rY25KWmpqa2s1SlBxYS9MZnhuOFp0UHRmaVFKZkVId2ZhN3NHdHJGVHFkcGV6MitvalU1SnBCYjJlbUg3T0htdm4yUXlKSmJ2aUVoR2FTTm96dC9RcjRYL0V2Vk5OK0duaDNUdmlycW8xRHhSYjZGYVIrSkwrd3R3c0Z6ZnJDZ3VKWXdBbUVhVU95amF2Qkh5cjBIODhmVEI4QitDUEJ2aW5DVnVHcW5zOFBpNHkvMmFVM0tkS1VPVlNjWk51VXFVbS9kYzI1S1NhVGtyVzkvdzM0eHovUHNxbExOcVhzNmtlVnFhY1hHYWtyNmNyZHBSMDVrMUhTVVhiVStkZGY4ZStEZmpoOFNmRVg3SjN4QytHZHRxR2l6YVN6WDh0MWVsbHVGeXBBQ0JBWTJERU1ycSs1R1ZXVWdnRWZOYi9IL0FGNzlubjR4K0ovZ1g0Z3NQK0V2UHc5TDNHbGVJOVJlT0crdTdVMkMzc1VWdzRqYnpKa0FFZm5EQWJsL0xETTI0b3I3VDZJT2Racnc5NHF3eWJMNjBvWVhFNFNsVXEwNzNqS281MG91ZHBYdEp4bEpYamJSMjZLMnZHdkRlU1oza2RXT05vcWZzNmZQSFZweGs3SnROTk96VDFWN1BTNjBWby8yS2ZpWmJhL29IaTc5c240bWVIajRpOFdhZEc4K2tDZTVXS0RUb3JoMkU0Z2pXTXFrOHJCakpQakxJUkdxeG9HRGV3V3YvQlFxUzR0WTUyK0VnQmVNTVFOZTZaR2YrZUZGRmZFK0lXWDRmamZqdk5zeXp6bXIxbFhVRktVNSs3QlU0dFFpbEpSakZOdHBKSks3c2ZjWWZKOHR3ZEowS0ZKUmhDeWlsb2tySjJTOVQvL1onLFxuICAwLjk2XG4pO1xuIiwiaW1wb3J0IHsgR3JvdXBQYWdlLCBQYWdlIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgTWVzc2FnZVdpbmRvdyB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgZG93bmxvYWREYXRhTm9MYW5ndWFnZVRpdGxlOiBNZXNzYWdlV2luZG93ID0ge1xuICBuYW1lOiAnZG93bmxvYWREYXRhTm9MYW5ndWFnZVRpdGxlJyxcbiAgeDogMjYwLFxuICB5OiA4OCxcbiAgd2lkdGg6IDExMCxcbiAgaGVpZ2h0OiAyMCxcblxuICB0YXJnZXRZOiAxMCxcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDI0OSwgZzogMjQ5LCBiOiAyNTAgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogNDUsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogNSxcbn07XG5leHBvcnQgY29uc3QgZG93bmxvYWREYXRhTm9MYW5ndWFnZTogTWVzc2FnZVdpbmRvdyA9IHtcbiAgbmFtZTogJ2Rvd25sb2FkRGF0YU5vTGFuZ3VhZ2UnLFxuICB4OiAyMjYsXG4gIHk6IDEyNyxcbiAgd2lkdGg6IDE4MCxcbiAgaGVpZ2h0OiAxMixcblxuICB0YXJnZXRZOiA0LFxuICBsb29raW5nRm9yQ29sb3I6IHsgcjogMjAyLCBnOiAxOTMsIGI6IDE4MyB9LFxuICB0YXJnZXRDb2xvckNvdW50OiA0MCxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA1LFxufTtcblxuLy8gZXhwb3J0IGNvbnN0IHRlcm1PZlNlcnZpY2VNZXNzYWdlOiBNZXNzYWdlV2luZG93ID0ge1xuLy8gICBuYW1lOiAndGVybU9mU2VydmljZU1lc3NhZ2UnLFxuLy8gICB4OiAxNjgsXG4vLyAgIHk6IDEyNyxcbi8vICAgd2lkdGg6IDE0MCxcbi8vICAgaGVpZ2h0OiA2LFxuXG4vLyAgIHRhcmdldFk6IDQsXG4vLyAgIGxvb2tpbmdGb3JDb2xvcjogeyByOiAzNywgZzogMzcsIGI6IDM3IH0sXG4vLyAgIHRhcmdldENvbG9yQ291bnQ6IDMyLFxuLy8gICB0YXJnZXRDb2xvclRocmVhc2hvbGQ6IDUsXG4vLyB9O1xuXG4vLyBleHBvcnQgY29uc3QgZmFjZWJvb2tSZWZyZXNoVG9rZW5FeHBpcmVkTG9nb3V0OiBNZXNzYWdlV2luZG93ID0ge1xuLy8gICBuYW1lOiAnZmFjZWJvb2tSZWZyZXNoVG9rZW5FeHBpcmVkTG9nb3V0Jyxcbi8vICAgeDogMjIwLFxuLy8gICB5OiAxMzUsXG4vLyAgIHdpZHRoOiAxOTYsXG4vLyAgIGhlaWdodDogMTQsXG5cbi8vICAgdGFyZ2V0WTogNCxcbi8vICAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDE0MCwgZzogMTM1LCBiOiAxMjggfSxcbi8vICAgdGFyZ2V0Q29sb3JDb3VudDogMTYsXG4vLyAgIHRhcmdldENvbG9yVGhyZWFzaG9sZDogNSxcbi8vIH07XG5cbmV4cG9ydCBjb25zdCBhbkVycm9ySGFzT2NjdXJlZE1lc3NhZ2VTY3JlZW46IE1lc3NhZ2VXaW5kb3cgPSB7XG4gIG5hbWU6ICdhbkVycm9ySGFzT2NjdXJlZE1lc3NhZ2VTY3JlZW4nLFxuICB4OiAxOTQsXG4gIHk6IDE3NixcbiAgd2lkdGg6IDIzNixcbiAgaGVpZ2h0OiA3LFxuXG4gIHRhcmdldFk6IDQsXG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiA4MCwgZzogODAsIGI6IDgwIH0sXG4gIHRhcmdldENvbG9yQ291bnQ6IDI4LFxuICB0YXJnZXRDb2xvclRocmVhc2hvbGQ6IDUsXG59O1xuXG5leHBvcnQgY29uc3Qgc2tpcFR1dG9yaWFsTWVzc2FnZVNjcmVlbjogTWVzc2FnZVdpbmRvdyA9IHtcbiAgbmFtZTogJ3NraXBUdXRvcmlhbE1lc3NhZ2VTY3JlZW4nLFxuICB4OiAxOTQsXG4gIHk6IDE2NixcbiAgd2lkdGg6IDIzOCxcbiAgaGVpZ2h0OiAxMixcblxuICB0YXJnZXRZOiA2LFxuICBsb29raW5nRm9yQ29sb3I6IHsgcjogODAsIGc6IDgwLCBiOiA4MCB9LFxuICB0YXJnZXRDb2xvckNvdW50OiA0OCxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA1LFxufTtcblxuLy8gXCJBbiB1bmtub3duIGVycm9yIGhhcyBvY2N1cmVkIHdoaWxlIHByb2Nlc3NpbmcgdGhpcyByZXF1ZXN0XCIg5YWI55So562J55qE77yM5Y+v6IO95pyD6ZyA6KaB6YeN6ZaL6YGK5oiyXG5leHBvcnQgY29uc3QgYW5Vbmtub3duRXJyb3JIYXNPY2N1clByb2Nlc3NpbmdSZXF1ZXN0OiBNZXNzYWdlV2luZG93ID0ge1xuICBuYW1lOiAnYW5Vbmtub3duRXJyb3JIYXNPY2N1clByb2Nlc3NpbmdSZXF1ZXN0JyxcbiAgeDogMTkwLFxuICB5OiAxNjAsXG4gIHdpZHRoOiAyNTQsXG4gIGhlaWdodDogMTIsXG5cbiAgdGFyZ2V0WTogNixcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDgwLCBnOiA4MCwgYjogODAgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogNjcsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogNSxcbn07XG5cbi8vIGV4cG9ydCBjb25zdCBhblVua25vd25FcnJvckhhc09jY3VyTWVzc2FnZVNjcmVlbjogTWVzc2FnZVdpbmRvdyA9IHtcbi8vICAgbmFtZTogJ2FuVW5rbm93bkVycm9ySGFzT2NjdXJNZXNzYWdlU2NyZWVuJyxcbi8vICAgeDogMjIyLFxuLy8gICB5OiAxNjAsXG4vLyAgIHdpZHRoOiAxOTgsXG4vLyAgIGhlaWdodDogMjUsXG5cbi8vICAgdGFyZ2V0WTogNCxcbi8vICAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDgwLCBnOiA4MCwgYjogODAgfSxcbi8vICAgdGFyZ2V0Q29sb3JDb3VudDogNzksXG4vLyAgIHRhcmdldENvbG9yVGhyZWFzaG9sZDogMyxcbi8vIH07XG5cbmV4cG9ydCBjb25zdCB0aGVOZXR3b3JrSXNVbnN0YWJsZU1lc3NhZ2VTY3JlZW46IE1lc3NhZ2VXaW5kb3cgPSB7XG4gIG5hbWU6ICd0aGVOZXR3b3JrSXNVbnN0YWJsZU1lc3NhZ2VTY3JlZW4nLFxuICB4OiAyMjIsXG4gIHk6IDE2MCxcbiAgd2lkdGg6IDE5OCxcbiAgaGVpZ2h0OiAyNSxcblxuICB0YXJnZXRZOiA0LFxuICBsb29raW5nRm9yQ29sb3I6IHsgcjogODAsIGc6IDgwLCBiOiA4MCB9LFxuICB0YXJnZXRDb2xvckNvdW50OiA1MSxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA1LFxufTtcblxuZXhwb3J0IGNvbnN0IHRoZVJlbG9naW5JbnRvQW5vdGhlckRldmljZU1lc3NhZ2VTY3JlZW46IE1lc3NhZ2VXaW5kb3cgPSB7XG4gIG5hbWU6ICd0aGVSZWxvZ2luSW50b0Fub3RoZXJEZXZpY2VNZXNzYWdlU2NyZWVuJyxcbiAgeDogMTkwLFxuICB5OiAxNjAsXG4gIHdpZHRoOiAyNDYsXG4gIGhlaWdodDogMTIsXG5cbiAgdGFyZ2V0WTogNixcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDgwLCBnOiA4MCwgYjogODAgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogNjgsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogMSxcbn07XG5cbmV4cG9ydCBjb25zdCBtZXNzYWdlTm90aWZ5UXVpdDogTWVzc2FnZVdpbmRvdyA9IHtcbiAgbmFtZTogJ21lc3NhZ2VOb3RpZnlRdWl0JyxcbiAgeDogMjIwLFxuICB5OiAxNjIsXG4gIHdpZHRoOiAxOTYsXG4gIGhlaWdodDogMTIsXG5cbiAgdGFyZ2V0WTogNCxcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDk1LCBnOiA5NSwgYjogOTUgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogNDIsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogOCxcbn07XG5leHBvcnQgY29uc3QgbWVzc2FnZU5vdGlmeVF1aXQyOiBNZXNzYWdlV2luZG93ID0ge1xuICBuYW1lOiAnbWVzc2FnZU5vdGlmeVF1aXQyJyxcbiAgeDogMjM0LFxuICB5OiAxODQsXG4gIHdpZHRoOiAxODAsXG4gIGhlaWdodDogMTIsXG5cbiAgdGFyZ2V0WTogNCxcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDE2OCwgZzogMTYyLCBiOiAxNTUgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogMzYsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogOCxcbn07XG5cbmV4cG9ydCBjb25zdCBtZXNzYWdlTm90aWZ5UXVpdDM6IE1lc3NhZ2VXaW5kb3cgPSB7XG4gIG5hbWU6ICdtZXNzYWdlTm90aWZ5UXVpdDMnLFxuICB4OiAyMDAsXG4gIHk6IDE4NCxcbiAgd2lkdGg6IDI0MCxcbiAgaGVpZ2h0OiAxMixcblxuICB0YXJnZXRZOiA2LFxuICBsb29raW5nRm9yQ29sb3I6IHsgcjogMTMxLCBnOiAxMjgsIGI6IDEyNSB9LFxuICB0YXJnZXRDb2xvckNvdW50OiA2NyxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA0LFxufTtcbmV4cG9ydCBjb25zdCBtZXNzYWdlTm90aWZ5UXVpdFJlZHJvaWQ6IE1lc3NhZ2VXaW5kb3cgPSB7XG4gIG5hbWU6ICdtZXNzYWdlTm90aWZ5UXVpdFJlZHJvaWQnLFxuICB4OiAyMDgsXG4gIHk6IDE4NCxcbiAgd2lkdGg6IDI0MCxcbiAgaGVpZ2h0OiAxMixcblxuICB0YXJnZXRZOiA2LFxuICBsb29raW5nRm9yQ29sb3I6IHsgcjogMTcxLCBnOiAxNjYsIGI6IDE2MCB9LFxuICB0YXJnZXRDb2xvckNvdW50OiA0NyxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA0LFxufTtcblxuZXhwb3J0IGNvbnN0IG1lc3NhZ2VDb29raWVEcnlpbmdPblN1bmJlZDogTWVzc2FnZVdpbmRvdyA9IHtcbiAgbmFtZTogJ21lc3NhZ2VDb29raWVEcnlpbmdPblN1bmJlZCcsXG4gIHg6IDIwMSxcbiAgeTogMTcyLFxuICB3aWR0aDogMjI2LFxuICBoZWlnaHQ6IDEyLFxuXG4gIHRhcmdldFk6IDYsXG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiAxNzIsIGc6IDE2NSwgYjogMTU4IH0sXG4gIHRhcmdldENvbG9yQ291bnQ6IDY4LFxuICB0YXJnZXRDb2xvclRocmVhc2hvbGQ6IDgsXG59O1xuZXhwb3J0IGNvbnN0IG1lc3NhZ2VUZWFtRG9udE1hdGNoVG9TQ1JvdzE6IE1lc3NhZ2VXaW5kb3cgPSB7XG4gIG5hbWU6ICdtZXNzYWdlVGVhbURvbnRNYXRjaFRvU0NSb3cxJyxcbiAgeDogMjM0LFxuICB5OiAxNjAsXG4gIHdpZHRoOiAxNDAsXG4gIGhlaWdodDogMTIsXG5cbiAgdGFyZ2V0WTogNixcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDE1NSwgZzogMTUwLCBiOiAxNDQgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogNDcsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogNyxcbn07XG5leHBvcnQgY29uc3QgbWVzc2FnZVRlYW1Eb250TWF0Y2hUb1NDUm93MjogTWVzc2FnZVdpbmRvdyA9IHtcbiAgbmFtZTogJ21lc3NhZ2VUZWFtRG9udE1hdGNoVG9TQ1JvdzInLFxuICB4OiAyNDAsXG4gIHk6IDE3MyxcbiAgd2lkdGg6IDE2MCxcbiAgaGVpZ2h0OiAxMixcblxuICB0YXJnZXRZOiA2LFxuICBsb29raW5nRm9yQ29sb3I6IHsgcjogOTUsIGc6IDk1LCBiOiA5NSB9LFxuICB0YXJnZXRDb2xvckNvdW50OiAzOCxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA4LFxufTtcblxuZXhwb3J0IGNvbnN0IHVuZmluaXNoZWRQVlBCYXR0bGVNZXNzYWdlU2NyZWVuOiBNZXNzYWdlV2luZG93ID0ge1xuICBuYW1lOiAndW5maW5pc2hlZFBWUEJhdHRsZU1lc3NhZ2VTY3JlZW4nLFxuICB4OiAyNDAsXG4gIHk6IDE2MCxcbiAgd2lkdGg6IDE2MCxcbiAgaGVpZ2h0OiA2LFxuXG4gIHRhcmdldFk6IDQsXG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiAyNDcsIGc6IDIzNSwgYjogMjIyIH0sXG4gIHRhcmdldENvbG9yQ291bnQ6IDEyOCxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA1LFxufTtcbi8vIFRoZXJlJ3JlIGVtcHR5IHNwb3RzIG9uIHRoZSB0ZWFtIVxuZXhwb3J0IGNvbnN0IGJvdW50eUFkZE1vcmVDb29raWVzTWVzc2FnZVNjcmVlbiA9IHtcbiAgbmFtZTogJ2JvdW50eUFkZE1vcmVDb29raWVzTWVzc2FnZVNjcmVlbicsXG4gIHg6IDE5MSxcbiAgeTogMTc3LFxuICB3aWR0aDogMjQ3LFxuICBoZWlnaHQ6IDEyLFxuXG4gIHRhcmdldFk6IDYsXG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiA4MCwgZzogODAsIGI6IDgwIH0sXG4gIHRhcmdldENvbG9yQ291bnQ6IDU0LFxuICB0YXJnZXRDb2xvclRocmVhc2hvbGQ6IDUsXG59O1xuZXhwb3J0IGNvbnN0IGJvdW50eUhhc0V4cGlyZWQgPSB7XG4gIG5hbWU6ICdib3VudHlIYXNFeHBpcmVkJyxcbiAgeDogMjI0LFxuICB5OiAxNjYsXG4gIHdpZHRoOiAxODYsXG4gIGhlaWdodDogMTIsXG5cbiAgdGFyZ2V0WTogNixcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDg5LCBnOiA4MCwgYjogNzMgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogMzcsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogNSxcbn07XG5cbmV4cG9ydCBjb25zdCB1bmZpbmlzaGVkU3VwZXJNYXloZW1CYXR0bGVNZXNzYWdlU2NyZWVuID0ge1xuICBuYW1lOiAndW5maW5pc2hlZFN1cGVyTWF5aGVtQmF0dGxlTWVzc2FnZVNjcmVlbicsXG4gIHg6IDI0MCxcbiAgeTogMTY2LFxuICB3aWR0aDogMTYwLFxuICBoZWlnaHQ6IDEyLFxuXG4gIHRhcmdldFk6IDYsXG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiAyMjcsIGc6IDIxOCwgYjogMjA5IH0sXG4gIHRhcmdldENvbG9yQ291bnQ6IDg0LFxuICB0YXJnZXRDb2xvclRocmVhc2hvbGQ6IDUsXG59O1xuLy8gWW91ciBtb3N0IHJlY2VudCBiYXR0bGUgd2FzIG5vdCBmaW5pc2hlZCBkdWUgdG8gYW4gYWJub3JtYWwgZXhpdC4gSG93ZXZlciwgdGhlIHByZXZpb3VzIGxldmVsJ3MgYmF0dGxlIHJlY29yZCB3YXMgc2F2ZWRcbmV4cG9ydCBjb25zdCBiYXR0bGVBYm5vcm1hbEJ1dExhc3RXYXNTYXZlZE1lc3NhZ2VTY3JlZW4gPSB7XG4gIG5hbWU6ICdiYXR0bGVBYm5vcm1hbEJ1dExhc3RXYXNTYXZlZE1lc3NhZ2VTY3JlZW4nLFxuICB4OiAxOTcsXG4gIHk6IDE3MyxcbiAgd2lkdGg6IDI0MixcbiAgaGVpZ2h0OiAxMixcblxuICB0YXJnZXRZOiA2LFxuICBsb29raW5nRm9yQ29sb3I6IHsgcjogMjI3LCBnOiAyMTgsIGI6IDIwOSB9LFxuICB0YXJnZXRDb2xvckNvdW50OiA4NixcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA1LFxufTtcbi8vIFlvdXIgbGFzdCBiYXR0bGUgd2FzIG5vdCBmaW5pc2hlZCBwcm9wZXJseSwgYW5kIHRoZSBHdWlsZCBCYXR0bGUgYXR0ZW1wdCB3YXMgbm90IHVzZWQhXG5leHBvcnQgY29uc3QgZ3VpbGRCYXR0bGVBdHRlbXB0Tm90VXNlZE1lc3NhZ2VTY3JlZW4gPSB7XG4gIG5hbWU6ICdndWlsZEJhdHRsZUF0dGVtcHROb3RVc2VkTWVzc2FnZVNjcmVlbicsXG4gIHg6IDIwNSxcbiAgeTogMTgwLFxuICB3aWR0aDogMjIwLFxuICBoZWlnaHQ6IDEwLFxuXG4gIHRhcmdldFk6IDUsXG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiAyMjcsIGc6IDIxOCwgYjogMjA5IH0sXG4gIHRhcmdldENvbG9yQ291bnQ6IDE1MixcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA1LFxufTtcbi8vIEd1aWxkIGRyYWdvbjogQmF0dGxlIENvbXBsZXRlZCEgSWYgeW91IGRpZG4ndCBpbmZsaWN0IGFueSBkYW1hZ2UgdG8gdGhlIEd1aWxkIGJhdHRsZSBib3NzIG1vbnN0ZXJzLCB5b3Ugd29uJ3QgYmUgYWJsZSB0byBjbGFpbSB0aGUgaW5kaXZpZHVhbCByZXdhcmQgd2hlbiB0aGUgYmF0dGxlIGVuZHMuXG5leHBvcnQgY29uc3QgYmF0dGxlQ29tcGxldGVkTm90SW5mbGljdERhbWFnZU1lc3NhZ2VTY3JlZW4gPSB7XG4gIG5hbWU6ICdiYXR0bGVDb21wbGV0ZWROb3RJbmZsaWN0RGFtYWdlTWVzc2FnZVNjcmVlbicsXG4gIHg6IDE5MixcbiAgeTogMTkyLFxuICB3aWR0aDogMjUyLFxuICBoZWlnaHQ6IDgsXG5cbiAgdGFyZ2V0WTogNCxcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDEzMSwgZzogMTI4LCBiOiAxMjQgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogNDYsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogNCxcbn07XG5cbi8vIEhvdCBhaXIgYmFsbG9uOiBhIG5ldyBhcmVhIGlzIGF2YWlsYWJsZSBmb3IgZXhwbG9yaW5nISBEbyB5b3Ugc3RpbGwgd2FudCB0byBleHBsb3JlIHRoaXMgYXJlYT9cbmV4cG9ydCBjb25zdCBuZXdBcmVhQXZhaWxhYmxlTWVzc2FnZVNjcmVlbiA9IHtcbiAgbmFtZTogJ25ld0FyZWFBdmFpbGFibGVNZXNzYWdlU2NyZWVuJyxcbiAgeDogMTkyLFxuICB5OiAxNzEsXG4gIHdpZHRoOiAyNDcsXG4gIGhlaWdodDogMTQsXG5cbiAgdGFyZ2V0WTogNyxcbiAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDgwLCBnOiA4MCwgYjogODAgfSxcbiAgdGFyZ2V0Q29sb3JDb3VudDogNTcsXG4gIHRhcmdldENvbG9yVGhyZWFzaG9sZDogNCxcbn07XG5cbi8vIFlvdXIgbGFzdCBiYXR0bGUgd2FzIG5vdCBmaW5pc2hlZCBwcnBlcmx5LCBhbmQgdGhlIFNlYXJpbmcgTGV5cyB3ZXJlIG5vdCB1c2VkIVxuZXhwb3J0IGNvbnN0IFRPU0NzZWFyaW5nS2V5c05vdFVzZWRNZXNzYWdlU2NyZWVuID0ge1xuICBuYW1lOiAnVE9TQ3NlYXJpbmdLZXlzTm90VXNlZE1lc3NhZ2VTY3JlZW4nLFxuICB4OiAxOTgsXG4gIHk6IDE4MCxcbiAgd2lkdGg6IDI0MCxcbiAgaGVpZ2h0OiA5LFxuXG4gIHRhcmdldFk6IDUsXG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiAyMjcsIGc6IDIxOCwgYjogMjA5IH0sXG4gIHRhcmdldENvbG9yQ291bnQ6IDE5MCxcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiA1LFxufTtcbiIsImltcG9ydCB7IEdyb3VwUGFnZSwgUGFnZSwgWFkgfSBmcm9tICdSZXJvdXRlcic7XG5cbmNvbnN0IHJmcGFnZVdvb2RGYXJtID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VXb29kRmFybScsXG4gIFtcbiAgICB7IHg6IDU5NiwgeTogMTE4LCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogNTI3LCB5OiA4NiwgcjogMTQwLCBnOiA4MSwgYjogNTcgfSxcbiAgICAvLyB7IHg6IDUyMCwgeTogOTEsIHI6IDI0OSwgZzogMTkyLCBiOiAxMzkgfSwgIC8vIE1lbXVcbiAgICB7IHg6IDUyMCwgeTogOTEsIHI6IDIyMiwgZzogMTYzLCBiOiAxMjEgfSwgLy8gUmVkcm9pZFxuICAgIHsgeDogNDI3LCB5OiA3OSwgcjogMTQwLCBnOiA4MSwgYjogNTcgfSxcbiAgXSxcbiAgeyB4OiA1OTYsIHk6IDExOCB9XG4pO1xuXG5jb25zdCByZnBhZ2VCZWFuRmFybSA9IG5ldyBQYWdlKFxuICAncmZwYWdlQmVhbkZhcm0nLFxuICBbXG4gICAgeyB4OiA2MDIsIHk6IDEyMiwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDUyNywgeTogODMsIHI6IDAsIGc6IDIwNCwgYjogMjIzIH0sXG4gICAgeyB4OiA1MjUsIHk6IDg4LCByOiAxLCBnOiAyNTIsIGI6IDI0OCB9LFxuICAgIHsgeDogNDE0LCB5OiA4MiwgcjogMCwgZzogMjA3LCBiOiAyMjAgfSxcbiAgXSxcbiAgeyB4OiA2MDIsIHk6IDEyMiB9XG4pO1xuY29uc3QgcmZwYWdlU3VnYXJGYXJtID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VTdWdhckZhcm0nLFxuICBbXG4gICAgeyB4OiA2MDAsIHk6IDExOCwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDUzMSwgeTogOTIsIHI6IDEzNSwgZzogMTUxLCBiOiAyMDAgfSxcbiAgICB7IHg6IDQxOSwgeTogNzEsIHI6IDI0NCwgZzogMjUwLCBiOiAyNTMgfSxcbiAgICB7IHg6IDQxMSwgeTogODksIHI6IDIzOSwgZzogMjQwLCBiOiAyNDkgfSxcbiAgXSxcbiAgeyB4OiA2MDAsIHk6IDExOCB9XG4pO1xuY29uc3QgcmZwYWdlUG93ZGVyRmFybSA9IG5ldyBQYWdlKFxuICAncmZwYWdlUG93ZGVyRmFybScsXG4gIFtcbiAgICB7IHg6IDU5NiwgeTogMTIwLCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogNTIzLCB5OiA4NywgcjogMjMxLCBnOiAxNTcsIGI6IDc0IH0sXG4gICAgeyB4OiA0MzUsIHk6IDkwLCByOiAxNTYsIGc6IDExNywgYjogNDkgfSxcbiAgICB7IHg6IDQyMywgeTogODMsIHI6IDIzOSwgZzogMTYyLCBiOiA4MiB9LFxuICBdLFxuICB7IHg6IDU5NiwgeTogMTIwIH1cbik7XG5jb25zdCByZnBhZ2VCYXJyeUZhcm0gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUJhcnJ5RmFybScsXG4gIFtcbiAgICB7IHg6IDU5NywgeTogMTE4LCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogNTI3LCB5OiA5MCwgcjogMTk4LCBnOiAzNiwgYjogNDEgfSxcbiAgICB7IHg6IDQyOCwgeTogNzYsIHI6IDI4LCBnOiAxMTcsIGI6IDE2IH0sXG4gICAgeyB4OiA0MTMsIHk6IDgyLCByOiAyMDAsIGc6IDI2LCBiOiAzMSB9LFxuICBdLFxuICB7IHg6IDU5NywgeTogMTE4IH1cbik7XG5jb25zdCByZnBhZ2VNaWxrRmFybSA9IG5ldyBQYWdlKFxuICAncmZwYWdlTWlsa0Zhcm0nLFxuICBbXG4gICAgeyB4OiA1OTcsIHk6IDExOCwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDUyMSwgeTogNzksIHI6IDIxNCwgZzogMTM4LCBiOiA5OSB9LFxuICAgIHsgeDogNTI2LCB5OiA5MCwgcjogMjU1LCBnOiAyNTUsIGI6IDIzOSB9LFxuICAgIHsgeDogNDI1LCB5OiA4NSwgcjogMjU1LCBnOiAyNTUsIGI6IDI0MiB9LFxuICBdLFxuICB7IHg6IDU5NywgeTogMTE4IH1cbik7XG5jb25zdCByZnBhZ2VDb3R0b21GYXJtID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VDb3R0b21GYXJtJyxcbiAgW1xuICAgIHsgeDogNTk2LCB5OiAxMjAsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiA1MjgsIHk6IDg3LCByOiAyNTQsIGc6IDIzMSwgYjogMjUxIH0sXG4gICAgeyB4OiA0MjgsIHk6IDkyLCByOiAyNTUsIGc6IDI0MSwgYjogMjU1IH0sXG4gICAgeyB4OiA0MjMsIHk6IDk2LCByOiAyMDIsIGc6IDQ5LCBiOiAxMzYgfSxcbiAgXSxcbiAgeyB4OiA1OTYsIHk6IDEyMCB9XG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlSW5LaW5nZG9tVmlsbGFnZSA9IG5ldyBQYWdlKCdyZnBhZ2VJbktpbmdkb21WaWxsYWdlJywgW1xuICB7IHg6IDM5LCB5OiAzMTMsIHI6IDI1NSwgZzogMTAxLCBiOiAxNTYgfSxcbiAgeyB4OiAyNCwgeTogMzIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTUsIHk6IDMyNywgcjogMjU1LCBnOiAyMjcsIGI6IDI0NyB9LFxuICB7IHg6IDM3NywgeTogMzIxLCByOiAxMjEsIGc6IDUyLCBiOiA1MiB9LFxuICB7IHg6IDQxOCwgeTogMzIxLCByOiAxMzIsIGc6IDE2LCBiOiA4IH0sXG4gIHsgeDogNDY2LCB5OiAzMTgsIHI6IDIzMSwgZzogMTY3LCBiOiA4NSB9LFxuICB7IHg6IDk2LCB5OiAzMjcsIHI6IDI1NCwgZzogMjQ0LCBiOiAxNTggfSxcbl0pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZU1vdmluZ1N0cnVjdHVyZXMgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZU1vdmluZ1N0cnVjdHVyZXMnLFxuICBbXG4gICAgeyB4OiA2MTUsIHk6IDIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1MTgsIHk6IDE2LCByOiAyNDEsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA0MDYsIHk6IDIwLCByOiAyNTUsIGc6IDIxMSwgYjogMCB9LFxuICAgIHsgeDogMzksIHk6IDIxLCByOiA5OSwgZzogMTc0LCBiOiA0OSB9LFxuICAgIHsgeDogMjMsIHk6IDIwLCByOiAxMzQsIGc6IDIyMCwgYjogODAgfSxcbiAgICB7IHg6IDMyLCB5OiA4MSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTYsIHk6IDE4NywgcjogMTMyLCBnOiAyMTEsIGI6IDMzIH0sXG4gICAgeyB4OiA0MiwgeTogMzQzLCByOiA3NCwgZzogODUsIGI6IDEyMyB9LFxuICAgIHsgeDogMzYsIHk6IDM0NywgcjogMjA3LCBnOiAyMDcsIGI6IDIwOCB9LFxuICBdLFxuICB7IHg6IDYxNSwgeTogMjEgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VLaW5nZG9tRGVjb3JhdGluZ0V4cGFuZCA9IG5ldyBQYWdlKFxuICAncmZwYWdlS2luZ2RvbURlY29yYXRpbmdFeHBhbmQnLFxuICBbXG4gICAgeyB4OiA2MjIsIHk6IDE4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1MTcsIHk6IDIyLCByOiAwLCBnOiAxODIsIGI6IDI1NSB9LFxuICAgIHsgeDogNDA1LCB5OiAxOSwgcjogMjU1LCBnOiAyMTEsIGI6IDAgfSxcbiAgICB7IHg6IDM5LCB5OiAyNywgcjogOTIsIGc6IDE2NiwgYjogNDMgfSxcbiAgICB7IHg6IDQ4LCB5OiAxODEsIHI6IDE0MCwgZzogMjExLCBiOiAzMyB9LFxuICAgIHsgeDogMjUsIHk6IDIzOCwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDUsIHk6IDM0OCwgcjogNDcsIGc6IDUyLCBiOiA3NSB9LFxuICAgIHsgeDogNTY1LCB5OiAzMzYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQyLCB5OiAyNiwgcjogOTcsIGc6IDE3MywgYjogNDggfSxcbiAgXSxcbiAgeyB4OiA2MjIsIHk6IDE4IH1cbik7XG5cbmV4cG9ydCBjb25zdCBwYWdlTG9naW5GYWNlYm9vayA9IFtcbiAgeyB4OiAxODYsIHk6IDcyLCByOiA1OSwgZzogODksIGI6IDE1MiB9LFxuICB7IHg6IDQ4NCwgeTogNzEsIHI6IDU5LCBnOiA4OSwgYjogMTUyIH0sXG4gIHsgeDogMzc2LCB5OiAxMjMsIHI6IDI1NSwgZzogMjM1LCBiOiAyMzIgfSxcbiAgeyB4OiA2MDIsIHk6IDE2NywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUwNiwgeTogMjQsIHI6IDIxLCBnOiAyMSwgYjogMjEgfSxcbl07XG5cbmV4cG9ydCBjb25zdCBwYWdlSW5Db29raWVHYWNoYSA9IFtcbiAgeyB4OiAzNiwgeTogMjMzLCByOiAyMDUsIGc6IDIwNCwgYjogMjA1IH0sXG4gIHsgeDogMzUsIHk6IDc1LCByOiAyMDYsIGc6IDIxNSwgYjogMjMxIH0sXG4gIHsgeDogMzAsIHk6IDEyLCByOiAxNDgsIGc6IDgxLCBiOiA2NiB9LFxuICB7IHg6IDI2OCwgeTogMTcsIHI6IDIxOCwgZzogMTczLCBiOiAyMzQgfSxcbiAgeyB4OiAzNDIsIHk6IDE2LCByOiA5OSwgZzogMTE3LCBiOiAxMzIgfSxcbiAgeyB4OiA0MTgsIHk6IDIxLCByOiAyMzksIGc6IDE5NSwgYjogMiB9LFxuICB7IHg6IDUyNCwgeTogMjAsIHI6IDAsIGc6IDEzOSwgYjogMjU1IH0sXG5dO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlTmFtZVlvdXJLaW5nZG9tID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VOYW1lWW91cktpbmdkb20nLFxuICBbXG4gICAgeyB4OiAzNjIsIHk6IDI0NywgcjogMTYwLCBnOiAxNjAsIGI6IDE2MCB9LFxuICAgIHsgeDogMjY5LCB5OiAyNDIsIHI6IDE4MCwgZzogMTgwLCBiOiAxODAgfSxcbiAgICB7IHg6IDQxMCwgeTogMTU0LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAyODYsIHk6IDE1NSwgcjogMTcxLCBnOiAxNjEsIGI6IDE1OSB9LFxuICAgIHsgeDogMjMwLCB5OiAxNTMsIHI6IDEzMCwgZzogMTI3LCBiOiAxMjQgfSxcbiAgICB7IHg6IDIzMywgeTogMTAwLCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgIHsgeDogMjY3LCB5OiAxMDMsIHI6IDE3MywgZzogMTczLCBiOiAxNzMgfSxcbiAgICB7IHg6IDI5NSwgeTogMTA0LCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgIHsgeDogMzU2LCB5OiAxMDQsIHI6IDIsIGc6IDIsIGI6IDIgfSxcbiAgXSxcbiAgeyB4OiAzNjIsIHk6IDI0NyB9XG4pO1xuXG5leHBvcnQgY29uc3QgcGFnZVN0b3J5QnVpbGRDb29raWVIb3VzZXMxID0gW1xuICB7IHg6IDU2MywgeTogODYsIHI6IDU5LCBnOiAxMjcsIGI6IDE2MSB9LFxuICB7IHg6IDQ3NywgeTogODMsIHI6IDIxMSwgZzogMTMxLCBiOiA1NiB9LFxuICB7IHg6IDQ5MiwgeTogMTA0LCByOiAxNzgsIGc6IDUwLCBiOiAzMiB9LFxuICB7IHg6IDI1LCB5OiAzMjAsIHI6IDc1LCBnOiA3NSwgYjogNzUgfSxcbiAgeyB4OiAyMiwgeTogMzMwLCByOiAyOCwgZzogMTIsIGI6IDEyIH0sXG4gIHsgeDogOTQsIHk6IDMzMywgcjogMjYsIGc6IDU0LCBiOiAzMyB9LFxuICB7IHg6IDUyMywgeTogMjcwLCByOiA0OCwgZzogNjgsIGI6IDEwOSB9LFxuICB7IHg6IDQ2OCwgeTogMjY4LCByOiAyNTUsIGc6IDE4OSwgYjogOCB9LFxuXTtcbmV4cG9ydCBjb25zdCByZnBhZ2VTdG9yeUJ1aWxkQ29va2llSG91c2VzMSA9IG5ldyBQYWdlKCdyZnBhZ2VTdG9yeUJ1aWxkQ29va2llSG91c2VzMScsIHBhZ2VTdG9yeUJ1aWxkQ29va2llSG91c2VzMSwgcGFnZVN0b3J5QnVpbGRDb29raWVIb3VzZXMxWzBdKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUtpbmRvbUhhc09ubHlTb3JhZ2VBbmRCdWlsZEljb24gPSBuZXcgUGFnZSgncmZwYWdlS2luZG9tSGFzT25seVNvcmFnZUFuZEJ1aWxkSWNvbicsIFtcbiAgeyB4OiA2MTMsIHk6IDMzMSwgcjogMTQ4LCBnOiA0MCwgYjogMzMgfSxcbiAgeyB4OiA2MDEsIHk6IDMyMCwgcjogNjYsIGc6IDAsIGI6IDE2IH0sXG4gIHsgeDogNDQsIHk6IDMzMSwgcjogMjU1LCBnOiAyMjQsIGI6IDI0NyB9LFxuICB7IHg6IDI0OCwgeTogMTgsIHI6IDIzMSwgZzogMTY1LCBiOiAxODIgfSxcbiAgeyB4OiAzMzksIHk6IDIwLCByOiAyNTUsIGc6IDIxNSwgYjogMCB9LFxuICB7IHg6IDQ1NCwgeTogMjEsIHI6IDAsIGc6IDEzOSwgYjogMjU1IH0sXG5dKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VLaW5nZG9tSGF2ZU5vQ29va2llSWNvbiA9IG5ldyBQYWdlKFxuICAncmZwYWdlS2luZ2RvbUhhdmVOb0Nvb2tpZUljb24nLFxuICBbXG4gICAgeyB4OiA0MTgsIHk6IDMxOSwgcjogMTQ2LCBnOiA4MCwgYjogNjkgfSxcbiAgICB7IHg6IDQ2OCwgeTogMzE5LCByOiAxMzYsIGc6IDE3LCBiOiAxNyB9LFxuICAgIHsgeDogNTA1LCB5OiAzMjIsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDU4MiwgeTogMzEwLCByOiA1NiwgZzogOTIsIGI6IDEzNCB9LFxuICAgIHsgeDogMzcsIHk6IDMxMiwgcjogMTU5LCBnOiA2LCBiOiA0MCB9LFxuICAgIHsgeDogMjUzLCB5OiAxNiwgcjogMjQxLCBnOiA1MSwgYjogOTIgfSxcbiAgXSxcbiAgeyB4OiA0MTgsIHk6IDMxOSB9XG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlTWFpbHNDYW5DbGFpbUFsbCA9IG5ldyBQYWdlKFxuICAncmZwYWdlTWFpbHNDYW5DbGFpbUFsbCcsXG4gIFtcbiAgICB7IHg6IDU5MCwgeTogMzIwLCByOiAxMTMsIGc6IDE5NCwgYjogMTEgfSxcbiAgICB7IHg6IDQ1NSwgeTogMzIzLCByOiA1MSwgZzogNTcsIGI6IDg5IH0sXG4gICAgeyB4OiA1NywgeTogMTMxLCByOiAyMzQsIGc6IDIyNCwgYjogMjAxIH0sXG4gICAgeyB4OiAzMSwgeTogMTM2LCByOiAyMDMsIGc6IDE5NCwgYjogMTg2IH0sXG4gICAgeyB4OiA1OTQsIHk6IDEzMiwgcjogMTEzLCBnOiAxOTQsIGI6IDEzIH0sXG4gICAgeyB4OiAzNjEsIHk6IDMyLCByOiA1NywgZzogNjYsIGI6IDk4IH0sXG4gICAgeyB4OiAyOTUsIHk6IDMwLCByOiAxNzMsIGc6IDE3MywgYjogMTczIH0sXG4gICAgeyB4OiAyODIsIHk6IDMwLCByOiA1NywgZzogNjYsIGI6IDk4IH0sXG4gIF0sXG4gIHsgeDogNTQ4LCB5OiAzMTYgfVxuKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZU1haWxzQWxsQ2xhaW1lZCA9IG5ldyBQYWdlKFxuICAncmZwYWdlTWFpbHNBbGxDbGFpbWVkJyxcbiAgW1xuICAgIHsgeDogNjE1LCB5OiAxOSwgcjogNDEsIGc6IDg5LCBiOiAxMjMgfSxcbiAgICB7IHg6IDM3MywgeTogMzAsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiAyOTYsIHk6IDMwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MDYsIHk6IDMwMSwgcjogNDksIGc6IDYwLCBiOiA5MCB9LFxuICAgIHsgeDogNTkxLCB5OiAzMjIsIHI6IDE2MCwgZzogMTYwLCBiOiAxNjAgfSxcbiAgICB7IHg6IDQ4NiwgeTogMzE3LCByOiAxODAsIGc6IDE4MCwgYjogMTgwIH0sXG4gICAgeyB4OiA0NCwgeTogMzI3LCByOiA0MSwgZzogNDQsIGI6IDYzIH0sXG4gICAgeyB4OiAzMCwgeTogMzI4LCByOiA0OSwgZzogNjAsIGI6IDkwIH0sXG4gICAgeyB4OiA2MjIsIHk6IDMyMiwgcjogOSwgZzogMTQsIGI6IDIwIH0sXG4gICAgeyB4OiAxOCwgeTogMjgwLCByOiA1NCwgZzogNDMsIGI6IDI2IH0sXG4gIF0sXG4gIHsgeDogNjE1LCB5OiAxOSB9XG4pO1xuXG4vLyBUaGlzIHBsYXllciBkb24ndCBoYXZlIHNlYXNpZGUgbWFya2V0XG5leHBvcnQgY29uc3QgcmZwYWdlVW5jb2xsYXBzZWRBZmZhaXJzTm9IYWJvciA9IG5ldyBQYWdlKCdyZnBhZ2VVbmNvbGxhcHNlZEFmZmFpcnNOb0hhYm9yJywgW1xuICB7IHg6IDMxOSwgeTogNTYsIHI6IDE4MiwgZzogMTUzLCBiOiA4NSB9LFxuICB7IHg6IDQyMywgeTogMTgsIHI6IDEsIGc6IDIzLCBiOiA0NSB9LFxuICB7IHg6IDIyMSwgeTogMTcsIHI6IDQzLCBnOiA5LCBiOiAxNiB9LFxuICB7IHg6IDIyNywgeTogMTYwLCByOiAxMzQsIGc6IDE4MywgYjogMjQ5IH0sXG4gIHsgeDogMzI1LCB5OiAxNTQsIHI6IDI1NSwgZzogMTA5LCBiOiAyMDAgfSxcbiAgeyB4OiA0MTEsIHk6IDE2MywgcjogMjU1LCBnOiAyMjMsIGI6IDI0MyB9LFxuICB7IHg6IDIzMCwgeTogMjM2LCByOiAyNTUsIGc6IDI1NSwgYjogMjA1IH0sXG4gIHsgeDogMzI2LCB5OiAyMzQsIHI6IDI1NSwgZzogMjIzLCBiOiAxNDIgfSxcbiAgeyB4OiAzMzgsIHk6IDIzNCwgcjogMjIwLCBnOiA0NywgYjogNzIgfSxcbiAgeyB4OiA0MTMsIHk6IDIzMywgcjogMjQ3LCBnOiAyMDksIGI6IDg1IH0sXG5dKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZVVuY29sbGFwc2VkQWZmYWlycyA9IG5ldyBQYWdlKCdyZnBhZ2VVbmNvbGxhcHNlZEFmZmFpcnMnLCBbXG4gIHsgeDogMjI4LCB5OiAxNjMsIHI6IDEzNCwgZzogMTgzLCBiOiAyNDkgfSxcbiAgeyB4OiAzMjAsIHk6IDE1NSwgcjogMjU1LCBnOiAxMDksIGI6IDIwMCB9LFxuICB7IHg6IDM5NiwgeTogMTM5LCByOiAyMDcsIGc6IDEyLCBiOiAzNiB9LFxuICB7IHg6IDQxMCwgeTogMTU5LCByOiAyNTQsIGc6IDIyMywgYjogMjQxIH0sXG4gIHsgeDogMTkwLCB5OiAyMzQsIHI6IDE2MywgZzogMjE4LCBiOiAyNTQgfSxcbiAgeyB4OiAyODcsIHk6IDIyNywgcjogMjQ0LCBnOiA1NywgYjogMTU5IH0sXG4gIHsgeDogMjc1LCB5OiAyMzMsIHI6IDI1NSwgZzogMjQ5LCBiOiAxMDkgfSxcbiAgeyB4OiAzNjQsIHk6IDIzMywgcjogMjU1LCBnOiAyMjMsIGI6IDE0MiB9LFxuICB7IHg6IDQ1MywgeTogMjM0LCByOiAyNDcsIGc6IDIwOSwgYjogODUgfSxcbiAgeyB4OiA0MSwgeTogMzE5LCByOiAyNiwgZzogMSwgYjogNSB9LFxuICB7IHg6IDMyMCwgeTogNTcsIHI6IDE1OCwgZzogMTMzLCBiOiA3MyB9LFxuICB7IHg6IDQyNywgeTogMTgsIHI6IDEsIGc6IDIzLCBiOiA0NSB9LFxuXSk7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VJblRyYWluU3RhdGlvbiA9IG5ldyBQYWdlKFxuICAncmZwYWdlSW5UcmFpblN0YXRpb24nLFxuICBbXG4gICAgeyB4OiA0MDcsIHk6IDE5LCByOiAyMzksIGc6IDE5NiwgYjogMCB9LFxuICAgIHsgeDogMzM0LCB5OiAxOSwgcjogMTAzLCBnOiA0OSwgYjogMjggfSxcbiAgICB7IHg6IDMzNiwgeTogMjcsIHI6IDIzOCwgZzogMjM4LCBiOiAyMzggfSxcbiAgICB7IHg6IDMxNSwgeTogMzIsIHI6IDg3LCBnOiA0NSwgYjogMjkgfSxcbiAgICB7IHg6IDE0MywgeTogMTQsIHI6IDE2NywgZzogNDksIGI6IDU2IH0sXG4gICAgeyB4OiAyNywgeTogMTksIHI6IDEyMiwgZzogMTIyLCBiOiAxMjIgfSxcbiAgICB7IHg6IDIxLCB5OiAyNSwgcjogMTYwLCBnOiA0MywgYjogNTIgfSxcbiAgICB7IHg6IDQsIHk6IDMwLCByOiA4NywgZzogNDUsIGI6IDI5IH0sXG4gICAgeyB4OiA1ODgsIHk6IDMyNiwgcjogMjM5LCBnOiAyMDgsIGI6IDEzMiB9LFxuICAgIHsgeDogNjA2LCB5OiAzMjQsIHI6IDIyMywgZzogMTU3LCBiOiA3MSB9LFxuICAgIHsgeDogNjA0LCB5OiAzMTUsIHI6IDc2LCBnOiA4OCwgYjogMTM5IH0sXG4gIF0sXG4gIHsgeDogNjE3LCB5OiAxMyB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZVRyYWluTm90RW5vdWdoR29vZHMgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVRyYWluTm90RW5vdWdoR29vZHMnLFxuICBbXG4gICAgeyB4OiAxNjAsIHk6IDUxLCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgIHsgeDogNDg2LCB5OiAxNTMsIHI6IDUyLCBnOiAxNTgsIGI6IDIyOCB9LFxuICAgIHsgeDogMzAsIHk6IDM1LCByOiA4OCwgZzogMjQsIGI6IDI5IH0sXG4gICAgeyB4OiAxMCwgeTogNDQsIHI6IDY2LCBnOiAzNywgYjogMjUgfSxcbiAgICB7IHg6IDYsIHk6IDcyLCByOiA4NiwgZzogOTYsIGI6IDc4IH0sXG4gICAgeyB4OiAyMzQsIHk6IDMwMCwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gIF0sXG4gIHsgeDogMjIwLCB5OiAzMDAgfVxuKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUJhdHRsZVZpY3RvcnlCdXROZWVkVGFwID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VCYXR0bGVWaWN0b3J5QnV0TmVlZFRhcCcsXG4gIFtcbiAgICB7IHg6IDIzMCwgeTogNDksIHI6IDQ5LCBnOiAxMzQsIGI6IDIxNCB9LFxuICAgIHsgeDogMjI0LCB5OiA1OCwgcjogMjMxLCBnOiAxODIsIGI6IDQxIH0sXG4gICAgeyB4OiAyNTQsIHk6IDU5LCByOiAxMjMsIGc6IDE5MCwgYjogMjU1IH0sXG4gICAgeyB4OiAzMjksIHk6IDI3LCByOiAyMTQsIGc6IDQ0LCBiOiA2NiB9LFxuICAgIHsgeDogMzcxLCB5OiA1NiwgcjogMTk4LCBnOiAyMjMsIGI6IDIyMiB9LFxuICAgIHsgeDogNDEwLCB5OiA2OCwgcjogNDksIGc6IDEzOCwgYjogMjE0IH0sXG4gICAgeyB4OiAyNiwgeTogMzMyLCByOiAxMSwgZzogMSwgYjogMSB9LFxuICAgIHsgeDogMTAsIHk6IDMzOCwgcjogNDAsIGc6IDMwLCBiOiAyMiB9LCAvLyBmb3IgcmVyb3V0ZXIgdjJcbiAgICB7IHg6IDQ4LCB5OiAzMzYsIHI6IDE0LCBnOiAyLCBiOiAyIH0sIC8vIGZvciByZXJvdXRlciB2MlxuICAgIHsgeDogMzA0LCB5OiAzMjQsIHI6IDE4MSwgZzogMTgxLCBiOiAxODEgfSwgLy8gZm9yIHJlcm91dGVyIHYyLCBcIlRhcCB0byBjb250aW51ZVwiXG4gIF0sXG4gIHsgeDogMjMwLCB5OiA0OSB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUJhdHRsZUZpbmlzaGVkID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VCYXR0bGVGaW5pc2hlZCcsXG4gIFtcbiAgICB7IHg6IDU2LCB5OiAzMzEsIHI6IDI0NywgZzogODksIGI6IDI0IH0sXG4gICAgeyB4OiA1ODQsIHk6IDMzMiwgcjogOCwgZzogMTY2LCBiOiAyMjIgfSxcbiAgICB7IHg6IDYwNiwgeTogMjQsIHI6IDU3LCBnOiAxNjksIGI6IDIzMSB9LFxuICBdLFxuICB7IHg6IDYwNSwgeTogMzIyIH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlQXJlbmFCYXR0bGVEZWZlYXQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUFyZW5hQmF0dGxlRGVmZWF0JyxcbiAgW1xuICAgIHsgeDogNjE4LCB5OiAyNCwgcjogNTYsIGc6IDE2NSwgYjogMjMxIH0sXG4gICAgeyB4OiA2MTEsIHk6IDI4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1NTAsIHk6IDcwLCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgICB7IHg6IDU2MywgeTogNjcsIHI6IDIzMSwgZzogMjQ2LCBiOiAyNTIgfSxcbiAgICB7IHg6IDI0MywgeTogMzQsIHI6IDE2OCwgZzogMTkxLCBiOiAyMjggfSxcbiAgICB7IHg6IDI0OSwgeTogNDYsIHI6IDE1MCwgZzogMTY3LCBiOiAxNjcgfSxcbiAgICB7IHg6IDM4NSwgeTogNTgsIHI6IDQ2LCBnOiA0NiwgYjogNDYgfSxcbiAgICB7IHg6IDM2MCwgeTogNTYsIHI6IDE5OCwgZzogMTk4LCBiOiAxOTggfSxcbiAgICB7IHg6IDU5MywgeTogMjc2LCByOiA1NiwgZzogNDcsIGI6IDQ5IH0sXG4gICAgeyB4OiA2MTAsIHk6IDMyMywgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gICAgeyB4OiA1MTgsIHk6IDMxNCwgcjogMjQzLCBnOiA5MCwgYjogMjggfSxcbiAgXSxcbiAgeyB4OiA2MDAsIHk6IDMyMCB9XG4pO1xuLy8gZXhwb3J0IGNvbnN0IHJmcGFnZUJhdHRsaW5nID0gbmV3IFBhZ2UoJ3JmcGFnZUJhdHRsaW5nJywgW1xuLy8gICB7IHg6IDI4NCwgeTogMTcsIHI6IDE0NSwgZzogMjE5LCBiOiAxNDMgfSxcbi8vICAgeyB4OiAzNTEsIHk6IDE2LCByOiA3NywgZzogMzIsIGI6IDEyIH0sXG4vLyBdKTtcblxuLy8gSGlkZSBhczogOTgzNzAwOTIwMDE2IGp1c3QgbG9nZ2VkIGEgcm91dGUgY29uZmxpY3Qgd2hlbiBpbiBUYXNrOiBcInRvd2VyT2ZTd2VldENoYW9zXCIsIG5hbWVzOiBbXCJyZnBhZ2VCYXR0bGVGaW5pc2hlZFwiLFwicmZwYWdlRGVmZWF0V2l0aEdvdG9LaW5nZG9tXCJdXG4vLyBleHBvcnQgY29uc3QgcmZwYWdlRGVmZWF0V2l0aEdvdG9LaW5nZG9tID0gbmV3IFBhZ2UoXG4vLyAgICdyZnBhZ2VEZWZlYXRXaXRoR290b0tpbmdkb20nLFxuLy8gICBbXG4vLyAgICAgeyB4OiA4MSwgeTogMzE0LCByOiAyNDcsIGc6IDg5LCBiOiAyNCB9LFxuLy8gICAgIHsgeDogODUsIHk6IDE3NSwgcjogMjMxLCBnOiAyMzEsIGI6IDIzMSB9LFxuLy8gICAgIHsgeDogOTIsIHk6IDIzMiwgcjogMjIyLCBnOiAxNDYsIGI6IDc0IH0sXG4vLyAgICAgeyB4OiAyNDMsIHk6IDU4LCByOiA3MCwgZzogOTMsIGI6IDEwNyB9LFxuLy8gICAgIHsgeDogMjk0LCB5OiA1OCwgcjogNDEsIGc6IDQ0LCBiOiA0MSB9LFxuLy8gICBdLFxuLy8gICB7IHg6IDgxLCB5OiAzMTQgfVxuLy8gKTtcblxuLy8gZXhwb3J0IGNvbnN0IHJmcGFnZVRyb3BpY2FsUmFpZHMgPSBuZXcgUGFnZShcbi8vICAgJ3JmcGFnZVRyb3BpY2FsUmFpZHMnLFxuLy8gICBbXG4vLyAgICAgeyB4OiA2MTIsIHk6IDE4LCByOiA1NiwgZzogMTY3LCBiOiAyMzEgfSxcbi8vICAgICB7IHg6IDUyMSwgeTogMTYsIHI6IDAsIGc6IDE5MywgYjogMjU1IH0sXG4vLyAgICAgeyB4OiA0MjUsIHk6IDEwLCByOiAxMzYsIGc6IDIwNCwgYjogMTcwIH0sXG4vLyAgICAgeyB4OiA0MzEsIHk6IDE3LCByOiAyNDYsIGc6IDI0MywgYjogMjI2IH0sXG4vLyAgICAgeyB4OiA0MzMsIHk6IDI4LCByOiAxMzksIGc6IDIwNywgYjogMTczIH0sXG4vLyAgICAgeyB4OiAzNDEsIHk6IDIwLCByOiAxOTksIGc6IDE2NiwgYjogOTMgfSxcbi8vICAgICB7IHg6IDUzLCB5OiAxMTEsIHI6IDYyLCBnOiAzOCwgYjogMjEgfSxcbi8vICAgICB7IHg6IDQxLCB5OiAxMTUsIHI6IDIxNCwgZzogMTk4LCBiOiAxOTAgfSxcbi8vICAgXSxcbi8vICAgeyB4OiA2MTIsIHk6IDE4IH1cbi8vICk7XG5cbmV4cG9ydCBjb25zdCBwYWdlQmF0dGxlRmluaXNoZWRXaXRoU3VuYmVkcyA9IFtcbiAgeyB4OiA0OTEsIHk6IDMyMiwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gIHsgeDogNTM3LCB5OiAzMjQsIHI6IDIzOSwgZzogNzQsIGI6IDExNyB9LFxuICB7IHg6IDU1MywgeTogMzMxLCByOiA2MCwgZzogMTgwLCBiOiA2IH0sXG4gIHsgeDogMzEwLCB5OiAyNiwgcjogMjIyLCBnOiA0OCwgYjogNzAgfSxcbiAgeyB4OiAzMzAsIHk6IDI4LCByOiAyMDQsIGc6IDM3LCBiOiA2MCB9LFxuXTtcblxuZXhwb3J0IGNvbnN0IHBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhOZXh0THYgPSBbXG4gIHsgeDogNTg5LCB5OiAzMzMsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICB7IHg6IDM4OCwgeTogMzM0LCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgeyB4OiA0OTAsIHk6IDMzMywgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gIHsgeDogNTgsIHk6IDMzNCwgcjogMjQzLCBnOiA5MCwgYjogMjggfSxcbl07XG5leHBvcnQgY29uc3QgcGFnZVdpbkJvdW50eUFuZEZpbmlzaCA9IFtcbiAgeyB4OiA2MDcsIHk6IDMzMiwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gIHsgeDogNDg4LCB5OiAzMjAsIHI6IDI1LCBnOiAyLCBiOiA2IH0sXG4gIHsgeDogNDE3LCB5OiAzMTksIHI6IDI1LCBnOiA1LCBiOiA2IH0sXG4gIHsgeDogNzQsIHk6IDMzMiwgcjogMjQzLCBnOiA5MCwgYjogMjggfSxcbl07XG5leHBvcnQgY29uc3QgcGFnZUJhdHRsZUZpbmlzaGVkV2l0aG91dE5leHRMdiA9IFtcbiAgeyB4OiA0NjYsIHk6IDMyNCwgcjogMjUyLCBnOiAyNTIsIGI6IDI1MiB9LFxuICB7IHg6IDQ2NCwgeTogMzMxLCByOiA4LCBnOiAxNjYsIGI6IDIyMiB9LFxuICB7IHg6IDMwOSwgeTogMjUsIHI6IDIyOCwgZzogNTIsIGI6IDcxIH0sXG4gIHsgeDogMzIwLCB5OiAyNSwgcjogMjU1LCBnOiAyNTUsIGI6IDEzMiB9LFxuICB7IHg6IDMzMCwgeTogMjUsIHI6IDIyOCwgZzogNTIsIGI6IDc0IH0sXG4gIHsgeDogNDAxLCB5OiAzMjMsIHI6IDI2LCBnOiA0LCBiOiAxMiB9LFxuXTtcbmV4cG9ydCBjb25zdCBwYWdlQmF0dGxlRmluaXNoZWRXaXRoTVZQQ29va2llID0gW1xuICB7IHg6IDMyOCwgeTogMjksIHI6IDIwMSwgZzogMzMsIGI6IDUyIH0sXG4gIHsgeDogMzc1LCB5OiA1MywgcjogMTk4LCBnOiAyMjMsIGI6IDIyMiB9LFxuICB7IHg6IDQxMywgeTogNjksIHI6IDQ5LCBnOiAxMzgsIGI6IDIxNCB9LFxuICB7IHg6IDYyNCwgeTogMzM0LCByOiA0MCwgZzogMzAsIGI6IDIyIH0sXG4gIHsgeDogNTQ0LCB5OiAzMzMsIHI6IDE3LCBnOiAzLCBiOiAzIH0sXG5dO1xuZXhwb3J0IGNvbnN0IHBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhNVlBDb29raWVXaXRoRXhpdCA9IFtcbiAgeyB4OiA2MDksIHk6IDMyMCwgcjogOCwgZzogMTY2LCBiOiAyMjIgfSxcbiAgeyB4OiA1MDksIHk6IDMzNCwgcjogMjQ3LCBnOiA4OSwgYjogMjQgfSxcbiAgeyB4OiAzNzQsIHk6IDU1LCByOiAyMDMsIGc6IDIyMywgYjogMjIyIH0sXG4gIHsgeDogNDA5LCB5OiA2NywgcjogNTQsIGc6IDEzOSwgYjogMjE0IH0sXG5dO1xuXG5leHBvcnQgY29uc3QgcGFnZUJhdHRsZVRvd2VyT2ZTd2VldENoYW9zVmljdG9yeSA9IFtcbiAgeyB4OiA1NDksIHk6IDMyMiwgcjogMTQ4LCBnOiAyMTksIGI6IDU3IH0sXG4gIHsgeDogMjIyLCB5OiA2MCwgcjogMjMxLCBnOiAxODIsIGI6IDQxIH0sXG4gIHsgeDogMjA5LCB5OiA1OSwgcjogMzgsIGc6IDEyMSwgYjogMTk4IH0sXG4gIHsgeDogMjU2LCB5OiA1OSwgcjogMTIzLCBnOiAxOTAsIGI6IDI1NSB9LFxuXTtcbi8vIGV4cG9ydCBjb25zdCByZnBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhTdW5iZWRzID0gbmV3IFBhZ2UoJ3JmcGFnZUJhdHRsZUZpbmlzaGVkV2l0aFN1bmJlZHMnLCBwYWdlQmF0dGxlRmluaXNoZWRXaXRoU3VuYmVkcywge1xuLy8gICB4OiA0OTEsXG4vLyAgIHk6IDMyMixcbi8vIH0pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlRm91bmRPY3RvcHVzID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VGb3VuZE9jdG9wdXMnLFxuICBbXG4gICAgeyB4OiA1MDAsIHk6IDMzMCwgcjogOCwgZzogMTY2LCBiOiAyMjIgfSwgLy8gZXhpdFxuICAgIHsgeDogMzYwLCB5OiAyNDMsIHI6IDIyOSwgZzogMTgsIGI6IDUwIH0sXG4gIF0sXG4gIHsgeDogNTAwLCB5OiAzMzAgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VJbktpbmdkb21Db25zdHJ1Y3Rpb25TaG9wID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VJbktpbmdkb21Db25zdHJ1Y3Rpb25TaG9wJyxcbiAgW1xuICAgIHsgeDogNjI0LCB5OiAxOSwgcjogMzMsIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDIwLCB5OiAxMiwgcjogMTgxLCBnOiA4LCBiOiAzMyB9LFxuICAgIHsgeDogMTEsIHk6IDI0LCByOiA5OSwgZzogNDAsIGI6IDQxIH0sXG4gICAgeyB4OiAyOCwgeTogMjcsIHI6IDI1NSwgZzogMjIzLCBiOiAyNDcgfSxcbiAgICB7IHg6IDMzMCwgeTogMTUsIHI6IDE3OCwgZzogOCwgYjogMzMgfSxcbiAgICB7IHg6IDE3OSwgeTogMzQwLCByOiAxNTYsIGc6IDEwMSwgYjogNzQgfSxcbiAgICB7IHg6IDE5NCwgeTogMzM1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIF0sXG4gIHtcbiAgICB4OiA2MjQsXG4gICAgeTogMTksXG4gIH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlS2luZ2RvbURlY29yYXRpbmcgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUtpbmdkb21EZWNvcmF0aW5nJyxcbiAgW1xuICAgIHsgeDogNjE5LCB5OiAxMiwgcjogNTcsIGc6IDE2OSwgYjogMjMxIH0sXG4gICAgeyB4OiA0MiwgeTogMjMsIHI6IDk5LCBnOiAxNzQsIGI6IDQ5IH0sXG4gICAgeyB4OiAzMywgeTogMjUsIHI6IDQ4LCBnOiAxMDAsIGI6IDE0IH0sXG4gICAgeyB4OiAzMywgeTogODEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDIwLCB5OiAyMjIsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiAzMywgeTogMjEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogNjE5LCB5OiAxMiB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUd1aWxkRGVjb3JTaG9wID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VHdWlsZERlY29yU2hvcCcsXG4gIFtcbiAgICB7IHg6IDMwLCB5OiAyNSwgcjogMTYyLCBnOiAxMDEsIGI6IDU5IH0sXG4gICAgeyB4OiA5MywgeTogMjIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDUsIHk6IDUwLCByOiAxNzAsIGc6IDE2MywgYjogMTk0IH0sXG4gICAgeyB4OiAxMCwgeTogNjgsIHI6IDI0MywgZzogMjQ1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDcxLCB5OiAzMzksIHI6IDEzNSwgZzogMTI0LCBiOiAxNjAgfSxcbiAgICB7IHg6IDU1NCwgeTogMzM4LCByOiA3NCwgZzogNjMsIGI6IDg3IH0sXG4gICAgeyB4OiA1NTMsIHk6IDMyOSwgcjogNzgsIGc6IDYyLCBiOiA5OCB9LFxuICBdLFxuICB7IHg6IDYxOSwgeTogMTIgfVxuKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUJhdHRsZUZpbmlzaGVkV2l0aE5leHRMdiA9IG5ldyBQYWdlKCdyZnBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhOZXh0THYnLCBwYWdlQmF0dGxlRmluaXNoZWRXaXRoTmV4dEx2LCB7XG4gIHg6IDU4OSxcbiAgeTogMzMzLFxufSk7XG4vLyBleHBvcnQgY29uc3QgcmZwYWdlV2luQm91bnR5QW5kRmluaXNoID0gbmV3IFBhZ2UoJ3JmcGFnZVdpbkJvdW50eUFuZEZpbmlzaCcsIHBhZ2VXaW5Cb3VudHlBbmRGaW5pc2gsIHBhZ2VXaW5Cb3VudHlBbmRGaW5pc2hbMF0pO1xuLy8gZXhwb3J0IGNvbnN0IHJmcGFnZUJhdHRsZUZpbmlzaGVkV2l0aG91dE5leHRMdiA9IG5ldyBQYWdlKCdyZnBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhvdXROZXh0THYnLCBwYWdlQmF0dGxlRmluaXNoZWRXaXRob3V0TmV4dEx2LCB7IHg6IDQ2NiwgeTogMzI0IH0pO1xuLy8gZXhwb3J0IGNvbnN0IHJmcGFnZUJhdHRsZUZpbmlzaGVkV2l0aE1WUENvb2tpZSA9IG5ldyBQYWdlKCdyZnBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhNVlBDb29raWUnLCBwYWdlQmF0dGxlRmluaXNoZWRXaXRoTVZQQ29va2llLCB7IHg6IDMzMywgeTogMjk4IH0pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUJhdHRsZUZpbmlzaGVkV2l0aE1WUENvb2tpZVdpdGhFeGl0ID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhNVlBDb29raWVXaXRoRXhpdCcsXG4gIHBhZ2VCYXR0bGVGaW5pc2hlZFdpdGhNVlBDb29raWVXaXRoRXhpdCxcbiAgcGFnZUJhdHRsZUZpbmlzaGVkV2l0aE1WUENvb2tpZVdpdGhFeGl0WzBdXG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlSW5Ub3dlck9mU3dlZXRDaGFvcyA9IG5ldyBQYWdlKFxuICAncmZwYWdlSW5Ub3dlck9mU3dlZXRDaGFvcycsXG4gIFtcbiAgICB7IHg6IDYxMSwgeTogMjEsIHI6IDU3LCBnOiAxNjYsIGI6IDIzMSB9LFxuICAgIHsgeDogNDk3LCB5OiAxNywgcjogMjU1LCBnOiAyMDcsIGI6IDAgfSxcbiAgICB7IHg6IDQwNywgeTogMTUsIHI6IDAsIGc6IDE5NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzNDAsIHk6IDE4LCByOiAyNTMsIGc6IDYzLCBiOiAxMTUgfSxcbiAgICB7IHg6IDE5LCB5OiA1OSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDYxMSwgeTogMjEgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VUb1NDQ29uZmlybVRyYXlKdW1wID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VUb1NDQ29uZmlybVRyYXlKdW1wJyxcbiAgW1xuICAgIHsgeDogNDQsIHk6IDMyNSwgcjogMTA5LCBnOiA2NCwgYjogMTIyIH0sXG4gICAgeyB4OiAzNiwgeTogMzE4LCByOiAxMTAsIGc6IDIzLCBiOiAzNiB9LFxuICAgIHsgeDogMzIsIHk6IDMyMywgcjogMTEwLCBnOiA5LCBiOiAyNSB9LFxuICAgIHsgeDogMzU5LCB5OiAzMTMsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogMzg2LCB5OiAzMTcsIHI6IDIzMSwgZzogMTg1LCBiOiAxOTAgfSxcbiAgICB7IHg6IDQ2MywgeTogMTEsIHI6IDU1LCBnOiAxNjYsIGI6IDIzMSB9LFxuICAgIHsgeDogNDYzLCB5OiAxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNDM2LCB5OiAyNSwgcjogMTM0LCBnOiAzNSwgYjogNTEgfSxcbiAgICB7IHg6IDM0OSwgeTogMzEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQzNSwgeTogMjE2LCByOiAyMTksIGc6IDE2MywgYjogMTcwIH0sXG4gICAgeyB4OiAzMTgsIHk6IDk4LCByOiAyNTUsIGc6IDE1MywgYjogMTcwIH0sXG4gIF0sXG4gIHsgeDogMzUxLCB5OiAzMTQgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VUb1NDVHJheUp1bXBOZWVkTW9yZUtleSA9IG5ldyBQYWdlKCdyZnBhZ2VUb1NDVHJheUp1bXBOZWVkTW9yZUtleScsIFtcbiAgeyB4OiA0NDMsIHk6IDk3LCByOiA1NSwgZzogMTY2LCBiOiAyMzEgfSxcbiAgeyB4OiA0MzcsIHk6IDk3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMzQ0LCB5OiAxNTksIHI6IDUyLCBnOiAxNTgsIGI6IDIyOCB9LFxuICB7IHg6IDMyNiwgeTogMTc4LCByOiAyNTUsIGc6IDQxLCBiOiA2NiB9LFxuICB7IHg6IDMyMiwgeTogMTc5LCByOiAxNjAsIGc6IDU4LCBiOiAyNTQgfSxcbiAgeyB4OiAzMTcsIHk6IDE4NywgcjogMTk3LCBnOiA0MiwgYjogNjEgfSxcbiAgeyB4OiAzNTIsIHk6IDIzNywgcjogMTkxLCBnOiA4NCwgYjogMjQxIH0sXG4gIHsgeDogMzU1LCB5OiAzMTEsIHI6IDYwLCBnOiAxMDMsIGI6IDYgfSxcbiAgeyB4OiAzMywgeTogMzMwLCByOiAzNCwgZzogOCwgYjogOCB9LFxuXSk7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VSZWFkeVRvQmF0dGxlVG9TQyA9IG5ldyBQYWdlKFxuICAncmZwYWdlUmVhZHlUb0JhdHRsZVRvU0MnLFxuICBbXG4gICAgeyB4OiA0OTEsIHk6IDMzMCwgcjogMTY1LCBnOiA0LCBiOiA0MSB9LFxuICAgIHsgeDogNTE4LCB5OiAzMzQsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiA2MDYsIHk6IDMyMSwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDMzOCwgeTogMTcsIHI6IDE3NSwgZzogMzIsIGI6IDY2IH0sXG4gICAgeyB4OiA0MjMsIHk6IDEyNywgcjogMTUxLCBnOiA0NywgYjogNzkgfSxcbiAgICB7IHg6IDQyNiwgeTogMTkxLCByOiA4OSwgZzogNTEsIGI6IDU2IH0sXG4gIF0sXG4gIHsgeDogNTkwLCB5OiAzMjcgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VSZWFkeVRvQmF0dGxlVG9TQ1RpbWVKdW1wID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VSZWFkeVRvQmF0dGxlVG9TQ1RpbWVKdW1wJyxcbiAgW1xuICAgIHsgeDogNjE0LCB5OiAzMjUsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiA0ODksIHk6IDMyNSwgcjogMjQ3LCBnOiAyMTksIGI6IDQ5IH0sXG4gICAgeyB4OiA2MjQsIHk6IDMwNywgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDMzOCwgeTogMTIsIHI6IDg4LCBnOiAwLCBiOiA4IH0sXG4gICAgeyB4OiA0MzIsIHk6IDIyMSwgcjogODIsIGc6IDQ4LCBiOiA1NyB9LFxuICAgIHsgeDogNDIxLCB5OiAxMTYsIHI6IDg0LCBnOiAyNywgYjogNDIgfSxcbiAgXSxcbiAgeyB4OiA1OTAsIHk6IDMyNyB9XG4pO1xuXG4vLyBleHBvcnQgY29uc3QgcmZwYWdlQmF0dGxlVG93ZXJPZlN3ZWV0Q2hhb3NWaWN0b3J5ID0gbmV3IFBhZ2UoXG4vLyAgICdyZnBhZ2VCYXR0bGVUb3dlck9mU3dlZXRDaGFvc1ZpY3RvcnknLFxuLy8gICBwYWdlQmF0dGxlVG93ZXJPZlN3ZWV0Q2hhb3NWaWN0b3J5LFxuLy8gICBwYWdlQmF0dGxlVG93ZXJPZlN3ZWV0Q2hhb3NWaWN0b3J5WzBdXG4vLyApO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlQ2FuRXF1aXBUb3BwaW5nID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VDYW5FcXVpcFRvcHBpbmcnLFxuICBbXG4gICAgeyB4OiA0MDAsIHk6IDI2NiwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gICAgeyB4OiAyNjcsIHk6IDE2MCwgcjogMjMzLCBnOiAxODIsIGI6IDEzMSB9LFxuICAgIHsgeDogMjk0LCB5OiAyNjQsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICAgIHsgeDogMzg5LCB5OiAxNjIsIHI6IDE5OSwgZzogMTgxLCBiOiAxNzAgfSxcbiAgXSxcbiAgeyB4OiA0MDAsIHk6IDI2NiB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUNhbkVxdWlwVG9wcGluZzIgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUNhbkVxdWlwVG9wcGluZzInLFxuICBbXG4gICAgeyB4OiAzOTcsIHk6IDI2NywgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDI3NywgeTogMTYzLCByOiAyNTUsIGc6IDI1NSwgYjogMTg2IH0sXG4gICAgeyB4OiAyNjUsIHk6IDE2NSwgcjogMTk4LCBnOiAxODIsIGI6IDE3MyB9LFxuICAgIHsgeDogMjY1LCB5OiAxNjUsIHI6IDE5OCwgZzogMTgyLCBiOiAxNzMgfSxcbiAgICB7IHg6IDI1MiwgeTogNzcsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gIF0sXG4gIHsgeDogMzk3LCB5OiAyNjcgfVxuKTtcbi8vIE1haW5seSBpbiBndWlsZCBhbGxpYW5jZVxuZXhwb3J0IGNvbnN0IHJmcGFnZUNhbkVxdWlwVG9wcGluZzMgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUNhbkVxdWlwVG9wcGluZzMnLFxuICBbXG4gICAgeyB4OiA0MDcsIHk6IDI3NSwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDI5OSwgeTogMjc1LCByOiA4LCBnOiAxNjYsIGI6IDIyMiB9LFxuICAgIHsgeDogMjc2LCB5OiAxNTQsIHI6IDI1NSwgZzogMjUxLCBiOiAxNjQgfSxcbiAgICB7IHg6IDI3NiwgeTogMTU5LCByOiAyMzIsIGc6IDE2NSwgYjogOTYgfSxcbiAgICB7IHg6IDI4OCwgeTogMTU2LCByOiAyMjYsIGc6IDIyNiwgYjogMjI2IH0sXG4gICAgeyB4OiAyNjIsIHk6IDE1NSwgcjogMTk4LCBnOiAxODIsIGI6IDE3MyB9LFxuICBdLFxuICB7IHg6IDQwNywgeTogMjc1IH1cbik7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VOb3RTZWxlY3RUZWFtTGVhZGVyID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VOb3RTZWxlY3RUZWFtTGVhZGVyJyxcbiAgW1xuICAgIHsgeDogMzE4LCB5OiA0OSwgcjogMjU1LCBnOiAyMTIsIGI6IDAgfSxcbiAgICB7IHg6IDMwNiwgeTogNjQsIHI6IDI1NSwgZzogMjA5LCBiOiAwIH0sXG4gICAgeyB4OiAzMjksIHk6IDYzLCByOiAyMzksIGc6IDE2NSwgYjogNCB9LFxuICAgIHsgeDogMzA2LCB5OiA4NSwgcjogMjIzLCBnOiAxNDUsIGI6IDY5IH0sXG4gICAgeyB4OiAzMjcsIHk6IDg1LCByOiAyMjMsIGc6IDE0NCwgYjogNzAgfSxcbiAgICB7IHg6IDM0NCwgeTogODYsIHI6IDM2LCBnOiA0NiwgYjogNjQgfSxcbiAgICB7IHg6IDM3MCwgeTogODYsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gICAgeyB4OiA0MDcsIHk6IDIzNCwgcjogMjE5LCBnOiAyMDcsIGI6IDE5OSB9LFxuICAgIHsgeDogNDAzLCB5OiAyNzQsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogMjk0LCB5OiAyNzMsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICBdLFxuICB7IHg6IDM2OSwgeTogMjc1IH1cbik7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VBZGRNb3JlQ29va2llcyA9IG5ldyBQYWdlKFxuICAncmZwYWdlQWRkTW9yZUNvb2tpZXMnLFxuICBbXG4gICAgeyB4OiAzMDQsIHk6IDI1MywgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gICAgeyB4OiAxNjgsIHk6IDMzMSwgcjogNjAsIGc6IDEwMywgYjogNiB9LFxuICAgIHsgeDogMTUyLCB5OiAxODAsIHI6IDY1LCBnOiA2NSwgYjogNTMgfSxcbiAgICB7IHg6IDEzMSwgeTogMjAzLCByOiA2NSwgZzogNjYsIGI6IDUyIH0sXG4gICAgeyB4OiAxMDEsIHk6IDIzNSwgcjogNjUsIGc6IDY4LCBiOiA1MyB9LFxuICAgIHsgeDogMTc2LCB5OiAyNDIsIHI6IDk3LCBnOiA3NSwgYjogMzMgfSxcbiAgXSxcbiAgeyB4OiAzMDQsIHk6IDI1MyB9XG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlQmF0dGxlUGF1c2VkID0gbmV3IFBhZ2UoJ3JmcGFnZUJhdHRsZVBhdXNlZCcsIFtcbiAgeyB4OiAzMDcsIHk6IDIwMCwgcjogMjUzLCBnOiAyNTMsIGI6IDI1MSB9LFxuICB7IHg6IDYyMSwgeTogMjYsIHI6IDU2LCBnOiAxNjUsIGI6IDIyNyB9LFxuICB7IHg6IDYxMywgeTogMjMsIHI6IDM1LCBnOiA4NSwgYjogMTE0IH0sXG4gIHsgeDogMjc4LCB5OiAxNjAsIHI6IDEyLCBnOiAxNjUsIGI6IDIxOSB9LFxuICB7IHg6IDI4OCwgeTogMTU3LCByOiAyNDEsIGc6IDI0MSwgYjogMjM5IH0sXG4gIHsgeDogMjkzLCB5OiAyMDEsIHI6IDI0MSwgZzogOTAsIGI6IDI4IH0sXG5dKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUluR2FjaGEgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUluR2FjaGEnLFxuICBbXG4gICAgeyB4OiA2MTksIHk6IDE4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MjYsIHk6IDE4LCByOiA2MiwgZzogMTY0LCBiOiAyMzIgfSxcbiAgICB7IHg6IDUyMSwgeTogMTQsIHI6IDAsIGc6IDE5MiwgYjogMjU1IH0sXG4gICAgeyB4OiA0MDcsIHk6IDE5LCByOiAyNTUsIGc6IDIwOSwgYjogMCB9LFxuICAgIHsgeDogMjEsIHk6IDE0LCByOiAxMTcsIGc6IDU0LCBiOiA0MCB9LFxuICAgIHsgeDogMzcsIHk6IDI0LCByOiA3NCwgZzogNTgsIGI6IDU4IH0sXG4gICAgeyB4OiA1OSwgeTogMjY2LCByOiAxNywgZzogMjEsIGI6IDI5IH0sXG4gICAgeyB4OiA1OCwgeTogMjE4LCByOiAxNywgZzogMjEsIGI6IDI5IH0sXG4gIF0sXG4gIHsgeDogNjE5LCB5OiAxOCB9XG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlSW5Ub3dlck9mUmVjb3JkcyA9IG5ldyBQYWdlKCdyZnBhZ2VJblRvd2VyT2ZSZWNvcmRzJywgW1xuICB7IHg6IDYxOCwgeTogMjMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAxMDYsIHk6IDIzLCByOiAzOSwgZzogMzYsIGI6IDMyIH0sXG4gIHsgeDogOTIsIHk6IDIwLCByOiAxMTQsIGc6IDExMiwgYjogMTEwIH0sXG4gIHsgeDogMTYsIHk6IDE0LCByOiAxNzksIGc6IDE3OSwgYjogMTc5IH0sXG4gIHsgeDogNCwgeTogMTgsIHI6IDM1LCBnOiAzNCwgYjogMzMgfSxcbl0pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlSW5DYW5keUhvdXNlID0gbmV3IFBhZ2UoJ3JmcGFnZUluQ2FuZHlIb3VzZScsIFtcbiAgeyB4OiAyNjgsIHk6IDI0MCwgcjogMTI3LCBnOiAyNDEsIGI6IDIwNSB9LFxuICB7IHg6IDMxNiwgeTogMjM2LCByOiAyMTIsIGc6IDIxMiwgYjogMjEyIH0sXG4gIHsgeDogMzE2LCB5OiAyMzksIHI6IDU4LCBnOiA1OCwgYjogNTggfSxcbl0pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlTm90RW5vdWdoR25vbWVCdWlsZGVycyA9IG5ldyBQYWdlKCdyZnBhZ2VOb3RFbm91Z2hHbm9tZUJ1aWxkZXJzJywgW1xuICB7IHg6IDM4MSwgeTogMzE5LCByOiAxOTAsIGc6IDEsIGI6IDM2IH0sXG4gIHsgeDogMzgxLCB5OiAzMjUsIHI6IDI1NCwgZzogMjU0LCBiOiAyNTMgfSxcbiAgeyB4OiAzODYsIHk6IDMyNywgcjogMjU1LCBnOiAyMjEsIGI6IDI0MCB9LFxuICB7IHg6IDQ2NSwgeTogNzksIHI6IDU4LCBnOiAxNjUsIGI6IDIzMSB9LFxuXSk7XG5cbi8vcmdiKDE2NiwxMDQsNjUpXG5leHBvcnQgY29uc3QgcmZwYWdlSW5Qcm9kdWN0aW9uID0gbmV3IFBhZ2UoJ3JmcGFnZUluUHJvZHVjdGlvbicsIFtcbiAgeyB4OiAxNywgeTogNDQsIHI6IDE2NSwgZzogMTA1LCBiOiA2NiB9LFxuICB7IHg6IDg0LCB5OiA0MiwgcjogMTc4LCBnOiAxMDMsIGI6IDY2IH0sXG4gIHsgeDogMjYsIHk6IDMwLCByOiAxMjYsIGc6IDczLCBiOiA0MSB9LFxuXSk7XG5leHBvcnQgY29uc3QgcmZwYWdlSW5NYWdpY0xhYiA9IG5ldyBQYWdlKCdyZnBhZ2VJbk1hZ2ljTGFiJywgW1xuICB7IHg6IDQwOSwgeTogMTYsIHI6IDI1NSwgZzogMjAzLCBiOiAwIH0sXG4gIHsgeDogNTI3LCB5OiAxOSwgcjogMCwgZzogMTM0LCBiOiAyNTUgfSxcbiAgeyB4OiAxOCwgeTogNDYsIHI6IDEyMywgZzogODksIGI6IDE0MCB9LFxuICB7IHg6IDgxLCB5OiA0NywgcjogMTIzLCBnOiA4OSwgYjogMTQwIH0sXG4gIHsgeDogMjcsIHk6IDMwLCByOiAxMTUsIGc6IDg1LCBiOiAxNDAgfSxcbl0pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZU5vdEVub3VnaFN0b2NrSW5Qcm9kdWN0aW9uID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VOb3RFbm91Z2hTdG9ja0luUHJvZHVjdGlvbicsXG4gIFtcbiAgICB7IHg6IDQyOCwgeTogOTgsIHI6IDU2LCBnOiAxNjcsIGI6IDIzMSB9LFxuICAgIHsgeDogMzQ1LCB5OiAxMDQsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gICAgeyB4OiAzNzAsIHk6IDE3NiwgcjogMjQzLCBnOiAyMzMsIGI6IDIyMyB9LFxuICAgIHsgeDogMzQ5LCB5OiAyNDcsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogNzMsIHk6IDMxLCByOiA1OSwgZzogMzMsIGI6IDIxIH0sXG4gICAgeyB4OiAyMywgeTogNDgsIHI6IDgzLCBnOiA1MiwgYjogMzEgfSxcbiAgXVxuICAvLyByZnBhZ2VOb3RFbm91Z2hTdG9ja0luUHJvZHVjdGlvbiBjYW5ub3Qgc2ltcGx5IHRhcCBvZmYsIGFzIG5lZWQgdG8gZ28gbmV4dCBwcm9kdWN0aW9uIGJ1aWxkaW5nXG4gIC8vIHsgeDogNDI4LCB5OiA5OCB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUNhbmNlbFByb2R1Y3Rpb24gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUNhbmNlbFByb2R1Y3Rpb24nLFxuICBbXG4gICAgeyB4OiA0NDMsIHk6IDk3LCByOiA1NywgZzogMTY2LCBiOiAyMzEgfSxcbiAgICB7IHg6IDQzNiwgeTogOTcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM5MCwgeTogMTA1LCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogNDA4LCB5OiAyNDEsIHI6IDgsIGc6IDE2NiwgYjogMjIyIH0sXG4gICAgeyB4OiAyOTYsIHk6IDI0MywgcjogOCwgZzogMTY2LCBiOiAyMjIgfSxcbiAgICB7IHg6IDIwLCB5OiA0NSwgcjogMTY2LCBnOiAxMDQsIGI6IDYzIH0sXG4gICAgeyB4OiAyMiwgeTogMTA4LCByOiAxNjYsIGc6IDEwNCwgYjogNjMgfSxcbiAgICB7IHg6IDczLCB5OiAzNCwgcjogMTI0LCBnOiA2OSwgYjogNDQgfSxcbiAgXSxcbiAgeyB4OiA0NDMsIHk6IDk3IH1cbik7XG4vLyBJdGVtcyBsaWtlIFwiSG9tZW1hZGUgQ2hlZXNlXCIgaGFzIHRvbyBsb25nIG5hbWUgY2F1c2luZyB0aW1lciBjaGFuZ2UgdG8gbmV3IGxpbmVcbmV4cG9ydCBjb25zdCByZnBhZ2VDYW5jZWxQcm9kdWN0aW9uTG9uZ0l0ZW1OYW1lID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VDYW5jZWxQcm9kdWN0aW9uTG9uZ0l0ZW1OYW1lJyxcbiAgW1xuICAgIHsgeDogNzQsIHk6IDMxLCByOiA2NCwgZzogMzYsIGI6IDIzIH0sXG4gICAgeyB4OiAyMDcsIHk6IDUwLCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgIHsgeDogMjAwLCB5OiAxNTksIHI6IDUsIGc6IDEzMywgYjogMjU1IH0sXG4gICAgeyB4OiAzODcsIHk6IDIwNCwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gICAgeyB4OiAyMDQsIHk6IDE4OCwgcjogMjQxLCBnOiAyMzEsIGI6IDIyNCB9LFxuICAgIHsgeDogMjAyLCB5OiAxOTksIHI6IDQ0LCBnOiA3OCwgYjogMTA3IH0sXG4gICAgeyB4OiAyMDIsIHk6IDI0NCwgcjogMzQsIGc6IDM4LCBiOiA3MSB9LFxuICAgIHsgeDogNDUzLCB5OiAzMiwgcjogNTIsIGc6IDE1OSwgYjogMjI4IH0sXG4gIF0sXG4gIHsgeDogNDUzLCB5OiAzMiB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUNhbmNlbE11bHRpcGxlUHJvZHVjdGlvbiA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ2FuY2VsTXVsdGlwbGVQcm9kdWN0aW9uJyxcbiAgW1xuICAgIHsgeDogNDQyLCB5OiA5NCwgcjogMzQsIGc6IDg1LCBiOiAxMTUgfSxcbiAgICB7IHg6IDQwNCwgeTogMjQ0LCByOiA4LCBnOiAxNjYsIGI6IDIyMiB9LFxuICAgIHsgeDogMzAzLCB5OiAyNDYsIHI6IDgsIGc6IDE2NiwgYjogMjIyIH0sXG4gICAgeyB4OiA0MzAsIHk6IDIzOCwgcjogMjIyLCBnOiAyMDcsIGI6IDE5OCB9LFxuICAgIHsgeDogMjAsIHk6IDQ1LCByOiAxNjYsIGc6IDEwNCwgYjogNjMgfSxcbiAgICB7IHg6IDIyLCB5OiAxMDgsIHI6IDE2NiwgZzogMTA0LCBiOiA2MyB9LFxuICAgIHsgeDogNzMsIHk6IDM0LCByOiAxMjQsIGc6IDY5LCBiOiA0NCB9LFxuICBdLFxuICB7IHg6IDQ0MiwgeTogOTQgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VOb3RFbm91Z2hQdXJpdHlDcnlzdGFscyA9IG5ldyBQYWdlKCdyZnBhZ2VOb3RFbm91Z2hQdXJpdHlDcnlzdGFscycsIFtcbiAgeyB4OiA0MzUsIHk6IDk2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMzQ0LCB5OiAxMDQsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gIHsgeDogMzQzLCB5OiAxNjAsIHI6IDUyLCBnOiAxNTgsIGI6IDIyOCB9LFxuICB7IHg6IDMyNSwgeTogMTc0LCByOiAyNTUsIGc6IDI1NCwgYjogMjU1IH0sXG4gIHsgeDogMzExLCB5OiAxODQsIHI6IDI1NCwgZzogMjU0LCBiOiAyNTUgfSxcbiAgeyB4OiAzMDAsIHk6IDE3NywgcjogMjA3LCBnOiAxOTMsIGI6IDE4MiB9LFxuICB7IHg6IDM0MiwgeTogMjU0LCByOiAxOTEsIGc6IDg0LCBiOiAyNDEgfSxcbiAgeyB4OiA0MDIsIHk6IDI1NiwgcjogMjE5LCBnOiAyMDcsIGI6IDE5OSB9LFxuICB7IHg6IDcxLCB5OiAzNSwgcjogNTAsIGc6IDM2LCBiOiA2NiB9LFxuXSk7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VJbkNvb2tpZUFjdGl2aXR5RGFzaGJvYXJkID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VJbkNvb2tpZUFjdGl2aXR5RGFzaGJvYXJkJyxcbiAgW1xuICAgIHsgeDogMjQ3LCB5OiAzMzEsIHI6IDU2LCBnOiA3NCwgYjogMTA3IH0sXG4gICAgeyB4OiAyOCwgeTogMTgsIHI6IDIyOSwgZzogMTU4LCBiOiA3NiB9LFxuICAgIHsgeDogNTU4LCB5OiAzMzksIHI6IDIzOSwgZzogMTkwLCBiOiA0MSB9LFxuICBdLFxuICB7IHg6IDQwMCwgeTogMzM3IH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlSW5Qcm9kdWN0aW9uRGFzaGJvYXJkID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VJblByb2R1Y3Rpb25EYXNoYm9hcmQnLFxuICBbXG4gICAgeyB4OiA0MDgsIHk6IDMzMCwgcjogNTYsIGc6IDc0LCBiOiAxMDcgfSxcbiAgICB7IHg6IDU0MCwgeTogMzQxLCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogMjcsIHk6IDE2LCByOiAyMDYsIGc6IDMyLCBiOiA0OSB9LFxuICBdLFxuICB7IHg6IDE0LCB5OiA0OCB9XG4pO1xuXG4vLyBJbiBraW5nZG9tIHZpbGxpYWdlLCBzdG9jayBpcyBmdWxsIGNvdWxkIGJlIDEpIGhhcyBleHBhbmQgYW5kIGJsdWUgY3Jvc3Mgb24gdXBwZXIgcmlnaHQgb3IgMikgb25seSBPSywgbm8gY3Jvc3NcbmV4cG9ydCBjb25zdCByZnBhZ2VTdG9ja0lzRnVsbCA9IG5ldyBQYWdlKCdyZnBhZ2VTdG9ja0lzRnVsbCcsIFtcbiAgeyB4OiAzNzQsIHk6IDEwMywgcjogNjAsIGc6IDcwLCBiOiAxMDUgfSxcbiAgeyB4OiAzMjAsIHk6IDgzLCByOiAxMDcsIGc6IDQ4LCBiOiA0OSB9LFxuICB7IHg6IDMyMCwgeTogOTMsIHI6IDEzMiwgZzogMTYsIGI6IDggfSxcbiAgeyB4OiAzMjEsIHk6IDEwOCwgcjogMjQxLCBnOiAyMjksIGI6IDIxNiB9LFxuICB7IHg6IDM0NCwgeTogMjQ0LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgeyB4OiAzNDQsIHk6IDIxMCwgcjogMjQzLCBnOiAyMzMsIGI6IDIyMyB9LFxuXSk7XG5cbi8vIENhc2Ugbm90IGV4aXN0IGZvciBub3dcbmV4cG9ydCBjb25zdCByZnBhZ2VCb3VudGllc0F0Mm5kU2xvdCA9IG5ldyBQYWdlKCdyZnBhZ2VCb3VudGllc0F0Mm5kU2xvdCcsIFtcbiAgeyB4OiAyNDIsIHk6IDY4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMzQ3LCB5OiAxMDIsIHI6IDE5OCwgZzogNjUsIGI6IDAgfSxcbiAgeyB4OiAzMjgsIHk6IDExMiwgcjogMjA2LCBnOiAxNTAsIGI6IDY2IH0sXG4gIHsgeDogMjk0LCB5OiAxMzAsIHI6IDIyMiwgZzogMTQ3LCBiOiA5NiB9LFxuICB7IHg6IDIzMSwgeTogMTM4LCByOiAyNTMsIGc6IDIzNCwgYjogNzQgfSxcbl0pO1xuXG4vLyBNb3N0IGdlbmVyYWwgY2FzZSwgMS4gd29ybGQgZXhwbG9yYXRpb24vUFZQIDIuIHN1cGVyIG1heWhlbVxuZXhwb3J0IGNvbnN0IHJmcGFnZUJvdW50aWVzQXQzcmRTbG90ID0gbmV3IFBhZ2UoJ3JmcGFnZUJvdW50aWVzQXQzcmRTbG90JywgW1xuICB7IHg6IDU5NSwgeTogODYsIHI6IDE0OCwgZzogNzMsIGI6IDMzIH0sXG4gIHsgeDogNTg4LCB5OiAxNTIsIHI6IDE3MywgZzogMTIyLCBiOiA2NiB9LFxuICB7IHg6IDU4NSwgeTogMTc3LCByOiAyNCwgZzogMTIsIGI6IDggfSxcbl0pO1xuXG4vLyBQZXJoYXBzIHdpdGggQ29va2xpZSBPZHlzc2VzIGFuZCBzdXBlciBtYXloZW0gbm90IGZpbmlzaGVkXG4vLyBleHBvcnQgY29uc3QgcGFnZUJvdW50aWVzQXQ0cmRTbG90ID0gbmV3IFBhZ2UoJ3BhZ2VCb3VudGllc0F0NHJkU2xvdCcsIFtcbi8vICAgLy8gVE9ET1xuLy8gXSk7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VTZWxlY3RBZHZhbnR1cmUgPSBuZXcgUGFnZSgncmZwYWdlU2VsZWN0QWR2YW50dXJlJywgW1xuICB7IHg6IDYyMCwgeTogMTEsIHI6IDU3LCBnOiAxNjYsIGI6IDIzMSB9LFxuICB7IHg6IDU4NSwgeTogMjEsIHI6IDIyMiwgZzogMTc0LCBiOiA3NCB9LFxuICB7IHg6IDUxNCwgeTogMTYsIHI6IDIzOSwgZzogMTc0LCBiOiA5OSB9LFxuICB7IHg6IDQyNSwgeTogMjEsIHI6IDAsIGc6IDEzOCwgYjogMjU1IH0sXG4gIHsgeDogMjYsIHk6IDI4LCByOiAxNTksIGc6IDg1LCBiOiAyOCB9LFxuICB7IHg6IDI1LCB5OiAxMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDE3LCB5OiAyNiwgcjogODAsIGc6IDExNSwgYjogMTg3IH0sXG4gIHsgeDogMTYwLCB5OiAzMTEsIHI6IDI5LCBnOiAzNiwgYjogNDggfSxcbl0pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlRHJhZ29uVG90YWxEYW1hZ2UgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZURyYWdvblRvdGFsRGFtYWdlJyxcbiAgW1xuICAgIHsgeDogNDI3LCB5OiAyNDMsIHI6IDIzMSwgZzogMjE1LCBiOiAyMjIgfSxcbiAgICB7IHg6IDQxMCwgeTogMjQ3LCByOiAxNTYsIGc6IDAsIGI6IDQ5IH0sXG4gICAgeyB4OiAyNjAsIHk6IDI2OCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTU1LCB5OiAzMTEsIHI6IDg5LCBnOiAyMiwgYjogNDUgfSxcbiAgXSxcbiAgeyB4OiA0MjcsIHk6IDI0MyB9XG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlUmVkVmFsdmV0RHJhZ29uV29uID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VSZWRWYWx2ZXREcmFnb25Xb24nLFxuICBbXG4gICAgeyB4OiAyODksIHk6IDIzOCwgcjogMjM5LCBnOiAyOCwgYjogNTcgfSxcbiAgICB7IHg6IDM1OCwgeTogMjMzLCByOiAyMjIsIGc6IDE2LCBiOiA0MSB9LFxuICAgIHsgeDogNDI2LCB5OiAyMzYsIHI6IDIzMSwgZzogMjE2LCBiOiAyMjMgfSxcbiAgXSxcbiAgeyB4OiAyODksIHk6IDIzOCB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZURyYWdvbkhhc0V4dHJhVGltZSA9IG5ldyBQYWdlKFxuICAncmZwYWdlRHJhZ29uSGFzRXh0cmFUaW1lJyxcbiAgW1xuICAgIHsgeDogNDA1LCB5OiAyODEsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogMzA0LCB5OiAyODAsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICAgIHsgeDogNjA4LCB5OiAzMzMsIHI6IDYwLCBnOiAxMDMsIGI6IDYgfSxcbiAgICB7IHg6IDUxNiwgeTogMzMwLCByOiA2LCBnOiA4MywgYjogMTExIH0sXG4gICAgeyB4OiAxMjgsIHk6IDMzMywgcjogNiwgZzogODMsIGI6IDExMSB9LFxuICBdLFxuICB7IHg6IDQwNSwgeTogMjgxIH1cbik7XG5cbmV4cG9ydCBjb25zdCBwYWdlVG9TQ1RlYW1zTm90TWVldFJlcXVpcmVtZW50ID0gW1xuICB7IHg6IDM0MywgeTogMjQ0LCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICB7IHg6IDMzNywgeTogMjIsIHI6IDc3LCBnOiAxNSwgYjogMjUgfSxcbiAgeyB4OiAyODcsIHk6IDIxLCByOiAyMSwgZzogMywgYjogNSB9LFxuICB7IHg6IDQ5NiwgeTogMzE4LCByOiAzMywgZzogNiwgYjogMTAgfSxcbl07XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VIYWxsT2ZBbmNpZW50SGVyb3MgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUhhbGxPZkFuY2llbnRIZXJvcycsXG4gIFtcbiAgICB7IHg6IDYxMSwgeTogMTgsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDUyNCwgeTogMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNDMgfSxcbiAgICB7IHg6IDUyMiwgeTogMjcsIHI6IDIzOCwgZzogMTMyLCBiOiAyMjggfSxcbiAgICB7IHg6IDUxNCwgeTogNiwgcjogMTA3LCBnOiAxMzksIGI6IDEwOCB9LFxuICAgIHsgeDogNDc4LCB5OiAyMiwgcjogMjM5LCBnOiAxMDYsIGI6IDIxMyB9LFxuICAgIHsgeDogMzE0LCB5OiA0NSwgcjogMTcwLCBnOiAyMDUsIGI6IDI1MCB9LFxuICAgIHsgeDogMTY3LCB5OiAzOCwgcjogMjQwLCBnOiAyNDAsIGI6IDIyMCB9LFxuICAgIHsgeDogNiwgeTogMTI0LCByOiAyMzksIGc6IDcwLCBiOiA4OSB9LFxuICAgIHsgeDogNywgeTogMTcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQzLCB5OiAxOSwgcjogODAsIGc6IDc3LCBiOiA3NyB9LFxuICAgIHsgeDogNjYsIHk6IDE5LCByOiAyMDEsIGc6IDIwMCwgYjogMjAwIH0sXG4gIF0sXG4gIHsgeDogNjExLCB5OiAxOCB9XG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlQ29va2llS2luZ2RvbUlzTm90UmVzcG9uZGluZyA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ29va2llS2luZ2RvbUlzTm90UmVzcG9uZGluZycsXG4gIFtcbiAgICB7IHg6IDM5OSwgeTogMjA5LCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiAxODIsIHk6IDE2NywgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICAgIHsgeDogMzU5LCB5OiAxODQsIHI6IDIzOCwgZzogMjM4LCBiOiAyMzggfSxcbiAgICB7IHg6IDI4MSwgeTogMjExLCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiAyODAsIHk6IDE4NiwgcjogMTYyLCBnOiAxNjIsIGI6IDE2MiB9LFxuICAgIHsgeDogMjE0LCB5OiAxNTcsIHI6IDIyNywgZzogMjI3LCBiOiAyMjcgfSxcbiAgICB7IHg6IDI0MiwgeTogMTU3LCByOiAzMSwgZzogMzEsIGI6IDMxIH0sXG4gICAgeyB4OiAzOTMsIHk6IDIxNywgcjogMTQyLCBnOiAyMDIsIGI6IDE5NyB9LFxuICBdLFxuICB7IHg6IDM5OSwgeTogMjA5IH1cbik7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VDb29raWVLaW5nZG9tSXNOb3RSZXNwb25kaW5nMiA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ29va2llS2luZ2RvbUlzTm90UmVzcG9uZGluZzInLFxuICBbXG4gICAgeyB4OiA0NzgsIHk6IDIyMSwgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICAgIHsgeDogMjUyLCB5OiAxOTAsIHI6IDIzOCwgZzogMjM4LCBiOiAyMzggfSxcbiAgICB7IHg6IDE0NiwgeTogMTg5LCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiAxNTUsIHk6IDE1NywgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICAgIHsgeDogMjIwLCB5OiAxNTYsIHI6IDg3LCBnOiA4NywgYjogODcgfSxcbiAgICB7IHg6IDMyNSwgeTogMTYwLCByOiAxMDAsIGc6IDEwMCwgYjogMTAwIH0sXG4gIF0sXG4gIHsgeDogNDc4LCB5OiAyMjEgfVxuKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUNvb2tpZUtpbmdkb21IYXNTdG9wcGVkID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VDb29raWVLaW5nZG9tSGFzU3RvcHBlZCcsXG4gIFtcbiAgICB7IHg6IDQ4NCwgeTogMjA1LCByOiAwLCBnOiAxNTAsIGI6IDEzNiB9LFxuICAgIHsgeDogNDc4LCB5OiAyMDUsIHI6IDIzOCwgZzogMjM4LCBiOiAyMzggfSxcbiAgICB7IHg6IDQ0MCwgeTogMTcyLCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiA0MDIsIHk6IDE2OSwgcjogNTcsIGc6IDU3LCBiOiA1NyB9LFxuICBdLFxuICB7IHg6IDQ4NCwgeTogMjA1IH1cbik7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VJbkNvb2tpZUhlYWQgPSBuZXcgUGFnZSgncmZwYWdlSW5Db29raWVIZWFkJywgW1xuICB7IHg6IDYxMCwgeTogMjEsIHI6IDU3LCBnOiAxNjYsIGI6IDIzMSB9LFxuICB7IHg6IDMwMCwgeTogOTMsIHI6IDIzNSwgZzogMjM1LCBiOiAyMzUgfSxcbiAgeyB4OiAzOCwgeTogNTIsIHI6IDEzMCwgZzogMTMxLCBiOiAxMzIgfSxcbiAgeyB4OiAxMiwgeTogMjAsIHI6IDE0MSwgZzogMTUwLCBiOiAxNjcgfSxcbiAgeyB4OiAxMiwgeTogMjcsIHI6IDIxLCBnOiAzMiwgYjogNDcgfSxcbl0pO1xuXG4vLyBleHBvcnQgY29uc3QgcmZwYWdlUHVyY2hhc2VEaWFtb25kID0gbmV3IFBhZ2UoJ3JmcGFnZVB1cmNoYXNlRGlhbW9uZCcsIFtcbi8vICAgeyB4OiA0MzUsIHk6IDEwNSwgcjogNTYsIGc6IDE2NywgYjogMjMxIH0sXG4vLyAgIHsgeDogMzEwLCB5OiA4NywgcjogMjEsIGc6IDIwNiwgYjogMjMyIH0sXG4vLyAgIHsgeDogMzE3LCB5OiAxMDksIHI6IDE1NCwgZzogODMsIGI6IDU1IH0sXG4vLyAgIHsgeDogMzQ0LCB5OiAxNzQsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuLy8gICB7IHg6IDI4OCwgeTogMTE0LCByOiAxMTIsIGc6IDIyOCwgYjogMjMzIH0sXG4vLyBdKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUdvb2dsZVBsYXlzdG9yZUhhc1N0b3BwZWQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUdvb2dsZVBsYXlzdG9yZUhhc1N0b3BwZWQnLFxuICBbXG4gICAgeyB4OiA0ODUsIHk6IDIwNywgcjogMTAsIGc6IDE1MywgYjogMTQwIH0sXG4gICAgeyB4OiAxNDcsIHk6IDE3MCwgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICAgIHsgeDogMjYzLCB5OiAxNzIsIHI6IDIzOCwgZzogMjM4LCBiOiAyMzggfSxcbiAgICB7IHg6IDMyNywgeTogMTcyLCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiA0MTgsIHk6IDE3MSwgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICBdLFxuICB7IHg6IDQ4NSwgeTogMjA3IH1cbik7XG5cbi8vIFRoaXMgd2luZG93IGNhbiBjaGFuZ2UgbGFuZ3VhZ2Vcbi8vIE1hcmtlZCBhcyBjb25mdXNlZCB3aXRoIHJmcGFnZU5vdEVub3VnaEl0ZW1Ub0J1eVRoaXMgYW5kIHdlIGhhdmUgcmZwYWdlRG93bmxvYWREYXRhQW5kVm9pY2VPdmVyVW5jaGVja2VkXG4vLyBleHBvcnQgY29uc3QgcGFnZU5ld0RhdGFQYWNrQXZhaWxhYmxlID0gW1xuLy8gICB7IHg6IDM1OCwgeTogMjY1LCByOiAxMjMsIGc6IDIwNSwgYjogOCB9LFxuLy8gICB7IHg6IDM3MywgeTogMjE5LCByOiA4LCBnOiAxNjUsIGI6IDIxOSB9LFxuLy8gICB7IHg6IDIxMCwgeTogMTkwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4vLyAgIHsgeDogMjU4LCB5OiA4MywgcjogNTcsIGc6IDY5LCBiOiAxMDYgfSxcbi8vICAgeyB4OiAyNDYsIHk6IDEyNSwgcjogMTUzLCBnOiAxNDcsIGI6IDEzOSB9LFxuLy8gXTtcbi8vIGV4cG9ydCBjb25zdCByZnBhZ2VOZXdEYXRhUGFja0F2YWlsYWJsZSA9IG5ldyBQYWdlKCdyZnBhZ2VOZXdEYXRhUGFja0F2YWlsYWJsZScsIHBhZ2VOZXdEYXRhUGFja0F2YWlsYWJsZSwgcGFnZU5ld0RhdGFQYWNrQXZhaWxhYmxlWzBdKTtcblxuLy8gTWFya2VkIGFzIGNvbmZ1c2VkIHdpdGggcmZwYWdlTm90RW5vdWdoSXRlbVRvQnV5VGhpc1xuLy8gZXhwb3J0IGNvbnN0IHBhZ2VOZXdEYXRhUGFja0Rvd25sb2FkRmFpbGVkID0gW1xuLy8gICB7IHg6IDM1MCwgeTogMjQ1LCByOiAxMjMsIGc6IDIwNSwgYjogOCB9LFxuLy8gICB7IHg6IDM0MiwgeTogMTA3LCByOiA1NywgZzogNjksIGI6IDEwNiB9LFxuLy8gICB7IHg6IDI2NCwgeTogMjQ1LCByOiAyMjEsIGc6IDIwNSwgYjogMTk1IH0sXG4vLyBdO1xuLy8gZXhwb3J0IGNvbnN0IHJmcGFnZU5ld0RhdGFQYWNrRG93bmxvYWRGYWlsZWQgPSBuZXcgUGFnZSgncmZwYWdlTmV3RGF0YVBhY2tEb3dubG9hZEZhaWxlZCcsIHBhZ2VOZXdEYXRhUGFja0Rvd25sb2FkRmFpbGVkLCBwYWdlTmV3RGF0YVBhY2tEb3dubG9hZEZhaWxlZFswXSk7XG5cbi8vIElmIGFscmVhZHkgY2hvb3NlIGxhbmd1YWdlIGluIHBhZ2VOZXdEYXRhUGFja0F2YWlsYWJsZSAoZG9uJ3QgdXNlIGFzIGxvb2tzIGxpa2UgcHVyY2hhc2Ugc3R1ZmYgd2l0aCBkaWFtb25kLCByZWFkIHRoZSB0ZXh0IGluc3RlYWQpXG4vLyBleHBvcnQgY29uc3QgcGFnZU5ld0RhdGFQYWNrQXZhaWFibGVOb0xhbmd1YWdlID0gW1xuLy8gICB7IHg6IDM2NiwgeTogMjUyLCByOiAxMjMsIGc6IDIwNSwgYjogOCB9LFxuLy8gICB7IHg6IDM5OCwgeTogMjU0LCByOiAyMjEsIGc6IDIwNSwgYjogMTk1IH0sXG4vLyAgIHsgeDogMjYzLCB5OiAyNTQsIHI6IDE0NywgZzogMjE3LCBiOiA1NyB9LFxuLy8gICB7IHg6IDI0NiwgeTogMjU0LCByOiAyMjEsIGc6IDIwNSwgYjogMTk1IH0sXG4vLyAgIHsgeDogMzQxLCB5OiA5NiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuLy8gICB7IHg6IDI4NCwgeTogOTksIHI6IDI1MywgZzogMjUzLCBiOiAyNTEgfSxcbi8vIF07XG4vLyBleHBvcnQgY29uc3QgcmZwYWdlTmV3RGF0YVBhY2tBdmFpYWJsZU5vTGFuZ3VhZ2UgPSBuZXcgUGFnZShcbi8vICAgJ3JmcGFnZU5ld0RhdGFQYWNrQXZhaWFibGVOb0xhbmd1YWdlJyxcbi8vICAgcGFnZU5ld0RhdGFQYWNrQXZhaWFibGVOb0xhbmd1YWdlLFxuLy8gICBwYWdlTmV3RGF0YVBhY2tBdmFpYWJsZU5vTGFuZ3VhZ2VbMF1cbi8vICk7XG5leHBvcnQgY29uc3QgcmZwYWdlRG93bmxvYWROZXdEYXRhUGFrSXNBdmFpbGFibGUgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZURvd25sb2FkTmV3RGF0YVBha0lzQXZhaWxhYmxlJyxcbiAgW1xuICAgIHsgeDogMzY4LCB5OiAyNTQsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiA0NDEsIHk6IDk5LCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogMzQ2LCB5OiAyNTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiAzNjgsIHk6IDI1NCB9XG4pO1xuXG4vLyBSZXBsYWNlZCBieSByZnBhZ2VHZW5lcmFsTWVzc2FnZVdpbmRvdyBjaGVja1xuLy8gZXhwb3J0IGNvbnN0IHJmcGFnZU5vdGlmeVF1aXRXaW5kb3cgPSBuZXcgUGFnZShcbi8vICAgJ3JmcGFnZU5vdGlmeVF1aXRXaW5kb3cnLFxuLy8gICBbXG4vLyAgICAgeyB4OiAzMDEsIHk6IDI1MCwgcjogOCwgZzogMTY2LCBiOiAyMjIgfSxcbi8vICAgICB7IHg6IDM3NCwgeTogOTgsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4vLyAgICAgeyB4OiA0MDQsIHk6IDI1MCwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbi8vICAgICB7IHg6IDQyNSwgeTogMjUwLCByOiAyMjIsIGc6IDIwNywgYjogMTk4IH0sXG4vLyAgIF0sXG4vLyAgIHsgeDogMzAxLCB5OiAyNTAgfVxuLy8gKTtcblxuLy8gU2VlbXMgb3V0ZGF0ZWQsIGFuZCBjb25mdXNlZCB3aXRoIHRpbWVqdW1wIGluIHRvc2Ncbi8vIGV4cG9ydCBjb25zdCByZnBhZ2VLaW5nZG9tUGFzc0FkcyA9IG5ldyBQYWdlKFxuLy8gICAncmZwYWdlS2luZ2RvbVBhc3NBZHMnLFxuLy8gICBbXG4vLyAgICAgeyB4OiAzNDksIHk6IDI4NiwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbi8vICAgICB7IHg6IDI1MCwgeTogMTUsIHI6IDQyLCBnOiA4LCBiOiAxNSB9LFxuLy8gICAgIHsgeDogMzIzLCB5OiAxOCwgcjogNDUsIGc6IDMzLCBiOiAxIH0sXG4vLyAgICAgeyB4OiA0MjcsIHk6IDE5LCByOiAwLCBnOiAyMywgYjogNDUgfSxcbi8vICAgXSxcbi8vICAgeyB4OiAzNDksIHk6IDI4NiB9XG4vLyApO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUluS2luZ2RvbVBhc3MgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUluS2luZ2RvbVBhc3MnLFxuICBbXG4gICAgeyB4OiA2MTgsIHk6IDM0MSwgcjogODIsIGc6IDIxMSwgYjogMCB9LFxuICAgIHsgeDogMTkzLCB5OiAxOSwgcjogMjU1LCBnOiAyMjMsIGI6IDAgfSxcbiAgICB7IHg6IDM5MywgeTogMTYsIHI6IDAsIGc6IDE5NSwgYjogMjU1IH0sXG4gICAgeyB4OiA0ODQsIHk6IDE2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogNjE4LCB5OiAzNDEgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VLaW5nZG9tUGFzc0l0ZW1Db2xsZWN0ZWQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUtpbmdkb21QYXNzSXRlbUNvbGxlY3RlZCcsXG4gIFtcbiAgICB7IHg6IDYxNiwgeTogMzQzLCByOiAxNDksIGc6IDE0OSwgYjogMTQ5IH0sXG4gICAgeyB4OiAxOTMsIHk6IDE5LCByOiAyNTUsIGc6IDIyMywgYjogMCB9LFxuICAgIHsgeDogMzkzLCB5OiAxNiwgcjogMCwgZzogMTk1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ4NCwgeTogMTYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiA2MTYsIHk6IDE3IH1cbik7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VXb3JsZENoYXQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVdvcmxkQ2hhdCcsXG4gIFtcbiAgICB7IHg6IDIyLCB5OiAyMiwgcjogNDEsIGc6IDk3LCBiOiAxNDggfSxcbiAgICB7IHg6IDMxLCB5OiAxMCwgcjogMTM1LCBnOiAxNTIsIGI6IDE5MiB9LFxuICAgIHsgeDogMTM3LCB5OiAxMiwgcjogNDEsIGc6IDY5LCBiOiAxMTUgfSxcbiAgICB7IHg6IDU4LCB5OiAzMzYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDE4LCB5OiAzNDMsIHI6IDUyLCBnOiA2NCwgYjogODkgfSxcbiAgXSxcbiAgeyB4OiAyMiwgeTogODEgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VJbkZyaWVuZHNMaXN0ID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VJbkZyaWVuZHNMaXN0JyxcbiAgW1xuICAgIHsgeDogMjMsIHk6IDkwLCByOiAyNTUsIGc6IDIyNywgYjogMCB9LFxuICAgIHsgeDogMTQsIHk6IDcwLCByOiAxMzUsIGc6IDE1MiwgYjogMTkyIH0sXG4gICAgeyB4OiAxMywgeTogNDcsIHI6IDUyLCBnOiA2NCwgYjogODkgfSxcbiAgICB7IHg6IDE4NywgeTogMzUxLCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogMjM0LCB5OiAzNTAsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gIF0sXG4gIHsgeDogMzkwLCB5OiAzMzUgfVxuKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUluU2hvcCA9IG5ldyBQYWdlKCdyZnBhZ2VJblNob3AnLCBbXG4gIHsgeDogNTIxLCB5OiAxOCwgcjogOCwgZzogMTI1LCBiOiAyNTUgfSxcbiAgeyB4OiA0MDUsIHk6IDIwLCByOiAyNTUsIGc6IDIyNCwgYjogMCB9LFxuICB7IHg6IDYxLCB5OiAxOCwgcjogMTksIGc6IDE5LCBiOiAyNiB9LFxuICB7IHg6IDksIHk6IDE4LCByOiAxOSwgZzogMTksIGI6IDI2IH0sXG4gIHsgeDogMTMsIHk6IDE5LCByOiA5MSwgZzogOTEsIGI6IDk1IH0sXG4gIHsgeDogNDEsIHk6IDI0LCByOiAxNDcsIGc6IDE0NywgYjogMTQ5IH0sXG5dKTtcblxuZXhwb3J0IGNvbnN0IHJmcGFnZUdhbWVTZXR0aW5ncyA9IG5ldyBQYWdlKFxuICAncmZwYWdlR2FtZVNldHRpbmdzJyxcbiAgW1xuICAgIHsgeDogNDk0LCB5OiAyNjcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ5NCwgeTogMjY5LCByOiAzNSwgZzogNDgsIGI6IDYzIH0sXG4gICAgeyB4OiA1ODEsIHk6IDE4LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1NDksIHk6IDE2LCByOiAyNDQsIGc6IDIzMywgYjogMjExIH0sXG4gICAgeyB4OiA1MTUsIHk6IDIxLCByOiAyMzMsIGc6IDE2MywgYjogOTAgfSxcbiAgICB7IHg6IDYxMCwgeTogMTEsIHI6IDE2MywgZzogMTk4LCBiOiAyMzUgfSxcbiAgICB7IHg6IDQ5NSwgeTogMTMxLCByOiA0MCwgZzogNTUsIGI6IDczIH0sXG4gICAgeyB4OiA0OTQsIHk6IDE0MiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDYxMiwgeTogMTkgfVxuKTtcblxuLy8gSW50cm9kdWNlZCBpbiBBdWcgOSAyMDIzIHVwZGF0ZVxuZXhwb3J0IGNvbnN0IHJmcGFnZVRyaWFsR3JvdW5kSW50cm8gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVRyaWFsR3JvdW5kSW50cm8nLFxuICBbXG4gICAgeyB4OiA2MTMsIHk6IDIyLCByOiAyLCBnOiA2LCBiOiA4IH0sXG4gICAgeyB4OiA1NDksIHk6IDE1OSwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gICAgeyB4OiA1NDksIHk6IDI0OSwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gICAgeyB4OiAxOCwgeTogMzM3LCByOiAxNiwgZzogNDgsIGI6IDU5IH0sXG4gICAgeyB4OiA1MywgeTogMzIzLCByOiA2NywgZzogNjUsIGI6IDYzIH0sXG4gICAgeyB4OiA4OCwgeTogMzMxLCByOiAzLCBnOiA0NCwgYjogNTkgfSxcbiAgICB7IHg6IDU5OSwgeTogMjg4LCByOiAxOSwgZzogMzMsIGI6IDYyIH0sXG4gIF0sXG4gIHsgeDogNjE1LCB5OiAyMiB9XG4pO1xuLy8gSW50cm9kdWNlZCBpbiBTZXAgMjYgMjAyMyB1cGRhdGVcbmV4cG9ydCBjb25zdCByZnBhZ2VFcnJvckJ1c3RlckludHJvID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VFcnJvckJ1c3RlckludHJvJyxcbiAgW1xuICAgIHsgeDogNjEwLCB5OiAyMiwgcjogNCwgZzogMTEsIGI6IDE1IH0sXG4gICAgeyB4OiA1MjEsIHk6IDIwLCByOiAxLCBnOiAzNSwgYjogNjcgfSxcbiAgICB7IHg6IDM0MSwgeTogMjEsIHI6IDY2LCBnOiA1NiwgYjogMTAgfSxcbiAgICB7IHg6IDMyNywgeTogMTksIHI6IDYzLCBnOiAzNywgYjogMTAgfSxcbiAgICB7IHg6IDI0NywgeTogMjQsIHI6IDI0LCBnOiA2NCwgYjogNDMgfSxcbiAgICB7IHg6IDM1MSwgeTogMjMzLCByOiAyNTUsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiA1MDQsIHk6IDMzNiwgcjogMzIsIGc6IDU0LCBiOiA0IH0sXG4gICAgeyB4OiA3MSwgeTogNTAsIHI6IDUyLCBnOiAzNywgYjogOCB9LFxuICAgIHsgeDogMzEsIHk6IDMyNSwgcjogNjYsIGc6IDYyLCBiOiA1MCB9LFxuICBdLFxuICB7IHg6IDYxMCwgeTogMjIgfVxuKTtcblxuY29uc3QgcmZwYWdlRmlyc3RJdGVtRW5hYmxlZCA9IG5ldyBQYWdlKCdyZnBhZ2VGaXJzdEl0ZW1FbmFibGVkJywgW3sgeDogNTk2LCB5OiAxMjAsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9XSwgeyB4OiA1OTYsIHk6IDEyMCB9KTtcbmNvbnN0IHJmcGFnZVNlY29uZEl0ZW1FbmFibGVkID0gbmV3IFBhZ2UoJ3JmcGFnZVNlY29uZEl0ZW1FbmFibGVkJywgW3sgeDogNTk2LCB5OiAyMjgsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9XSwgeyB4OiA1OTYsIHk6IDIyOCB9KTtcbmNvbnN0IHJmcGFnZVRoaXJkSXRlbUVuYWJsZWQgPSBuZXcgUGFnZSgncmZwYWdlVGhpcmRJdGVtRW5hYmxlZCcsIFt7IHg6IDU5NiwgeTogMzMzLCByOiAxMjEsIGc6IDIwNywgYjogMTIgfV0sIHsgeDogNTk2LCB5OiAzMzMgfSk7XG5jb25zdCByZnBhZ2VGb3VydGhJdGVtRW5hYmxlZCA9IG5ldyBQYWdlKCdyZnBhZ2VGb3VydGhJdGVtRW5hYmxlZCcsIFt7IHg6IDU5OSwgeTogMTI4LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfV0sIHsgeDogNTk5LCB5OiAxMjggfSk7XG5jb25zdCByZnBhZ2VGaWZ0aEl0ZW1FbmFibGVkID0gbmV3IFBhZ2UoJ3JmcGFnZUZpZnRoSXRlbUVuYWJsZWQnLCBbeyB4OiA1OTYsIHk6IDIzMiwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH1dLCB7IHg6IDU5NiwgeTogMjMyIH0pO1xuY29uc3QgcmZwYWdlU2l4SXRlbUVuYWJsZWQgPSBuZXcgUGFnZSgncmZwYWdlU2l4SXRlbUVuYWJsZWQnLCBbeyB4OiA1OTcsIHk6IDMzOSwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH1dLCB7IHg6IDU5NywgeTogMzM5IH0pO1xuXG5leHBvcnQgY29uc3QgcHJvZHVjdE1hcHBpbmc6IHsgW2tleTogbnVtYmVyXTogUGFnZSB9ID0ge1xuICAxOiByZnBhZ2VGaXJzdEl0ZW1FbmFibGVkLFxuICAyOiByZnBhZ2VTZWNvbmRJdGVtRW5hYmxlZCxcbiAgMzogcmZwYWdlVGhpcmRJdGVtRW5hYmxlZCxcbiAgNDogcmZwYWdlVGhpcmRJdGVtRW5hYmxlZCxcbiAgNTogcmZwYWdlRm91cnRoSXRlbUVuYWJsZWQsXG4gIDY6IHJmcGFnZUZpZnRoSXRlbUVuYWJsZWQsXG4gIDc6IHJmcGFnZVNpeEl0ZW1FbmFibGVkLFxufTtcblxuZXhwb3J0IGNvbnN0IG1hZ2ljTGFiUG9pbnRNYXBwaW5nOiB7IFtrZXk6IG51bWJlcl06IFhZIH0gPSB7XG4gIDE6IHsgeDogNDE4LCB5OiAxMTIgfSxcbiAgMjogeyB4OiA0NzEsIHk6IDExMyB9LFxuICAzOiB7IHg6IDUzMiwgeTogMTE0IH0sXG4gIDQ6IHsgeDogNTg0LCB5OiAxMTQgfSxcbiAgNTogeyB4OiA0MTgsIHk6IDE3MyB9LFxuICA2OiB7IHg6IDQ3MSwgeTogMTcyIH0sXG4gIDc6IHsgeDogNTMyLCB5OiAxNzMgfSxcbiAgODogeyB4OiA1ODQsIHk6IDE3MyB9LCAvLyAwIGlzIDhcbn07XG5cbmV4cG9ydCBjb25zdCBncm91cFBhZ2VNYXRlcmlhbFByb2RNZW51ID0gbmV3IEdyb3VwUGFnZSgnZ3JvdXBQYWdlTWF0ZXJpYWxQcm9kTWVudScsIFtcbiAgcmZwYWdlV29vZEZhcm0sXG4gIHJmcGFnZUJlYW5GYXJtLFxuICByZnBhZ2VTdWdhckZhcm0sXG4gIHJmcGFnZVBvd2RlckZhcm0sXG4gIHJmcGFnZUJhcnJ5RmFybSxcbiAgcmZwYWdlTWlsa0Zhcm0sXG4gIHJmcGFnZUNvdHRvbUZhcm0sXG5dKTtcblxuY29uc3QgcmZwYWdlVG9vbFNob3AgPSBuZXcgUGFnZSgncmZwYWdlVG9vbFNob3AnLCBbXG4gIHsgeDogNDIwLCB5OiAxOTEsIHI6IDE3OCwgZzogMTYsIGI6IDEzIH0sXG4gIHsgeDogNDE0LCB5OiA3NSwgcjogMTM1LCBnOiAxNDMsIGI6IDE3MCB9LFxuICB7IHg6IDQxMywgeTogODQsIHI6IDE4MywgZzogMTkwLCBiOiAyMTEgfSxcbl0pO1xuY29uc3QgcmZwYWdlSXNKYW1tZXJ5ID0gbmV3IFBhZ2UoJ3JmcGFnZUlzSmFtbWVyeScsIFtcbiAgeyB4OiA0OTAsIHk6IDgzLCByOiAwLCBnOiAxNzgsIGI6IDIwNiB9LFxuICB7IHg6IDQ0MCwgeTogODksIHI6IDE5LCBnOiAxMTQsIGI6IDEyOSB9LFxuICB7IHg6IDQzMCwgeTogODgsIHI6IDI0NywgZzogMjQzLCBiOiAyMjIgfSxcbl0pO1xuY29uc3QgcmZwYWdlSXNDYXJwZW50cnlTaG9wID0gbmV3IFBhZ2UoJ3JmcGFnZUlzQ2FycGVudHJ5U2hvcCcsIFtcbiAgeyB4OiA0OTQsIHk6IDgzLCByOiAxNDAsIGc6IDg2LCBiOiA1NyB9LFxuICB7IHg6IDUxNywgeTogODcsIHI6IDE2NSwgZzogMTA1LCBiOiA2NiB9LFxuICB7IHg6IDQzMywgeTogNzMsIHI6IDg4LCBnOiA0NiwgYjogMzAgfSxcbiAgeyB4OiA0MjAsIHk6IDgxLCByOiAyMTQsIGc6IDE0NiwgYjogMTE1IH0sXG4gIHsgeDogNDI0LCB5OiA2NCwgcjogODQsIGc6IDMsIGI6IDMgfSxcbl0pO1xuY29uc3QgcmZwYWdlSXNKYW1waWVEaW5lciA9IG5ldyBQYWdlKCdyZnBhZ2VJc0phbXBpZURpbmVyJywgW1xuICB7IHg6IDUzNSwgeTogODQsIHI6IDIxMCwgZzogMzYsIGI6IDU3IH0sXG4gIHsgeDogNDkzLCB5OiA4MywgcjogMCwgZzogMjI0LCBiOiAyMzEgfSxcbiAgeyB4OiA0MTQsIHk6IDgxLCByOiAyMTcsIGc6IDQ4LCBiOiA3NyB9LFxuICB7IHg6IDQzMiwgeTogNzMsIHI6IDIyMCwgZzogMTQ5LCBiOiA5OSB9LFxuXSk7XG5jb25zdCByZnBhZ2VJc0Jha2VyeSA9IG5ldyBQYWdlKCdyZnBhZ2VJc0Jha2VyeScsIFtcbiAgeyB4OiA0OTYsIHk6IDgyLCByOiAxODQsIGc6IDE3NCwgYjogMTU1IH0sXG4gIHsgeDogNTM5LCB5OiA4NiwgcjogMTc2LCBnOiA4MywgYjogMTEgfSxcbiAgeyB4OiA0MzksIHk6IDc1LCByOiAxNzMsIGc6IDgyLCBiOiAyNCB9LFxuICB7IHg6IDQyMywgeTogNzAsIHI6IDE5OCwgZzogMTE2LCBiOiA2MyB9LFxuICB7IHg6IDQyNCwgeTogOTksIHI6IDI1NSwgZzogMjE5LCBiOiAxMjMgfSxcbl0pO1xuY29uc3QgcmZwYWdlSXNGbG93ZXJTaG9wID0gbmV3IFBhZ2UoJ3JmcGFnZUlzRmxvd2VyU2hvcCcsIFtcbiAgeyB4OiA0MTgsIHk6IDgwLCByOiAyNTUsIGc6IDg5LCBiOiAxNjUgfSxcbiAgeyB4OiA0MTMsIHk6IDk1LCByOiA4LCBnOiAxNTAsIGI6IDggfSxcbiAgeyB4OiA0MzEsIHk6IDg2LCByOiAyMTQsIGc6IDAsIGI6IDgyIH0sXG4gIHsgeDogNDkwLCB5OiA4NiwgcjogMTk3LCBnOiAzOSwgYjogNDEgfSxcbiAgeyB4OiA1MzgsIHk6IDgyLCByOiAxNjUsIGc6IDg1LCBiOiA0MSB9LFxuXSk7XG5leHBvcnQgY29uc3QgZ3JvdXBQYWdlR29vZHNQcm9kTWVudSA9IG5ldyBHcm91cFBhZ2UoJ2dyb3VwUGFnZUdvb2RzUHJvZE1lbnUnLCBbXG4gIHJmcGFnZVRvb2xTaG9wLFxuICByZnBhZ2VJc0phbW1lcnksXG4gIHJmcGFnZUlzQ2FycGVudHJ5U2hvcCxcbiAgcmZwYWdlSXNKYW1waWVEaW5lcixcbiAgcmZwYWdlSXNCYWtlcnksXG4gIHJmcGFnZUlzRmxvd2VyU2hvcCxcbl0pO1xuIiwiaW1wb3J0IHsgV2lzaCwgV2lzaFN0YXR1cyB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgc2xlZXA6IDI0MCxcbiAgc2xlZXBBbmltYXRlOiA4MDAsXG4gIHNsZWVwV2hlbkRvdWJsZUxvZ2luSW5NaW51dGVzOiAzMCxcblxuICAvLyBTYW1wbGUgVEVTVCBsb25nIElEXG4gIC8vIGFjY291bnQ6ICdtb29ubWludjM1bW9vbm1pbnYzNW1vb25taW52MzVtb29ubWludjM1bW9vbm1pbnYzNW1vb25taW52MzVtb29ubWludjM1QGdtYWlsLmNvbScsXG4gIGFjY291bnQ6ICdkZWZhdWx0X3hyb2JvdG1vbl9hY2NvdW50QGdtYWlsLmNvbScsXG4gIHBhc3N3b3JkOiAnJyxcbiAgbWF0ZXJpYWxzVGFyZ2V0OiAyMDAwLFxuICBnb29kc1RhcmdldDogMzIwLFxuICBwcm9kdWN0U2FmZXR5U3RvY2s6IDEwLFxuICBza2lwTWFnaWNMYWJQcm9kdWN0aW9uOiBmYWxzZSxcbiAgbWFnaWNMYWJQcm9kdWN0SW5kZXg6IDEsXG4gIGF1dG9Db2xsZWN0TWFpbEludGVydmFsSW5NaW5zOiAxMjAsXG4gIGF1dG9Db2xsZWN0Rm91bnRhaW5JbnRlcnZhbEluTWluczogNDAsXG4gIGF1dG9Db2xsZWN0VHJhaW5JbnRlcnZhbEluTWluczogMjAsXG4gIGF1dG9TZW5kSG90QWlyQmFsbG9uSW50ZXJ2YWxJbk1pbnM6IDQwLFxuICBpc0hvdEFpckJhbGxvbkdvdG9FcDQ6IGZhbHNlLFxuICBiYWxsb25LZWVwQ3VycmVudERlc3RpbmF0aW9uOiBmYWxzZSxcbiAgYXV0b0NvbGxlY3REYWlseVJld2FyZDogdHJ1ZSxcbiAgYXV0b0Z1bGZpbGxXaXNoZXNJbnRlcnZhbEluTWluczogMTAsXG4gIGFsd2F5c0Z1bGZpbGxXaXNoZXM6IGZhbHNlLFxuICB3aXNoaW5nVHJlZVNhZmV0eVN0b2NrOiAxMCxcbiAgd2lzaGluZ1RyZWVNYXhGaWxsaW5nTWluczogOCxcbiAgd2lzaGluZ1RyZWVSZWZyZXNoR29sZGVuV2lzaGVzOiB0cnVlLFxuICB3aXNoaW5nVHJlZUZvcmNlRnVsZmlsbEdvbGRXaXNoZXM6IGZhbHNlLFxuICBhdXRvSGFuZGxlRXZlbnRXaXNoaW5nVHJlZUFtb3VudHM6IDAsXG4gIGF1dG9QdlBJbnRlcnZhbEluTWluczogMCxcbiAgYXV0b1B2UFRhcmdldFNjb3JlTGltaXQ6IDEwMDAwMDAsXG4gIGF1dG9QdlBQdXJjaGFzZUFuY2llbnRDb29raWU6IHRydWUsXG4gIHdvcmtzQmVmb3JlQ29sbGVjdENhbmR5OiA0MCxcbiAgYXV0b1VwZ3JhZGVDYW5keUhvdXNlOiB0cnVlLFxuICBoZWxwVGFwR3JlZW5DaGVjazogdHJ1ZSxcbiAgYXV0b0NvbGxlY3RUcm9waWNhbElzbGFuZHNJbnRlcnZhbEluTWluczogNDAsXG4gIGF1dG9HdWlsZEFsbGlhbmNlQmF0dGxlOiB0cnVlLFxuICBhdXRvQWxsaWFuY2VVc2VUaW1lSnVtcGVyczogZmFsc2UsXG4gIGF1dG9HdWlsZENsYWltTmV3TGFuZDogZmFsc2UsXG4gIGF1dG9HdWlsZEJhdHRsZURyYWdvbjogZmFsc2UsXG4gIGF1dG9IYW5kbGVCb3VudGllc0ludGVydmFsSW5NaW5zOiAxODAsXG4gIGF1dG9Cb3VudGllc0NoZWNrQmx1ZVBvd2RlcjogdHJ1ZSxcbiAgYXV0b0xhYlJlc2VhcmNoOiB0cnVlLFxuICBhdXRvUmVzZWFyY2hLaW5nZG9tOiB0cnVlLFxuICBhdXRvUmVzZWFyY2hDb29raWVzOiB0cnVlLFxuICBhdXRvTGFiVXNlQXVyb3JhTWF0ZXJpYWw6IHRydWUsXG4gIGF1dG9IYW5kbGVUcmFkZUhhYm9yOiB0cnVlLFxuICBhdXRvQmFsYW5jZUF1cm9yYVN0b2NrczogdHJ1ZSxcbiAgYXV0b1Nob3BJblNlYXNpZGVNYXJrZXQ6IHRydWUsXG4gIGF1dG9CdXlDYXJhbWVsU3R1ZmY6IHRydWUsXG4gIGF1dG9CdXlSYWRpYW50U2hhcmRzSW5IYWJvcjogdHJ1ZSxcbiAgYXV0b0J1eVNlYUZhaXJ5OiB0cnVlLFxuICBhdXRvQnV5RXBpY1NvdWxFc3NlbmNlOiB0cnVlLFxuICBhdXRvQnV5TGVnZW5kU291bEVzc2VuY2U6IHRydWUsXG4gIGF1dG9CdXlHdWlsZFJlbGljOiB0cnVlLFxuICBheGVTdG9ja1RvNDAwOiBmYWxzZSxcbiAgYXV0b1N1cGVyTWF5aGVtSW50ZXJ2YWxJbk1pbnM6IDAsXG4gIGF1dG9TdXBlck1heWhlbVRhcmdldFNjb3JlTGltaXQ6IDEwMDAwMDAsXG4gIGF1dG9IYW5kbGVUb3dlck9mU3dlZXRDaGFvczogdHJ1ZSxcbiAgYXV0b0hhbmRsZUNvbGxlY3RDb29raWVPZHlzc2V5TWlzc2lvbjogdHJ1ZSxcbiAgYnVpbGRUb3dhcmRzVGhlTGVmdDogdHJ1ZSxcbiAgaXNUZXN0QWNjb3VudDogZmFsc2UsXG4gIGlzTmV3S2luZ2RvbUNoZWNrUmVxdWlyZWQ6IHRydWUsXG4gIGlzU2VuZFBsYXlpbmdSZXF1aXJlZDogdHJ1ZSxcbiAgZGV2aWNlSWQ6ICd0ZXN0aW5nJyxcblxuICBqb2JGYWlsZWRDb3VudDogNCxcbiAgam9iRmFpbGVkQmVmb3JlR2V0Q2FuZHk6IDMsXG4gIHByb2R1Y3Rpb25CdWlsZGluZ0NoZWNrZWQ6IDAsXG4gIHByb2R1Y3Rpb25EYXNoYm9hcmRFbmFibGVkOiB0cnVlLFxuICBjdXJyZW50UHJvZHVjdGlvbkJ1aWxkaW5nOiAnTk9ORScsXG4gIGxhc3ROZXR3b3JrSXNzdWVPY2N1clRpbWU6IDAsXG4gIG5ldHdvcmtJc3N1ZUNvdW50OiAwLFxuICBuZXR3b3JrSXNzdWVDb3VudFRocmVhc0hvbGQ6IDIwLFxuICBsYXN0R290b1Byb2R1Y3Rpb246IDAsXG4gIGxhc3RDb2xsZWN0Q2FuZHlUaW1lOiAwLFxuICBsYXN0Q29sbGVjdE1haWw6IDAsXG4gIGxhc3RDb2xsZWN0Rm91bnRhaW46IDAsXG4gIGxhc3RDb2xsZWN0VHJhaW46IDAsXG4gIGxhc3RTZW5kSG90QWlyQmFsbG9uOiAwLFxuICBsYXN0Q29sbGVjdERhaWx5UmV3YXJkOiAwLFxuICBsYXN0RnVsZmlsbFdpc2hlczogMCxcbiAgbGFzdEF1dG9IYW5kbGVFdmVudFdpc2hpbmdUcmVlOiAwLFxuICBsYXN0QXV0b1B2UDogMCxcbiAgbGFzdEF1dG9TdXBlck1heWhlbTogMCxcbiAgYmF0dGxlTWF4TG9vcHM6IDMsXG4gIGxhc3RDb2xsZWN0VHJvcGljYWxJc2xhbmQ6IDAsXG4gIGxhc3RBdXRvR3VpbGRCYXR0bGU6IDAsXG4gIGxhc3RBdXRvSGFuZGxlQm91bnRpZXM6IDAsXG4gIGxhc3RMYWJSZXNlYXJjaDogMCxcbiAgbGFzdEhhbmRsZVRyYWRlSGFib3I6IDAsXG4gIGxhc3RBdXRvSGFuZGxlVG93ZXJPZlN3ZWV0Q2hhb3M6IDAsXG4gIGxhc3RBdXRvSGFuZGxlQ29sbGVjdENvb2tpZU9keXNzZXlNaXNzaW9uOiAwLFxuICBsYXN0VHJ5UmVzb2x2ZUdyZWVuQ2hlY2tzOiAwLFxuICBsYXN0RnJlZXplQ2hlY2tTY3JlZW5TaG90OiBudWxsLFxuICBsYXN0RnJlZXplQ2hlY2tTY3JlZW5TaG90VGltZTogRGF0ZS5ub3coKSxcbiAgcnVuOiB0cnVlLFxuICBpc1hSOiB0cnVlLFxuICBmaW5kUHJvZHVjdGlvblRpbWVzOiA0LFxuICB3aXNoUmVmcmVzaFRocmVhc2hvbGQ6IDUsXG4gIHNlYXJjaEhvdXNlQ291bnQ6IDAsXG4gIGtlZXBQcm9kdWNlVW50aWxXb29kRW5vdWdoOiB0cnVlLFxuICBpc01haW50YWluYW5jZU1vZGU6IGZhbHNlLFxuICBsb2dpblJldHJ5TWF4VGltZXM6IDIsXG4gIGxvZ2luUmV0cnlDb3VudDogMCxcbiAgdHJ5UmVzdGFydEdhbWVDb3VudDogMCxcbiAgdHJ5UmVzdGFydEdhbWVMaW1pdDogNSxcbiAgbmVlZFRvU2VuZExvZ2luU3VjY2VzczogdHJ1ZSxcbiAgbmVlZFRvU2VuZFBsYXlpbmc6IHRydWUsXG4gIGxpY2Vuc2VJZDogJycsXG4gIHVzZXJJZDogJycsXG5cbiAgc3RvY2tfYXhlOiA2MCxcbiAgc3RvY2tfcGlja2F4ZTogNjAsXG4gIHN0b2NrX3NhdzogNjAsXG4gIHN0b2NrX3Nob3ZlbDogNjAsXG4gIHN0b2NrX3N0YWNrOiA2MCxcbiAgc3RvY2tfdG9uZ3M6IDYwLFxuICBzdG9ja19oYW1tZXI6IDYwLFxuICBzdG9ja19qZWxseWJlYW5KYW06IDYwLFxuICBzdG9ja19qZWxseUphbTogNjAsXG4gIHN0b2NrX3RvZmZlZUphbTogNjAsXG4gIHN0b2NrX3BvbWVncmFuYXRlSmFtOiA2MCxcbiAgc3RvY2tfc3BhcmtsZWJlcnJ5SmFtOiA2MCxcbiAgc3RvY2tfcGluZWNvbmVCaXJkeVRveTogNjAsXG4gIHN0b2NrX2Fjb3JuTGFtcDogNjAsXG4gIHN0b2NrX2N1Y2tvb0Nsb2NrOiA2MCxcbiAgc3RvY2tfZHJlYW1jYXRjaGVyOiA2MCxcbiAgc3RvY2tfaGVhcnR5UnllOiA2MCxcbiAgc3RvY2tfdGFydEphbXBpZTogNjAsXG4gIHN0b2NrX2dpbmtnb0ZvY2FjY2lhOiA2MCxcbiAgc3RvY2tfZ2xhemVkRG9udXRzOiA2MCxcbiAgc3RvY2tfZmx5ZmZ5Q2FzdGVsbGE6IDYwLFxuICBzdG9ja19nb2xkZW5Dcm9pc3NhbnQ6IDYwLFxuICBzdG9ja19ob3RKZWxseVN0ZXc6IDYwLFxuICBzdG9ja19iZWFySmVsbHlCdXJnZXI6IDYwLFxuICBzdG9ja19jYW5keVBhc3RhOiA2MCxcbiAgc3RvY2tfZmx1ZmZ5T211cmljZTogNjAsXG4gIHN0b2NrX2plbGx5RGVsdXhlUGl6emE6IDYwLFxuICBzdG9ja19mYW5jeUplbGx5YmVhbk1lYWw6IDYwLFxuICBzdG9ja19iaXNjdWl0UGxhbnRlcjogNjAsXG4gIHN0b2NrX3NoaW55R2xhc3M6IDYwLFxuICBzdG9ja19nbGVhbXlCZWFkOiA2MCxcbiAgc3RvY2tfY29sb3JmdWxCb3dsOiA2MCxcbiAgc3RvY2tfY2FuZHlGbG93ZXI6IDYwLFxuICBzdG9ja19oYXBweVBsYW50ZXI6IDYwLFxuICBzdG9ja19jYW5keUJvdXF1ZXQ6IDYwLFxuICBzdG9ja19sb2xsaXBvcEZsb3dlckJhc2tldDogNjAsXG4gIHN0b2NrX2JlbGxGbG93ZXJCb3VxdWV0OiA2MCxcbiAgc3RvY2tfZ2xpdHRlcmluZ1lvZ3VydFdlZWF0aDogNjAsXG4gIHN0b2NrX2NyZWFtOiA2MCxcbiAgc3RvY2tfYnV0dGVyOiA2MCxcbiAgc3RvY2tfaG9tZW1hZGVDaGVlc2U6IDYwLFxuICBzdG9ja19qZWxseWJlYW5MYXR0ZTogNjAsXG4gIHN0b2NrX2J1YmJseUJvYmE6IDYwLFxuICBzdG9ja19zd2VldGJlcnJ5SnVpY3k6IDYwLFxuICBzdG9ja19jbG91ZFBpbGxvdzogNjAsXG4gIHN0b2NrX2JlYXJKZWxseVRveTogNjAsXG4gIHN0b2NrX3BpdGF5YURyYWdvblRveTogNjAsXG4gIHN0b2NrX2NyZWFtUm9vdEJlZXI6IDYwLFxuICBzdG9ja19yZWRiZXJyeUp1aWNlOiA2MCxcbiAgc3RvY2tfdmludGFnZVJvb3RCb3R0bGU6IDYwLFxuICBzdG9ja19zcG9va3lNdWZmaW46IDYwLFxuICBzdG9ja19zdHJhd2JlcnJ5Q2FrZTogNjAsXG4gIHN0b2NrX3BhcnR5Q2FrZTogNjAsXG4gIHN0b2NrX2dsYXplZFJpbmc6IDYwLFxuICBzdG9ja19ydWJ5YmVycnlCcm9vY2g6IDQwLFxuICBzdG9ja19iZWFySmVsbHlDcm93bjogNDAsXG59O1xuXG5leHBvcnQgbGV0IGNvbmZpZyA9IGRlZmF1bHRDb25maWc7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0V2lzaGVzOiBXaXNoW10gPSBbXG4gIHtcbiAgICBpZDogMCxcbiAgICByZWZyZXNoUG50OiB7IHg6IDE0OSwgeTogNzQgfSxcbiAgICB1bmZvbGRQbnQ6IHsgeDogMTYzLCB5OiAxNjAgfSxcbiAgICBmdWxmaWxsUG50OiB7IHg6IDE4MywgeTogMjgzIH0sXG4gICAgc3RhdHVzOiBXaXNoU3RhdHVzLnVua25vd24sXG4gICAgcmVxdWlyZW1lbnRJY29uUG50czoge1xuICAgICAgMDogeyB4OiAxNjIsIHk6IDIwMCB9LFxuICAgICAgMTogeyB4OiAxOTgsIHk6IDIwMCB9LFxuICAgICAgMjogeyB4OiAxNjIsIHk6IDIzNSB9LFxuICAgICAgMzogeyB4OiAxOTgsIHk6IDIzNSB9LFxuICAgIH0sXG4gICAgZmFpbGVkQ291bnQ6IDAsXG4gICAgcmVxdWlyZUZ1bGZpbGxlZDogMCxcbiAgICBnb2xkZW46IGZhbHNlLFxuICB9LFxuICB7XG4gICAgaWQ6IDEsXG4gICAgcmVmcmVzaFBudDogeyB4OiAyNjAsIHk6IDc0IH0sXG4gICAgdW5mb2xkUG50OiB7IHg6IDI3NSwgeTogMTYwIH0sXG4gICAgZnVsZmlsbFBudDogeyB4OiAyOTUsIHk6IDI4MyB9LFxuICAgIHN0YXR1czogV2lzaFN0YXR1cy51bmtub3duLFxuICAgIHJlcXVpcmVtZW50SWNvblBudHM6IHtcbiAgICAgIDA6IHsgeDogMjc1LCB5OiAyMDAgfSxcbiAgICAgIDE6IHsgeDogMzEyLCB5OiAyMDAgfSxcbiAgICAgIDI6IHsgeDogMjc1LCB5OiAyMzUgfSxcbiAgICAgIDM6IHsgeDogMzEyLCB5OiAyMzUgfSxcbiAgICB9LFxuICAgIGZhaWxlZENvdW50OiAwLFxuICAgIHJlcXVpcmVGdWxmaWxsZWQ6IDAsXG4gICAgZ29sZGVuOiBmYWxzZSxcbiAgfSxcbiAge1xuICAgIGlkOiAyLFxuICAgIHJlZnJlc2hQbnQ6IHsgeDogMzc0LCB5OiA3NCB9LFxuICAgIHVuZm9sZFBudDogeyB4OiAzOTAsIHk6IDE2MCB9LFxuICAgIGZ1bGZpbGxQbnQ6IHsgeDogNDAwLCB5OiAyODMgfSxcbiAgICBzdGF0dXM6IFdpc2hTdGF0dXMudW5rbm93bixcbiAgICByZXF1aXJlbWVudEljb25QbnRzOiB7XG4gICAgICAwOiB7IHg6IDM5MCwgeTogMjAwIH0sXG4gICAgICAxOiB7IHg6IDQyNSwgeTogMjAwIH0sXG4gICAgICAyOiB7IHg6IDM5MCwgeTogMjM1IH0sXG4gICAgICAzOiB7IHg6IDQyNSwgeTogMjM1IH0sXG4gICAgfSxcbiAgICBmYWlsZWRDb3VudDogMCxcbiAgICByZXF1aXJlRnVsZmlsbGVkOiAwLFxuICAgIGdvbGRlbjogZmFsc2UsXG4gIH0sXG4gIHtcbiAgICBpZDogMyxcbiAgICByZWZyZXNoUG50OiB7IHg6IDQ5MCwgeTogNzQgfSxcbiAgICB1bmZvbGRQbnQ6IHsgeDogNTAwLCB5OiAxNjAgfSxcbiAgICBmdWxmaWxsUG50OiB7IHg6IDUyMCwgeTogMjgzIH0sXG4gICAgc3RhdHVzOiBXaXNoU3RhdHVzLnVua25vd24sXG4gICAgcmVxdWlyZW1lbnRJY29uUG50czoge1xuICAgICAgMDogeyB4OiA1MDgsIHk6IDIwMCB9LFxuICAgICAgMTogeyB4OiA1NDUsIHk6IDIwMCB9LFxuICAgICAgMjogeyB4OiA1MDgsIHk6IDIzNSB9LFxuICAgICAgMzogeyB4OiA1NDUsIHk6IDIzNSB9LFxuICAgIH0sXG4gICAgZmFpbGVkQ291bnQ6IDAsXG4gICAgcmVxdWlyZUZ1bGZpbGxlZDogMCxcbiAgICBnb2xkZW46IGZhbHNlLFxuICB9LFxuXTtcbiIsImV4cG9ydCBjb25zdCBnbG9iYWxTdG9yYWdlID0ge1xuICBib3RTdGF0dXM6IHtcbiAgICBiYXR0bGVTdGFydGVkOiAwLFxuICB9LFxufTtcbiIsImV4cG9ydCBlbnVtIFRBU0tTIHtcbiAgbWFpbnRhaW5hbmNlTW9kZSA9ICdtYWludGFpbmFuY2VNb2RlJyxcblxuICBsb2dpbiA9ICdsb2dpbicsXG4gIHByb2R1Y3Rpb24gPSAncHJvZHVjdGlvbicsXG4gIGNvbGxlY3RNYWlsID0gJ2NvbGxlY3RNYWlsJyxcbiAgY29sbGVjdEtpbmdkb21QYXNzID0gJ2NvbGxlY3RLaW5nZG9tUGFzcycsXG4gIHNlbmRGcmllbmRSZXdhcmQgPSAnc2VuZEZyaWVuZFJld2FyZCcsXG4gIGdldEluU2hvcEZyZWVEYWlseVBhY2sgPSAnZ2V0SW5TaG9wRnJlZURhaWx5UGFjaycsXG4gIGdldEdhY2hhRGFpbHlGcmVlUGFjayA9ICdnZXRHYWNoYURhaWx5RnJlZVBhY2snLFxuICBob3RBaXJCYWxsb24gPSAnaG90QWlyQmFsbG9uJyxcbiAgdHJhaW4gPSAndHJhaW4nLFxuICB3aXNoaW5nVHJlZSA9ICd3aXNoaW5nVHJlZScsXG4gIGZvdW50YWluID0gJ2ZvdW50YWluJyxcbiAgcHZwID0gJ3B2cCcsXG4gIHB2cFB1cmNoYXNlQW5jaWVudENvb2tpZSA9ICdwdnBQdXJjaGFzZUFuY2llbnRDb29raWUnLFxuICBzdXBlck1heWhlbSA9ICdzdXBlck1heWhlbScsXG4gIHRyb3BpY2FsSXNsYW5kU2hpcCA9ICd0cm9waWNhbElzbGFuZFNoaXAnLFxuICB0cm9waWNhbElzbGFuZFN1bmJlZCA9ICd0cm9waWNhbElzbGFuZFN1bmJlZCcsXG4gIHRyb3BpY2FsSXNsYW5kQ2xlYXJCdWJibGUgPSAndHJvcGljYWxJc2xhbmRDbGVhckJ1YmJsZScsXG4gIGJvdW50aWVzID0gJ2JvdW50aWVzJyxcbiAgZ25vbWVMYWIgPSAnZ25vbWVMYWInLFxuXG4gIGhhYm9yU2hvcEluU2VhTWFya2V0ID0gJ2hhYm9yU2hvcEluU2VhTWFya2V0JyxcbiAgaGFib3JTaG9wSW5TaGVsbEdhbGxlcnkgPSAnaGFib3JTaG9wSW5TaGVsbEdhbGxlcnknLFxuICBoYWJvclNlbmRTaGlwID0gJ2hhYm9yU2VuZFNoaXAnLFxuXG4gIHRvd2VyT2ZTd2VldENoYW9zID0gJ3Rvd2VyT2ZTd2VldENoYW9zJyxcbiAgLy8gQ29sbGVjdENvb2tpZU9keXNzZXkgPSAnQ29sbGVjdENvb2tpZU9keXNzZXknLFxuICByZXNvbHZlR3JlZW5DaGVja3MgPSAncmVzb2x2ZUdyZWVuQ2hlY2tzJyxcblxuICBndWlsZENoZWNraW4gPSAnZ3VpbGRDaGVja2luJyxcbiAgZ3VpbGRFeHBhbmRMYW5kID0gJ2d1aWxkRXhwYW5kTGFuZCcsXG4gIGd1aWxkQmF0dGxlRHJhZ29uID0gJ2d1aWxkQmF0dGxlRHJhZ29uJyxcbiAgZ3VpbGRCYXR0bGVBbGxpYW5jZSA9ICdndWlsZEJhdHRsZUFsbGlhbmNlJyxcbiAgZmluZEFuZFRhcENhbmR5ID0gJ2ZpbmRBbmRUYXBDYW5keScsXG4gIHVwZ3JhZGVDYW5keUhvdXNlID0gJ3VwZ3JhZGVDYW5keUhvdXNlJyxcbn1cbiIsImltcG9ydCB7IFBhZ2UsIFV0aWxzLCByZXJvdXRlciB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCAqIGFzIElDT05TIGZyb20gJy4uL2ljb25zJztcbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi4vdGFza3MnO1xuaW1wb3J0IHsgbG9ncywgc2VuZEV2ZW50UnVubmluZywgc2VuZEtleUJhY2sgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBkeW5hbWljU29ydCwgZmluZFNwZWNpZmljSWNvbkluU2NyZWVuLCBvY3JOdW1iZXJJblJlY3QsIHBhc3NpdmVBZGRSb3V0ZSwgYXNzaWduLCBzZW5kQ291bnRlciB9IGZyb20gJy4uL2hlbHBlcic7XG5pbXBvcnQgeyBCb3VudHlJbmZvIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi9zY3JpcHRDb25maWcnO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlSW5Cb3VudGllcyA9IG5ldyBQYWdlKCdyZnBhZ2VJbkJvdW50aWVzJywgW1xuICB7IHg6IDU5MSwgeTogMTEsIHI6IDQxLCBnOiAxNiwgYjogMjEgfSxcbiAgeyB4OiAyMDUsIHk6IDUsIHI6IDEyNiwgZzogODQsIGI6IDk4IH0sXG4gIHsgeDogMTksIHk6IDIxLCByOiAyMjIsIGc6IDIyMiwgYjogMjIyIH0sXG4gIHsgeDogODEsIHk6IDI0LCByOiAyNTAsIGc6IDI1MCwgYjogMjUwIH0sXG4gIHsgeDogMTY1LCB5OiAyMCwgcjogOTIsIGc6IDcwLCBiOiA1NyB9LFxuICB7IHg6IDU2MSwgeTogMzM2LCByOiA0NywgZzogNzYsIGI6IDEwOSB9LFxuICB7IHg6IDUxNSwgeTogMzQwLCByOiA3MCwgZzogNDgsIGI6IDM1IH0sXG4gIHsgeDogOCwgeTogMjc2LCByOiAyMTcsIGc6IDIxMSwgYjogMTA4IH0sXG5dKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VJbk9uZU9mVGhlQm91bnRpZXMgPSBuZXcgUGFnZSgncmZwYWdlSW5PbmVPZlRoZUJvdW50eScsIFtcbiAgeyB4OiA1MzMsIHk6IDMyNywgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gIHsgeDogNjIyLCB5OiAzMjksIHI6IDIwNywgZzogMjM3LCBiOiAyNTUgfSxcbiAgeyB4OiA2MTQsIHk6IDMxNCwgcjogMjI3LCBnOiAxNTUsIGI6IDY1IH0sXG4gIHsgeDogMTcxLCB5OiAzOSwgcjogMTc0LCBnOiAxNjcsIGI6IDE1MiB9LFxuICB7IHg6IDYyNywgeTogMzA1LCByOiAyMzEsIGc6IDE1NCwgYjogNjYgfSxcbl0pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZVJlYWR5VG9CYXR0bGVCb3VudHkgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVJlYWR5VG9CYXR0bGVCb3VudHknLFxuICBbXG4gICAgeyB4OiA2MTIsIHk6IDMyMSwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gICAgeyB4OiA5MSwgeTogMTIsIHI6IDEwNiwgZzogNzEsIGI6IDUwIH0sXG4gICAgeyB4OiA4NywgeTogMTgsIHI6IDI0NywgZzogMjQ3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDUyMCwgeTogMTksIHI6IDYsIGc6IDEyNywgYjogMjU0IH0sXG4gICAgeyB4OiA0MDcsIHk6IDE5LCByOiAyNTUsIGc6IDIwOSwgYjogMCB9LFxuICAgIHsgeDogMTU5LCB5OiAzMzEsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogNzEsIHk6IDMyOSwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gICAgeyB4OiA2MCwgeTogMjMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDEzLCB5OiAyMCwgcjogOTUsIGc6IDU2LCBiOiA0MyB9LFxuICBdLFxuICB7IHg6IDYxMiwgeTogMzIxIH1cbik7XG4vLyBjb25zdCByZnBhZ2VOZWVkUmVmaWxsQm91bnR5ID0gbmV3IFBhZ2UoXG4vLyAgICdyZnBhZ2VOZWVkUmVmaWxsQm91bnR5Jyxcbi8vICAgW1xuLy8gICAgIHsgeDogNDI3LCB5OiA4MiwgcjogNTcsIGc6IDE2NiwgYjogMjMxIH0sXG4vLyAgICAgeyB4OiAzMTcsIHk6IDc2LCByOiAxMzIsIGc6IDEzMCwgYjogOTkgfSxcbi8vICAgICB7IHg6IDMyMywgeTogODEsIHI6IDExNSwgZzogNzAsIGI6IDU4IH0sXG4vLyAgICAgeyB4OiAzNDMsIHk6IDkyLCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuLy8gICAgIHsgeDogMzA5LCB5OiAyNjQsIHI6IDAsIGc6IDE5NSwgYjogMjU1IH0sXG4vLyAgIF0sXG4vLyAgIHsgeDogNDMyLCB5OiA4MiB9XG4vLyApO1xuY29uc3QgcmZwYWdlTmVlZFJlZmlsbEJvdW50eUluQ2hvb3NlTGV2ZWwgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZU5lZWRSZWZpbGxCb3VudHlJbkNob29zZUxldmVsJyxcbiAgW1xuICAgIHsgeDogMzA5LCB5OiAyNjUsIHI6IDUsIGc6IDEyOSwgYjogMjU0IH0sXG4gICAgeyB4OiAyOTIsIHk6IDI1MywgcjogMTUwLCBnOiAyMTcsIGI6IDYwIH0sXG4gICAgeyB4OiAzNDcsIHk6IDI1MywgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gICAgeyB4OiAyODEsIHk6IDIyMSwgcjogMjE1LCBnOiAxMDIsIGI6IDEwMCB9LFxuICAgIHsgeDogMjU3LCB5OiAyMjIsIHI6IDI0MywgZzogMjMzLCBiOiAyMjMgfSxcbiAgICB7IHg6IDMwMSwgeTogOTAsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gICAgeyB4OiAzMjAsIHk6IDcyLCByOiAxMTgsIGc6IDEyMywgYjogOTUgfSxcbiAgICB7IHg6IDE5MiwgeTogMjgsIHI6IDU0LCBnOiA1NywgYjogNDIgfSxcbiAgICB7IHg6IDE1OSwgeTogMTMsIHI6IDQwLCBnOiAyNCwgYjogMjYgfSxcbiAgICB7IHg6IDIyNSwgeTogNTQsIHI6IDExMywgZzogOTksIGI6IDczIH0sXG4gICAgeyB4OiA2MjUsIHk6IDMwNywgcjogMTEzLCBnOiA3NywgYjogMzMgfSxcbiAgXSxcbiAgeyB4OiA0MzIsIHk6IDgyIH1cbik7XG5jb25zdCByZnBhZ2VDYW5ub3RSZWZpbGxCb3VudHlBbnltb3JlID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VDYW5ub3RSZWZpbGxCb3VudHlBbnltb3JlJyxcbiAgW1xuICAgIHsgeDogMzQ1LCB5OiAyNDQsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiAxOTIsIHk6IDI5LCByOiA1NywgZzogNTksIGI6IDQ2IH0sXG4gICAgeyB4OiAxOTAsIHk6IDQxLCByOiA0OSwgZzogMzAsIGI6IDI0IH0sXG4gICAgeyB4OiAyMTUsIHk6IDE0LCByOiAzMywgZzogMTgsIGI6IDIzIH0sXG4gICAgeyB4OiAxODksIHk6IDI4LCByOiA1NywgZzogNTgsIGI6IDQzIH0sXG4gICAgeyB4OiAyMTcsIHk6IDUxLCByOiAxMTUsIGc6IDk5LCBiOiA3NCB9LFxuICAgIHsgeDogMjA1LCB5OiA1NSwgcjogNDksIGc6IDMwLCBiOiAyNCB9LFxuICBdLFxuICB7IHg6IDM0NSwgeTogMjQ0IH1cbik7XG5cbmxldCBib3VudHlTdGF0dXMgPSB7XG4gIGhhc0JvdW50aWVzTGVmdDogdHJ1ZSxcbiAgYm91bnR5Q291bnQ6IDAsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkQm91bnRpZXNSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5Cb3VudGllcy5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluQm91bnRpZXMsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmJvdW50aWVzKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmcGFnZUluQm91bnRpZXNgKTtcblxuICAgICAgaWYgKCFib3VudHlTdGF0dXNbJ2hhc0JvdW50aWVzTGVmdCddKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBib3VudHkgZmluaXNoZWRgKTtcbiAgICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgbGV0IGZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uQm91bnRpZXNHcmVlbkVudGVyKTtcbiAgICAgIGZvdW5kUmVzdWx0cy5zb3J0KGR5bmFtaWNTb3J0KCd4JykpO1xuXG4gICAgICBjb25zdCBib3VudHlDb3VudCA9IE9iamVjdC5rZXlzKGZvdW5kUmVzdWx0cykubGVuZ3RoID4gMiA/IDQgOiBPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aDtcbiAgICAgIGlmIChib3VudHlDb3VudCA9PT0gMCkge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgY2Fubm90IGZpbmQgYm91bnR5IGVudHJ5IGJ1dHRvbiwgc2tpcHBpbmcgdGFza2ApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgYm91bnR5U3RhdHVzWydib3VudHlDb3VudCddID0gYm91bnR5Q291bnQ7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogZm91bmRSZXN1bHRzWzBdLnggKyA0MCwgeTogZm91bmRSZXN1bHRzWzBdLnkgKyAxMCB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9LFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUluT25lT2ZUaGVCb3VudGllcy5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluT25lT2ZUaGVCb3VudGllcyxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuYm91bnRpZXMpIHtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKCFib3VudHlTdGF0dXNbJ2hhc0JvdW50aWVzTGVmdCddKSB7XG4gICAgICAgIC8vIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBib3VudHkgZmluaXNoZWQsIGxlYXZlIHRoaXMgcGFnZWApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgYWJvdXQgdG8gc3RhcnQgaGFuZGxlQm91bnRpZXMsIHNlbmQgcnVubmluZ2ApO1xuICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgbGV0IGkgPSAwO1xuXG4gICAgICBjb25zdCBib3VudHlDb3VudCA9IGJvdW50eVN0YXR1c1snYm91bnR5Q291bnQnXTtcbiAgICAgIGxldCBib3VudGllczogQm91bnR5SW5mb1tdID0gW107XG4gICAgICBmb3IgKHZhciBib3VudHlJZHggPSAwOyBib3VudHlJZHggPCBib3VudHlDb3VudDsgYm91bnR5SWR4KyspIHtcbiAgICAgICAgLy8gV2hlbiB0aGVyZSBhcmUgb25seSBvbmUgYm91bnR5IChTdW5kYXkpLCBpdCBnZXRzIGFsbCB0eXBlcyBvZiBwb3dkZXIgdGh1cyBub3RoaW5nIHRvIE9DUlxuICAgICAgICB2YXIgcG93ZGVyID0gYm91bnR5Q291bnQgPT09IDEgPyAwIDogb2NyTnVtYmVySW5SZWN0KHsgeDogNDU0LCB5OiAxMCwgdzogNTAsIGg6IDE4IH0sIElDT05TLndOdW1iZXJzKTtcbiAgICAgICAgdmFyIGJvdW50eUxldmVsID0gYm91bnR5Q291bnQgPT09IDEgPyAxMiA6IGNvdW50Qm91bnR5TGV2ZWwoKTtcblxuICAgICAgICBpZiAoYm91bnR5Q291bnQgIT09IDEgJiYgY29uZmlnLmF1dG9Cb3VudGllc0NoZWNrQmx1ZVBvd2Rlcikge1xuICAgICAgICAgIHZhciBydG4gPSBib3VudHlDaGVja0lmR2V0Qmx1ZVBvd2RlcigpO1xuICAgICAgICAgIHBvd2RlciA9IHJ0blswXTtcbiAgICAgICAgICBib3VudHlMZXZlbCA9IHJ0blsxXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwb3dkZXIgIT09IC0xKSB7XG4gICAgICAgICAgYm91bnRpZXMucHVzaCh7XG4gICAgICAgICAgICBpbmRleDogYm91bnR5SWR4LFxuICAgICAgICAgICAgLy8gZW50cnlQbnQ6IGJvdW50eUVudHJ5UG50LFxuICAgICAgICAgICAgcG93ZGVyU3RvY2s6IHBvd2RlcixcbiAgICAgICAgICAgIGxldmVsOiBib3VudHlMZXZlbCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA0MzUsIHk6IDE3OCB9KTsgLy8gR290byByaWdodCBib3VudHlcbiAgICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICB9XG5cbiAgICAgIGJvdW50aWVzLnNvcnQoZHluYW1pY1NvcnQoJ2xldmVsJykpO1xuICAgICAgLy8gY29uc29sZS5sb2coJ3NvcnRlZCBsZXZlbCBib3VudGllczogJywgSlNPTi5zdHJpbmdpZnkoYm91bnRpZXMsIFsnaW5kZXgnLCAnbGV2ZWwnLCAncG93ZGVyU3RvY2snXSkpO1xuXG4gICAgICBib3VudGllcyA9IGJvdW50aWVzLmZpbHRlcihmdW5jdGlvbiAoYm91bnR5KSB7XG4gICAgICAgIHJldHVybiBib3VudHkubGV2ZWwgPT09IGJvdW50aWVzWzBdLmxldmVsO1xuICAgICAgfSk7XG4gICAgICBib3VudGllcy5zb3J0KGR5bmFtaWNTb3J0KCdwb3dkZXJTdG9jaycpKTtcbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJbk9uZU9mVGhlQm91bnRpZXMgc29ydGVkICYgZmlsdGVyZWQgbGV2ZWwgYm91bnRpZXM6ICR7SlNPTi5zdHJpbmdpZnkoYm91bnRpZXMsIFsnaW5kZXgnLCAnbGV2ZWwnLCAncG93ZGVyU3RvY2snXSl9YCk7XG5cbiAgICAgIGlmIChib3VudGllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYE5vIGJvdW50aWVzIGNhbiBiZSBydW4sIHNraXBwaW5nLCBib3VudGllczogJHtKU09OLnN0cmluZ2lmeShib3VudGllcyl9YCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0YXJnZXRCb3VudHkgPSBib3VudGllc1swXTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBib3VudHlDb3VudDsgaSsrKSB7XG4gICAgICAgIGlmICh0YXJnZXRCb3VudHlbJ2xldmVsJ10gPT09IDYpIHtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNDAsIHk6IDEzNSB9KTsgLy8gR290byBsZWZ0IGJvdW50eVxuICAgICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZ290Qm91bnR5TGV2ZWwgPSBjb3VudEJvdW50eUxldmVsKCk7XG4gICAgICAgIHZhciBnb3RNYXRlcmlhbFN0b2NrID0gYm91bnR5Q291bnQgPT09IDEgPyAwIDogb2NyTnVtYmVySW5SZWN0KHsgeDogNDU0LCB5OiAxMCwgdzogNTAsIGg6IDE4IH0sIElDT05TLndOdW1iZXJzKTtcbiAgICAgICAgaWYgKGdvdEJvdW50eUxldmVsID09PSB0YXJnZXRCb3VudHkubGV2ZWwgJiYgZ290TWF0ZXJpYWxTdG9jayA9PT0gdGFyZ2V0Qm91bnR5LnBvd2RlclN0b2NrKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGZvdW5kIGl0LCBsZXZlbCwgc3RvY2s6ICR7Z290Qm91bnR5TGV2ZWx9LCAke2dvdE1hdGVyaWFsU3RvY2t9YCk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDUzMCwgeTogMzMwIH0pO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsb2dzKFxuICAgICAgICAgICAgY29udGV4dC50YXNrLm5hbWUsXG4gICAgICAgICAgICBgd3JvbmcsICR7Z290Qm91bnR5TGV2ZWx9LCAke2dvdE1hdGVyaWFsU3RvY2t9LCAke2dvdEJvdW50eUxldmVsID09PSB0YXJnZXRCb3VudHkubGV2ZWx9LCAke2dvdE1hdGVyaWFsU3RvY2sgPT09IHRhcmdldEJvdW50eS5wb3dkZXJTdG9ja31gXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNDM1LCB5OiAxNzggfSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICB9KTtcblxuICAvLyByZXJvdXRlci5hZGRSb3V0ZSh7XG4gIC8vICAgcGF0aDogYC8ke3JmcGFnZU5lZWRSZWZpbGxCb3VudHkubmFtZX1gLFxuICAvLyAgIG1hdGNoOiByZnBhZ2VOZWVkUmVmaWxsQm91bnR5LFxuICAvLyAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAvLyAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5ib3VudGllcykge1xuICAvLyAgICAgICBzZW5kS2V5QmFjaygpO1xuICAvLyAgICAgICByZXR1cm47XG4gIC8vICAgICB9XG5cbiAgLy8gICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VOZWVkUmVmaWxsQm91bnR5LCBjYW5ub3QgYmF0dGxlIGJvdW50eSBhcyBubyBtb3JlIHJ1bnMgbGVmdCBzbyBmaW5pc2hSb3VuZGApO1xuICAvLyAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZU5lZWRSZWZpbGxCb3VudHkpO1xuICAvLyAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAvLyAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAvLyAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gIC8vICAgfSxcbiAgLy8gfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlTmVlZFJlZmlsbEJvdW50eUluQ2hvb3NlTGV2ZWwubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VOZWVkUmVmaWxsQm91bnR5SW5DaG9vc2VMZXZlbCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuYm91bnRpZXMpIHtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlTmVlZFJlZmlsbEJvdW50eUluQ2hvb3NlTGV2ZWwsIGNhbm5vdCBiYXR0bGUgYm91bnR5IGFzIG5vIG1vcmUgcnVucyBsZWZ0IHNvIGZpbmlzaFJvdW5kYCk7XG4gICAgICByZXJvdXRlci5nb05leHQocmZwYWdlTmVlZFJlZmlsbEJvdW50eUluQ2hvb3NlTGV2ZWwpO1xuICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlQ2Fubm90UmVmaWxsQm91bnR5QW55bW9yZS5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUNhbm5vdFJlZmlsbEJvdW50eUFueW1vcmUsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmJvdW50aWVzKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUNhbm5vdFJlZmlsbEJvdW50eUFueW1vcmUsIGNhbm5vdCBiYXR0bGUgYm91bnR5IGFzIG5vIG1vcmUgcnVucyBsZWZ0IHNvIGZpbmlzaFJvdW5kYCk7XG4gICAgICByZXJvdXRlci5nb05leHQocmZwYWdlQ2Fubm90UmVmaWxsQm91bnR5QW55bW9yZSk7XG4gICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICB9LFxuICB9KTtcblxuICBwYXNzaXZlQWRkUm91dGUoW3JmcGFnZVJlYWR5VG9CYXR0bGVCb3VudHldKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEJvdW50aWVzVGFzaygpIHtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1MuYm91bnRpZXMsXG4gICAgbWF4VGFza0R1cmluZzogMTUgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBjb25maWcuYXV0b0hhbmRsZUJvdW50aWVzSW50ZXJ2YWxJbk1pbnMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihib3VudHlTdGF0dXMsIHtcbiAgICAgICAgaGFzQm91bnRpZXNMZWZ0OiB0cnVlLFxuICAgICAgICBib3VudHlDb3VudDogMCxcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xufVxuXG52YXIgYm91bnR5TGV2ZWxYID0gMjA7XG52YXIgYm91bnR5TGV2ZWxZUmFuZ2UgPSBbNjAsIDg0LCAxMTksIDE1OCwgMTkwLCAyMzAsIDI2MCwgMjk2LCAzMzNdO1xuZnVuY3Rpb24gY291bnRCb3VudHlMZXZlbCgpIHtcbiAgZm9yICh2YXIgaiA9IDA7IGogPCBib3VudHlMZXZlbFlSYW5nZS5sZW5ndGg7IGorKykge1xuICAgIGlmIChyZXJvdXRlci5zY3JlZW4uaXNTYW1lQ29sb3IoeyB4OiBib3VudHlMZXZlbFgsIHk6IGJvdW50eUxldmVsWVJhbmdlW2pdLCByOiAyMDUsIGc6IDY2LCBiOiAzNiB9KSkge1xuICAgICAgcmV0dXJuIGogKyA0OyAvLyBmaXJzdCBvbmUgaW4gbGlzdCBpcyBMdi40XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxuZnVuY3Rpb24gYm91bnR5Q2hlY2tJZkdldEJsdWVQb3dkZXIoKTogbnVtYmVyW10ge1xuICBjb25zdCBsYXN0UG93ZGVyID0gb2NyTnVtYmVySW5SZWN0KHsgeDogNDU0LCB5OiAxMCwgdzogNTAsIGg6IDE4IH0sIElDT05TLndOdW1iZXJzKTtcbiAgY29uc3QgYm91bnR5TGV2ZWwgPSBjb3VudEJvdW50eUxldmVsKCk7XG5cbiAgaWYgKGJvdW50eUxldmVsID4gNikge1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA0MCwgeTogMTM1IH0pO1xuICAgIFV0aWxzLnNsZWVwKDIwMDApO1xuXG4gICAgY29uc3QgYmx1ZVBvd2VyID0gb2NyTnVtYmVySW5SZWN0KHsgeDogNDU0LCB5OiAxMCwgdzogNTAsIGg6IDE4IH0sIElDT05TLndOdW1iZXJzKTtcblxuICAgIC8vIGNvbnNvbGUubG9nKCdDaGVjayBpZiB3ZSBuZWVkIHRvIGdldCBibHVlIHBvd2RlcjogJywgYmx1ZVBvd2VyLCBsYXN0UG93ZGVyKTtcbiAgICBpZiAoYmx1ZVBvd2VyIDwgbGFzdFBvd2RlciAmJiBibHVlUG93ZXIgPCAzNTApIHtcbiAgICAgIHJldHVybiBbYmx1ZVBvd2VyLCA2XTtcbiAgICB9XG4gIH1cblxuICBmb3IgKHZhciBqID0gMDsgaiA8IGJvdW50eUxldmVsWVJhbmdlLmxlbmd0aDsgaisrKSB7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IGJvdW50eUxldmVsWCwgeTogYm91bnR5TGV2ZWxZUmFuZ2Vbal0gfSk7XG4gICAgVXRpbHMuc2xlZXAoMzAwKTtcbiAgfVxuICByZXR1cm4gW2xhc3RQb3dkZXIsIGJvdW50eUxldmVsXTtcbn1cbiIsImltcG9ydCB7IFBhZ2UsIFV0aWxzLCByZXJvdXRlciB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi4vdGFza3MnO1xuaW1wb3J0IHsgbG9ncywgc2VuZEV2ZW50UnVubmluZywgc2VuZEtleUJhY2sgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uL3NjcmlwdENvbmZpZyc7XG5pbXBvcnQgeyBhc3NpZ24sIHNlbmRDb3VudGVyIH0gZnJvbSAnLi4vaGVscGVyJztcblxuY29uc3QgcmZwYWdlSW5Db29raWVDYXN0bGUgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUluQ29va2llQ2FzdGxlJyxcbiAgW1xuICAgIHsgeDogNTIxLCB5OiAxOCwgcjogOCwgZzogMTI1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQwNiwgeTogMTcsIHI6IDI1NSwgZzogMjE1LCBiOiAwIH0sXG4gICAgeyB4OiAxMDUsIHk6IDMzOSwgcjogNTMsIGc6IDM1LCBiOiA0NCB9LFxuICAgIHsgeDogOTQsIHk6IDMyMSwgcjogMzYsIGc6IDYwLCBiOiA5NyB9LFxuICAgIHsgeDogNTYsIHk6IDMxNSwgcjogMzksIGc6IDEwMCwgYjogNjAgfSxcbiAgXSxcbiAgeyB4OiA2MTUsIHk6IDIwIH1cbik7XG5jb25zdCByZnBhZ2VJbkZvdW50YWluID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VJbkZvdW50YWluJyxcbiAgW1xuICAgIHsgeDogNTA1LCB5OiAzMDUsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogNTY5LCB5OiAzMTAsIHI6IDIxOSwgZzogMjA3LCBiOiAxOTkgfSxcbiAgICB7IHg6IDM2OCwgeTogMjMsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gICAgeyB4OiA1MjYsIHk6IDY3LCByOiAyNTUsIGc6IDg1LCBiOiA2NiB9LFxuICBdLFxuICB7IHg6IDUwNSwgeTogMzA1IH1cbik7XG5jb25zdCByZnBhZ2VGb3VudGFpbjNyZFJhd0VtcHR5ID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VGb3VudGFpbjNyZFJhd0VtcHR5JyxcbiAgW1xuICAgIHsgeDogNTA1LCB5OiAzMDUsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogNTY5LCB5OiAzMTAsIHI6IDIxOSwgZzogMjA3LCBiOiAxOTkgfSxcbiAgICB7IHg6IDM2OCwgeTogMjMsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gICAgeyB4OiA1MjYsIHk6IDY3LCByOiAyNTUsIGc6IDg1LCBiOiA2NiB9LFxuICAgIHsgeDogMzc5LCB5OiAyMzQsIHI6IDI0NywgZzogMjM1LCBiOiAyMjIgfSxcbiAgICB7IHg6IDQyOCwgeTogMjM3LCByOiAyNDcsIGc6IDIzNSwgYjogMjIyIH0sXG4gICAgeyB4OiA0OTMsIHk6IDIzNiwgcjogMjQ3LCBnOiAyMzUsIGI6IDIyMiB9LFxuICBdLFxuICB7IHg6IDUwNSwgeTogMzA1IH1cbik7XG5cbmV4cG9ydCBsZXQgZm91bnRhaW5TdGF0dXMgPSB7XG4gIGp1c3RXZW50VG9Db29raWVIZWFkOiBmYWxzZSxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRGb3VudGFpblJvdXRlcygpIHtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VJbkNvb2tpZUNhc3RsZS5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluQ29va2llQ2FzdGxlLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5mb3VudGFpbikge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5Db29raWVDYXN0bGUsIGxlYXZlIGJlY2F1c2UgY3VycmVudCB0YXNrIGlzIG5vdCBmb3VudGFpbiwgYnV0OiAke2NvbnRleHQudGFzay5uYW1lfWApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAndGFwIGJhY2sgdG8gbGVhdmUgcmZwYWdlSW5Db29raWVDYXN0bGUnKTtcbiAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5Gb3VudGFpbi5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluRm91bnRhaW4sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmZvdW50YWluICYmIGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5yZXNvbHZlR3JlZW5DaGVja3MpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JmcGFnZUluRm91bnRhaW4sIGJ1dCBub3QgVEFTS1MuZm91bnRhaW4gb3IgVEFTS1MucmVzb2x2ZUdyZWVuQ2hlY2tzIHNvIHNlbmQgYmFjaycpO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIDNyZCByYXcgaXMgZW1wdHksIGZvdW50YWluIGlzIHByZXR0eSBjbGVhblxuICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlRm91bnRhaW4zcmRSYXdFbXB0eSwgaW1hZ2UpKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZnBhZ2VGb3VudGFpbjNyZFJhd0VtcHR5IDNyZCByYXcgZW1wdHksIHNldCB0YXNrIGNvbXBsZXRlJyk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA1MDAsIHk6IDMxMCB9KTsgLy8gdGFwIENsYWltXG4gICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlSW5Gb3VudGFpbiBhbmQgY29sbGVjdCBpdCcpO1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDUwMCwgeTogMzEwIH0pOyAvLyB0YXAgQ2xhaW1cbiAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpOyAvLyDlpoLmnpzlj6/ku6XmraPnorrovqjorZjmlLbmiJDlip/vvIzpgJnlgIvlj6/ku6XliKrpmaTvvIzlkKbliYfmmK/nlKjmsLTmsaDlgY/nqbrnlbbkvZzmnInmlLbmiJDlip9cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEZvdW50YWluVGFzaygpIHtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1MuZm91bnRhaW4sXG4gICAgbWF4VGFza0R1cmluZzogMyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIG1pblJvdW5kSW50ZXJ2YWw6IGNvbmZpZy5hdXRvQ29sbGVjdEZvdW50YWluSW50ZXJ2YWxJbk1pbnMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihmb3VudGFpblN0YXR1cywge1xuICAgICAgICBqdXN0V2VudFRvQ29va2llSGVhZDogZmFsc2UsXG4gICAgICB9KTtcbiAgICB9LFxuICB9KTtcbn1cbiIsImltcG9ydCB7IEdyb3VwUGFnZSwgUGFnZSwgVXRpbHMsIHJlcm91dGVyIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuLi90YXNrcyc7XG5pbXBvcnQgeyBsb2dzLCBzZW5kRXZlbnRSdW5uaW5nLCBzZW5kS2V5QmFjayB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi9jb25zdGFudHMnO1xuaW1wb3J0ICogYXMgSUNPTlMgZnJvbSAnLi4vaWNvbnMnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vc2NyaXB0Q29uZmlnJztcbmltcG9ydCB7IGFzc2lnbiwgZmluZFNwZWNpZmljSWNvbkluU2NyZWVuLCBzZW5kQ291bnRlciwgc3dpcGVGcm9tVG9Qb2ludCB9IGZyb20gJy4uL2hlbHBlcic7XG5pbXBvcnQgeyBJY29uIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG4vLyBHbm9tZSBsYWJcbmV4cG9ydCBjb25zdCByZnBhZ2VJbkdub21lTGFiID0gbmV3IFBhZ2UoJ3JmcGFnZUluR25vbWVMYWInLCBbXG4gIHsgeDogMTUsIHk6IDExLCByOiAyMTEsIGc6IDksIGI6IDM1IH0sXG4gIHsgeDogMjUsIHk6IDIxLCByOiAyNTUsIGc6IDIyMywgYjogMjQ0IH0sXG4gIHsgeDogMzI4LCB5OiAxNSwgcjogMTY5LCBnOiA4LCBiOiAzNiB9LFxuICB7IHg6IDMwOCwgeTogMjgsIHI6IDE2LCBnOiAxMiwgYjogOCB9LFxuXSk7XG5leHBvcnQgY29uc3QgcmZwYWdlQ2FuVGFwUmVzZWFyY2ggPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUNhblRhcFJlc2VhcmNoJyxcbiAgW1xuICAgIHsgeDogMjc2LCB5OiAzMTgsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogMjIwLCB5OiAzMTcsIHI6IDU0LCBnOiA2MiwgYjogOTUgfSxcbiAgICB7IHg6IDM5OCwgeTogMzE1LCByOiA1NCwgZzogNjIsIGI6IDk1IH0sXG4gIF0sXG4gIHsgeDogMjc2LCB5OiAzMTggfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VSZXNlYXJjaENvbXBsZXRlID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VSZXNlYXJjaENvbXBsZXRlJyxcbiAgW1xuICAgIHsgeDogNDMyLCB5OiA2MiwgcjogMjQsIGc6IDgxLCBiOiAxMTUgfSxcbiAgICB7IHg6IDMyNiwgeTogMTQsIHI6IDkzLCBnOiA0LCBiOiAxNiB9LFxuICAgIHsgeDogNDA3LCB5OiAyMCwgcjogMTA0LCBnOiA3NywgYjogMCB9LFxuICAgIHsgeDogNDE5LCB5OiAyNjAsIHI6IDIxNSwgZzogMjQxLCBiOiAxNTcgfSxcbiAgICB7IHg6IDQyNSwgeTogMTAyLCByOiAyNDcsIGc6IDIzNSwgYjogMjIyIH0sXG4gICAgeyB4OiAzNTQsIHk6IDIwMCwgcjogMjU1LCBnOiAyNDMsIGI6IDAgfSxcbiAgXSxcbiAgeyB4OiA0MzIsIHk6IDYyIH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlTm90RW5vdWdoQXVyb3JhSXRlbUZvclJlc2VyY2ggPSBuZXcgUGFnZShcbiAgJ3JmcGFnZU5vdEVub3VnaEF1cm9yYUl0ZW1Gb3JSZXNlcmNoJyxcbiAgW1xuICAgIHsgeDogNDM0LCB5OiA5NiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMjIsIHk6IDIxLCByOiAxMjcsIGc6IDEwOCwgYjogMTIyIH0sXG4gICAgeyB4OiAxMywgeTogMTEsIHI6IDk1LCBnOiAxLCBiOiAxNyB9LFxuICAgIHsgeDogNCwgeTogMTYsIHI6IDcsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDI5MiwgeTogMjM1LCByOiAxODksIGc6IDg1LCBiOiAyNDcgfSxcbiAgICB7IHg6IDM1MCwgeTogMjUxLCByOiAwLCBnOiAxODIsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDQzNCwgeTogOTYgfVxuKTtcbi8vIFRvb2xzLCBldGNcbmV4cG9ydCBjb25zdCByZnBhZ2VOb3RFbm91Z2hJdGVtc0ZvclJlc2VhcmNoID0gbmV3IFBhZ2UoJ3JmcGFnZU5vdEVub3VnaEl0ZW1zRm9yUmVzZWFyY2gnLCBbXG4gIHsgeDogNDM1LCB5OiA5NSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDMwMywgeTogMjUwLCByOiA4LCBnOiAxMjUsIGI6IDI1NSB9LFxuICB7IHg6IDI4NywgeTogMjQ3LCByOiAxMjMsIGc6IDIwNywgYjogMTYgfSxcbiAgeyB4OiAyNjEsIHk6IDI0NSwgcjogMjIyLCBnOiAyMDcsIGI6IDE5OCB9LFxuICB7IHg6IDMwNSwgeTogMTAwLCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICB7IHg6IDIyLCB5OiAyMCwgcjogMTI3LCBnOiAxMDIsIGI6IDEyMiB9LFxuXSk7XG5cbmxldCBnbm9tZUxhYlN0YXR1cyA9IHtcbiAga2luZ2RvbVNlYXJjaENvdW50OiAwLFxuICBjb29raWVTZWFyY2hDb3VudDogMCxcbiAgc2VhcmNoTGltaXQ6IDEyLFxuICB0YXJnZXRJbWFnZUluZGV4OiAwLFxuICBuZWVkUmVzZWFyY2hLaW5nZG9tOiBjb25maWcuYXV0b1Jlc2VhcmNoS2luZ2RvbSxcbiAgbmVlZFJlc2VhcmNoQ29va2llOiBjb25maWcuYXV0b1Jlc2VhcmNoQ29va2llcyxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRHbm9tZUxhYlJvdXRlcygpIHtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VJbkdub21lTGFiLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlSW5Hbm9tZUxhYixcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuZ25vbWVMYWIgJiYgY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnJlc29sdmVHcmVlbkNoZWNrcykge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5Hbm9tZUxhYiwgYnV0IGN1cnJlbnQgdGFzayBpcyAke2NvbnRleHQudGFzay5uYW1lfSwgc2tpcHBpbmdgKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZnBhZ2VBbHJlYWR5UmVzZWFyY2hpbmcgPSBuZXcgUGFnZSgncmZwYWdlQWxyZWFkeVJlc2VhcmNoaW5nJywgW1xuICAgICAgICB7IHg6IDQ3LCB5OiA2OSwgcjogMjM3LCBnOiAyMzcsIGI6IDIyOSB9LFxuICAgICAgICB7IHg6IDE1OSwgeTogNjcsIHI6IDExNywgZzogMjIzLCBiOiAwIH0sXG4gICAgICBdKTtcbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZUFscmVhZHlSZXNlYXJjaGluZywgaW1hZ2UpKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJbkdub21lTGFiLCBBbHJlYWR5IHJlc2VhcmNoaW5nLCBza2lwcGluZyBoYW5kbGVJbkdub21lTGFiYCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUluR25vbWVMYWIsIGhhbmRsZUluR25vbWVMYWIgaW4gZ25vbWUgbGFiLCBzZW5kIHJ1bm5pbmdgKTtcbiAgICAgIHNlbmRFdmVudCgncnVubmluZycsICcnKTtcblxuICAgICAgbG9ncyhcbiAgICAgICAgY29udGV4dC50YXNrLm5hbWUsXG4gICAgICAgIGByZnBhZ2VJbkdub21lTGFiLCBraW5nZG9tU2VhcmNoQ291bnQ6ICR7Z25vbWVMYWJTdGF0dXMua2luZ2RvbVNlYXJjaENvdW50fSwgdGFyZ2V0SW1hZ2VJbmRlOiAke2dub21lTGFiU3RhdHVzLnRhcmdldEltYWdlSW5kZXh9YFxuICAgICAgKTtcblxuICAgICAgLy8gVE9ET++8miDmpbXlhYnnlKLlk4HmqqLmn6XpgoTmspLlgZpcbiAgICAgIGlmIChjb25maWcuYXV0b1Jlc2VhcmNoS2luZ2RvbSkge1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjAwLCB5OiAzNDAgfSk7XG4gICAgICAgIGhhbmRsZVJlc2VhcmNoSW5Hbm9tZUxhYihmaW5pc2hSb3VuZCwgSUNPTlMuaWNvbnNHbm9tZUxhYktpbmdkb20sIDAuOTQpO1xuICAgICAgfVxuICAgICAgaWYgKGNvbmZpZy5hdXRvUmVzZWFyY2hDb29raWVzKSB7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMTAsIHk6IDM0MCB9KTtcbiAgICAgICAgaGFuZGxlUmVzZWFyY2hJbkdub21lTGFiKGZpbmlzaFJvdW5kLCBJQ09OUy5pY29uc0dub21lTGFiQ29va2llcywgMC45KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUNhblRhcFJlc2VhcmNoLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQ2FuVGFwUmVzZWFyY2gsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmdub21lTGFiKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VDYW5UYXBSZXNlYXJjaCwgYnV0IGN1cnJlbnQgdGFzayBpcyAke2NvbnRleHQudGFzay5uYW1lfSwgc2tpcHBpbmdgKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlQ2FuVGFwUmVzZWFyY2gsIHN0YXJ0IHJlc2VhcmNoaW5nIGFuZCBmaW5pc2hSb3VuZGApO1xuICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUNhblRhcFJlc2VhcmNoKTtcblxuICAgICAgaWYgKHJlcm91dGVyLndhaXRTY3JlZW5Gb3JNYXRjaGluZ1BhZ2UocmZwYWdlTm90RW5vdWdoQXVyb3JhSXRlbUZvclJlc2VyY2gsIDIwMDApKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VOb3RFbm91Z2hBdXJvcmFJdGVtRm9yUmVzZXJjaCwgY2Fubm90IHJlc2VhcmNoIHRoaXMgb25lYCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgc3RhcnQgcmVzZWFyY2hpbmcgYW5kIGZpbmlzaCByb3VuZGApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlTm90RW5vdWdoQXVyb3JhSXRlbUZvclJlc2VyY2gubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VOb3RFbm91Z2hBdXJvcmFJdGVtRm9yUmVzZXJjaCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuZ25vbWVMYWIpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUNhblRhcFJlc2VhcmNoLCBidXQgY3VycmVudCB0YXNrIGlzICR7Y29udGV4dC50YXNrLm5hbWV9LCBza2lwcGluZ2ApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VOb3RFbm91Z2hBdXJvcmFJdGVtRm9yUmVzZXJjaCwgc2tpcCBhbmQgZmluaXNoUm91bmRgKTtcbiAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VOb3RFbm91Z2hBdXJvcmFJdGVtRm9yUmVzZXJjaCk7XG4gICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlTm90RW5vdWdoSXRlbXNGb3JSZXNlYXJjaC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZU5vdEVub3VnaEl0ZW1zRm9yUmVzZWFyY2gsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmdub21lTGFiKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VDYW5UYXBSZXNlYXJjaCwgYnV0IGN1cnJlbnQgdGFzayBpcyAke2NvbnRleHQudGFzay5uYW1lfSwgc2tpcHBpbmdgKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlTm90RW5vdWdoSXRlbXNGb3JSZXNlYXJjaCwgc2tpcCBhbmQgZmluaXNoUm91bmRgKTtcbiAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VOb3RFbm91Z2hJdGVtc0ZvclJlc2VhcmNoKTtcbiAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEdub21lTGFiVGFza3MoKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLmdub21lTGFiLFxuICAgIG1heFRhc2tEdXJpbmc6IDE1ICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgbWluUm91bmRJbnRlcnZhbDogMTUgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihnbm9tZUxhYlN0YXR1cywge1xuICAgICAgICBraW5nZG9tU2VhcmNoQ291bnQ6IDAsXG4gICAgICAgIGNvb2tpZVNlYXJjaENvdW50OiAwLFxuICAgICAgICBzZWFyY2hMaW1pdDogMTIsXG4gICAgICAgIHRhcmdldEltYWdlSW5kZXg6IDAsXG4gICAgICAgIG5lZWRSZXNlYXJjaEtpbmdkb206IGNvbmZpZy5hdXRvUmVzZWFyY2hLaW5nZG9tLFxuICAgICAgICBuZWVkUmVzZWFyY2hDb29raWU6IGNvbmZpZy5hdXRvUmVzZWFyY2hDb29raWVzLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVJlc2VhcmNoSW5Hbm9tZUxhYihmaW5pc2hSb3VuZDogYW55LCB0YXJnZXRJY29uTGlzdDogSWNvbltdLCB0aHJlYXNob2xkOiBudW1iZXIpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMjsgaSsrKSB7XG4gICAgZm9yICh2YXIgaW1hZ2VJZHggPSAwOyBpbWFnZUlkeCA8IHRhcmdldEljb25MaXN0Lmxlbmd0aDsgaW1hZ2VJZHgrKykge1xuICAgICAgbGV0IGZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbih0YXJnZXRJY29uTGlzdFtpbWFnZUlkeF0pO1xuICAgICAgY29uc29sZS5sb2coJz4nLCBpLCBpbWFnZUlkeCwgdGFyZ2V0SWNvbkxpc3RbaW1hZ2VJZHhdLm5hbWUsIEpTT04uc3RyaW5naWZ5KGZvdW5kUmVzdWx0cykpO1xuXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IE9iamVjdC5rZXlzKGZvdW5kUmVzdWx0cykubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChmb3VuZFJlc3VsdHNbal0pO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgcmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShcbiAgICAgICAgICAgIG5ldyBHcm91cFBhZ2UoJ2dyb3VwUGFnZUxhYlJlc3VsdCcsIFtcbiAgICAgICAgICAgICAgcmZwYWdlQ2FuVGFwUmVzZWFyY2gsXG4gICAgICAgICAgICAgIHJmcGFnZU5vdEVub3VnaEF1cm9yYUl0ZW1Gb3JSZXNlcmNoLFxuICAgICAgICAgICAgICByZnBhZ2VOb3RFbm91Z2hJdGVtc0ZvclJlc2VhcmNoLFxuICAgICAgICAgICAgICByZnBhZ2VSZXNlYXJjaENvbXBsZXRlLFxuICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAzMDAwXG4gICAgICAgICAgKVxuICAgICAgICApIHtcbiAgICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlQ2FuVGFwUmVzZWFyY2gpKSB7XG4gICAgICAgICAgICBsb2dzKFRBU0tTLmdub21lTGFiLCBgcmZwYWdlQ2FuVGFwUmVzZWFyY2gsIHRhcCBpdGApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUNhblRhcFJlc2VhcmNoKTtcblxuICAgICAgICAgICAgaWYgKHJlcm91dGVyLndhaXRTY3JlZW5Gb3JNYXRjaGluZ1BhZ2UocmZwYWdlTm90RW5vdWdoQXVyb3JhSXRlbUZvclJlc2VyY2gsIDMwMDApKSB7XG4gICAgICAgICAgICAgIGxvZ3MoVEFTS1MuZ25vbWVMYWIsIGByZnBhZ2VOb3RFbm91Z2hBdXJvcmFJdGVtRm9yUmVzZXJjaCwgYmFja2ApO1xuICAgICAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgICAgICBVdGlscy5zbGVlcCgxMDAwKTtcbiAgICAgICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsb2dzKFRBU0tTLmdub21lTGFiLCBgcmZwYWdlSW5Hbm9tZUxhYiwgY2Fubm90IHRhcCB0aGlzIG9uZSwgY29udGludWU6ICR7cmVyb3V0ZXIuZ2V0Q3VycmVudE1hdGNoTmFtZXMoKX1gKTtcbiAgICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgICByZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZUluR25vbWVMYWIsIDIwMDApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHN3aXBlRnJvbVRvUG9pbnQoeyB4OiA2MDAsIHk6IDIzNCB9LCB7IHg6IC0yMDAsIHk6IDIzNCB9LCA1LCB1bmRlZmluZWQsIHJmcGFnZUluR25vbWVMYWIpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBHcm91cFBhZ2UsIFBhZ2UsIFV0aWxzLCByZXJvdXRlciB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IGxvZ3MsIHNlbmRFdmVudFJ1bm5pbmcsIHNlbmRLZXlCYWNrIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuLi90YXNrcyc7XG5pbXBvcnQgeyBzYXZlSW1hZ2VUb0Rpc2ssIHNlbmRDb3VudGVyIH0gZnJvbSAnLi4vaGVscGVyJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uL3NjcmlwdENvbmZpZyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IGFzc2lnbiwgcGFzc2l2ZUFkZFJvdXRlIH0gZnJvbSAnLi4vaGVscGVyJztcblxuY29uc3QgcmZwYWdlSW5HdWlsZExhbmQgPSBuZXcgUGFnZSgncmZwYWdlSW5HdWlsZExhbmQnLCBbXG4gIHsgeDogNDQ1LCB5OiAzMjksIHI6IDc0LCBnOiA2MSwgYjogMTU0IH0sXG4gIHsgeDogMjEyLCB5OiAzMjksIHI6IDE3MywgZzogMTUwLCBiOiAxOTggfSxcbiAgeyB4OiAxNjMsIHk6IDMyNywgcjogMTA3LCBnOiAzMiwgYjogNDkgfSxcbiAgeyB4OiAxNDQsIHk6IDMyNiwgcjogMjMxLCBnOiAyMDcsIGI6IDIxNCB9LFxuICB7IHg6IDEwNywgeTogMzI0LCByOiAyMjUsIGc6IDIxMywgYjogMTk4IH0sXG4gIHsgeDogNDEsIHk6IDMwMywgcjogMjE3LCBnOiAxNDYsIGI6IDk5IH0sXG4gIHsgeDogMTksIHk6IDI2NywgcjogMjA2LCBnOiAxOTUsIGI6IDI0NyB9LFxuXSk7XG5jb25zdCByZnBhZ2VTZWFjaFRvSm9pbkd1aWxkID0gbmV3IFBhZ2UoJ3JmcGFnZVNlYWNoVG9Kb2luR3VpbGQnLCBbXG4gIHsgeDogNywgeTogMTMwLCByOiAxMzUsIGc6IDE1MiwgYjogMTkyIH0sXG4gIHsgeDogMjUsIHk6IDMxLCByOiAxODksIGc6IDE5NywgYjogMjExIH0sXG4gIHsgeDogMTM4LCB5OiAyMywgcjogNTksIGc6IDYxLCBiOiAxMjMgfSxcbiAgeyB4OiAyODAsIHk6IDM0OSwgcjogNjksIGc6IDcwLCBiOiAxMDkgfSxcbiAgeyB4OiA0NjUsIHk6IDMzMSwgcjogMTE2LCBnOiA3NywgYjogMzcgfSxcbiAgeyB4OiA0MTksIHk6IDMxOSwgcjogNzUsIGc6IDEwLCBiOiA2IH0sXG4gIHsgeDogNDIyLCB5OiAxOCwgcjogMywgZzogNjIsIGI6IDEyNiB9LFxuICB7IHg6IDUxNiwgeTogMzMxLCByOiAxMzIsIGc6IDEwMywgYjogMzkgfSxcbl0pO1xuY29uc3QgcmZwYWdlSW5wdXRHdWlsZFdlbGNvbWVUZXh0ID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VJbnB1dEd1aWxkV2VsY29tZVRleHQnLFxuICBbXG4gICAgeyB4OiA0MzQsIHk6IDEwNSwgcjogNTcsIGc6IDE2NiwgYjogMjMxIH0sXG4gICAgeyB4OiA0MjAsIHk6IDEwNywgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDQzOSwgeTogMjA5LCByOiAyNDcsIGc6IDIzNSwgYjogMjIyIH0sXG4gICAgeyB4OiA0MzgsIHk6IDIzNSwgcjogMjIyLCBnOiAyMDcsIGI6IDE5OCB9LFxuICAgIHsgeDogMzU4LCB5OiAyNDAsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiAyOCwgeTogMjcyLCByOiA4NiwgZzogODYsIGI6IDg5IH0sXG4gICAgeyB4OiAyNiwgeTogMzIxLCByOiA3NiwgZzogNzYsIGI6IDc2IH0sXG4gICAgeyB4OiAxNjAsIHk6IDMyNiwgcjogMjUsIGc6IDMsIGI6IDkgfSxcbiAgICB7IHg6IDIxNCwgeTogMzM0LCByOiA0MCwgZzogMzQsIGI6IDUzIH0sXG4gICAgeyB4OiAxNTUsIHk6IDMzMiwgcjogNTYsIGc6IDEyLCBiOiAxOCB9LFxuICBdLFxuICB7IHg6IDQzNCwgeTogMTA1IH1cbik7XG5jb25zdCByZnBhZ2VJbkd1aWxkQmVhY29uID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VJbkd1aWxkQmVhY29uJyxcbiAgW1xuICAgIHsgeDogNTE5LCB5OiAzMTcsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiAzOTMsIHk6IDg2LCByOiAyNTUsIGc6IDIwOSwgYjogMCB9LFxuICAgIHsgeDogMzAyLCB5OiA4MiwgcjogMjIzLCBnOiAyMjMsIGI6IDIyMyB9LFxuICAgIHsgeDogMjMyLCB5OiAyOTEsIHI6IDY4LCBnOiA1OCwgYjogMTAzIH0sXG4gICAgeyB4OiAyMDcsIHk6IDE2MSwgcjogMjQ2LCBnOiAyMzgsIGI6IDI0NiB9LFxuICAgIHsgeDogOTksIHk6IDEwNSwgcjogMjAzLCBnOiAyMDksIGI6IDIxMyB9LFxuICAgIHsgeDogMTU5LCB5OiAyNjgsIHI6IDIyMCwgZzogMjIzLCBiOiAyMjcgfSxcbiAgXSxcbiAgeyB4OiA1MTYsIHk6IDMyMiB9XG4pO1xuLy8gY29uc3QgcmZwYWdlR3VpbGRCZWFjb25MZXZlbFVwID0gbmV3IFBhZ2UoXG4vLyAgICdyZnBhZ2VHdWlsZEJlYWNvbkxldmVsVXAnLFxuLy8gICBbXG4vLyAgICAgeyB4OiA1MjUsIHk6IDMyMCwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbi8vICAgICB7IHg6IDYwOCwgeTogMzE5LCByOiA0OSwgZzogNjAsIGI6IDkwIH0sXG4vLyAgICAgeyB4OiAzODAsIHk6IDI2MSwgcjogMTA3LCBnOiAxOTgsIGI6IDI0NyB9LFxuLy8gICAgIHsgeDogMzQ3LCB5OiAyOTAsIHI6IDIyMiwgZzogMjIzLCBiOiAyMzEgfSxcbi8vICAgICB7IHg6IDM5MSwgeTogODYsIHI6IDI1NSwgZzogMjExLCBiOiAwIH0sXG4vLyAgICAgeyB4OiA1NjksIHk6IDg4LCByOiA3NCwgZzogNzUsIGI6IDc3IH0sXG4vLyAgICAgeyB4OiAyMTUsIHk6IDI3OSwgcjogMjE2LCBnOiAyMTksIGI6IDIyMyB9LFxuLy8gICBdLFxuLy8gICB7IHg6IDQ3NywgeTogMzIxIH1cbi8vICk7XG5jb25zdCByZlBhZ2VHdWlsZEJlYWNvbklzQ2xlYXIgPSBuZXcgUGFnZShcbiAgJ3JmUGFnZUd1aWxkQmVhY29uSXNDbGVhcicsXG4gIFtcbiAgICB7IHg6IDYwMCwgeTogMjUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM2NSwgeTogMjksIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiAzOTEsIHk6IDg1LCByOiAyNTUsIGc6IDIxMSwgYjogMCB9LFxuICAgIHsgeDogNDM1LCB5OiAyNTQsIHI6IDE4MSwgZzogMTc4LCBiOiAxOTggfSxcbiAgICB7IHg6IDUyMiwgeTogMzIwLCByOiAxMjAsIGc6IDEyMCwgYjogMTIwIH0sXG4gICAgeyB4OiA1NTksIHk6IDMyNiwgcjogNDksIGc6IDYwLCBiOiA5MCB9LFxuICAgIHsgeDogNTExLCB5OiAxODYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiA2MDAsIHk6IDI1IH1cbik7XG5jb25zdCByZnBhZ2VCYXR0bGVEcmFnb24gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUJhdHRsZURyYWdvbicsXG4gIFtcbiAgICB7IHg6IDQwOSwgeTogMjAsIHI6IDI1NSwgZzogMjA0LCBiOiAwIH0sXG4gICAgeyB4OiA1MjQsIHk6IDIwLCByOiAwLCBnOiAxMzksIGI6IDI1NSB9LFxuICAgIHsgeDogMzE3LCB5OiAyMiwgcjogMjE4LCBnOiAyMjcsIGI6IDI0MCB9LFxuICAgIHsgeDogMjIzLCB5OiAyOSwgcjogMTkyLCBnOiAyMDEsIGI6IDIzNyB9LFxuICAgIHsgeDogMzcsIHk6IDEwMywgcjogMTcxLCBnOiAxNTMsIGI6IDIyMCB9LFxuICAgIHsgeDogMjQsIHk6IDcxLCByOiAyMzcsIGc6IDIzNywgYjogMjI5IH0sXG4gIF0sXG4gIHsgeDogNjAwLCB5OiAyNSB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZVJlYWR5VG9GaWdodERyYWdvbiA9IG5ldyBQYWdlKFxuICAncmZwYWdlUmVhZHlUb0ZpZ2h0RHJhZ29uJyxcbiAgW1xuICAgIHsgeDogNDkzLCB5OiAzMjUsIHI6IDEzNCwgZzogMjMzLCBiOiAyNTMgfSxcbiAgICB7IHg6IDEwOCwgeTogMzM1LCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogMzIzLCB5OiAxMiwgcjogMjMzLCBnOiAxNTYsIGI6IDI0NCB9LFxuICAgIHsgeDogNDEsIHk6IDE5NSwgcjogMjUxLCBnOiAyMjYsIGI6IDIzNyB9LFxuICAgIHsgeDogNjEwLCB5OiAxOTQsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICAgIHsgeDogMzgsIHk6IDIzMSwgcjogMTA3LCBnOiAxMjIsIGI6IDIwMSB9LFxuICBdLFxuICB7IHg6IDQ5MywgeTogMzI1IH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlVGFsbHlpbmdmaWdodERyYWdvbiA9IG5ldyBQYWdlKFxuICAncmZwYWdlVGFsbHlpbmdmaWdodERyYWdvbicsXG4gIFtcbiAgICB7IHg6IDQ5MywgeTogMzI1LCByOiA2MSwgZzogMTA0LCBiOiA2IH0sXG4gICAgeyB4OiA1MTYsIHk6IDMxNywgcjogMTY2LCBnOiAxNjgsIGI6IDY2IH0sXG4gICAgeyB4OiAxMDgsIHk6IDMzNSwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDMyMywgeTogMTIsIHI6IDIzMywgZzogMTU2LCBiOiAyNDQgfSxcbiAgICB7IHg6IDQxLCB5OiAxOTUsIHI6IDI1MSwgZzogMjI2LCBiOiAyMzcgfSxcbiAgICB7IHg6IDYxMCwgeTogMTk0LCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgXSxcbiAgeyB4OiA0OTMsIHk6IDMyNSB9XG4pO1xuY29uc3QgcmZwYWdlRHJhZ29uUmVtYWluSGVhbHRoID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VEcmFnb25SZW1haW5IZWFsdGgnLFxuICBbXG4gICAgeyB4OiAzNjgsIHk6IDIzMywgcjogMTMyLCBnOiA2NSwgYjogMjU1IH0sXG4gICAgeyB4OiAxNTMsIHk6IDMzNCwgcjogMSwgZzogMzEsIGI6IDQxIH0sXG4gICAgeyB4OiA3OSwgeTogMzM0LCByOiA0MiwgZzogMTUsIGI6IDQgfSxcbiAgXSxcbiAgeyB4OiA1NzIsIHk6IDMzMCB9XG4pO1xuXG5leHBvcnQgY29uc3QgcmZwYWdlQ29va2llQWxsaWFuY2VTZWxlY3RDYW1wYWlnbnNNdXNldW0gPSBuZXcgUGFnZSgncmZwYWdlQ29va2llQWxsaWFuY2VTZWxlY3RDYW1wYWlnbnNNdXNldW0nLCBbXG4gIHsgeDogMzQwLCB5OiAxNCwgcjogMTI2LCBnOiAxOTUsIGI6IDIwNCB9LFxuICB7IHg6IDMzMSwgeTogMjEsIHI6IDI1LCBnOiAyNSwgYjogNjcgfSxcbiAgeyB4OiAyNTAsIHk6IDE2LCByOiAxMDksIGc6IDEwMiwgYjogMjU1IH0sXG4gIHsgeDogMjUwLCB5OiAyMCwgcjogMTQ0LCBnOiAxMzksIGI6IDI0MyB9LFxuICB7IHg6IDI1NiwgeTogODgsIHI6IDE4NiwgZzogMTU0LCBiOiAyMTUgfSxcbiAgeyB4OiA5LCB5OiAzMjksIHI6IDM2LCBnOiA0MywgYjogNTEgfSxcbiAgeyB4OiAyMSwgeTogNjAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAxMCwgeTogNTQsIHI6IDcsIGc6IDE2LCBiOiAzMyB9LFxuICB7IHg6IDIwNywgeTogMzI1LCByOiAxMDIsIGc6IDgzLCBiOiAxNzAgfSxcbiAgeyB4OiAxOTUsIHk6IDMxOCwgcjogMjE1LCBnOiAxNjksIGI6IDEyNiB9LFxuICB7IHg6IDE0MCwgeTogMzIzLCByOiAxMDIsIGc6IDgzLCBiOiAxNzAgfSxcbiAgeyB4OiAxMTcsIHk6IDMxMCwgcjogMTc1LCBnOiA5NSwgYjogMjQgfSxcbiAgeyB4OiA0OCwgeTogMzE4LCByOiAyMTUsIGc6IDIzNCwgYjogMjM0IH0sXG5dKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VDb29raWVBbGxpYW5jZVNlbGVjdENhbXBhaWduc05vTXVzZXVtID0gbmV3IFBhZ2UoJ3JmcGFnZUNvb2tpZUFsbGlhbmNlU2VsZWN0Q2FtcGFpZ25zTm9NdXNldW0nLCBbXG4gIHsgeDogMzQwLCB5OiAxNCwgcjogMTI2LCBnOiAxOTUsIGI6IDIwNCB9LFxuICB7IHg6IDMzMSwgeTogMjEsIHI6IDI1LCBnOiAyNSwgYjogNjcgfSxcbiAgeyB4OiAyNTAsIHk6IDE2LCByOiAxMDksIGc6IDEwMiwgYjogMjU1IH0sXG4gIHsgeDogMjUwLCB5OiAyMCwgcjogMTQ0LCBnOiAxMzksIGI6IDI0MyB9LFxuICB7IHg6IDI1NiwgeTogODgsIHI6IDE4NiwgZzogMTU0LCBiOiAyMTUgfSxcbiAgeyB4OiA2NCwgeTogMzE5LCByOiAxMDIsIGc6IDgzLCBiOiAxNzAgfSxcbiAgeyB4OiA4MywgeTogMzE5LCByOiAyMDUsIGc6IDIyNywgYjogMjMzIH0sXG4gIHsgeDogMTMwLCB5OiAzMjAsIHI6IDEwMiwgZzogODMsIGI6IDE3MCB9LFxuICB7IHg6IDE0OSwgeTogMzEyLCByOiAyMjEsIGc6IDEzNiwgYjogNTIgfSxcbiAgeyB4OiAxNjEsIHk6IDMxOCwgcjogMjU1LCBnOiAyMzcsIGI6IDExNiB9LFxuICB7IHg6IDksIHk6IDMyOSwgcjogMzYsIGc6IDQzLCBiOiA1MSB9LFxuXSk7XG5jb25zdCBncm91cFBhZ2VBbGxpYW5jZVNlbGVjdFN0YWdlID0gbmV3IEdyb3VwUGFnZSgnZ3JvdXBQYWdlQWxsaWFuY2VTZWxlY3RTdGFnZScsIFtcbiAgcmZwYWdlQ29va2llQWxsaWFuY2VTZWxlY3RDYW1wYWlnbnNNdXNldW0sXG4gIHJmcGFnZUNvb2tpZUFsbGlhbmNlU2VsZWN0Q2FtcGFpZ25zTm9NdXNldW0sXG5dKTtcblxuY29uc3QgcmZwYWdlSW5Db29raWVBbGxpYW5jZSA9IG5ldyBQYWdlKCdyZnBhZ2VJbkNvb2tpZUFsbGlhbmNlJywgW1xuICB7IHg6IDM1MSwgeTogMzMyLCByOiAxODEsIGc6IDc0LCBiOiAyMDYgfSxcbiAgeyB4OiAxNzAsIHk6IDMzNCwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gIHsgeDogNzEsIHk6IDMzMiwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gIHsgeDogMzMwLCB5OiAyMCwgcjogOTYsIGc6IDkyLCBiOiAyMjUgfSxcbiAgeyB4OiAyNTIsIHk6IDE2LCByOiAxMjYsIGc6IDEwOSwgYjogMjM3IH0sXG4gIHsgeDogMjUwLCB5OiAyMSwgcjogMTQ2LCBnOiAxNDUsIGI6IDI0MyB9LFxuICB7IHg6IDksIHk6IDgxLCByOiA2MywgZzogNTgsIGI6IDYyIH0sXG5dKTtcbmNvbnN0IHJmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm8gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm8nLFxuICBbXG4gICAgeyB4OiA1MjMsIHk6IDE2LCByOiAwLCBnOiA1MSwgYjogNjcgfSxcbiAgICB7IHg6IDQwOSwgeTogMTgsIHI6IDY3LCBnOiA1NCwgYjogMCB9LFxuICAgIHsgeDogMzM0LCB5OiAxMywgcjogNTYsIGc6IDQ5LCBiOiA1OSB9LFxuICAgIHsgeDogMzMzLCB5OiAyMywgcjogNjQsIGc6IDYzLCBiOiA2NiB9LFxuICAgIHsgeDogMjQ5LCB5OiAyMiwgcjogMzgsIGc6IDM5LCBiOiA2NCB9LFxuICAgIHsgeDogMjUwLCB5OiAxMywgcjogMjIsIGc6IDE1LCBiOiA0NyB9LFxuICAgIHsgeDogMTYsIHk6IDIxLCByOiA2MSwgZzogNjEsIGI6IDYxIH0sXG4gICAgeyB4OiA3MSwgeTogMjEsIHI6IDY3LCBnOiA2NywgYjogNjcgfSxcbiAgICB7IHg6IDY0LCB5OiAxMSwgcjogMjMsIGc6IDE5LCBiOiAxNCB9LFxuICBdLFxuICB7IHg6IDQ5LCB5OiAzMzYgfSAvLyB0YXAgRWRpdCB0byBza2lwXG4pO1xuLy8gTWFyayBhcyBjb25mbGljdCB3aXRoIGxvZ2luIHBhZ2Vcbi8vIGNvbnN0IHJmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm9JblRlYW1TZXR1cCA9IG5ldyBQYWdlKFxuLy8gICAncmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRyb0luVGVhbVNldHVwJyxcbi8vICAgW1xuLy8gICAgIHsgeDogNjAwLCB5OiA5MCwgcjogNjQsIGc6IDI0LCBiOiA3IH0sXG4vLyAgICAgeyB4OiA2MDMsIHk6IDExNCwgcjogMzIsIGc6IDU0LCBiOiAzIH0sXG4vLyAgICAgeyB4OiA2MDgsIHk6IDE0MywgcjogMywgZzogNDQsIGI6IDU5IH0sXG4vLyAgICAgeyB4OiA2MDYsIHk6IDE5NywgcjogMywgZzogNDQsIGI6IDU5IH0sXG4vLyAgICAgeyB4OiA5NCwgeTogMjU5LCByOiAzLCBnOiA0NCwgYjogNTkgfSxcbi8vICAgICB7IHg6IDYxMywgeTogMjc5LCByOiAxLCBnOiAxLCBiOiAyIH0sXG4vLyAgICAgeyB4OiA2MTksIHk6IDEzLCByOiAxNCwgZzogNDIsIGI6IDYwIH0sXG4vLyAgIF0sXG4vLyAgIHsgeDogNjE5LCB5OiAxMyB9IC8vIHRhcCBYIHRvIHNraXBcbi8vICk7XG5cbmNvbnN0IHJmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm9CZWFjb25WYWxvciA9IG5ldyBQYWdlKFxuICAncmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRyb0JlYWNvblZhbG9yJyxcbiAgW1xuICAgIHsgeDogMzM2LCB5OiAxNiwgcjogNTcsIGc6IDUwLCBiOiA1OSB9LFxuICAgIHsgeDogMjUwLCB5OiAxNCwgcjogMjYsIGc6IDIyLCBiOiA1OCB9LFxuICAgIHsgeDogMjQ5LCB5OiAyMSwgcjogMzgsIGc6IDM3LCBiOiA2NCB9LFxuICAgIHsgeDogMjEzLCB5OiAyNTIsIHI6IDE1MCwgZzogMjE3LCBiOiA2MCB9LFxuICAgIHsgeDogNDI5LCB5OiAyNTYsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogMzQ4LCB5OiAyNzAsIHI6IDI1MCwgZzogMTg1LCBiOiA5IH0sXG4gICAgeyB4OiAyMTksIHk6IDI3MywgcjogMjQzLCBnOiAyMDEsIGI6IDAgfSxcbiAgICB7IHg6IDE2MCwgeTogMjY0LCByOiAyMzYsIGc6IDIyNiwgYjogMjQ0IH0sXG4gIF0sXG4gIHsgeDogMjE5LCB5OiAyNzMgfSAvLyB0YXAgN0Rcbik7XG5cbmNvbnN0IHJmcGFnZU5vQWxsaWFuY2VUaWNrZXQgPSBuZXcgUGFnZSgncmZwYWdlTm9BbGxpYW5jZVRpY2tldCcsIFtcbiAgeyB4OiAyNDQsIHk6IDI1MiwgcjogNDksIGc6IDE5MCwgYjogMjMxIH0sXG4gIHsgeDogMzI3LCB5OiA3NywgcjogMTU2LCBnOiAxNDQsIGI6IDIxNyB9LFxuICB7IHg6IDMxNywgeTogMTAwLCByOiAyNDQsIGc6IDIzNSwgYjogMjMxIH0sXG4gIHsgeDogMzU1LCB5OiAyNTYsIHI6IDAsIGc6IDE5OCwgYjogMjU1IH0sXG4gIHsgeDogMzM0LCB5OiAyMiwgcjogODUsIGc6IDgwLCBiOiAxMDkgfSxcbl0pO1xuY29uc3QgcmZwYWdlTm9BbGxpYW5jZVRpY2tldDIgPSBuZXcgUGFnZSgncmZwYWdlTm9BbGxpYW5jZVRpY2tldDInLCBbXG4gIHsgeDogMjQ4LCB5OiAyNzgsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICB7IHg6IDM1NSwgeTogMjgyLCByOiAwLCBnOiAxOTMsIGI6IDI1NSB9LFxuICB7IHg6IDMxOCwgeTogMTU0LCByOiAxODEsIGc6IDE2OSwgYjogMjE5IH0sXG4gIHsgeDogMzQzLCB5OiAxMjYsIHI6IDUyLCBnOiAxNTksIGI6IDIyNyB9LFxuXSk7XG5jb25zdCByZnBhZ2VBbGxpYW5jZVN0ZXVwVGVhbSA9IG5ldyBQYWdlKCdyZnBhZ2VBbGxpYW5jZVN0ZXVwVGVhbScsIFtcbiAgeyB4OiA2MTksIHk6IDE4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNjA2LCB5OiA5MCwgcjogMjQ3LCBnOiA4OSwgYjogMjQgfSxcbiAgeyB4OiA2MDMsIHk6IDExMiwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgeyB4OiA2MDgsIHk6IDEzOSwgcjogMCwgZzogMTUwLCBiOiAyMTQgfSxcbiAgeyB4OiA2MTAsIHk6IDE2OCwgcjogMCwgZzogMTUwLCBiOiAyMTQgfSxcbiAgeyB4OiA1MDcsIHk6IDEyOSwgcjogMTM0LCBnOiAxNywgYjogMTU4IH0sXG5dKTtcbmNvbnN0IHJmcGFnZUFsbGlhbmNlQmVhY29uSXNPZmYgPSBuZXcgUGFnZSgncmZwYWdlQWxsaWFuY2VCZWFjb25Jc09mZicsIFtcbiAgeyB4OiAyMTUsIHk6IDE5OCwgcjogOTQsIGc6IDEwMiwgYjogMTUzIH0sXG4gIHsgeDogMjAyLCB5OiAyMDEsIHI6IDIwOSwgZzogMjI2LCBiOiAyNDggfSxcbiAgeyB4OiAyMDksIHk6IDE5OCwgcjogOTksIGc6IDEwOSwgYjogMTU2IH0sXG5dKTtcbmNvbnN0IHJmcGFnZUFsbGlhbmNlVGVhbVNldHVwID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VBbGxpYW5jZVRlYW1TZXR1cCcsXG4gIFtcbiAgICB7IHg6IDYxOCwgeTogMTksIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ5MCwgeTogOCwgcjogMTIsIGc6IDE4LCBiOiAzMyB9LFxuICAgIHsgeDogNDA3LCB5OiAxNywgcjogNDQsIGc6IDIwLCBiOiAyNSB9LFxuICAgIHsgeDogMjI0LCB5OiA3LCByOiAxMjcsIGc6IDc3LCBiOiA3MCB9LFxuICAgIHsgeDogMjQsIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAyMSwgeTogMjI2LCByOiA4MywgZzogMTAyLCBiOiAxNTcgfSxcbiAgICB7IHg6IDExLCB5OiAyODMsIHI6IDE5LCBnOiAxMywgYjogMTEgfSxcbiAgXSxcbiAgeyB4OiA2MTgsIHk6IDE5IH1cbik7XG5jb25zdCByZnBhZ2VBbGxpYW5jZUFkZE1vcmVDb29raWUgPSBuZXcgUGFnZSgncmZwYWdlQWxsaWFuY2VBZGRNb3JlQ29va2llJywgW1xuICB7IHg6IDQwNywgeTogMjUwLCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgeyB4OiAyOTcsIHk6IDI1MywgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gIHsgeDogMjc1LCB5OiAxMzYsIHI6IDExMCwgZzogMTA3LCBiOiAxMDQgfSxcbiAgeyB4OiAyNTIsIHk6IDEzNSwgcjogNDYsIGc6IDQ2LCBiOiA0NiB9LFxuICB7IHg6IDMzNSwgeTogMjMsIHI6IDQxLCBnOiA0MSwgYjogNjYgfSxcbiAgeyB4OiA2MDMsIHk6IDMxMSwgcjogMjYsIGc6IDQ1LCBiOiAzIH0sXG4gIHsgeDogNDg4LCB5OiAzMjgsIHI6IDM2LCBnOiAzMiwgYjogNyB9LFxuICB7IHg6IDM3LCB5OiAxNDQsIHI6IDU3LCBnOiAyMiwgYjogMCB9LFxuICB7IHg6IDY1LCB5OiA5MywgcjogMTIsIGc6IDE5LCBiOiAzNyB9LFxuXSk7XG5cbmNvbnN0IHJmcGFnZUJlYWNvbk9mVmFsb3IgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUJlYWNvbk9mVmFsb3InLFxuICBbXG4gICAgeyB4OiAzMzgsIHk6IDEzLCByOiAzMiwgZzogNTgsIGI6IDg1IH0sXG4gICAgeyB4OiAzMzQsIHk6IDIzLCByOiAxOTksIGc6IDE5MCwgYjogMjM2IH0sXG4gICAgeyB4OiAyNDgsIHk6IDEzLCByOiA4OCwgZzogNjIsIGI6IDE4NiB9LFxuICAgIHsgeDogMjQ5LCB5OiAyMSwgcjogMTQ2LCBnOiAxNDIsIGI6IDI0NCB9LFxuICAgIHsgeDogMTUzLCB5OiAxMjMsIHI6IDIxOSwgZzogMTQ3LCBiOiA3NSB9LFxuICAgIHsgeDogMTQyLCB5OiAxMjksIHI6IDI0NSwgZzogMjMzLCBiOiA4OCB9LFxuICAgIHsgeDogMzQ2LCB5OiAyNzQsIHI6IDI1NSwgZzogMjA5LCBiOiAwIH0sXG4gICAgeyB4OiA0MzAsIHk6IDI3MCwgcjogNjAsIGc6IDE4MSwgYjogOCB9LFxuICBdLFxuICB7IHg6IDM0NiwgeTogMjc0IH1cbik7XG5jb25zdCByZnBhZ2VDYW5ub3RMaWdodEJlYWNvbiA9IG5ldyBQYWdlKCdyZnBhZ2VDYW5ub3RMaWdodEJlYWNvbicsIFtcbiAgeyB4OiA0MzYsIHk6IDI4NCwgcjogMCwgZzogMTM0LCBiOiAxODkgfSxcbiAgeyB4OiAyNjEsIHk6IDExMiwgcjogMTE0LCBnOiA4MCwgYjogNDQgfSxcbiAgeyB4OiAyNjEsIHk6IDIyNiwgcjogMTE4LCBnOiA4MiwgYjogNTAgfSxcbiAgeyB4OiAyNTAsIHk6IDE5MiwgcjogODMsIGc6IDg3LCBiOiAxMDQgfSxcbiAgeyB4OiAxOTcsIHk6IDEwNCwgcjogMTA3LCBnOiAxNDIsIGI6IDE5OCB9LFxuXSk7XG5cbmNvbnN0IHJmcGFnZUxpZ2h0QmVhY29uUmVtaW5kZXIgPSBuZXcgUGFnZSgncmZwYWdlTGlnaHRCZWFjb25SZW1pbmRlcicsIFtcbiAgeyB4OiAzMDEsIHk6IDI1MCwgcjogOCwgZzogMTY2LCBiOiAyMjIgfSxcbiAgeyB4OiA0MDMsIHk6IDI0OCwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgeyB4OiAzMzMsIHk6IDE5LCByOiA0OSwgZzogMzgsIGI6IDc1IH0sXG4gIHsgeDogMTg3LCB5OiAxNjYsIHI6IDEwNCwgZzogMTExLCBiOiAxMjIgfSxcbl0pO1xuLy8gQSB2ZXJ5IGxvbmcgdGV4dCBkb3duIGJlbG93IHNheWluZyBmaWdodCBhbHJlYWR5IHN0YXJ0ZWQsIGNhbm5vdCBsaWdodCBiZWFjb24sIG5lZWQgdG8gYmUgY2xvc2VkXG5jb25zdCByZnBhZ2VTdGFydGVkRmlnaHRpbmdTb0Nhbm5vdFN0YXJ0QmVhY29uID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VTdGFydGVkRmlnaHRpbmdTb0Nhbm5vdFN0YXJ0QmVhY29uJyxcbiAgW1xuICAgIHsgeDogNDczLCB5OiAyMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTkxLCB5OiA4MiwgcjogMjI3LCBnOiAxNjUsIGI6IDgyIH0sXG4gICAgeyB4OiAxOTcsIHk6IDE4MywgcjogMjE5LCBnOiAxNDcsIGI6IDc3IH0sXG4gICAgeyB4OiAxODQsIHk6IDE4NSwgcjogMjQyLCBnOiAyMTMsIGI6IDQ5IH0sXG4gICAgeyB4OiAxNzksIHk6IDMxMiwgcjogNTUsIGc6IDYyLCBiOiA5NiB9LFxuICBdLFxuICB7IHg6IDQ3MywgeTogMjMgfVxuKTtcblxuLy8gQ2hvb3NlIHRoZSAybmQgYWxsaWFuY2UgcmV3YXJkLCBuZWVkIHRvIGFkZCB0YXAgKHt4OiA2MjAsIHk6IDIyfSkgd2hlbiBub3QgZW5vdWdoIHRpY2tldHNcbmNvbnN0IHJmcGFnZUFsbGlhbmNlUmV3YXJkID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VBbGxpYW5jZVJld2FyZCcsXG4gIFtcbiAgICB7IHg6IDM5NywgeTogMjQzLCByOiAxODksIGc6IDE1MCwgYjogODIgfSxcbiAgICB7IHg6IDI1NywgeTogNDEsIHI6IDE5LCBnOiAyOSwgYjogNiB9LFxuICAgIHsgeDogMzEwLCB5OiAyMiwgcjogMjksIGc6IDYsIGI6IDggfSxcbiAgICB7IHg6IDM3NCwgeTogNDYsIHI6IDQxLCBnOiA0NSwgYjogNDUgfSxcbiAgICB7IHg6IDQyMiwgeTogNzYsIHI6IDEyLCBnOiAzMSwgYjogNDkgfSxcbiAgICB7IHg6IDYxOCwgeTogMjAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiAzOTcsIHk6IDI0MyB9XG4pO1xuLy8gQ29uZmxpY3Qgd2l0aCByZnBhZ2VCYXR0bGVGaW5pc2hlZFxuLy8gY29uc3QgcmZwYWdlQWxsaWFuY2VSZXN1bHRzID0gbmV3IFBhZ2UoXG4vLyAgICdyZnBhZ2VBbGxpYW5jZVJlc3VsdHMnLFxuLy8gICBbXG4vLyAgICAgeyB4OiA2MTIsIHk6IDMzMywgcjogOCwgZzogMTY2LCBiOiAyMjIgfSxcbi8vICAgICB7IHg6IDI1OSwgeTogNTcsIHI6IDY2LCBnOiAxMzYsIGI6IDIwMiB9LFxuLy8gICAgIHsgeDogMzI5LCB5OiAyNiwgcjogMjIyLCBnOiA0OCwgYjogNzQgfSxcbi8vICAgICB7IHg6IDM2OCwgeTogNDksIHI6IDE5OCwgZzogMjIzLCBiOiAyMjIgfSxcbi8vICAgICB7IHg6IDc2LCB5OiAzMzYsIHI6IDI0NywgZzogODksIGI6IDI0IH0sXG4vLyAgICAgeyB4OiAxODgsIHk6IDMzMywgcjogOCwgZzogMTY2LCBiOiAyMjIgfSxcbi8vICAgICB7IHg6IDMxOSwgeTogNDEsIHI6IDE0OSwgZzogMTQ5LCBiOiA2MCB9LCAvLyBkaWZmZXJudGlhdGUgd2l0aCByZnBhZ2VXaW5Cb3VudHlBbmRGaW5pc2hcbi8vICAgXSxcbi8vICAgeyB4OiA2MTIsIHk6IDMzMyB9XG4vLyApO1xuY29uc3QgcmZwYWdlQ2Fubm90UmVmaWxBbGxpYW5jZVRpY2tldFRvZGF5ID0gbmV3IFBhZ2UoJ3JmcGFnZUNhbm5vdFJlZmlsQWxsaWFuY2VUaWNrZXRUb2RheScsIFtcbiAgeyB4OiAzNDUsIHk6IDI3NSwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gIHsgeDogMzMxLCB5OiAxMjksIHI6IDUyLCBnOiAxNTksIGI6IDIyNyB9LFxuICB7IHg6IDMwNiwgeTogMTQ3LCByOiA2OSwgZzogNTIsIGI6IDE2MCB9LFxuICB7IHg6IDMzMywgeTogMjQsIHI6IDEyNiwgZzogMTI0LCBiOiAxMjcgfSxcbiAgeyB4OiAyMTgsIHk6IDc0LCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuXSk7XG5jb25zdCByZnBhZ2VTZWxlY3RTdGFydGluZ1RlYW0gPSBuZXcgUGFnZSgncmZwYWdlU2VsZWN0U3RhcnRpbmdUZWFtJywgW1xuICB7IHg6IDI2MCwgeTogMjksIHI6IDE0MCwgZzogODgsIGI6IDIzMCB9LFxuICB7IHg6IDE2MCwgeTogNjMsIHI6IDEwNywgZzogMTAxLCBiOiAyMjIgfSxcbiAgeyB4OiAzOTksIHk6IDEwNywgcjogMjU1LCBnOiAyMDAsIGI6IDAgfSxcbiAgeyB4OiA0ODgsIHk6IDMwNiwgcjogMCwgZzogMTUwLCBiOiAyMTQgfSxcbiAgeyB4OiA2MTMsIHk6IDMyNSwgcjogMzAsIGc6IDUyLCBiOiAzIH0sXG5dKTtcbmNvbnN0IHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2tXaGVuU3RhcnQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2tXaGVuU3RhcnQnLFxuICBbXG4gICAgeyB4OiAxNDUsIHk6IDMxMSwgcjogMjM5LCBnOiAyMzUsIGI6IDIzOSB9LFxuICAgIHsgeDogMTM1LCB5OiAzMDMsIHI6IDMwLCBnOiAxOSwgYjogNTIgfSxcbiAgICB7IHg6IDE0MCwgeTogMjc0LCByOiA0OSwgZzogMzIsIGI6IDkwIH0sXG4gIF0sXG4gIHsgeDogMTQ1LCB5OiAzMTEgfVxuKTtcbmNvbnN0IHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2sgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2snLFxuICBbXG4gICAgeyB4OiAxNDYsIHk6IDMyMywgcjogMjM3LCBnOiAyMzMsIGI6IDIzNSB9LFxuICAgIHsgeDogMTUzLCB5OiAyNTQsIHI6IDQ5LCBnOiA0MCwgYjogOTggfSxcbiAgICB7IHg6IDE0OSwgeTogMjcwLCByOiAxNDcsIGc6IDEyOSwgYjogMjM1IH0sXG4gIF0sXG4gIHsgeDogMTQ2LCB5OiAzMjMgfVxuKTtcbmNvbnN0IGdyb3VwUGFnZVRlYW1TZWxlY3Rpb24gPSBuZXcgR3JvdXBQYWdlKCdncm91cFBhZ2VUZWFtU2VsZWN0aW9uJywgW1xuICByZnBhZ2VTZWxlY3RTdGFydGluZ1RlYW0sXG4gIHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2ssXG4gIHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2tXaGVuU3RhcnQsXG5dKTtcblxubGV0IGd1aWxkQmF0dGxlRHJhZ29uU3RhdHVzID0ge1xuICBib3NzSWR4OiAwLFxufTtcbmxldCBndWlsZEJhdHRsZUFsbGlhbmNlU3RhdHVzID0ge1xuICBuZWVkSWduaXRlQmVhY29uOiB0cnVlLFxuICBjb2xsZWN0R3VpbGRSZXdhcmRDb3VudDogMCxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRHdWlsZFJvdXRlcygpIHtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VTZWFjaFRvSm9pbkd1aWxkLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlU2VhY2hUb0pvaW5HdWlsZCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VTZWFjaFRvSm9pbkd1aWxkLCB0YXAgdG8gZnJpZW5kLCBzZW5kIGJhY2sgYW5kIGZpbmlzaFJvdW5kYCk7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLmd1aWxkQ2hlY2tpbiB8fCBjb250ZXh0LnRhc2submFtZSA9PT0gVEFTS1MuZ3VpbGRCYXR0bGVEcmFnb24pIHtcbiAgICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDIwLCB5OiA4OCB9KTtcbiAgICAgIFV0aWxzLnNsZWVwKDEwMDApO1xuICAgICAgc2VuZEtleUJhY2soKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VJbkd1aWxkTGFuZC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluR3VpbGRMYW5kLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lLnN1YnN0cmluZygwLCA1KSAhPT0gJ2d1aWxkJykge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VJbkd1aWxkTGFuZCwgaGFuZGxlIGl0YCk7XG5cbiAgICAgIHN3aXRjaCAoY29udGV4dC50YXNrLm5hbWUpIHtcbiAgICAgICAgY2FzZSBUQVNLUy5ndWlsZENoZWNraW46XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMxNSwgeTogMjE3IH0pOyAvLyB0YXAgY2VudGVyIGd1aWxkIGxldmVsIHVwIHRyb3BoeVxuICAgICAgICAgIFV0aWxzLnNsZWVwKDIwMDApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFRBU0tTLmd1aWxkRXhwYW5kTGFuZDpcbiAgICAgICAgICAvLyByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzE1LCB5OiAyMTcgfSk7XG4gICAgICAgICAgLy8gVXRpbHMuc2xlZXAoMjAwMCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgVEFTS1MuZ3VpbGRCYXR0bGVEcmFnb246XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDE1MCwgeTogMzI4IH0pOyAvLyB0YXAgZHJhZ29uIGljb25cbiAgICAgICAgICBVdGlscy5zbGVlcCgyMDAwKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBUQVNLUy5ndWlsZEJhdHRsZUFsbGlhbmNlOlxuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAyMDAsIHk6IDMzMCB9KTsgLy8gdGFwIGFsbGlhbmNlIGljb25cbiAgICAgICAgICBVdGlscy5zbGVlcCg1MDAwKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAvLyBUT0RPOiB3aWxsIGZhaWwgd2hlbiByZXN1bWUgYmF0dGxlXG4gICAgICAgICAgY29uc29sZS5sb2coJ0kgYW0gcmZwYWdlSW5HdWlsZExhbmQsIHBhbmljIGFuZCBkb25ubyB3aGF0IHRvIGRvJyk7XG4gICAgICAgICAgc2F2ZUltYWdlVG9EaXNrKCdndWlsZGxhbmQtbm8tdGFzaycpO1xuICAgICAgICAvLyBpaSsrO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUluR3VpbGRCZWFjb24ubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VJbkd1aWxkQmVhY29uLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lID09PSBUQVNLUy5ndWlsZENoZWNraW4pIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmcGFnZUluR3VpbGRCZWFjb24sIGZpbmlzaFJvdW5kYCk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VJbkd1aWxkQmVhY29uKTtcbiAgICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH1cbiAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZQYWdlR3VpbGRCZWFjb25Jc0NsZWFyLm5hbWV9YCxcbiAgICBtYXRjaDogcmZQYWdlR3VpbGRCZWFjb25Jc0NsZWFyLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lID09PSBUQVNLUy5ndWlsZENoZWNraW4pIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmUGFnZUd1aWxkQmVhY29uSXNDbGVhciwgZmluaXNoUm91bmRgKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmUGFnZUd1aWxkQmVhY29uSXNDbGVhcik7XG4gICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH1cbiAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gR3VpbGQgZHJhZ29uXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlQmF0dGxlRHJhZ29uLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQmF0dGxlRHJhZ29uLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5ndWlsZEJhdHRsZURyYWdvbikge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiAke2NvbnRleHQucGF0aH0sIGhhbmRsZSBpdGApO1xuXG4gICAgICBjb25zdCBndWlsZEJvc3Nlc0VudHJ5UG9pbnRzID0gW1xuICAgICAgICB7IHg6IDExMywgeTogMjAyLCByOiAxMjMsIGc6IDIwNywgYjogOCB9LCAvLyBsZWZ0XG4gICAgICAgIHsgeDogMzEyLCB5OiAyMDUsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sIC8vIG1pZGRsZVxuICAgICAgICB7IHg6IDUwNSwgeTogMjA0LCByOiAxMjMsIGc6IDIwNywgYjogOCB9LCAvLyByaWdodFxuICAgICAgXTtcblxuICAgICAgaWYgKGd1aWxkQmF0dGxlRHJhZ29uU3RhdHVzLmJvc3NJZHggPj0gZ3VpbGRCb3NzZXNFbnRyeVBvaW50cy5sZW5ndGgpIHtcbiAgICAgICAgZ3VpbGRCYXR0bGVEcmFnb25TdGF0dXMuYm9zc0lkeCA9IDA7XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBUcnkgdG8gZmlnaHQgYm9zczogJHtndWlsZEJhdHRsZURyYWdvblN0YXR1cy5ib3NzSWR4fWApO1xuICAgICAgbGV0IGJvc3NFbnRyeVBvaW50OiBYWVJHQiA9IGd1aWxkQm9zc2VzRW50cnlQb2ludHNbZ3VpbGRCYXR0bGVEcmFnb25TdGF0dXMuYm9zc0lkeF07XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKGJvc3NFbnRyeVBvaW50KTtcblxuICAgICAgZ3VpbGRCYXR0bGVEcmFnb25TdGF0dXMuYm9zc0lkeCsrO1xuICAgICAgcmV0dXJuO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlUmVhZHlUb0ZpZ2h0RHJhZ29uLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlUmVhZHlUb0ZpZ2h0RHJhZ29uLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5ndWlsZEJhdHRsZURyYWdvbikge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VSZWFkeVRvRmlnaHREcmFnb24pO1xuICAgICAgVXRpbHMuc2xlZXAoNjAwMCk7XG5cbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VSZWFkeVRvRmlnaHREcmFnb24pKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBTdGlsbCBpbiByZnBhZ2VSZWFkeVRvRmlnaHREcmFnb24gNiBzZWNzIGFmdGVyIHRhcHBlZCBCYXR0bGUhLCBubyBtb3JlIGRyYWdvbiB0aWNrZXQsIGZpbmlzaCByb3VuZGApO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VUYWxseWluZ2ZpZ2h0RHJhZ29uLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlVGFsbHlpbmdmaWdodERyYWdvbixcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuZ3VpbGRCYXR0bGVEcmFnb24pIHtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgZm91bmQgcmZwYWdlVGFsbHlpbmdmaWdodERyYWdvbiwgbm8gbmVlZCB0byBiYXR0bGUgZHJhZ29uLCBmaW5pc2ggcm91bmRgKTtcbiAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgIH0sXG4gIH0pO1xuXG4gIC8vIEd1aWxkIGFsbGlhbmNlIGJhdHRsZVxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZVN0YXJ0ZWRGaWdodGluZ1NvQ2Fubm90U3RhcnRCZWFjb24ubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VTdGFydGVkRmlnaHRpbmdTb0Nhbm5vdFN0YXJ0QmVhY29uLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5ndWlsZEJhdHRsZUFsbGlhbmNlKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDM3MiwgeTogMjg3IH0pO1xuICAgICAgVXRpbHMuc2xlZXAoMjAwMCk7XG5cbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VTdGFydGVkRmlnaHRpbmdTb0Nhbm5vdFN0YXJ0QmVhY29uKSkge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlU3RhcnRlZEZpZ2h0aW5nU29DYW5ub3RTdGFydEJlYWNvbiwgc3RvcCB0cnlpbmcgdG8gaWduaXRlIGJlYWNvbmApO1xuICAgICAgICBndWlsZEJhdHRsZUFsbGlhbmNlU3RhdHVzLm5lZWRJZ25pdGVCZWFjb24gPSBmYWxzZTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZVN0YXJ0ZWRGaWdodGluZ1NvQ2Fubm90U3RhcnRCZWFjb24pO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2dyb3VwUGFnZUFsbGlhbmNlU2VsZWN0U3RhZ2UubmFtZX1gLFxuICAgIG1hdGNoOiBncm91cFBhZ2VBbGxpYW5jZVNlbGVjdFN0YWdlLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5ndWlsZEJhdHRsZUFsbGlhbmNlKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYEluIGdyb3VwUGFnZUFsbGlhbmNlU2VsZWN0U3RhZ2UsIHN0YXJ0IGd1aWxkIGFsbGlhbmNlIGJhdHRsZWApO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU2MCwgeTogMzUwIC0gMjUgKiBpIH0pO1xuICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlICogMik7XG5cbiAgICAgICAgaWYgKCFyZXJvdXRlci5pc1BhZ2VNYXRjaChncm91cFBhZ2VBbGxpYW5jZVNlbGVjdFN0YWdlKSkge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBMZWZ0IHJmcGFnZUNvb2tpZUFsbGlhbmNlU2VsZWN0Q2FtcGFpZ25zLCBzdGFydCBiYXR0bGluZ2ApO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUluQ29va2llQWxsaWFuY2UubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VJbkNvb2tpZUFsbGlhbmNlLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5ndWlsZEJhdHRsZUFsbGlhbmNlKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHN0YXJ0IGd1aWxkIGFsbGlhbmNlIGJhdHRsZWApO1xuXG4gICAgICBpZiAoZ3VpbGRCYXR0bGVBbGxpYW5jZVN0YXR1cy5uZWVkSWduaXRlQmVhY29uICYmIHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlQWxsaWFuY2VCZWFjb25Jc09mZiwgaW1hZ2UpKSB7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAyMTUsIHk6IDE5OCB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNTE1LCB5OiAzMjQgfSk7XG4gICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtncm91cFBhZ2VUZWFtU2VsZWN0aW9uLm5hbWV9YCxcbiAgICBtYXRjaDogZ3JvdXBQYWdlVGVhbVNlbGVjdGlvbixcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuZ3VpbGRCYXR0bGVBbGxpYW5jZSkge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBmb3VuZCBncm91cFBhZ2VUZWFtU2VsZWN0aW9uLCBoYW5kbGUgaXRgKTtcbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZVNlbGVjdFN0YXJ0aW5nVGVhbSwgaW1hZ2UpKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBmb3VuZCByZnBhZ2VTZWxlY3RTdGFydGluZ1RlYW0sIHRhcCBhbGwgZnJvbSB0b3BgKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDQ3MCwgeTogNzAgfSk7XG4gICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA0NzAsIHk6IDExMyB9KTtcbiAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDQ3MCwgeTogMTY1IH0pO1xuICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXApO1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNDcwLCB5OiAyMTUgfSk7XG4gICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA0NzAsIHk6IDI2NyB9KTtcbiAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2ssIGltYWdlKSkge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaGFuZGxlIHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2ssIHRhcCBhbmQgd2FpdCA4IHNlY3NgKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2spO1xuICAgICAgICBVdGlscy5zbGVlcCg4MDAwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2tXaGVuU3RhcnQsIGltYWdlKSkge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaGFuZGxlIHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2tXaGVuU3RhcnQsIHRhcCBhbmQgd2FpdCA4IHNlY3NgKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUtlZXBCYXR0bGVCeU9yZGVyTm90Q2hlY2tXaGVuU3RhcnQpO1xuICAgICAgICBVdGlscy5zbGVlcCg4MDAwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlQ2Fubm90UmVmaWxBbGxpYW5jZVRpY2tldFRvZGF5Lm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQ2Fubm90UmVmaWxBbGxpYW5jZVRpY2tldFRvZGF5LFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5ndWlsZEJhdHRsZUFsbGlhbmNlKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGZvdW5kIHJmcGFnZUNhbm5vdFJlZmlsQWxsaWFuY2VUaWNrZXRUb2RheSwgZmluaXNoIHJvdW5kYCk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjgyLCB5OiAyNzYgfSk7XG4gICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VBbGxpYW5jZUFkZE1vcmVDb29raWUubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VBbGxpYW5jZUFkZE1vcmVDb29raWUsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmd1aWxkQmF0dGxlQWxsaWFuY2UpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGZvdW5kIHJmcGFnZUFsbGlhbmNlQWRkTW9yZUNvb2tpZSwgdGFwIGNhbmNlbGApO1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjY0LCB5OiAyNTAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGZvdW5kIHJmcGFnZUFsbGlhbmNlQWRkTW9yZUNvb2tpZSwgdGFwIFN0YXJ0YCk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzcwLCB5OiAyNTAgfSk7XG4gICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRyby5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm8sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgZm91bmQgcmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRybywgdHJ5IHRvIHJlc29sdmUgaXQgYnkgdGFwcGluZyBTS0lQYCk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNjA4LCB5OiAyNiB9KTtcbiAgICAgIHNsZWVwKDMwMDApO1xuXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRybykpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHN0aWxsIGluIHJmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm8sIHRyeSB0byByZXNvbHZlIGl0IGJ5IEVkaXQgeyB4OiA0NiwgeTogMzM2IH1gKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDQ2LCB5OiAzMzYgfSk7XG4gICAgICAgIHNsZWVwKDMwMDApO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRybykpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHN0aWxsIGluIHJmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm8sIHRyeSB0byByZXNvbHZlIGl0IGJ5IGJlYWNvbiB7IHg6IDQ2LCB5OiAzMzYgfWApO1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjQyLCB5OiAxOTkgfSk7XG4gICAgICAgIHNsZWVwKDMwMDApO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRybykpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHN0aWxsIGluIHJmcGFnZUluQ29va2llQWxsaWFuY2VTa2lwSW50cm8sIHRyeSB0byByZXNvbHZlIGl0IGJ5IEFydGlmYWN0cyB7IHg6IDM5NSwgeTogMzMyIH1gKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDM5NSwgeTogMzMyIH0pO1xuICAgICAgICBzbGVlcCgzMDAwKTtcbiAgICAgIH1cbiAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICB9LFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUFsbGlhbmNlUmV3YXJkLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQWxsaWFuY2VSZXdhcmQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoZ3VpbGRCYXR0bGVBbGxpYW5jZVN0YXR1cy5jb2xsZWN0R3VpbGRSZXdhcmRDb3VudCA+IDEwKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBmb3VuZCByZnBhZ2VBbGxpYW5jZVJld2FyZCwgdGFwIGNsb3NlIGFzIGNvbGxlY3RHdWlsZFJld2FyZENvdW50OiAke2d1aWxkQmF0dGxlQWxsaWFuY2VTdGF0dXMuY29sbGVjdEd1aWxkUmV3YXJkQ291bnR9YCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA2MjAsIHk6IDIwIH0pO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGd1aWxkQmF0dGxlQWxsaWFuY2VTdGF0dXMuY29sbGVjdEd1aWxkUmV3YXJkQ291bnQrKztcbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBmb3VuZCByZnBhZ2VBbGxpYW5jZVJld2FyZCwgdGFwIGl0IGFuZCBjb2xsZWN0R3VpbGRSZXdhcmRDb3VudDogJHtndWlsZEJhdHRsZUFsbGlhbmNlU3RhdHVzLmNvbGxlY3RHdWlsZFJld2FyZENvdW50fWApO1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDI4MiwgeTogMjc2IH0pO1xuICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgfSxcbiAgfSk7XG5cbiAgcGFzc2l2ZUFkZFJvdXRlKFtcbiAgICByZnBhZ2VJbnB1dEd1aWxkV2VsY29tZVRleHQsXG4gICAgLy8gcmZwYWdlR3VpbGRCZWFjb25MZXZlbFVwLFxuICAgIHJmcGFnZURyYWdvblJlbWFpbkhlYWx0aCxcbiAgICAvLyByZnBhZ2VBbGxpYW5jZVJlc3VsdHMsXG4gICAgcmZwYWdlQWxsaWFuY2VUZWFtU2V0dXAsXG4gICAgcmZwYWdlQmVhY29uT2ZWYWxvcixcbiAgICAvLyByZnBhZ2VJbkNvb2tpZUFsbGlhbmNlU2tpcEludHJvSW5UZWFtU2V0dXAsXG4gICAgcmZwYWdlSW5Db29raWVBbGxpYW5jZVNraXBJbnRyb0JlYWNvblZhbG9yLFxuICBdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEd1aWxkQ2hlY2tpblRhc2soKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLmd1aWxkQ2hlY2tpbixcbiAgICBtYXhUYXNrRHVyaW5nOiAzICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgbWluUm91bmRJbnRlcnZhbDogMTgwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgZm9yY2VTdG9wOiB0cnVlLFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEd1aWxkQmF0dGxlRHJhZ29uVGFzaygpIHtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1MuZ3VpbGRCYXR0bGVEcmFnb24sXG4gICAgbWF4VGFza0R1cmluZzogMTAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiAxODAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihndWlsZEJhdHRsZURyYWdvblN0YXR1cywge1xuICAgICAgICBib3NzSWR4OiAwLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRHdWlsZEJhdHRsZUFsbGlhbmNlVGFzaygpIHtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1MuZ3VpbGRCYXR0bGVBbGxpYW5jZSxcbiAgICBtYXhUYXNrRHVyaW5nOiA0MCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIG1pblJvdW5kSW50ZXJ2YWw6IDE4MCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICBiZWZvcmVSb3V0ZTogKCkgPT4ge1xuICAgICAgYXNzaWduKGd1aWxkQmF0dGxlQWxsaWFuY2VTdGF0dXMsIHtcbiAgICAgICAgbmVlZElnbml0ZUJlYWNvbjogdHJ1ZSxcbiAgICAgICAgY29sbGVjdEd1aWxkUmV3YXJkQ291bnQ6IDAsXG4gICAgICB9KTtcbiAgICB9LFxuICB9KTtcbn1cbiIsImltcG9ydCB7IFBhZ2UsIFV0aWxzLCByZXJvdXRlciB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IGxvZ3MsIHNlbmRFdmVudFJ1bm5pbmcsIHNlbmRLZXlCYWNrIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuLi90YXNrcyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uL3NjcmlwdENvbmZpZyc7XG5pbXBvcnQgeyBhc3NpZ24sIHNjcm9sbExlZnRBTG90LCBzY3JvbGxSaWdodEFMb3QsIHNlbmRDb3VudGVyIH0gZnJvbSAnLi4vaGVscGVyJztcblxuY29uc3QgcmZwYWdlSW5Ib3RBaXJCYWxsb24gPSBuZXcgUGFnZSgncmZwYWdlSW5Ib3RBaXJCYWxsb24nLCBbXG4gIHsgeDogMjcwLCB5OiAzMzAsIHI6IDI1NSwgZzogMjExLCBiOiAwIH0sXG4gIHsgeDogMTU4LCB5OiAzMzEsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICB7IHg6IDE4NCwgeTogMzEyLCByOiAyMjMsIGc6IDE3NSwgYjogOTcgfSxcbiAgeyB4OiAzMzEsIHk6IDMxMiwgcjogMTQyLCBnOiA4OCwgYjogNjUgfSxcbiAgeyB4OiA1NjUsIHk6IDg0LCByOiAyNTUsIGc6IDI1MSwgYjogMjM1IH0sXG5dKTtcbmNvbnN0IHJmcGFnZUJhbGxvbkZseWluZ0RvY2sgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUJhbGxvbkZseWluZ0RvY2snLFxuICBbXG4gICAgeyB4OiA2MTEsIHk6IDE3LCByOiA1NywgZzogMTY2LCBiOiAyMzEgfSxcbiAgICB7IHg6IDIxMywgeTogMTUsIHI6IDUwLCBnOiAyMSwgYjogMzcgfSxcbiAgICB7IHg6IDI1MCwgeTogNTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDI2OSwgeTogNTEsIHI6IDIxNywgZzogMjE3LCBiOiAyMTcgfSxcbiAgICB7IHg6IDM0NiwgeTogNTAsIHI6IDQwLCBnOiA2LCBiOiAyMSB9LFxuICAgIHsgeDogMTI5LCB5OiAyMywgcjogNDMsIGc6IDYsIGI6IDI2IH0sXG4gICAgeyB4OiAzNywgeTogNTEsIHI6IDYsIGc6IDE0LCBiOiAzIH0sXG4gIF0sXG4gIHsgeDogNjE2LCB5OiAxNyB9XG4pO1xuY29uc3QgcmZwYWdlQ2hvb3NlQmFsbG9uRGVzdGluYXRpb24gPSBuZXcgUGFnZSgncmZwYWdlQ2hvb3NlQmFsbG9uRGVzdGluYXRpb24nLCBbXG4gIHsgeDogMjg1LCB5OiAxNSwgcjogMjA4LCBnOiAxNjEsIGI6IDg5IH0sXG4gIHsgeDogMzE5LCB5OiA3LCByOiA5MSwgZzogNjEsIGI6IDQ1IH0sXG4gIHsgeDogMzUyLCB5OiAxOCwgcjogMjEwLCBnOiAxNjIsIGI6IDg5IH0sXG4gIHsgeDogNjE2LCB5OiAxNSwgcjogNTYsIGc6IDE2NSwgYjogMjMxIH0sXG5dKTtcbmNvbnN0IHJmcGFnZUJhbGxvbk1hcEVwNCA9IG5ldyBQYWdlKFxuICAncmZwYWdlQmFsbG9uTWFwRXA0JyxcbiAgW1xuICAgIHsgeDogNjExLCB5OiAyMDQsIHI6IDIzNiwgZzogMjI4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDksIHk6IDM3LCByOiA1NiwgZzogMzMsIGI6IDE5IH0sXG4gICAgeyB4OiA0MCwgeTogMTIwLCByOiAxMjksIGc6IDIyOSwgYjogODEgfSxcbiAgXSxcbiAgeyB4OiA2MTAsIHk6IDIzMCB9XG4pO1xuXG5sZXQgaG90QWlyQmFsbG9uU3RhdHVzID0ge1xuICBjaGFuZ2VNYXBGaW5pc2hlZDogZmFsc2UsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkSG90QWlyQmFsbG9uUm91dGVzKCkge1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUluSG90QWlyQmFsbG9uLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlSW5Ib3RBaXJCYWxsb24sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLmhvdEFpckJhbGxvbikge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5Ib3RBaXJCYWxsb24sIHRhc2sgaXMgJHtjb250ZXh0LnRhc2submFtZX0gYnV0IG5vdCBUQVNLUy5ob3RBaXJCYWxsb24gb3IgVEFTS1MucmVzb2x2ZUdyZWVuQ2hlY2tzIHNvIHNlbmQgYmFja2ApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZnBhZ2VJbkhvdEFpckJhbGxvbiwgY2hvb3NlIG5leHQgc3RlcCcpO1xuICAgICAgaWYgKGhvdEFpckJhbGxvblN0YXR1c1snY2hhbmdlTWFwRmluaXNoZWQnXSkge1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjU4LCB5OiAzMzAgfSk7IC8vIHRhcCBBdXRvXG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNTc1LCB5OiAzMzAgfSk7IC8vIHRhcCBTdGFydFxuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5Ib3RBaXJCYWxsb24sIHN0YXJ0IG5ldyBiYWxsb24gdHJpcCwgZXA0OiAke2NvbmZpZy5pc0hvdEFpckJhbGxvbkdvdG9FcDR9YCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCByZnBhZ2VJbkhvdEFpckJhbGxvbi5uYW1lLCB7fSk7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDQxMiwgeTogMzMwIH0pOyAvLyB0YXAgQ2hhbmdlXG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG5cbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VCYWxsb25GbHlpbmdEb2NrLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQmFsbG9uRmx5aW5nRG9jayxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuaG90QWlyQmFsbG9uICYmIGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5yZXNvbHZlR3JlZW5DaGVja3MpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUJhbGxvbkZseWluZ0RvY2ssIHNraXAgYXMgY3VycmVudCB0YXNrIGlzICR7Y29udGV4dC50YXNrLm5hbWV9YCk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VCYWxsb25GbHlpbmdEb2NrKTsgLy8gY2xvc2UgdGhpcyBzY3JlZW5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmZwYWdlQmFsbG9uRmx5aW5nRG9jaywgYmFsbG9uIGlzIGZseWluZywgZmluaXNoIHRhc2snKTtcbiAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VCYWxsb25GbHlpbmdEb2NrKTsgLy8gY2xvc2UgdGhpcyBzY3JlZW5cbiAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlQ2hvb3NlQmFsbG9uRGVzdGluYXRpb24ubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VDaG9vc2VCYWxsb25EZXN0aW5hdGlvbixcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuaG90QWlyQmFsbG9uKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUNob29zZUJhbGxvbkRlc3RpbmF0aW9uLCBnb3RvIGVwNDogJHtjb25maWcuaXNIb3RBaXJCYWxsb25Hb3RvRXA0fWApO1xuICAgICAgaWYgKGNvbmZpZy5pc0hvdEFpckJhbGxvbkdvdG9FcDQpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUNob29zZUJhbGxvbkRlc3RpbmF0aW9uLCBnbyB0byBmaXJzdGApO1xuICAgICAgICBzY3JvbGxMZWZ0QUxvdCh7IHg6IDMwLCB5OiAxNTEgfSk7XG4gICAgICAgIHNjcm9sbExlZnRBTG90KHsgeDogMzAsIHk6IDE1MSB9KTtcbiAgICAgICAgc2Nyb2xsTGVmdEFMb3QoeyB4OiAzMCwgeTogMTUxIH0pO1xuICAgICAgICByZXJvdXRlci5nb05leHQocmZwYWdlQmFsbG9uTWFwRXA0KTsgLy8gdGFwIEVQNCBtYXBcbiAgICAgICAgaG90QWlyQmFsbG9uU3RhdHVzWydjaGFuZ2VNYXBGaW5pc2hlZCddID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUNob29zZUJhbGxvbkRlc3RpbmF0aW9uLCBnbyB0byBlbmRgKTtcbiAgICAgICAgLy8gc2Nyb2xsIHRvIHJpZ2h0IG1vc3QgYW5kIGZpbmQgdGhlIGxhc3QgbWFwXG4gICAgICAgIHNjcm9sbFJpZ2h0QUxvdCh7IHg6IDYxOCwgeTogMTUxIH0pO1xuICAgICAgICBzY3JvbGxSaWdodEFMb3QoeyB4OiA2MTgsIHk6IDE1MSB9KTtcbiAgICAgICAgc2Nyb2xsUmlnaHRBTG90KHsgeDogNjE4LCB5OiAxNTEgfSk7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICAgICAgICBmb3IgKHZhciB4TG9jYXRpb24gPSA1NTA7IHhMb2NhdGlvbiA+PSAxMDA7IHhMb2NhdGlvbiAtPSAxMjUpIHtcbiAgICAgICAgICAgIGZvciAodmFyIHlMb2NhdGlvbiA9IDE0MDsgeUxvY2F0aW9uIDw9IDI2MDsgeUxvY2F0aW9uICs9IDEyMCkge1xuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogeExvY2F0aW9uLCB5OiB5TG9jYXRpb24gfSk7XG5cbiAgICAgICAgICAgICAgaWYgKHJlcm91dGVyLndhaXRTY3JlZW5Gb3JNYXRjaGluZ1BhZ2UocmZwYWdlSW5Ib3RBaXJCYWxsb24sIDIwMDApKSB7XG4gICAgICAgICAgICAgICAgaG90QWlyQmFsbG9uU3RhdHVzWydjaGFuZ2VNYXBGaW5pc2hlZCddID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgYmFsbG9uIGRlc3RpbmF0aW9uIGNob29zZWQgc3VjY2Vzc2Z1bGx5LCBpLCB4LCB5ID0gJHtpfSwgJHt4TG9jYXRpb259LCAke3lMb2NhdGlvbn1gKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0YXBEb3duKDMwLCAyNjgsIDQwLCAwKTtcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXApO1xuICAgICAgICAgIG1vdmVUbygyNTAsIDI2OCwgNDAsIDApO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcCk7XG4gICAgICAgICAgbW92ZVRvKDYyMCwgMjY4LCA0MCwgMCk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgdGFwVXAoNjIwLCAyNjgsIDQwLCAwKTtcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlICogMyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEhvdEFpckJhbGxvblRhc2soKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLmhvdEFpckJhbGxvbixcbiAgICBtYXhUYXNrRHVyaW5nOiAzICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgbWluUm91bmRJbnRlcnZhbDogY29uZmlnLmF1dG9TZW5kSG90QWlyQmFsbG9uSW50ZXJ2YWxJbk1pbnMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihob3RBaXJCYWxsb25TdGF0dXMsIHtcbiAgICAgICAgY2hhbmdlTWFwRmluaXNoZWQ6IGZhbHNlLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG4iLCJpbXBvcnQgeyBHcm91cFBhZ2UsIFBhZ2UsIFV0aWxzLCByZXJvdXRlciB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IGxvZ3MsIHNlbmRFdmVudFJ1bm5pbmcsIHNlbmRLZXlCYWNrIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vc2NyaXB0Q29uZmlnJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuLi90YXNrcyc7XG5pbXBvcnQgeyBjaGVja1NjcmVlbk1lc3NhZ2UsIHBhc3NpdmVBZGRSb3V0ZSwgc2VuZENvdW50ZXIgfSBmcm9tICcuLi9oZWxwZXInO1xuaW1wb3J0IHsgY29va2llS2luZ2RvbSB9IGZyb20gJy4uLy4uJztcbmltcG9ydCB7IHJmcGFnZU5vdEVub3VnaEl0ZW1Ub0J1eVRoaXMgfSBmcm9tICcuL3RyYWRlSGFib3InO1xuXG5jb25zdCByZnBhZ2VBbm5vdW5jZW1lbnQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUFubm91bmNlbWVudCcsXG4gIFtcbiAgICB7IHg6IDIyNCwgeTogMTksIHI6IDg1LCBnOiAxOCwgYjogMzIgfSxcbiAgICB7IHg6IDMxMCwgeTogMjEsIHI6IDg5LCBnOiA4MSwgYjogMCB9LFxuICAgIHsgeDogNjEwLCB5OiAxOSwgcjogNTYsIGc6IDE2NywgYjogMjMxIH0sXG4gICAgeyB4OiA2MTksIHk6IDE5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MjgsIHk6IDE4LCByOiA1NiwgZzogMTY3LCBiOiAyMzEgfSxcbiAgICB7IHg6IDU5LCB5OiAyMTksIHI6IDU0LCBnOiA2NCwgYjogODcgfSxcbiAgICB7IHg6IDcxLCB5OiAzMTcsIHI6IDU0LCBnOiA2NCwgYjogODcgfSxcbiAgICB7IHg6IDE5LCB5OiAxMTQsIHI6IDYzLCBnOiAwLCBiOiA5IH0sXG4gICAgeyB4OiAyNSwgeTogMzIxLCByOiA3NSwgZzogNzUsIGI6IDc1IH0sXG4gIF0sXG4gIHsgeDogNjEwLCB5OiAxOSB9XG4pO1xuXG4vLyBDaGVjayBmb3IgZ2VhcnMgaW4gbG9naW4gcGFnZSB2aWEgcGl4ZWwgbWF0Y2hpbmdcbmNvbnN0IHJmcGFnZUluTG9naW5QYWdlV2l0aEdlYXJBbmRWaWRlbyA9IG5ldyBQYWdlKCdyZnBhZ2VJbkxvZ2luUGFnZVdpdGhHZWFyQW5kVmlkZW8nLCBbXG4gIHsgeDogNjIxLCB5OiAxMywgcjogMjMzLCBnOiAyMzMsIGI6IDIzNSB9LFxuICB7IHg6IDYyMiwgeTogMTYsIHI6IDMsIGc6IDQsIGI6IDkgfSxcbiAgeyB4OiA1OTcsIHk6IDE2LCByOiAyMzMsIGc6IDIzNSwgYjogMjM5IH0sXG4gIHsgeDogNTkzLCB5OiAxNiwgcjogNCwgZzogNiwgYjogMTEgfSxcbiAgeyB4OiA1OTAsIHk6IDE3LCByOiAyMzMsIGc6IDIzNSwgYjogMjM5IH0sXG4gIHsgeDogNTk0LCB5OiAyMywgcjogMTQsIGc6IDE0LCBiOiAyNSB9LFxuXSk7XG5cbi8vIGNvbnN0IHJmcGFnZUlucHV0QWdlID0gbmV3IFBhZ2UoXG4vLyAgICdyZnBhZ2VJbnB1dEFnZScsXG4vLyAgIFtcbi8vICAgICB7IHg6IDM2NiwgeTogMjc4LCByOiAyNTQsIGc6IDk0LCBiOiAwIH0sXG4vLyAgICAgeyB4OiAzMjAsIHk6IDE1NCwgcjogNTAsIGc6IDUwLCBiOiA1MCB9LFxuLy8gICAgIHsgeDogMzE5LCB5OiAxNjEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbi8vICAgICB7IHg6IDI4NywgeTogNjksIHI6IDYwLCBnOiA2MCwgYjogNjAgfSxcbi8vICAgICB7IHg6IDMzNSwgeTogNjYsIHI6IDk5LCBnOiA5OSwgYjogOTkgfSxcbi8vICAgICB7IHg6IDI1MywgeTogMjEzLCByOiAyNTQsIGc6IDk0LCBiOiAwIH0sXG4vLyAgICAgeyB4OiAyNTIsIHk6IDIzMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuLy8gICBdLFxuLy8gICB7IHg6IDM2NiwgeTogMjc4IH1cbi8vICk7XG4vLyBVcGRhdGUgMjAyMy45LjI2XG5jb25zdCByZnBhZ2VJbnB1dEFnZSA9IG5ldyBQYWdlKFxuICAncmZwYWdlSW5wdXRBZ2UnLFxuICBbXG4gICAgeyB4OiAzNzgsIHk6IDIyNSwgcjogMjU1LCBnOiAxMjYsIGI6IDcxIH0sXG4gICAgeyB4OiAyMjksIHk6IDE5MywgcjogMjU1LCBnOiAxMjYsIGI6IDcxIH0sXG4gICAgeyB4OiAyNDYsIHk6IDIxOCwgcjogMjU1LCBnOiAxMjYsIGI6IDcxIH0sXG4gICAgeyB4OiAzMDksIHk6IDIzMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNDAzLCB5OiAxNTgsIHI6IDExMiwgZzogMTE1LCBiOiAxMjQgfSxcbiAgICB7IHg6IDQwNiwgeTogMTYyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAyMzUsIHk6IDE1OCwgcjogMTk2LCBnOiAxOTcsIGI6IDIwMiB9LFxuICBdLFxuICB7IHg6IDMyMywgeTogMjI4IH1cbik7XG5jb25zdCByZnBhZ2VDaG9vc2VMb2dpbk1ldGhvZCA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ2hvb3NlTG9naW5NZXRob2QnLFxuICBbXG4gICAgeyB4OiAxMzksIHk6IDIzMywgcjogMjU1LCBnOiA5NSwgYjogMCB9LFxuICAgIHsgeDogMTY1LCB5OiAxOTcsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDE0OCwgeTogMTUzLCByOiAyNDQsIGc6IDE1NCwgYjogMjUgfSxcbiAgICB7IHg6IDM0NywgeTogMTY2LCByOiAxNzcsIGc6IDIwNCwgYjogNTggfSxcbiAgICB7IHg6IDM1NiwgeTogMTk2LCByOiA1OSwgZzogODksIGI6IDE1MiB9LFxuICAgIHsgeDogMTI2LCB5OiAyMzQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiAxMzksIHk6IDIzMyB9XG4pO1xuLy8gU21hbGxlciBpY29ucyAoQW5kcm9pZCA3KSwgbm90IHVwZGF0ZWQgZm9yIDUgb3B0aW9uc1xuZXhwb3J0IGNvbnN0IHJmcGFnZUNob29zZUxvZ2luTWV0aG9kMiA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ2hvb3NlTG9naW5NZXRob2QyJyxcbiAgW1xuICAgIHsgeDogMTM4LCB5OiAyMjksIHI6IDI1NSwgZzogOTUsIGI6IDAgfSxcbiAgICB7IHg6IDEzOCwgeTogMTk4LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiAxMzgsIHk6IDE1NSwgcjogMjM0LCBnOiA4OSwgYjogNzcgfSxcbiAgICB7IHg6IDM0NywgeTogMTYyLCByOiAxNzcsIGc6IDIwNCwgYjogNTggfSxcbiAgICB7IHg6IDM0MiwgeTogMTk1LCByOiA1OSwgZzogODksIGI6IDE1MiB9LFxuICBdLFxuICB7IHg6IDEzOCwgeTogMjI5IH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlQ2hvb3NlTG9naW5NZXRob2RSZWRyb2lkID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VDaG9vc2VMb2dpbk1ldGhvZFJlZHJvaWQnLFxuICBbXG4gICAgeyB4OiAxNDQsIHk6IDIyOSwgcjogMjU1LCBnOiA5NSwgYjogMCB9LFxuICAgIHsgeDogMTQ1LCB5OiAxOTgsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDE0NCwgeTogMTU2LCByOiAyMzgsIGc6IDEyMywgYjogMTE0IH0sXG4gICAgeyB4OiAxNDgsIHk6IDE2MSwgcjogNjIsIGc6IDEzMCwgYjogMjQxIH0sXG4gICAgeyB4OiAyNTYsIHk6IDIzNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzUyLCB5OiAxNjAsIHI6IDE3NywgZzogMjA0LCBiOiA1OCB9LFxuICAgIHsgeDogMzU4LCB5OiAxOTAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM0NSwgeTogMTk1LCByOiA1OSwgZzogODksIGI6IDE1MiB9LFxuICBdLFxuICB7IHg6IDEzOCwgeTogMjI5IH1cbik7XG5cbmNvbnN0IHJmcGFnZUVudGVyRW1haWwgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUVudGVyRW1haWwnLFxuICBbXG4gICAgeyB4OiAyOTgsIHk6IDUzLCByOiA2MCwgZzogNjAsIGI6IDYwIH0sXG4gICAgeyB4OiAzMjAsIHk6IDUzLCByOiAyMjMsIGc6IDIyMywgYjogMjIzIH0sXG4gICAgeyB4OiAzMjIsIHk6IDk5LCByOiAyNDUsIGc6IDI0NSwgYjogMjQ1IH0sXG4gICAgeyB4OiAzNTcsIHk6IDk3LCByOiA3MCwgZzogNzAsIGI6IDcwIH0sXG4gICAgeyB4OiAzNjIsIHk6IDk4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzNjgsIHk6IDk4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzOTEsIHk6IDEyNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDI5OCwgeTogNTMgfVxuKTtcbmNvbnN0IHJmcGFnZVRlcm1zT2ZTZXJ2aWNlcyA9IG5ldyBQYWdlKFxuICAncmZwYWdlVGVybXNPZlNlcnZpY2VzJyxcbiAgW1xuICAgIHsgeDogNDQ3LCB5OiAyMzAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQzLCB5OiAyNTcsIHI6IDk2LCBnOiAyNCwgYjogMjIgfSxcbiAgICB7IHg6IDE4MSwgeTogMjU3LCByOiA5NSwgZzogMjQsIGI6IDIyIH0sXG4gICAgeyB4OiAzMSwgeTogMjg5LCByOiA5MiwgZzogNjcsIGI6IDE4IH0sXG4gICAgeyB4OiAyMDMsIHk6IDI4NSwgcjogOTAsIGc6IDY1LCBiOiAxNiB9LFxuICAgIHsgeDogMTYxLCB5OiAzMjksIHI6IDM3LCBnOiA4LCBiOiAxMyB9LFxuICAgIHsgeDogMjQ2LCB5OiAyMzAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDE3OSwgeTogMTMyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogNDQ3LCB5OiAyMzAgfVxuKTtcbi8vIFRPUyBwYWdlIHdpbGwgY2hhbmdlIHdoZW4gbG9naW4gcGFnZSBjaGFuZ2Vcbi8vIE5veDogY29va2llIHYxLjE1XG5leHBvcnQgY29uc3QgcmZwYWdlVGVybXNPZlNlcnZpY2VXaW5kb3cgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVRlcm1zT2ZTZXJ2aWNlV2luZG93JyxcbiAgW1xuICAgIHsgeDogNDQ4LCB5OiAyMzAsIHI6IDE3MSwgZzogMjIwLCBiOiAyMTYgfSxcbiAgICB7IHg6IDQ2OSwgeTogMjQwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAxNTksIHk6IDExNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNDcxLCB5OiAxMTYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDE1OCwgeTogMjQzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogNDQ4LCB5OiAyMzAgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VUZXJtc09mU2VydmljZVdpbmRvd1JlZHJvaWQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVRlcm1zT2ZTZXJ2aWNlV2luZG93UmVkcm9pZCcsXG4gIFtcbiAgICB7IHg6IDQ3OSwgeTogMjMwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA0ODQsIHk6IDIzMCwgcjogMCwgZzogMTMzLCBiOiAxMTkgfSxcbiAgICB7IHg6IDQ4OSwgeTogMjI5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzNDksIHk6IDIyOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzUzLCB5OiAyMjcsIHI6IDAsIGc6IDEzMywgYjogMTE5IH0sXG4gICAgeyB4OiAzNjUsIHk6IDIzMSwgcjogMjE3LCBnOiAyMzcsIGI6IDIzNSB9LFxuICAgIHsgeDogMzk0LCB5OiAyMzAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDE0NywgeTogMTMzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAxNjgsIHk6IDEyOSwgcjogMzMsIGc6IDMzLCBiOiAzMyB9LFxuICAgIHsgeDogMjE0LCB5OiAxMzUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDI3MSwgeTogMTM1LCByOiAxMDgsIGc6IDEwOCwgYjogMTA4IH0sXG4gICAgeyB4OiAyNTQsIHk6IDE3MSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDQ4MywgeTogMjMwIH1cbik7XG4vLyBNZW11OiBjb29raWUgdjEuMTZcbmNvbnN0IHJmcGFnZVRlcm1zT2ZTZXJ2aWNlc01lbXUgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVRlcm1zT2ZTZXJ2aWNlc01lbXUnLFxuICBbXG4gICAgeyB4OiA0NzksIHk6IDIzOCwgcjogNjYsIGc6IDY2LCBiOiA2NiB9LFxuICAgIHsgeDogNDgyLCB5OiAyMzgsIHI6IDEwNywgZzogMTU4LCBiOiAxNTMgfSxcbiAgICB7IHg6IDQ4NCwgeTogMjIyLCByOiA2NiwgZzogNjYsIGI6IDY2IH0sXG4gICAgeyB4OiA0ODYsIHk6IDExMCwgcjogNjYsIGc6IDY2LCBiOiA2NiB9LFxuICAgIHsgeDogMTQ4LCB5OiAxMjMsIHI6IDY2LCBnOiA2NiwgYjogNjYgfSxcbiAgICB7IHg6IDE3MSwgeTogMTE3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAxNzIsIHk6IDIwNSwgcjogNjYsIGc6IDY2LCBiOiA2NiB9LFxuICAgIHsgeDogMjI5LCB5OiAyMDYsIHI6IDI1NCwgZzogMjU0LCBiOiAyNTQgfSxcbiAgXSxcbiAgeyB4OiA0NzksIHk6IDIzOCB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZVRlcm1zT2ZTZXJ2aWNlTG9uZ1dpbmRvdyA9IG5ldyBQYWdlKFxuICAncmZwYWdlVGVybXNPZlNlcnZpY2VMb25nV2luZG93JyxcbiAgW1xuICAgIHsgeDogNTg1LCB5OiAyMzQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDU5OSwgeTogMjMzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1NTIsIHk6IDIzNCwgcjogMTU4LCBnOiAxNjAsIGI6IDE2NSB9LFxuICAgIHsgeDogNDk0LCB5OiAyMzMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICAvLyB7IHg6IDU3LCB5OiAxODUsIHI6IDI0MiwgZzogMjQyLCBiOiAyNDIgfSxcbiAgICAvLyB7IHg6IDU5MywgeTogMjM1LCByOiAxNTAsIGc6IDE1MywgYjogMTU5IH0sXG4gICAgeyB4OiA0NTYsIHk6IDIzMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTQsIHk6IDEyOCwgcjogMzYsIGc6IDM2LCBiOiAzNiB9LFxuICAgIHsgeDogMzgsIHk6IDEzMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDU4NSwgeTogMjM0IH1cbik7XG5cbmNvbnN0IHJmcGFnZUNhbm5vdEZpbmRMb2dpbkluZm8gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUNhbm5vdEZpbmRMb2dpbkluZm8nLFxuICBbXG4gICAgeyB4OiAzMTYsIHk6IDI0MywgcjogODIsIGc6IDEzNiwgYjogNSB9LFxuICAgIHsgeDogMzIzLCB5OiAyNDIsIHI6IDI1NCwgZzogMjU0LCBiOiAyNTQgfSxcbiAgICB7IHg6IDMzMiwgeTogMjQzLCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogMzA1LCB5OiAyNDIsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiAzMDAsIHk6IDI0MiwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDM0MywgeTogMjQzLCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogMjAxLCB5OiAxMDYsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiA0MjIsIHk6IDk1LCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogNDM4LCB5OiAxMDYsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiAzODMsIHk6IDE3NywgcjogMjE1LCBnOiAyMDUsIGI6IDE5NSB9LFxuICAgIHsgeDogMzc3LCB5OiAxNzgsIHI6IDIzMSwgZzogMjIwLCBiOiAyMDkgfSxcbiAgICB7IHg6IDM3MSwgeTogMTc4LCByOiAyMzEsIGc6IDIyMCwgYjogMjA5IH0sXG4gICAgeyB4OiAyNDMsIHk6IDE4MCwgcjogODAsIGc6IDgwLCBiOiA4MCB9LFxuICBdLFxuICB7IHg6IDMxNiwgeTogMjQzIH1cbik7XG4vLyB2MS4xNVxuLy8gTWFya2VkIGFzIGNvbmZ1c2VkIHdpdGggcmZwYWdlTm90RW5vdWdoSXRlbVRvQnV5VGhpcyBhbmQgd2UgaGF2ZSByZnBhZ2VEb3dubG9hZERhdGFBbmRWb2ljZU92ZXJVbmNoZWNrZWRcbi8vIGV4cG9ydCBjb25zdCByZnBhZ2VDYW5Eb3dubG9hZFJlc291cmNlcyA9IG5ldyBQYWdlKFxuLy8gICAncmZwYWdlQ2FuRG93bmxvYWRSZXNvdXJjZXMnLFxuLy8gICBbXG4vLyAgICAgeyB4OiAzNDYsIHk6IDI0MCwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4vLyAgICAgeyB4OiA0MjAsIHk6IDIzNywgcjogMjE5LCBnOiAyMDcsIGI6IDE5OSB9LFxuLy8gICAgIHsgeDogNDE4LCB5OiAxNzIsIHI6IDI0MywgZzogMjMzLCBiOiAyMjMgfSxcbi8vICAgICB7IHg6IDQxMiwgeTogMTAzLCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuLy8gICAgIHsgeDogMjE5LCB5OiA5OCwgcjogNjAsIGc6IDcwLCBiOiAxMDUgfSxcbi8vICAgICB7IHg6IDIyMSwgeTogMjUwLCByOiAyMTksIGc6IDIwNywgYjogMTk5IH0sXG4vLyAgICAgeyB4OiAzODAsIHk6IDEwMCwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbi8vICAgICB7IHg6IDMxOSwgeTogMTAyLCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuLy8gICAgIHsgeDogMjkyLCB5OiAxMDgsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4vLyAgIF0sXG4vLyAgIHsgeDogMzQ2LCB5OiAyNDAgfVxuLy8gKTtcbi8vIHYyLjAuMVxuY29uc3QgcmZwYWdlRG93bmxvYWREYXRhQW5kVm9pY2VPdmVyID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VEb3dubG9hZERhdGFBbmRWb2ljZU92ZXInLFxuICBbXG4gICAgeyB4OiAyMDcsIHk6IDE5MiwgcjogMzksIGc6IDIwNCwgYjogMCB9LFxuICAgIHsgeDogMzcyLCB5OiAyMTYsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICAgIHsgeDogNDQ1LCB5OiAyMTgsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICAgIHsgeDogNDMwLCB5OiA4MSwgcjogNjAsIGc6IDcwLCBiOiAxMDUgfSxcbiAgICB7IHg6IDIxNCwgeTogMTk1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA0NDMsIHk6IDIxNiwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gICAgeyB4OiAyODUsIHk6IDI2OSwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gIF0sXG4gIHsgeDogMjA3LCB5OiAxOTIgfVxuKTtcbmNvbnN0IHJmcGFnZURvd25sb2FkRGF0YUFuZFZvaWNlT3ZlclVuY2hlY2tlZCA9IG5ldyBQYWdlKFxuICAncmZwYWdlRG93bmxvYWREYXRhQW5kVm9pY2VPdmVyVW5jaGVja2VkJyxcbiAgW1xuICAgIHsgeDogMjA3LCB5OiAxOTIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM3MiwgeTogMjE2LCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgICB7IHg6IDQ0NSwgeTogMjE4LCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgICB7IHg6IDQzMCwgeTogODEsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gICAgeyB4OiAyMTQsIHk6IDE5NSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNDQzLCB5OiAyMTYsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICAgIHsgeDogMjg1LCB5OiAyNjksIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICBdLFxuICB7IHg6IDMxNywgeTogMjY0IH1cbik7XG4vLyB2Mi4wLjEgaGFzICdOZXcgZGF0YSBwYWsgaXMgYXZhaWxhYmxlJ1xuY29uc3QgcmZwYWdlU2VydmVyU2VsZWN0aW9uID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VTZXJ2ZXJTZWxlY3Rpb24nLFxuICBbXG4gICAgeyB4OiAzNTEsIHk6IDI2MCwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gICAgeyB4OiA0MjgsIHk6IDI2MSwgcjogMTIsIGc6IDE2NywgYjogMjIzIH0sXG4gICAgeyB4OiA0NDIsIHk6IDI0MiwgcjogNjAsIGc6IDcwLCBiOiAxMDUgfSxcbiAgICB7IHg6IDQyMiwgeTogMjM0LCByOiA0NCwgZzogNDcsIGI6IDYyIH0sXG4gICAgeyB4OiAzMjQsIHk6IDU0LCByOiAxMDEsIGc6IDEzNywgYjogMjMxIH0sXG4gICAgeyB4OiAzMDIsIHk6IDY0LCByOiAxMTcsIGc6IDE4NiwgYjogMTAwIH0sXG4gICAgeyB4OiAyNzgsIHk6IDgxLCByOiAyNTQsIGc6IDI1NCwgYjogMjU0IH0sXG4gIF0sXG4gIHsgeDogMzUxLCB5OiAyNjAgfVxuKTtcblxuY29uc3QgcmZwYWdlRW50ZXJUd29QYXNzd29yZHMgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUVudGVyVHdvUGFzc3dvcmRzJyxcbiAgW1xuICAgIHsgeDogMjQzLCB5OiAzMDcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM3NywgeTogMjI5LCByOiAyMDAsIGc6IDIwMCwgYjogMjAwIH0sXG4gICAgeyB4OiAzNjcsIHk6IDE3NiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzcxLCB5OiA1MCwgcjogNjAsIGc6IDYwLCBiOiA2MCB9LFxuICAgIHsgeDogMzE5LCB5OiA1MywgcjogMjMwLCBnOiAyMzAsIGI6IDIzMCB9LFxuICAgIHsgeDogMjM2LCB5OiAxNDksIHI6IDE5NSwgZzogMTk1LCBiOiAxOTUgfSxcbiAgICB7IHg6IDIzNiwgeTogMTgzLCByOiAxOTQsIGc6IDE5NCwgYjogMTk0IH0sXG4gICAgeyB4OiAyNDMsIHk6IDMwMywgcjogMjAwLCBnOiAyMDAsIGI6IDIwMCB9LFxuICBdLFxuICB7IHg6IDI0MywgeTogMzA3IH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlRW50ZXJUd29QYXNzd29yZHNMb25nSWQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUVudGVyVHdvUGFzc3dvcmRzTG9uZ0lkJyxcbiAgW1xuICAgIHsgeDogMjQzLCB5OiAzMDcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM3NywgeTogMjI5LCByOiAyMDAsIGc6IDIwMCwgYjogMjAwIH0sXG4gICAgeyB4OiAzNjcsIHk6IDE3NiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzcxLCB5OiA1MCwgcjogNjAsIGc6IDYwLCBiOiA2MCB9LFxuICAgIHsgeDogMzE5LCB5OiA1MywgcjogMjMwLCBnOiAyMzAsIGI6IDIzMCB9LFxuICAgIHsgeDogMjM2LCB5OiAxNjEsIHI6IDE4NSwgZzogMTg1LCBiOiAxODUgfSxcbiAgICB7IHg6IDIzNiwgeTogMTk1LCByOiAxODUsIGc6IDE4NSwgYjogMTg1IH0sXG4gICAgeyB4OiAyNDMsIHk6IDMwMywgcjogMjAwLCBnOiAyMDAsIGI6IDIwMCB9LFxuICBdLFxuICB7IHg6IDI0MywgeTogMzA3IH1cbik7XG5cbmNvbnN0IHJmcGFnZUVudGVycGFzc3dvcmQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUVudGVycGFzc3dvcmQnLFxuICBbXG4gICAgeyB4OiAzNzAsIHk6IDE1MCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMjI3LCB5OiAxMTIsIHI6IDEyNSwgZzogMTI1LCBiOiAxMjUgfSxcbiAgICB7IHg6IDIzNSwgeTogMTEyLCByOiA4NCwgZzogODQsIGI6IDg0IH0sXG4gICAgeyB4OiAyMzksIHk6IDExNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzY4LCB5OiAxMTAsIHI6IDg0LCBnOiA4NCwgYjogODQgfSxcbiAgICB7IHg6IDQwNCwgeTogMTg4LCByOiAyMDAsIGc6IDIwMCwgYjogMjAwIH0sXG4gICAgeyB4OiAyMjcsIHk6IDE3MCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDM3MCwgeTogMTUwIH1cbik7XG5jb25zdCByZnBhZ2VFbnRlcnBhc3N3b3JkRmluaXNoZWQgPSBuZXcgUGFnZSgncmZwYWdlRW50ZXJwYXNzd29yZEZpbmlzaGVkJywgW1xuICB7IHg6IDM3MCwgeTogMTUwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMjI3LCB5OiAxMTIsIHI6IDEyNSwgZzogMTI1LCBiOiAxMjUgfSxcbiAgeyB4OiAyMzUsIHk6IDExMiwgcjogODQsIGc6IDg0LCBiOiA4NCB9LFxuICB7IHg6IDIzOSwgeTogMTE0LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMzY4LCB5OiAxMTAsIHI6IDg0LCBnOiA4NCwgYjogODQgfSxcbl0pO1xuY29uc3QgcmZwYWdlRW50ZXJQYXNzd29yZExvbmdJZCA9IG5ldyBQYWdlKFxuICAncmZwYWdlRW50ZXJQYXNzd29yZExvbmdJZCcsXG4gIFtcbiAgICB7IHg6IDM3MCwgeTogMTYxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAyMjcsIHk6IDEyNywgcjogMTI1LCBnOiAxMjUsIGI6IDEyNSB9LFxuICAgIHsgeDogMjM0LCB5OiAxMjQsIHI6IDIwNywgZzogMjA3LCBiOiAyMDcgfSxcbiAgICB7IHg6IDIyOSwgeTogMTEwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAyMzAsIHk6IDExMCwgcjogMTIwLCBnOiAxMjAsIGI6IDEyMCB9LFxuICAgIHsgeDogMjI3LCB5OiAxODMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiAzNzAsIHk6IDE2MSB9XG4pO1xuY29uc3QgZ3JvdXBQYWdlRW50ZXJQYXNzd29yZCA9IG5ldyBHcm91cFBhZ2UoJ2dyb3VwUGFnZUVudGVyUGFzc3dvcmQnLCBbcmZwYWdlRW50ZXJwYXNzd29yZCwgcmZwYWdlRW50ZXJQYXNzd29yZExvbmdJZF0sIHJmcGFnZUVudGVyUGFzc3dvcmRMb25nSWQubmV4dCk7XG5cbi8vIENoZWNrIGlmIHdyb25nIHBhc3N3b3JkIHNldC4gQW55IHJlZCBzdHJpbmcgaW4gdGhpcyBhcmVhIG1lYW5zIHdyb25nIHBhc3N3b3JkXG5jb25zdCBwYWdlRW50ZXJlZFBhc3N3b3JkID0gW1xuICB7IHg6IDM3MCwgeTogMTU1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMzAxLCB5OiAxMTUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAzODcsIHk6IDUzLCByOiA2MCwgZzogNjAsIGI6IDYwIH0sXG4gIHsgeDogMjk4LCB5OiA1MywgcjogNjAsIGc6IDYwLCBiOiA2MCB9LFxuICB7IHg6IDMyMiwgeTogNTIsIHI6IDYwLCBnOiA2MCwgYjogNjAgfSxcbl07XG5cbmxldCBsb2dpblRhc2tTdGF0dXMgPSB7XG4gIGxvZ2luUmV0cnlDb3VudDogMCxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRMb2dpblJvdXRlcygpIHtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VJbnB1dEFnZS5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUlucHV0QWdlLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ2lucHV0IHJmcGFnZUlucHV0QWdlJyk7XG5cbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAyODUgKyBNYXRoLnJhbmRvbSgpICogMzUsIHk6IDE5MCB9KTtcbiAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUlucHV0QWdlKTtcbiAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcCk7XG5cbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzNzAsIHk6IDE1MCB9KTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUNob29zZUxvZ2luTWV0aG9kLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQ2hvb3NlTG9naW5NZXRob2QsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLm1haW50YWluYW5jZU1vZGUpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ21haW50YWluYW5jZU1vZGUsIGRvIG5vdGhpbmcgYW5kIHNsZWVwIDYwcycpO1xuICAgICAgICBVdGlscy5zbGVlcCg2MDAwMCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ2lucHV0IHJmcGFnZUNob29zZUxvZ2luTWV0aG9kJyk7XG4gICAgICByZXJvdXRlci5nb05leHQocmZwYWdlQ2hvb3NlTG9naW5NZXRob2QpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlQ2hvb3NlTG9naW5NZXRob2RSZWRyb2lkLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQ2hvb3NlTG9naW5NZXRob2RSZWRyb2lkLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lID09PSBUQVNLUy5tYWludGFpbmFuY2VNb2RlKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdtYWludGFpbmFuY2VNb2RlLCBkbyBub3RoaW5nIGFuZCBzbGVlcCA2MHMnKTtcbiAgICAgICAgVXRpbHMuc2xlZXAoNjAwMDApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdpbnB1dCByZnBhZ2VDaG9vc2VMb2dpbk1ldGhvZFJlZHJvaWQnKTtcbiAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VDaG9vc2VMb2dpbk1ldGhvZFJlZHJvaWQpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlRW50ZXJFbWFpbC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUVudGVyRW1haWwsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLm1haW50YWluYW5jZU1vZGUpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ21haW50YWluYW5jZU1vZGUsIGRvIG5vdGhpbmcgYW5kIHNsZWVwIDYwcycpO1xuICAgICAgICBVdGlscy5zbGVlcCg2MDAwMCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ2lucHV0IGVtYWlsJyk7XG5cbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzNzAsIHk6IDE1MCB9KTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHR5cGluZyBlbWFpbCAke2NvbmZpZy5hY2NvdW50fWApO1xuXG4gICAgICB0eXBpbmcoY29uZmlnLmFjY291bnQsIDEwMDApO1xuICAgICAgVXRpbHMuc2xlZXAoNDAwMCk7IC8vIHNsZWVwIG11c3QgZXF1YWwgdG8gdHlwaW5nXG4gICAgICB0eXBpbmcoJ1xcbicsIDUwMCk7XG4gICAgICBVdGlscy5zbGVlcCgxMDAwKTtcblxuICAgICAgY29uc3QgaW5jb3JyZWN0RW1haWxGb3JtYXQgPSB7XG4gICAgICAgIG5hbWU6ICdpbmNvcnJlY3RFbWFpbEZvcm1hdCcsXG4gICAgICAgIHg6IDIyMixcbiAgICAgICAgeTogMTY2LFxuICAgICAgICB3aWR0aDogMTcyLFxuICAgICAgICBoZWlnaHQ6IDEyLFxuICAgICAgICB0YXJnZXRZOiA2LFxuICAgICAgICBsb29raW5nRm9yQ29sb3I6IHsgcjogMjI2LCBnOiA4NiwgYjogODYgfSxcbiAgICAgICAgdGFyZ2V0Q29sb3JDb3VudDogNDQsXG4gICAgICAgIHRhcmdldENvbG9yVGhyZWFzaG9sZDogMyxcbiAgICAgIH07XG4gICAgICBjb25zdCByZWdpc3RlcldpdGhTb2NpYWxQbGF0Zm9ybU1lc3NhZ2VTY3JlZW4gPSB7XG4gICAgICAgIG5hbWU6ICdyZWdpc3RlcldpdGhTb2NpYWxQbGF0Zm9ybU1lc3NhZ2VTY3JlZW4nLFxuICAgICAgICB4OiAyMjUsXG4gICAgICAgIHk6IDE2MixcbiAgICAgICAgd2lkdGg6IDc1LFxuICAgICAgICBoZWlnaHQ6IDEzLFxuICAgICAgICB0YXJnZXRZOiA4LFxuICAgICAgICBsb29raW5nRm9yQ29sb3I6IHsgcjogMjQ0LCBnOiAxOTEsIGI6IDE5MSB9LFxuICAgICAgICB0YXJnZXRDb2xvckNvdW50OiAyMSxcbiAgICAgICAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiAzLFxuICAgICAgfTtcbiAgICAgIGlmIChjaGVja1NjcmVlbk1lc3NhZ2UoaW5jb3JyZWN0RW1haWxGb3JtYXQsIHJmcGFnZUVudGVyRW1haWwpKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZXBvcnRlZCBpbmNvcnJlY3RFbWFpbEZvcm1hdCBzbyBoYW5kbGUgaXQnKTtcbiAgICAgICAgY2hlY2tMb2dpbkZhaWxlZE1heFJlYWNoZWQoKTtcbiAgICAgIH0gZWxzZSBpZiAoY2hlY2tTY3JlZW5NZXNzYWdlKHJlZ2lzdGVyV2l0aFNvY2lhbFBsYXRmb3JtTWVzc2FnZVNjcmVlbiwgcmZwYWdlRW50ZXJFbWFpbCkpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JlcG9ydGVkIHJlZ2lzdGVyV2l0aFNvY2lhbFBsYXRmb3JtTWVzc2FnZVNjcmVlbiBzbyBoYW5kbGUgaXQnKTtcbiAgICAgICAgY2hlY2tMb2dpbkZhaWxlZE1heFJlYWNoZWQoKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtncm91cFBhZ2VFbnRlclBhc3N3b3JkLm5hbWV9YCxcbiAgICBtYXRjaDogZ3JvdXBQYWdlRW50ZXJQYXNzd29yZCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdpbnB1dCBwYXNzd29yZCcpO1xuXG4gICAgICBpZiAoY29uZmlnLnBhc3N3b3JkLmxlbmd0aCA8IDggfHwgY29uZmlnLnBhc3N3b3JkLmxlbmd0aCA+IDIxKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbmNvcnJlY3QgcGFzc3dvcmQgbGVuZ3RoLCBzaG91bGQgYmV0d2VlbiA4IHRvIDIwLCBidXQgZ290ICR7Y29uZmlnLnBhc3N3b3JkLmxlbmd0aH1gKTtcbiAgICAgICAgc2VuZEV2ZW50KCdnYW1lU3RhdHVzJywgJ2xvZ2luLWZhaWxlZCcpO1xuICAgICAgICBsb2dzKCdncm91cFBhZ2VFbnRlclBhc3N3b3JkJywgYE1heCByZXRyeSBjb3VudCByZWFjaGVkLCBsb2dpbiBmYWlsZWRgKTtcbiAgICAgICAgY29va2llS2luZ2RvbSEuc3RvcCgpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUVudGVyUGFzc3dvcmRMb25nSWQpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICB0eXBpbmcoY29uZmlnLnBhc3N3b3JkLCAxMDAwKTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgdHlwaW5nKCdcXG4nLCA1MDApO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwQW5pbWF0ZSk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzcwLCB5OiAxOTAgfSk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcblxuICAgICAgY29uc3Qgd3JvbmdQYXNzd29yZE1lc3NhZ2VTY3JlZW4gPSB7XG4gICAgICAgIG5hbWU6ICd3cm9uZ1Bhc3N3b3JkTWVzc2FnZVNjcmVlbicsXG4gICAgICAgIHg6IDIyNSxcbiAgICAgICAgeTogMTYyLFxuICAgICAgICB3aWR0aDogNzUsXG4gICAgICAgIGhlaWdodDogMTMsXG4gICAgICAgIHRhcmdldFk6IDYsXG4gICAgICAgIGxvb2tpbmdGb3JDb2xvcjogeyByOiAyMzAsIGc6IDEwMCwgYjogMTAwIH0sXG4gICAgICAgIHRhcmdldENvbG9yQ291bnQ6IDE4LFxuICAgICAgICB0YXJnZXRDb2xvclRocmVhc2hvbGQ6IDIsXG4gICAgICB9O1xuICAgICAgY29uc3Qgd3JvbmdQYXNzd29yZE1lc3NhZ2VTY3JlZW5XaXRoTG9uZ0lkID0ge1xuICAgICAgICBuYW1lOiAnd3JvbmdQYXNzd29yZE1lc3NhZ2VTY3JlZW5XaXRoTG9uZ0lkJyxcbiAgICAgICAgeDogMjI1LFxuICAgICAgICB5OiAxNzUsXG4gICAgICAgIHdpZHRoOiA3NSxcbiAgICAgICAgaGVpZ2h0OiAxMyxcbiAgICAgICAgdGFyZ2V0WTogNixcbiAgICAgICAgbG9va2luZ0ZvckNvbG9yOiB7IHI6IDI0NCwgZzogMTAwLCBiOiAxMDAgfSxcbiAgICAgICAgdGFyZ2V0Q29sb3JDb3VudDogMjUsXG4gICAgICAgIHRhcmdldENvbG9yVGhyZWFzaG9sZDogMixcbiAgICAgIH07XG4gICAgICBpZiAoY2hlY2tTY3JlZW5NZXNzYWdlKHdyb25nUGFzc3dvcmRNZXNzYWdlU2NyZWVuLCByZnBhZ2VFbnRlcnBhc3N3b3JkRmluaXNoZWQpKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdyZXBvcnRlZCB3cm9uZ1Bhc3N3b3JkTWVzc2FnZVNjcmVlbiBzbyBoYW5kbGUgaXQnKTtcbiAgICAgICAgY2hlY2tMb2dpbkZhaWxlZE1heFJlYWNoZWQoKTtcbiAgICAgIH1cbiAgICAgIGlmIChjaGVja1NjcmVlbk1lc3NhZ2Uod3JvbmdQYXNzd29yZE1lc3NhZ2VTY3JlZW5XaXRoTG9uZ0lkLCByZnBhZ2VFbnRlclBhc3N3b3JkTG9uZ0lkKSkge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAncmVwb3J0ZWQgd3JvbmdQYXNzd29yZE1lc3NhZ2VTY3JlZW5XaXRoTG9uZ0lkIHNvIGhhbmRsZSBpdCcpO1xuICAgICAgICBjaGVja0xvZ2luRmFpbGVkTWF4UmVhY2hlZCgpO1xuICAgICAgfVxuXG4gICAgICAvLyBUT0RPOiBzZW5kIGZhaWwgdG8gbG9naW4gZXZlbnRcbiAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBncm91cFBhZ2VFbnRlclBhc3N3b3JkLm5hbWUsIHt9KTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VFbnRlclR3b1Bhc3N3b3Jkcy5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUVudGVyVHdvUGFzc3dvcmRzLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JmcGFnZUVudGVyVHdvUGFzc3dvcmRzLCB0aGlzIGlzIGEgbmV3IERldmlzdGVyIGFjY291bnQsIHN0b3BwaW5nJyk7XG4gICAgICBzZW5kRXZlbnQoJ2dhbWVTdGF0dXMnLCAnbmV3LWFjY291bnQnKTtcbiAgICAgIGNvb2tpZUtpbmdkb20hLnN0b3AoKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VFbnRlclR3b1Bhc3N3b3Jkc0xvbmdJZC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUVudGVyVHdvUGFzc3dvcmRzTG9uZ0lkLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JmcGFnZUVudGVyVHdvUGFzc3dvcmRzTG9uZ0lkLCB0aGlzIGlzIGEgbmV3IERldmlzdGVyIGFjY291bnQsIHN0b3BwaW5nJyk7XG4gICAgICBzZW5kRXZlbnQoJ2dhbWVTdGF0dXMnLCAnbmV3LWFjY291bnQnKTtcbiAgICAgIGNvb2tpZUtpbmdkb20hLnN0b3AoKTtcbiAgICB9LFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUluTG9naW5QYWdlV2l0aEdlYXJBbmRWaWRlby5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluTG9naW5QYWdlV2l0aEdlYXJBbmRWaWRlbyxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICd0YXBwaW5nICg1NzUsIDIyKSB1bnRpbCB0aGUgZ2FtZSBzdGFydCBldmVyeSAzIHNlY3MnKTtcblxuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU3NSwgeTogMjIgfSk7XG4gICAgICBVdGlscy5zbGVlcCgzMDAwKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VBbm5vdW5jZW1lbnQubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VBbm5vdW5jZW1lbnQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29uZmlnLm5lZWRUb1NlbmRMb2dpblN1Y2Nlc3MpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ2hhdmUgbm90IHNlbmQgbG9naW4tc3VjY2Vzcywgc2VuZCBpdCcpO1xuICAgICAgICBzZW5kRXZlbnQoJ2dhbWVTdGF0dXMnLCAnbG9naW4tc3VjY2VlZGVkJyk7XG4gICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgY29uZmlnLm5lZWRUb1NlbmRMb2dpblN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgICAgc2VuZENvdW50ZXIoJ2xvZ2luJywgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICB9XG4gICAgICBpZiAoY29uZmlnLm5lZWRUb1NlbmRQbGF5aW5nKSB7XG4gICAgICAgIFV0aWxzLnNsZWVwKDMwMDApO1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAnaGF2ZSBub3Qgc2VuZCBuZWVkVG9TZW5kUGxheWluZywgc2VuZCBpdCcpO1xuICAgICAgICBzZW5kRXZlbnQoJ2dhbWVTdGF0dXMnLCAncGxheWluZycpO1xuICAgICAgICBjb25maWcubmVlZFRvU2VuZFBsYXlpbmcgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZUFubm91bmNlbWVudCk7XG4gICAgfSxcbiAgfSk7XG4gIC8vICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAvLyAgICAgcGF0aDogYC8ke3JmcGFnZUNhbkRvd25sb2FkUmVzb3VyY2VzLm5hbWV9YCxcbiAgLy8gICAgIG1hdGNoOiByZnBhZ2VDYW5Eb3dubG9hZFJlc291cmNlcyxcbiAgLy8gICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAvLyAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZnBhZ2VOb3RFbm91Z2hJdGVtVG9CdXlUaGlzLCBpbWFnZSkpIHtcbiAgLy8gICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCAnY29uZnVzZWQgcmZwYWdlQ2FuRG93bmxvYWRSZXNvdXJjZXMgdnMgcmZwYWdlTm90RW5vdWdoSXRlbVRvQnV5VGhpcywgc2VuZCBiYWNrIHR3aWNlJyk7XG4gIC8vICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgLy8gICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXApO1xuICAvLyAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gIC8vICAgICAgICAgcmV0dXJuO1xuICAvLyAgICAgICB9XG5cbiAgLy8gICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JmcGFnZUNhbkRvd25sb2FkUmVzb3VyY2VzLCBnbyBuZXh0Jyk7XG4gIC8vICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VDYW5Eb3dubG9hZFJlc291cmNlcyk7XG4gIC8vICAgICB9LFxuICAvLyAgIH0pO1xuXG4gIHBhc3NpdmVBZGRSb3V0ZShbXG4gICAgcmZwYWdlVGVybXNPZlNlcnZpY2VzLFxuICAgIHJmcGFnZVRlcm1zT2ZTZXJ2aWNlV2luZG93LFxuICAgIHJmcGFnZVRlcm1zT2ZTZXJ2aWNlc01lbXUsXG4gICAgcmZwYWdlVGVybXNPZlNlcnZpY2VXaW5kb3dSZWRyb2lkLFxuICAgIHJmcGFnZVRlcm1zT2ZTZXJ2aWNlTG9uZ1dpbmRvdyxcbiAgICByZnBhZ2VDYW5ub3RGaW5kTG9naW5JbmZvLFxuICAgIHJmcGFnZURvd25sb2FkRGF0YUFuZFZvaWNlT3ZlcixcbiAgICByZnBhZ2VEb3dubG9hZERhdGFBbmRWb2ljZU92ZXJVbmNoZWNrZWQsXG4gICAgcmZwYWdlU2VydmVyU2VsZWN0aW9uLFxuICBdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrTG9naW5GYWlsZWRNYXhSZWFjaGVkKCkge1xuICBpZiAobG9naW5UYXNrU3RhdHVzLmxvZ2luUmV0cnlDb3VudCA+IGNvbmZpZy5sb2dpblJldHJ5TWF4VGltZXMpIHtcbiAgICBzZW5kRXZlbnQoJ2dhbWVTdGF0dXMnLCAnbG9naW4tZmFpbGVkJyk7XG4gICAgbG9ncygnY2hlY2tMb2dpbkZhaWxlZE1heFJlYWNoZWQnLCBgTWF4IHJldHJ5IGNvdW50IHJlYWNoZWQsIGxvZ2luIGZhaWxlZGApO1xuICAgIGNvb2tpZUtpbmdkb20hLnN0b3AoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBsb2dpblRhc2tTdGF0dXMubG9naW5SZXRyeUNvdW50Kys7XG4gICAgbG9ncygnY2hlY2tMb2dpbkZhaWxlZE1heFJlYWNoZWQnLCBgUmVzdGFydCBnYW1lIGFzIG5vdCBpbnB1dGluZyBsb2dpbiBpbmZvIGNvcnJlY3RseTogJHtsb2dpblRhc2tTdGF0dXMubG9naW5SZXRyeUNvdW50fWApO1xuICAgIHZhciBydG4gPSBleGVjdXRlKCdhbSBmb3JjZS1zdG9wIGNvbS5kZXZzaXN0ZXJzLmNrJyk7XG4gICAgaWYgKHJ0biA9PSAnc2lnbmFsOiBhYm9ydGVkJykge1xuICAgICAgLy8gTUVtdVxuICAgICAgZXhlY3V0ZShcbiAgICAgICAgJ0FORFJPSURfREFUQT0vZGF0YSBCT09UQ0xBU1NQQVRIPS9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtb2ouamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUtbGliYXJ0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9jb25zY3J5cHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29raHR0cC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1qdW5pdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYm91bmN5Y2FzdGxlLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdGVsZXBob255LWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdm9pcC1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ltcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL21tcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FuZHJvaWQucG9saWN5Lmphcjovc3lzdGVtL2ZyYW1ld29yay9hcGFjaGUteG1sLmphcjovc3lzdGVtL2ZyYW1ld29yay9vcmcuYXBhY2hlLmh0dHAubGVnYWN5LmJvb3QuamFyIGFtIGZvcmNlLXN0b3AgY29tLmRldnNpc3RlcnMuY2snXG4gICAgICApO1xuICAgIH1cbiAgICBzbGVlcCgxNTAwMCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQYWdlLCBSRUNULCBVdGlscywgcmVyb3V0ZXIgfSBmcm9tICdSZXJvdXRlcic7XG5pbXBvcnQgeyBUQVNLUyB9IGZyb20gJy4uL3Rhc2tzJztcbmltcG9ydCB7IGxvZ3MsIHNlbmRFdmVudFJ1bm5pbmcsIHNlbmRLZXlCYWNrIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgYXNzaWduLCBnZXRNYXloZW1TY29yZXMsIHBhc3NpdmVBZGRSb3V0ZSwgcmVjb2duaXplV2lzaGluZ1RyZWVSZXF1aXJlbWVudHMsIHNlbmRDb3VudGVyLCBzd2lwZUZyb21Ub1BvaW50IH0gZnJvbSAnLi4vaGVscGVyJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uL3NjcmlwdENvbmZpZyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCAqIGFzIElDT05TIGZyb20gJy4uL2ljb25zJztcbmltcG9ydCB7IGdsb2JhbFN0b3JhZ2UgfSBmcm9tICcuLi9zdG9yYWdlJztcblxuY29uc3QgcmZwYWdlSW5QVlBBcmVuYSA9IG5ldyBQYWdlKCdyZnBhZ2VJblBWUEFyZW5hJywgW1xuICB7IHg6IDYyOCwgeTogMjIsIHI6IDU1LCBnOiAxNjcsIGI6IDIzMSB9LFxuICB7IHg6IDUyMiwgeTogMTgsIHI6IDUsIGc6IDEyOCwgYjogMjU0IH0sXG4gIHsgeDogNDU4LCB5OiAxNCwgcjogMjI4LCBnOiAxNDgsIGI6IDQwIH0sXG4gIHsgeDogNDQ4LCB5OiAyMiwgcjogMTIwLCBnOiAzOCwgYjogMzAgfSxcbiAgeyB4OiAzNTYsIHk6IDIwLCByOiAyMzksIGc6IDE3NCwgYjogMjAgfSxcbiAgeyB4OiAxODAsIHk6IDExOSwgcjogMjIxLCBnOiAxMjgsIGI6IDAgfSxcbiAgeyB4OiAyMiwgeTogMTEyLCByOiAyMzIsIGc6IDE5OCwgYjogMTMyIH0sXG4gIHsgeDogMzMsIHk6IDExNSwgcjogMjM4LCBnOiAxOTAsIGI6IDEyMCB9LFxuICB7IHg6IDI0LCB5OiA3NCwgcjogMjU1LCBnOiAyMjYsIGI6IDAgfSxcbl0pO1xuY29uc3QgcmZwYWdlSW5QVlBNZWRhbFNob3AgPSBuZXcgUGFnZSgncmZwYWdlSW5QVlBNZWRhbFNob3AnLCBbXG4gIHsgeDogNTIwLCB5OiAyMywgcjogMCwgZzogMTc5LCBiOiAyNTUgfSxcbiAgeyB4OiA0NDksIHk6IDIwLCByOiAyMTAsIGc6IDE2MCwgYjogMjcgfSxcbiAgeyB4OiAzNTcsIHk6IDE3LCByOiAyMzUsIGc6IDE1OSwgYjogNSB9LFxuICB7IHg6IDkyLCB5OiA2MywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDE1LCB5OiA0NiwgcjogMTEwLCBnOiAxMTAsIGI6IDEwOCB9LFxuICB7IHg6IDE3LCB5OiAzNDUsIHI6IDI4LCBnOiA4MywgYjogMTE1IH0sXG4gIHsgeDogMTQ4LCB5OiAzMTUsIHI6IDU0LCBnOiA2MiwgYjogOTUgfSxcbl0pO1xuY29uc3QgcmZwYWdlUFZQTm90RW5vdWdoTWVkYWwgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVBWUE5vdEVub3VnaE1lZGFsJyxcbiAgW1xuICAgIHsgeDogMjkyLCB5OiAyNDgsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gICAgeyB4OiAzMjAsIHk6IDE4NSwgcjogMjUwLCBnOiAyMTAsIGI6IDggfSxcbiAgICB7IHg6IDMzOCwgeTogMjQzLCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICBdLFxuICB7IHg6IDI5MiwgeTogMjQ4IH1cbik7XG5cbmNvbnN0IHJmcGFnZVBWUEFyZW5hVGVhbVNldHVwID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VQVlBBcmVuYVRlYW1TZXR1cCcsXG4gIFtcbiAgICB7IHg6IDYyNywgeTogMjAsIHI6IDU0LCBnOiAxNjMsIGI6IDIzMCB9LFxuICAgIHsgeDogNTk4LCB5OiA4OCwgcjogMjQzLCBnOiA5MCwgYjogMjggfSxcbiAgICB7IHg6IDU5OCwgeTogMTE2LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgICB7IHg6IDYwNiwgeTogMTM5LCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgICB7IHg6IDYwMiwgeTogMTY4LCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgICB7IHg6IDI1LCB5OiAxNywgcjogMTI4LCBnOiAxMjgsIGI6IDEyOCB9LFxuICAgIHsgeDogNDU3LCB5OiAyNjcsIHI6IDExMCwgZzogMTIxLCBiOiAxNjUgfSxcbiAgICB7IHg6IDUzMCwgeTogMjYzLCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgICB7IHg6IDYwOSwgeTogMjU3LCByOiAyMzksIGc6IDE5MSwgYjogNDQgfSxcbiAgICB7IHg6IDYxNywgeTogMjAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiA2MTcsIHk6IDIwIH1cbik7XG5jb25zdCByZnBhZ2VQVlBBcmVuYVJlYWR5VG9CYXR0bGVQYWdlID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VQVlBBcmVuYVJlYWR5VG9CYXR0bGVQYWdlJyxcbiAgW1xuICAgIHsgeDogNTI5LCB5OiAxNCwgcjogMCwgZzogMTk2LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ0OSwgeTogMTEsIHI6IDI0MiwgZzogMjA4LCBiOiAxMDYgfSxcbiAgICB7IHg6IDQ0NSwgeTogMjQsIHI6IDI0MywgZzogMTk5LCBiOiA5OCB9LFxuICAgIHsgeDogMzU5LCB5OiAxNCwgcjogMjUyLCBnOiAxOTIsIGI6IDMyIH0sXG4gICAgeyB4OiA1MDcsIHk6IDMzMCwgcjogMTI1LCBnOiA2OSwgYjogMTQgfSxcbiAgICB7IHg6IDU0MywgeTogMzM3LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgICB7IHg6IDE2MCwgeTogMzM0LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgICB7IHg6IDc2LCB5OiAzMzYsIHI6IDEyLCBnOiAxNjcsIGI6IDIyMyB9LFxuICAgIHsgeDogMjYsIHk6IDgxLCByOiAyNDAsIGc6IDE3NSwgYjogMCB9LFxuICBdLFxuICB7IHg6IDUwMiwgeTogMzI2IH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlUHZQQ3J5c3RhaXNSZWZyZXNoID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VQdlBDcnlzdGFpc1JlZnJlc2gnLFxuICBbXG4gICAgeyB4OiAyNDMsIHk6IDEwMCwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDMyNCwgeTogNzgsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ0MywgeTogOTIsIHI6IDU3LCBnOiAxNjYsIGI6IDIzMSB9LFxuICAgIHsgeDogNDAyLCB5OiAxMzQsIHI6IDI0NywgZzogMjM1LCBiOiAyMjIgfSxcbiAgICB7IHg6IDM1MSwgeTogMjUwLCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogNDA4LCB5OiAyNTEsIHI6IDIyMiwgZzogMjA3LCBiOiAxOTggfSxcbiAgXSxcbiAgeyB4OiA0MzYsIHk6IDkwIH1cbik7XG5jb25zdCByZnBhZ2VQdlBOb0FyZW5hVGlja2V0ID0gbmV3IFBhZ2UoJ3JmcGFnZVB2UE5vQXJlbmFUaWNrZXQnLCBbXG4gIHsgeDogNDk2LCB5OiAyNywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NCwgeTogMjYsIHI6IDU2LCBnOiAxNjcsIGI6IDIzMSB9LFxuICB7IHg6IDMxNywgeTogODQsIHI6IDI0MywgZzogMTU3LCBiOiA2OSB9LFxuICB7IHg6IDQ1NCwgeTogMTYxLCByOiA0LCBnOiAxNTEsIGI6IDIxMSB9LFxuICB7IHg6IDQ1NywgeTogMjMxLCByOiA0LCBnOiAxNTEsIGI6IDIxMSB9LFxuICB7IHg6IDQ1OCwgeTogMzAzLCByOiAyMTksIGc6IDIwNywgYjogMTk5IH0sXG5dKTtcbmNvbnN0IHJmcGFnZUluU3VwZXJNYXloZW0gPSBuZXcgUGFnZSgncmZwYWdlSW5TdXBlck1heWhlbScsIFtcbiAgeyB4OiA0NTEsIHk6IDExLCByOiAyNTUsIGc6IDI5LCBiOiAxMzQgfSxcbiAgeyB4OiA0NDgsIHk6IDE5LCByOiAyMzEsIGc6IDIwNywgYjogMjM1IH0sXG4gIHsgeDogMzUzLCB5OiAxOSwgcjogMjU1LCBnOiAyMjUsIGI6IDc2IH0sXG4gIHsgeDogMzQsIHk6IDEzNSwgcjogMjA2LCBnOiAxMzIsIGI6IDY2IH0sXG4gIHsgeDogMzIsIHk6IDE4OSwgcjogMTk3LCBnOiAxNjIsIGI6IDE4NCB9LFxuXSk7XG5jb25zdCByZnBhZ2VOb01heWhlbVRpY2tldCA9IG5ldyBQYWdlKFxuICAncmZwYWdlTm9NYXloZW1UaWNrZXQnLFxuICBbXG4gICAgeyB4OiAzNTQsIHk6IDI4MywgcjogNSwgZzogMTI2LCBiOiAyNTQgfSxcbiAgICB7IHg6IDM5MSwgeTogMjc4LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgICB7IHg6IDMwMSwgeTogMjc1LCByOiAxMiwgZzogMTY3LCBiOiAyMjMgfSxcbiAgICB7IHg6IDM0NCwgeTogMTI4LCByOiA1MiwgZzogMTU4LCBiOiAyMjggfSxcbiAgICB7IHg6IDMyMSwgeTogMTM3LCByOiAyNTUsIGc6IDI5LCBiOiAxMzUgfSxcbiAgICB7IHg6IDMxOSwgeTogMTQ3LCByOiAyNTQsIGc6IDI0OCwgYjogMjU0IH0sXG4gICAgeyB4OiAzMzEsIHk6IDExLCByOiAxMjcsIGc6IDE0LCBiOiA2NyB9LFxuICAgIHsgeDogNDA3LCB5OiAyMCwgcjogMTI1LCBnOiA5NiwgYjogNSB9LFxuICAgIHsgeDogNTIzLCB5OiAxOSwgcjogMiwgZzogNjYsIGI6IDEyNyB9LFxuICAgIHsgeDogNTEwLCB5OiAzMjEsIHI6IDEyMCwgZzogNTIsIGI6IDg2IH0sXG4gICAgeyB4OiA0ODQsIHk6IDMzMSwgcjogNzUsIGc6IDEwOCwgYjogMzAgfSxcbiAgXSxcbiAgeyB4OiAyNjksIHk6IDI3NyB9XG4pO1xuY29uc3QgcmZwYWdlU3VwZXJNYXloZW1SZWFkeVRvQmF0dGxlID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VTdXBlck1heWhlbVJlYWR5VG9CYXR0bGUnLFxuICBbXG4gICAgeyB4OiA1NDgsIHk6IDMyOSwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDUwNSwgeTogMzI1LCByOiAyNTUsIGc6IDI1MSwgYjogMjU1IH0sXG4gICAgeyB4OiAyNzAsIHk6IDMzNCwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICB7IHg6IDMwNCwgeTogMjE4LCByOiAyNTUsIGc6IDIyMywgYjogMjQgfSxcbiAgXSxcbiAgeyB4OiA1NTAsIHk6IDMyNSB9XG4pO1xuY29uc3QgcmZwYWdlU3VwZXJNYXloZW1SZWFkeVRvQmF0dGxlSW50cm8gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZVN1cGVyTWF5aGVtUmVhZHlUb0JhdHRsZUludHJvJyxcbiAgW1xuICAgIHsgeDogNjA5LCB5OiAyNCwgcjogNCwgZzogMTEsIGI6IDE1IH0sXG4gICAgeyB4OiA1MjQsIHk6IDE3LCByOiAwLCBnOiA1MiwgYjogNjcgfSxcbiAgICB7IHg6IDQwNSwgeTogMTgsIHI6IDY3LCBnOiA1NSwgYjogMCB9LFxuICAgIHsgeDogMzI3LCB5OiAyMSwgcjogNTIsIGc6IDQ4LCBiOiA1NSB9LFxuICAgIHsgeDogODYsIHk6IDUsIHI6IDMzLCBnOiAxOCwgYjogMjMgfSxcbiAgICB7IHg6IDE2NiwgeTogMTMsIHI6IDU3LCBnOiA2NiwgYjogNjUgfSxcbiAgICB7IHg6IDIxNCwgeTogMzM2LCByOiAzMiwgZzogNTQsIGI6IDMgfSxcbiAgICB7IHg6IDE4NSwgeTogMzM0LCByOiAzLCBnOiA0NCwgYjogNTkgfSxcbiAgICB7IHg6IDUwMSwgeTogMzI5LCByOiAxMzIsIGc6IDU3LCBiOiAxMDkgfSxcbiAgICB7IHg6IDU0OCwgeTogMzIwLCByOiAzMiwgZzogNTQsIGI6IDMgfSxcbiAgXSxcbiAgeyB4OiA2MDYsIHk6IDI2IH1cbik7XG5jb25zdCByZnBhZ2VJblN1cGVyTWF5aGVtSW50cm8gPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUluU3VwZXJNYXloZW1JbnRybycsXG4gIFtcbiAgICB7IHg6IDYwNiwgeTogMjYsIHI6IDMsIGc6IDIsIGI6IDMgfSxcbiAgICB7IHg6IDQwNSwgeTogMTc0LCByOiAyNTUsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiAyNDgsIHk6IDE2NCwgcjogMjE5LCBnOiAyMDksIGI6IDIwNSB9LFxuICAgIHsgeDogNTI0LCB5OiAyNCwgcjogMywgZzogNDksIGI6IDY3IH0sXG4gICAgeyB4OiA0NTEsIHk6IDEyLCByOiA2NywgZzogOCwgYjogMzUgfSxcbiAgICB7IHg6IDQ0OSwgeTogMTksIHI6IDYxLCBnOiA1NCwgYjogNjIgfSxcbiAgICB7IHg6IDM1NCwgeTogMTUsIHI6IDYwLCBnOiA0NywgYjogMjEgfSxcbiAgICB7IHg6IDI4MiwgeTogMTMsIHI6IDE1LCBnOiAyNSwgYjogNDYgfSxcbiAgICB7IHg6IDMxLCB5OiAxMzUsIHI6IDU3LCBnOiAzNiwgYjogMTMgfSxcbiAgXSxcbiAgeyB4OiA2MDYsIHk6IDI2IH1cbik7XG5cbi8vIFRPRE86IHBhZ2UgaXMgd3JvbmdcbmNvbnN0IHJmcGFnZUJhdHRsZVRhcmdldENhblJlZnJlc2ggPSBuZXcgUGFnZSgncmZwYWdlQmF0dGxlVGFyZ2V0Q2FuUmVmcmVzaCcsIFtcbiAgeyB4OiA1MzIsIHk6IDMwNiwgcjogMTIsIGc6IDE2NiwgYjogMjIzIH0sXG4gIHsgeDogNTIyLCB5OiAzMDQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1NDEsIHk6IDMwMywgcjogMTIsIGc6IDE2NiwgYjogMjIzIH0sXG4gIHsgeDogMTg4LCB5OiAzMjgsIHI6IDU2LCBnOiAxNjcsIGI6IDIzMSB9LFxuICB7IHg6IDE4LCB5OiAzMjMsIHI6IDU2LCBnOiAxNjcsIGI6IDIzMSB9LFxuICB7IHg6IDM1LCB5OiA3OCwgcjogMjU1LCBnOiAyMjEsIGI6IDE2IH0sXG4gIHsgeDogMjUsIHk6IDc4LCByOiAyNTUsIGc6IDIzMiwgYjogMCB9LFxuICB7IHg6IDE3OCwgeTogMTE4LCByOiAyMDQsIGc6IDExOSwgYjogMTcgfSxcbiAgeyB4OiAyOCwgeTogMTE0LCByOiAyNTEsIGc6IDIzNSwgYjogMTk5IH0sXG4gIHsgeDogNjE1LCB5OiAzMDIsIHI6IDEyLCBnOiAxNjYsIGI6IDIyMyB9LFxuXSk7XG5cbmxldCBwdnBTdGF0dXM6IHtcbiAgW2tleTogbnVtYmVyXToge1xuICAgIGJhdHRsZWQ6IGJvb2xlYW47XG4gICAgeHk6IHtcbiAgICAgIHg6IG51bWJlcjtcbiAgICAgIHk6IG51bWJlcjtcbiAgICB9O1xuICB9O1xufSA9IHtcbiAgMDoge1xuICAgIGJhdHRsZWQ6IGZhbHNlLFxuICAgIHh5OiB7IHg6IDI4OCwgeTogMTc2IH0sXG4gIH0sXG4gIDE6IHtcbiAgICBiYXR0bGVkOiBmYWxzZSxcbiAgICB4eTogeyB4OiA0MTgsIHk6IDE3NiB9LFxuICB9LFxuICAyOiB7XG4gICAgYmF0dGxlZDogZmFsc2UsXG4gICAgeHk6IHsgeDogNTQ4LCB5OiAxNzYgfSxcbiAgfSxcbiAgMzoge1xuICAgIGJhdHRsZWQ6IGZhbHNlLFxuICAgIHh5OiB7IHg6IDQzMCwgeTogMTc2IH0sXG4gIH0sXG4gIDQ6IHtcbiAgICBiYXR0bGVkOiBmYWxzZSxcbiAgICB4eTogeyB4OiA1NjAsIHk6IDE3NiB9LFxuICB9LFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFB2cEFyZW5hUm91dGVzKCkge1xuICAvLyBUQVNLUy5wdnBQdXJjaGFzZUFuY2llbnRDb29raWVcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VJblBWUE1lZGFsU2hvcC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluUFZQTWVkYWxTaG9wLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmcGFnZUluUFZQTWVkYWxTaG9wYCk7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnB2cFB1cmNoYXNlQW5jaWVudENvb2tpZSkge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFBhcnQgb2YgdGhlIHJmcGFnZUluUFZQTWVkYWxTaG9wIHBhZ2VcbiAgICAgIGNvbnN0IHJmcGFnZVBWUEFuY2llbnRDb29raWVTb2xkb3V0ID0gbmV3IFBhZ2UoJ3JmcGFnZVBWUEFuY2llbnRDb29raWVTb2xkb3V0JywgW1xuICAgICAgICB7IHg6IDg2LCB5OiAxMDksIHI6IDIwNiwgZzogMjAsIGI6IDI0IH0sXG4gICAgICAgIHsgeDogMzgsIHk6IDEzMSwgcjogMjA2LCBnOiAyMCwgYjogMjQgfSxcbiAgICAgIF0pO1xuICAgICAgY29uc3QgcmZwYWdlUFZQU3VwZXJFcGljQ29va2llU29sZG91dCA9IG5ldyBQYWdlKCdyZnBhZ2VQVlBTdXBlckVwaWNDb29raWVTb2xkb3V0JywgW1xuICAgICAgICB7IHg6IDExOCwgeTogMTI3LCByOiAyMjAsIGc6IDIzLCBiOiAyNCB9LFxuICAgICAgICB7IHg6IDE3MCwgeTogMTEyLCByOiAyMDYsIGc6IDIwLCBiOiAyNCB9LFxuICAgICAgICB7IHg6IDE2NCwgeTogOTgsIHI6IDc0LCBnOiA3NiwgYjogODcgfSxcbiAgICAgIF0pO1xuXG4gICAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlUFZQQW5jaWVudENvb2tpZVNvbGRvdXQsIGltYWdlKSkge1xuICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNTcsIHk6IDEyNSB9KTtcbiAgICAgICAgVXRpbHMuc2xlZXAoMTAwMCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMTcsIHk6IDI2MCB9KTtcbiAgICAgICAgVXRpbHMuc2xlZXAoMjAwMCk7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBQdXJjaGFzZWQgYW5jaWVudCBjb29raWUgc3VjY2Vzc2Z1bGx5YCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgYW5jaWVudCBjb29raWUgYWxyZWFkeSBzb2xkIG91dGApO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlUFZQU3VwZXJFcGljQ29va2llU29sZG91dCwgaW1hZ2UpKSB7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAxNDUsIHk6IDEyNSB9KTtcbiAgICAgICAgVXRpbHMuc2xlZXAoMTAwMCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMTcsIHk6IDI2MCB9KTtcbiAgICAgICAgVXRpbHMuc2xlZXAoMjAwMCk7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBQdXJjaGFzZWQgc3VwZXIgZXBpYyBjb29raWUgc3VjY2Vzc2Z1bGx5YCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgc3VwZXIgZXBpYyBjb29raWUgYWxyZWFkeSBzb2xkIG91dGApO1xuICAgICAgfVxuXG4gICAgICBzZW5kS2V5QmFjaygpO1xuXG4gICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VQVlBOb3RFbm91Z2hNZWRhbC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZVBWUE5vdEVub3VnaE1lZGFsLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5wdnBQdXJjaGFzZUFuY2llbnRDb29raWUpIHtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaW4gcmZwYWdlUFZQTm90RW5vdWdoTWVkYWwsIE5lZWQgbW9yZSBtZWRhbHMsIHNraXBwaW5nYCk7XG4gICAgICByZXJvdXRlci5nb05leHQocmZwYWdlUFZQTm90RW5vdWdoTWVkYWwpO1xuICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gVEFTS1MucHZwXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5QVlBBcmVuYS5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluUFZQQXJlbmEsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUuc3Vic3RyaW5nKDAsIDMpICE9PSBUQVNLUy5wdnApIHtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaW4gcmZwYWdlSW5QVlBBcmVuYWApO1xuXG4gICAgICBzd2l0Y2ggKGNvbnRleHQudGFzay5uYW1lKSB7XG4gICAgICAgIGNhc2UgVEFTS1MucHZwOlxuICAgICAgICAgIGZvciAobGV0IGkgaW4gcHZwU3RhdHVzKSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5QVlBBcmVuYSwgY2hlY2tpbmcgIyR7aX0gc28gdGFwICR7SlNPTi5zdHJpbmdpZnkocHZwU3RhdHVzW2ldLnh5KX0gYW5kIGJhdHRsZWQ6ICR7cHZwU3RhdHVzW2ldLmJhdHRsZWR9YCk7XG4gICAgICAgICAgICBpZiAoIXB2cFN0YXR1c1tpXS5iYXR0bGVkKSB7XG4gICAgICAgICAgICAgIGlmICgraSA+IDIpIHtcbiAgICAgICAgICAgICAgICBzd2lwZUZyb21Ub1BvaW50KHsgeDogNjAwLCB5OiAxODIgfSwgeyB4OiAwLCB5OiAxODIgfSwgNik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgZ2xvYmFsU3RvcmFnZS5ib3RTdGF0dXMuYmF0dGxlU3RhcnRlZCA9IDA7XG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAocHZwU3RhdHVzW2ldLnh5KTtcbiAgICAgICAgICAgICAgcHZwU3RhdHVzW2ldLmJhdHRsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VCYXR0bGVUYXJnZXRDYW5SZWZyZXNoKSkge1xuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYFRhcCBQVlAgcmVmcmVzaGApO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU0MywgeTogMzAzIH0pO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBDYW5ub3QgdGFwIFBWUCByZWZyZXNoLCBqb2IgZG9uZWApO1xuICAgICAgICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgIGNhc2UgVEFTS1MucHZwUHVyY2hhc2VBbmNpZW50Q29va2llOlxuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAxNzgsIHk6IDExOCB9KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5QVlBBcmVuYSwgbGVhdmUgYmVjYXVzZSBjdXJyZW50IHRhc2sgaXMgbm90IHB2cCByZWxhdGVkLCBidXQ6ICR7Y29udGV4dC50YXNrLm5hbWV9YCk7XG4gICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlUHZQTm9BcmVuYVRpY2tldC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZVB2UE5vQXJlbmFUaWNrZXQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnB2cCkge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VQdlBOb0FyZW5hVGlja2V0LCBzZW5kIGJhY2sgYW5kIGZpbmlzaCB0YXNrYCk7XG4gICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgc2VuZEV2ZW50UnVubmluZygpO1xuICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlUFZQQXJlbmFSZWFkeVRvQmF0dGxlUGFnZS5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZVBWUEFyZW5hUmVhZHlUb0JhdHRsZVBhZ2UsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnB2cCkge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VQVlBBcmVuYVJlYWR5VG9CYXR0bGVQYWdlLCB0YXAgaXRgKTtcblxuICAgICAgdmFyIGNlID0gZ2V0Q0VzKHsgeDogNDk2LCB5OiA3MiwgdzogNzAsIGg6IDE2IH0pO1xuICAgICAgaWYgKGNlIDwgY29uZmlnLmF1dG9QdlBUYXJnZXRTY29yZUxpbWl0ICYmIGNlICE9PSAwKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBCYXR0bGUgd2l0aCBjZSAke2NlfSwgdGFyZ2V0IGxpbWl0OiAke2NvbmZpZy5hdXRvUHZQVGFyZ2V0U2NvcmVMaW1pdH1gKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZVBWUEFyZW5hUmVhZHlUb0JhdHRsZVBhZ2UpOyAvLyB0YXAgQmF0dGxlXG4gICAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZVBWUEFyZW5hUmVhZHlUb0JhdHRsZVBhZ2UsIDIwMDApKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgTm90IHRvIGJhdHRsZSB3aXRoIGNlICR7Y2V9LCB0YXJnZXQgZXhjZWVkIGxpbWl0OiAke2NvbmZpZy5hdXRvUHZQVGFyZ2V0U2NvcmVMaW1pdH1gKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VQdlBDcnlzdGFpc1JlZnJlc2gubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VQdlBDcnlzdGFpc1JlZnJlc2gsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaW4gcmZwYWdlUHZQQ3J5c3RhaXNSZWZyZXNoLCBzZW5kIGJhY2sgYW5kIGZpbmlzaCByb3VuZGApO1xuICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkU3VwZXJNYXloZW1Sb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5TdXBlck1heWhlbS5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluU3VwZXJNYXloZW0sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnN1cGVyTWF5aGVtKSB7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgcmZwYWdlU3VwZXJNYXloZW1DYW5SZWZyZXNoID0gbmV3IFBhZ2UoJ3JmcGFnZVN1cGVyTWF5aGVtQ2FuUmVmcmVzaCcsIFtcbiAgICAgICAgeyB4OiA1MTYsIHk6IDMyNywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgICAgICB7IHg6IDUyOCwgeTogMzI2LCByOiA4NiwgZzogODIsIGI6IDEwNSB9LFxuICAgICAgICB7IHg6IDU0MSwgeTogMzMwLCByOiAxNTMsIGc6IDE1MywgYjogMTUzIH0sXG4gICAgICAgIHsgeDogNTY4LCB5OiAzMzAsIHI6IDE5OSwgZzogMTk5LCBiOiAxOTkgfSxcbiAgICAgIF0pO1xuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaW4gcmZwYWdlSW5TdXBlck1heWhlbWApO1xuICAgICAgY29uc3QgYmF0dGxlWSA9IFs3NSwgMTYwLCAyNTBdO1xuXG4gICAgICB2YXIgc2NvcmVzID0gZ2V0TWF5aGVtU2NvcmVzKCk7XG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgc3VwZXIgbWF5aGVtIHNjb3JlczogJHtKU09OLnN0cmluZ2lmeShzY29yZXMpfWApO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzY29yZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGNlID0gc2NvcmVzW2ldO1xuICAgICAgICBpZiAoY2UgPCBjb25maWcuYXV0b1N1cGVyTWF5aGVtVGFyZ2V0U2NvcmVMaW1pdCAmJiBjZSAhPT0gMCkge1xuICAgICAgICAgIGlmICghcmVyb3V0ZXIuc2NyZWVuLmlzU2FtZUNvbG9yKHsgeDogNTkwLCB5OiBiYXR0bGVZW2ldLCByOiAxMjEsIGc6IDIwNywgYjogMTYgfSkpIHtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBBbHJlYWR5IEJhdHRsZWQgd2l0aCAke2l9LCBjZSAke2NlfSwgdGFyZ2V0IGxpbWl0OiAke2NvbmZpZy5hdXRvU3VwZXJNYXloZW1UYXJnZXRTY29yZUxpbWl0fWApO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYEJhdHRsZSB3aXRoICR7aX0sIGNlICR7Y2V9LCB0YXJnZXQgbGltaXQ6ICR7Y29uZmlnLmF1dG9TdXBlck1heWhlbVRhcmdldFNjb3JlTGltaXR9YCk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU5MCwgeTogYmF0dGxlWVtpXSB9KTsgLy8gdGFwIEJhdHRsZVxuICAgICAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZVN1cGVyTWF5aGVtUmVhZHlUb0JhdHRsZSwgMzAwMCkpIHtcbiAgICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VTdXBlck1heWhlbVJlYWR5VG9CYXR0bGUpO1xuICAgICAgICAgICAgZ2xvYmFsU3RvcmFnZS5ib3RTdGF0dXMuYmF0dGxlU3RhcnRlZCA9IDA7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBGYWlsZWQgdG8gZmluZCByZnBhZ2VTdXBlck1heWhlbVJlYWR5VG9CYXR0bGUgaW4gMyBzZWNzLCBza2lwcGluZyB0aGlzIG9uZWApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBOb3QgdG8gYmF0dGxlIHdpdGggJHtpfSwgY2UgJHtjZX0sIHRhcmdldCBsaW1pdDogJHtjb25maWcuYXV0b1N1cGVyTWF5aGVtVGFyZ2V0U2NvcmVMaW1pdH1gKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlU3VwZXJNYXloZW1DYW5SZWZyZXNoKSkge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgVGFwIFN1cGVyIG1heWhlbSByZWZyZXNoYCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA1MzIsIHk6IDMyOSB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBDYW5ub3QgdGFwIFN1cGVyIG1heWhlbSByZWZyZXNoLCBqb2IgZG9uZWApO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VOb01heWhlbVRpY2tldC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZU5vTWF5aGVtVGlja2V0LFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5zdXBlck1heWhlbSkge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VOb01heWhlbVRpY2tldCwgc2VuZCBiYWNrIGFuZCBmaW5pc2ggdGFza2ApO1xuICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgIH0sXG4gIH0pO1xuXG4gIHBhc3NpdmVBZGRSb3V0ZShbXG4gICAgLy8gTWFya2VkIGFzIHBhZ2UgY29uZmxpY3QgaW4gZm91bnRhaW4gd2hlbiBzdG9jayBpcyBmdWxsIFtcInJmcGFnZUluU3VwZXJNYXloZW1JbnRyb1wiLFwicmZwYWdlU3RvY2tJc0Z1bGxcIl1cbiAgICAvLyByZnBhZ2VJblN1cGVyTWF5aGVtSW50cm8sXG4gICAgcmZwYWdlU3VwZXJNYXloZW1SZWFkeVRvQmF0dGxlSW50cm8sXG4gICAgcmZwYWdlUFZQQXJlbmFUZWFtU2V0dXAsXG4gIF0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkUHZwUHVyY2hhc2VUYXNrKCkge1xuICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICBuYW1lOiBUQVNLUy5wdnBQdXJjaGFzZUFuY2llbnRDb29raWUsXG4gICAgbWF4VGFza0R1cmluZzogNCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIG1pblJvdW5kSW50ZXJ2YWw6IGNvbmZpZy5hdXRvUHZQSW50ZXJ2YWxJbk1pbnMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkUHZwQXJlbmFUYXNrKCkge1xuICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICBuYW1lOiBUQVNLUy5wdnAsXG4gICAgbWF4VGFza0R1cmluZzogOSAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIG1pblJvdW5kSW50ZXJ2YWw6IGNvbmZpZy5hdXRvUHZQSW50ZXJ2YWxJbk1pbnMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihwdnBTdGF0dXMsIHtcbiAgICAgICAgMDoge1xuICAgICAgICAgIGJhdHRsZWQ6IGZhbHNlLFxuICAgICAgICAgIHh5OiB7IHg6IDI4OCwgeTogMTc2IH0sXG4gICAgICAgIH0sXG4gICAgICAgIDE6IHtcbiAgICAgICAgICBiYXR0bGVkOiBmYWxzZSxcbiAgICAgICAgICB4eTogeyB4OiA0MTgsIHk6IDE3NiB9LFxuICAgICAgICB9LFxuICAgICAgICAyOiB7XG4gICAgICAgICAgYmF0dGxlZDogZmFsc2UsXG4gICAgICAgICAgeHk6IHsgeDogNTQ4LCB5OiAxNzYgfSxcbiAgICAgICAgfSxcbiAgICAgICAgMzoge1xuICAgICAgICAgIGJhdHRsZWQ6IGZhbHNlLFxuICAgICAgICAgIHh5OiB7IHg6IDQzMCwgeTogMTc2IH0sXG4gICAgICAgIH0sXG4gICAgICAgIDQ6IHtcbiAgICAgICAgICBiYXR0bGVkOiBmYWxzZSxcbiAgICAgICAgICB4eTogeyB4OiA1NjAsIHk6IDE3NiB9LFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRTdXBlck1heWhlbVRhc2soKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLnN1cGVyTWF5aGVtLFxuICAgIG1heFRhc2tEdXJpbmc6IDkgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBjb25maWcuYXV0b1N1cGVyTWF5aGVtSW50ZXJ2YWxJbk1pbnMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRDRXMocmVjdDogUkVDVCk6IG51bWJlciB7XG4gIHZhciBpbWcgPSBnZXRTY3JlZW5zaG90KCk7XG4gIHZhciBjcm9wcGVkSW1hZ2UxID0gY3JvcEltYWdlKGltZywgcmVjdC54LCByZWN0LnksIHJlY3QudywgcmVjdC5oKTtcblxuICB2YXIgdmFsdWUxID0gK3JlY29nbml6ZVdpc2hpbmdUcmVlUmVxdWlyZW1lbnRzKElDT05TLm51bWJlckltYWdlc1B2UCwgY3JvcHBlZEltYWdlMSwgNywgMC43NSwgMC43KSB8fCAwO1xuXG4gIHJlbGVhc2VJbWFnZShjcm9wcGVkSW1hZ2UxKTtcbiAgcmVsZWFzZUltYWdlKGltZyk7XG4gIHJldHVybiB2YWx1ZTE7XG59XG4iLCJpbXBvcnQgeyBQYWdlLCBSRUNULCBVdGlscywgcmVyb3V0ZXIgfSBmcm9tICdSZXJvdXRlcic7XG5pbXBvcnQgeyBsb2dzLCBzZW5kRXZlbnRSdW5uaW5nLCBzZW5kS2V5QmFjayB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi4vdGFza3MnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vc2NyaXB0Q29uZmlnJztcbmltcG9ydCB7XG4gIGFzc2lnbixcbiAgZmluZFNwZWNpZmljSWNvbkluU2NyZWVuLFxuICBvY3JOdW1iZXJJblJlY3QsXG4gIG9jclN0b2NrQW5kUmVxSW5SZWN0LFxuICBvY3JTdG9ja3NJblJlY3QsXG4gIHBhc3NpdmVBZGRSb3V0ZSxcbiAgc2VuZENvdW50ZXIsXG4gIHN3aXBlRnJvbVRvUG9pbnQsXG59IGZyb20gJy4uL2hlbHBlcic7XG5pbXBvcnQgKiBhcyBJQ09OUyBmcm9tICcuLi9pY29ucyc7XG5pbXBvcnQgeyBQb2ludCwgU2Vhc2lkZU1hcmtldEl0ZW1UeXBlLCBzZWFzaWRlU3RvY2tSZWN0IH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VJblRyYWRlSGFib3IgPSBuZXcgUGFnZSgncmZwYWdlSW5UcmFkZUhhYm9yJywgW1xuICB7IHg6IDMxNCwgeTogMTgsIHI6IDI0NywgZzogMjU0LCBiOiAyMDMgfSxcbiAgeyB4OiA0MDQsIHk6IDIwLCByOiAyNDMsIGc6IDIzMiwgYjogMTIgfSxcbiAgeyB4OiA1MTksIHk6IDIxLCByOiAwLCBnOiAxNzgsIGI6IDI1NSB9LFxuICB7IHg6IDM0LCB5OiAyMjIsIHI6IDI1NSwgZzogMjM1LCBiOiAyMDYgfSxcbiAgLy8geyB4OiA5NiwgeTogMjI5LCByOiAxMzIsIGc6IDEyMCwgYjogMzIgfSwgIC8vIGdvdCBmcm9tIE1lbXVcbiAgeyB4OiAxMDYsIHk6IDIxOSwgcjogMjIwLCBnOiAxMTcsIGI6IDAgfSwgLy8gZ290IGZyb20gUmVkcm9pZFxuICB7IHg6IDYxMywgeTogMjYxLCByOiA1NywgZzogMTY2LCBiOiAyMzEgfSxcbl0pO1xuY29uc3QgcmZwYWdlU2hpcEluSGFib3IgPSBuZXcgUGFnZSgncmZwYWdlU2hpcEluSGFib3InLCBbXG4gIHsgeDogNDE4LCB5OiAyMTIsIHI6IDU1LCBnOiAzNCwgYjogMjIgfSxcbiAgeyB4OiA2MDksIHk6IDIxMSwgcjogMTc2LCBnOiAxMzMsIGI6IDY2IH0sXG4gIHsgeDogNTg1LCB5OiAyMjksIHI6IDEyMywgZzogNzgsIGI6IDQ0IH0sXG5dKTtcbmNvbnN0IHJmcGFnZU5vU2hpcEluSGFib3IgPSBuZXcgUGFnZSgncmZwYWdlTm9TaGlwSW5IYWJvcicsIFtcbiAgeyB4OiAyNDYsIHk6IDY2LCByOiAyNTUsIGc6IDEyLCBiOiA4MiB9LFxuICB7IHg6IDIzMywgeTogODgsIHI6IDI0OSwgZzogMjQyLCBiOiAyMTIgfSxcbiAgeyB4OiAyNTUsIHk6IDEzOCwgcjogMTI2LCBnOiAxMTQsIGI6IDQxIH0sXG5dKTtcbmNvbnN0IHJmcGFnZUNhbkxvYWRUaGlzSXRlbSA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ2FuTG9hZFRoaXNJdGVtJyxcbiAgW1xuICAgIHsgeDogNDI0LCB5OiAyMDEsIHI6IDU5LCBnOiAyMDUsIGI6IDAgfSxcbiAgICB7IHg6IDM1MSwgeTogMjQ2LCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgIHsgeDogNDE0LCB5OiAyNDIsIHI6IDIyMiwgZzogMjA3LCBiOiAxOTggfSxcbiAgICB7IHg6IDQzMywgeTogMzA5LCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICBdLFxuICB7IHg6IDQzNCwgeTogNTAgfVxuKTtcbmNvbnN0IHJmcGFnZUxvYWRUb29NdWNoV2FybmluZyA9IG5ldyBQYWdlKCdyZnBhZ2VMb2FkVG9vTXVjaFdhcm5pbmcnLCBbXG4gIHsgeDogNDAwLCB5OiAyNTIsIHI6IDEyMywgZzogMjA3LCBiOiA4IH0sXG4gIHsgeDogMzA0LCB5OiAyNTMsIHI6IDgsIGc6IDE2NiwgYjogMjIyIH0sXG4gIHsgeDogNDM2LCB5OiAyODgsIHI6IDI3LCBnOiAzMywgYjogNTEgfSxcbiAgeyB4OiAyNjAsIHk6IDU1LCByOiAyOCwgZzogMzQsIGI6IDUzIH0sXG5dKTtcbmNvbnN0IHJmcGFnZUluU2Vhc2lkZU1hcmtldCA9IG5ldyBQYWdlKCdyZnBhZ2VJblNlYXNpZGVNYXJrZXQnLCBbXG4gIHsgeDogNjE3LCB5OiAyMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDU2NiwgeTogMTgzLCByOiAxMTQsIGc6IDc2LCBiOiAzMiB9LFxuICB7IHg6IDI1NiwgeTogMTIxLCByOiAxMDEsIGc6IDE1MSwgYjogMjMgfSxcbiAgeyB4OiAyODAsIHk6IDUsIHI6IDIwNiwgZzogMjI3LCBiOiA0OSB9LFxuICB7IHg6IDE3OCwgeTogMTE3LCByOiAyNDcsIGc6IDUyLCBiOiA5MCB9LFxuXSk7XG5jb25zdCByZnBhZ2VGcmVlUmVmcmVzaFNlYXNpZGVNYXJrZXQgPSBuZXcgUGFnZSgncmZwYWdlRnJlZVJlZnJlc2hTZWFzaWRlTWFya2V0JywgW1xuICB7IHg6IDUxMCwgeTogMzMzLCByOiAxNTUsIGc6IDE1NSwgYjogMTU1IH0sXG4gIHsgeDogNTA0LCB5OiAzMzMsIHI6IDE3MiwgZzogMTQ2LCBiOiAxMjYgfSxcbiAgeyB4OiA0OTgsIHk6IDMzMywgcjogMTQ4LCBnOiAxMjAsIGI6IDExMSB9LFxuICB7IHg6IDQ5NCwgeTogMzMzLCByOiAxNzUsIGc6IDE0OCwgYjogMTE3IH0sXG5dKTtcbmNvbnN0IHJmcGFnZU5lZWREaWFtb25kUmVmcmVzaE1hcmtldCA9IG5ldyBQYWdlKFxuICAncmZwYWdlTmVlZERpYW1vbmRSZWZyZXNoTWFya2V0JyxcbiAgW1xuICAgIHsgeDogNDI2LCB5OiAxMTAsIHI6IDU3LCBnOiAxNjksIGI6IDIzMSB9LFxuICAgIHsgeDogMzA1LCB5OiAxMDIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM2MywgeTogMTE4LCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogMjk3LCB5OiAxMjQsIHI6IDMzLCBnOiA0NCwgYjogNjYgfSxcbiAgXSxcbiAgeyB4OiA0MjYsIHk6IDExMCB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZU1hcmtldEl0ZW1EZXRhaWwgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZU1hcmtldEl0ZW1EZXRhaWwnLFxuICBbXG4gICAgeyB4OiAzODQsIHk6IDI2MSwgcjogMjA1LCBnOiAxOTQsIGI6IDE4NiB9LFxuICAgIHsgeDogMzc2LCB5OiAyMzYsIHI6IDIyMiwgZzogMjA3LCBiOiAxOTggfSxcbiAgICB7IHg6IDM3OCwgeTogMjA0LCByOiAyNDcsIGc6IDIzNSwgYjogMjIyIH0sXG4gICAgeyB4OiAzNjYsIHk6IDg0LCByOiA1NywgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogNDQ3LCB5OiA4NywgcjogNTcsIGc6IDE3MCwgYjogMjMxIH0sXG4gICAgeyB4OiAyNjEsIHk6IDE1LCByOiAxMDMsIGc6IDExMywgYjogMjQgfSxcbiAgICB7IHg6IDIxNCwgeTogNTEsIHI6IDkwLCBnOiA1OSwgYjogMzMgfSxcbiAgXSxcbiAgeyB4OiAzNDgsIHk6IDI2NSB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZU5vdEVub3VnaEl0ZW1Ub0J1eVRoaXMgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZU5vdEVub3VnaEl0ZW1Ub0J1eVRoaXMnLFxuICBbXG4gICAgeyB4OiA0NDEsIHk6IDk1LCByOiAxODEsIGc6IDE5OCwgYjogMjA5IH0sXG4gICAgeyB4OiAzNzgsIHk6IDEwOCwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDM0MCwgeTogMTU5LCByOiA5LCBnOiA2NywgYjogODYgfSxcbiAgICB7IHg6IDQyOSwgeTogMTMyLCByOiAyNDcsIGc6IDIzNSwgYjogMjIyIH0sXG4gICAgeyB4OiA0NDcsIHk6IDEyNiwgcjogMTI3LCBnOiAxMjEsIGI6IDEyMyB9LFxuICAgIHsgeDogMjk4LCB5OiA3LCByOiAxMDksIGc6IDExNiwgYjogMjggfSxcbiAgICB7IHg6IDEwNSwgeTogMjYsIHI6IDgsIGc6IDQ4LCBiOiAyOCB9LFxuICAgIHsgeDogNTg1LCB5OiA4NywgcjogMTE5LCBnOiAxMjUsIGI6IDExOSB9LFxuICBdLFxuICB7IHg6IDQzNCwgeTogOTUgfVxuKTtcbmNvbnN0IHJmcGFnZUluU2hlbGxTaG9wID0gbmV3IFBhZ2UoJ3JmcGFnZUluU2hlbGxTaG9wJywgW1xuICB7IHg6IDYwOSwgeTogMjIsIHI6IDU3LCBnOiAxNjYsIGI6IDIzMSB9LFxuICB7IHg6IDMyMywgeTogMjgsIHI6IDI0NywgZzogMTgxLCBiOiAyNDMgfSxcbiAgeyB4OiAyNzIsIHk6IDI4LCByOiAyMDAsIGc6IDIxMiwgYjogMjE0IH0sXG4gIHsgeDogMjU0LCB5OiAxMiwgcjogMjMxLCBnOiAxOTksIGI6IDE1NiB9LFxuXSk7XG5cbmV4cG9ydCBjb25zdCByZnBhZ2VDb25maXJtQnV5TGVnZW5kU291bFN0b25lID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VDb25maXJtQnV5TGVnZW5kU291bFN0b25lJyxcbiAgW1xuICAgIHsgeDogMTU0LCB5OiAzMTUsIHI6IDYwLCBnOiAxMDMsIGI6IDYgfSxcbiAgICB7IHg6IDg5LCB5OiAzMTQsIHI6IDEyNCwgZzogOTQsIGI6IDExOSB9LFxuICAgIHsgeDogMjQ1LCB5OiA4NiwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDIzNSwgeTogMjQyLCByOiAyMjIsIGc6IDIwNywgYjogMTk4IH0sXG4gICAgeyB4OiAzMTgsIHk6IDE1LCByOiAxMjUsIGc6IDEwMywgYjogMTE3IH0sXG4gICAgeyB4OiA0MTAsIHk6IDE5LCByOiAxMjcsIGc6IDk1LCBiOiA0IH0sXG4gICAgeyB4OiAyODcsIHk6IDE2LCByOiAxMTksIGc6IDExMSwgYjogMTE3IH0sXG4gICAgeyB4OiAyNzEsIHk6IDMwLCByOiA5OSwgZzogMTA1LCBiOiAxMDMgfSxcbiAgICB7IHg6IDMzNCwgeTogMjYwLCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgXSxcbiAgeyB4OiAzMzQsIHk6IDI2MCB9XG4pO1xuZXhwb3J0IGNvbnN0IHJmcGFnZUNvbmZpcm1CdXlHdWlsZFJlbGljcyA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ29uZmlybUJ1eUd1aWxkUmVsaWNzJyxcbiAgW1xuICAgIHsgeDogMzM3LCB5OiA2NywgcjogMTU1LCBnOiA5NSwgYjogNDMgfSxcbiAgICB7IHg6IDMyNSwgeTogNzcsIHI6IDIwNywgZzogMTIyLCBiOiA2NCB9LFxuICAgIHsgeDogMzE5LCB5OiAxOCwgcjogMTIxLCBnOiA5NywgYjogMTE4IH0sXG4gICAgeyB4OiAzNjksIHk6IDg5LCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgIHsgeDogMzYyLCB5OiAzMTgsIHI6IDExMywgZzogMTE3LCBiOiAxMTEgfSxcbiAgICB7IHg6IDQyNCwgeTogMzE3LCByOiA2MCwgZzogMTAzLCBiOiA2IH0sXG4gICAgeyB4OiAzNjQsIHk6IDg0LCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICBdLFxuICB7IHg6IDMxOSwgeTogMjM2IH1cbik7XG5jb25zdCByZnBhZ2VDb25maXJtQnV5TGVnZW5kU291bEVzc2VuY2UgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUNvbmZpcm1CdXlMZWdlbmRTb3VsRXNzZW5jZScsXG4gIFtcbiAgICB7IHg6IDM0NCwgeTogMjU1LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgICB7IHg6IDMwNywgeTogMjYxLCByOiAyNDksIGc6IDE4OSwgYjogMjM4IH0sXG4gICAgeyB4OiAzMzAsIHk6IDc3LCByOiAyNDksIGc6IDI0OSwgYjogMjQ5IH0sXG4gICAgeyB4OiAzMjEsIHk6IDk1LCByOiAyMTgsIGc6IDE4MiwgYjogMjM1IH0sXG4gICAgeyB4OiAyNzUsIHk6IDg0LCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICAgIHsgeDogMzE3LCB5OiAxOSwgcjogMTI0LCBnOiAxMTQsIGI6IDEwNyB9LFxuICBdLFxuICB7IHg6IDMwMiwgeTogMjU0IH1cbik7XG5leHBvcnQgY29uc3QgcmZwYWdlQ29uZmlybUJ1eUVwaWNTb3VsRXNzZW5jZSA9IG5ldyBQYWdlKFxuICAncmZwYWdlQ29uZmlybUJ1eUVwaWNTb3VsRXNzZW5jZScsXG4gIFtcbiAgICB7IHg6IDMyNiwgeTogMTg0LCByOiAyMjgsIGc6IDIxOCwgYjogMjA5IH0sXG4gICAgeyB4OiAzMTIsIHk6IDI2MywgcjogMjAyLCBnOiAyMDIsIGI6IDIyNCB9LFxuICAgIHsgeDogMzUzLCB5OiAyNTUsIHI6IDExMywgZzogMTk0LCBiOiAxMSB9LFxuICAgIHsgeDogMzI3LCB5OiA4MSwgcjogMjM5LCBnOiAyMDcsIGI6IDIzMyB9LFxuICAgIHsgeDogMzIwLCB5OiA5MSwgcjogMjM5LCBnOiAzMiwgYjogMTU5IH0sXG4gICAgeyB4OiAzNDUsIHk6IDkyLCByOiAzNCwgZzogNDMsIGI6IDYwIH0sXG4gIF0sXG4gIHsgeDogMzEyLCB5OiAyNTMgfVxuKTtcbmV4cG9ydCBjb25zdCByZnBhZ2VTaGVsbFNob3BOb3RFbm91Z2hTaGVsbCA9IG5ldyBQYWdlKCdyZnBhZ2VTaGVsbFNob3BOb3RFbm91Z2hTaGVsbCcsIFtcbiAgeyB4OiAzNTEsIHk6IDI0MywgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gIHsgeDogMzIwLCB5OiAxODAsIHI6IDI0NiwgZzogMjAwLCBiOiAyMjkgfSxcbiAgeyB4OiAzMjcsIHk6IDE5NCwgcjogMjQ4LCBnOiAxODAsIGI6IDI0MyB9LFxuICB7IHg6IDMzNywgeTogMTgzLCByOiAyMDcsIGc6IDE5MywgYjogMTgyIH0sXG4gIHsgeDogMzQyLCB5OiAxNTgsIHI6IDUyLCBnOiAxNTgsIGI6IDIyOCB9LFxuICB7IHg6IDMxOCwgeTogMTA3LCByOiA2MCwgZzogNzAsIGI6IDEwNSB9LFxuICB7IHg6IDI3MSwgeTogMzIsIHI6IDEwMiwgZzogMTAzLCBiOiA5NSB9LFxuICB7IHg6IDI1NywgeTogMTQsIHI6IDExMywgZzogOTgsIGI6IDc2IH0sXG4gIHsgeDogMzgsIHk6IDcsIHI6IDEwOSwgZzogNzgsIGI6IDk0IH0sXG5dKTtcblxubGV0IHNlYXNpZGVNYXJrZXRTdGF0dXMgPSB7XG4gIG5lZWRQdWxsVG9SaWdodEhlYWQ6IHRydWUsXG4gIHJhcmVJdGVtczogW10gYXMgUkVDVFtdLFxuICByaWdodFNsaWRlQ291bnQ6IDAsXG4gIHJpZ2h0U2xpZGVMaW1pdDogY29uZmlnLmF1dG9TaG9wSW5TZWFzaWRlTWFya2V0ID8gNSA6IDAsXG4gIG5lZWRUb0J1eVJhZGlhbnRTaGFyZDogY29uZmlnLmF1dG9CdXlSYWRpYW50U2hhcmRzSW5IYWJvcixcbiAgcHVyY2hhc2VJbmRleDogMCxcbiAgZm91bmRSZXN1bHRzOiB1bmRlZmluZWQgYXMgUG9pbnRbXSB8IHVuZGVmaW5lZCxcbiAgZm91bmRJbmRleDogMCxcbiAgbm93SGF2ZTogMCxcbn07XG5pZiAoY29uZmlnLmF1dG9CYWxhbmNlQXVyb3JhU3RvY2tzKSB7XG4gIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLnB1c2goc2Vhc2lkZVN0b2NrUmVjdFswXSk7XG4gIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLnB1c2goc2Vhc2lkZVN0b2NrUmVjdFsxXSk7XG4gIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLnB1c2goc2Vhc2lkZVN0b2NrUmVjdFsyXSk7XG59XG5pZiAoY29uZmlnLmF1dG9CdXlDYXJhbWVsU3R1ZmYpIHtcbiAgc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMucHVzaChzZWFzaWRlU3RvY2tSZWN0WzNdKTtcbiAgc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMucHVzaChzZWFzaWRlU3RvY2tSZWN0WzRdKTtcbn1cblxubGV0IHNoZWxsR2FsbGVyeVN0YXR1cyA9IHtcbiAgYXV0b0J1eVNlYUZhaXJ5OiBjb25maWcuYXV0b0J1eVNlYUZhaXJ5LFxuICBhdXRvQnV5RXBpY1NvdWxFc3NlbmNlOiBjb25maWcuYXV0b0J1eUVwaWNTb3VsRXNzZW5jZSxcbiAgYXV0b0J1eUxlZ2VuZFNvdWxFc3NlbmNlOiBjb25maWcuYXV0b0J1eUxlZ2VuZFNvdWxFc3NlbmNlLFxuICBhdXRvQnV5R3VpbGRSZWxpYzogY29uZmlnLmF1dG9CdXlHdWlsZFJlbGljLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFRyYWRlSGFib3JSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5UcmFkZUhhYm9yLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlSW5UcmFkZUhhYm9yLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lID09PSBUQVNLUy5maW5kQW5kVGFwQ2FuZHkpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUluVHJhZGVIYWJvciwgYnV0IGN1cnJlbnQgdGFzayBpcyAke2NvbnRleHQudGFzay5uYW1lfSwgbmVlZCB0byBzdGFydCBvdmVyYCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIC8vIFRPRE86IGlmIGZpbmRBbmRUYXBDYW5keSBtb3ZlZCwgbmVlZCB0byBjaGFuZ2VkXG4gICAgICAgIC8vIGNvb2tpZUtpbmdkb20hLnRhc2tTdGF0dXNbVEFTS1MuZmluZEFuZFRhcENhbmR5XVsnbmVlZEdvdG9IZWFkJ10gPSB0cnVlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2UgaWYgKGNvbnRleHQudGFzay5uYW1lLnN1YnN0cmluZygwLCA1KSAhPT0gJ2hhYm9yJykge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5UcmFkZUhhYm9yLCBidXQgY3VycmVudCB0YXNrIGlzICR7Y29udGV4dC50YXNrLm5hbWV9LCBza2lwcGluZ2ApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJblRyYWRlSGFib3JgKTtcblxuICAgICAgc3dpdGNoIChjb250ZXh0LnRhc2submFtZSkge1xuICAgICAgICBjYXNlIFRBU0tTLmhhYm9yU2VuZFNoaXA6XG4gICAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlTm9TaGlwSW5IYWJvciwgaW1hZ2UpKSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgTm8gc2hpcCBpbiBoYWJvciwgZmluaXNoICR7Y29udGV4dC50YXNrLm5hbWV9YCk7XG4gICAgICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgICAgdmFyIHNoaXBJbkhhYm9yID0gdHJ1ZTtcbiAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgNSAmJiBzaGlwSW5IYWJvcjsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciB4UGl4ZWwgPSBpID09PSAwID8gNTUgOiAyMDA7IHhQaXhlbCA8IDYyMDsgeFBpeGVsICs9IDYwKSB7XG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiB4UGl4ZWwsIHk6IDMxOCB9KTtcbiAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSAqIDIpO1xuXG4gICAgICAgICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VDYW5Mb2FkVGhpc0l0ZW0pKSB7XG4gICAgICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGNhbiBsb2FkIHRoZSBpdGVtIGF0IHg6ICR7eFBpeGVsfWApO1xuICAgICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA0MDgsIHk6IDIwMiB9KTsgLy8gdGFwIE1heFxuICAgICAgICAgICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcCk7XG5cbiAgICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzQyLCB5OiAyNDAgfSk7IC8vIHRhcCBsb2FkXG4gICAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUxvYWRUb29NdWNoV2FybmluZykpIHtcbiAgICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjcwLCB5OiAyNTIgfSk7IC8vIENhbmNlbCBzaGlwIGNvbmZpcm1cbiAgICAgICAgICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjcwLCB5OiAyMDAgfSk7IC8vIHRhcCBtaW51cyBpY29uXG4gICAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMyMCwgeTogMjQwIH0pOyAvLyB0YXAgbG9hZFxuICAgICAgICAgICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VMb2FkVG9vTXVjaFdhcm5pbmcpKSB7XG4gICAgICAgICAgICAgICAgLy9FdmVuIG9uZSBpdGVtIGlzIHRvbyBtdWNoXG4gICAgICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDI3MCwgeTogMjUyIH0pOyAvLyBDYW5jZWwgc2hpcCBjb25maXJtXG4gICAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDQzNCwgeTogNTAgfSk7IC8vIHRhcCBjbG9zZSBpY29uXG4gICAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMyMCwgeTogMjQwIH0pOyAvLyB0YXAgbG9hZFxuICAgICAgICAgICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZU5vU2hpcEluSGFib3IsIDMwMDApKSB7XG4gICAgICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYFNlbmQgdGhlIHNoaXAgc3VjY2Vzc2Z1bGx5YCk7XG4gICAgICAgICAgICAgICAgc2hpcEluSGFib3IgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlTm9TaGlwSW5IYWJvcikpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzd2lwZUZyb21Ub1BvaW50KHsgeDogNjI5LCB5OiAzMTkgfSwgeyB4OiAyMDAsIHk6IDMxOSB9LCA1KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNhc2UgVEFTS1MuaGFib3JTaG9wSW5TZWFNYXJrZXQ6XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDk1LCB5OiAyMzAgfSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjYXNlIFRBU0tTLmhhYm9yU2hvcEluU2hlbGxHYWxsZXJ5OlxuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAzMiwgeTogMjI2IH0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBjb25zb2xlLmxvZygnZG9ubm8gd2hhdCB0byBkbyBpbiByZnBhZ2VJblRyYWRlSGFib3IsIHNlbmQgYmFjaycpO1xuICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5TZWFzaWRlTWFya2V0Lm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlSW5TZWFzaWRlTWFya2V0LFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5oYWJvclNob3BJblNlYU1hcmtldCkge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgcmZwYWdlSW5TZWFzaWRlTWFya2V0LCBidXQgY3VycmVudCB0YXNrIGlzICR7Y29udGV4dC50YXNrLm5hbWV9LCBza2lwcGluZ2ApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBJbiBzZWFzaWRlIG1hcmtldGluZywgc2VuZCBydW5uaW5nLCB0YXNrIHN0YXR1cyBpczogJHtKU09OLnN0cmluZ2lmeShzZWFzaWRlTWFya2V0U3RhdHVzKX1gKTtcbiAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcblxuICAgICAgY29uc3QgbWFya2V0U2VhcmNoQXJlYSA9IHsgeDogMCwgeTogMTgwLCB3OiA2MzAsIGg6IDE0MCB9O1xuICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUZyZWVSZWZyZXNoU2Vhc2lkZU1hcmtldCkpIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU0MywgeTogMzM2IH0pOyAvLyBtYXJrZXQgZnJlZSByZWZyZXNoLCBubyBuZWVkIHRvIHB1bGwgdG8gdGhlIGhlYWQgb2YgdGhlIGxpc3QgYXMgcmVmcmVzaCB3aWxsIHJlc2V0IHRoZSBsaXN0XG4gICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuXG4gICAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZU5lZWREaWFtb25kUmVmcmVzaE1hcmtldCwgMzAwMCkpIHtcbiAgICAgICAgICByZXJvdXRlci5nb05leHQocmZwYWdlTmVlZERpYW1vbmRSZWZyZXNoTWFya2V0KTtcbiAgICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChzZWFzaWRlTWFya2V0U3RhdHVzLm5lZWRQdWxsVG9SaWdodEhlYWQpIHtcbiAgICAgICAgLy8gc3dpcGUgdG8gc3RhcnQgb2YgdGhlIGxpc3RcbiAgICAgICAgc3dpcGVGcm9tVG9Qb2ludCh7IHg6IDAsIHk6IDIzNCB9LCB7IHg6IDQwMDAsIHk6IDIzNCB9LCA2LCB1bmRlZmluZWQsIHJmcGFnZUluU2Vhc2lkZU1hcmtldCk7XG4gICAgICAgIHNlYXNpZGVNYXJrZXRTdGF0dXMubmVlZFB1bGxUb1JpZ2h0SGVhZCA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZnBhZ2Uxc3RBdXJvcmFTb2xkT3V0ID0gbmV3IFBhZ2UoJ3JmcGFnZTFzdEF1cm9yYVNvbGRPdXQnLCBbeyB4OiA1OSwgeTogMjYyLCByOiAyMDYsIGc6IDIwLCBiOiAyNCB9XSk7XG4gICAgICBjb25zdCByZnBhZ2UybmRBdXJvcmFTb2xkT3V0ID0gbmV3IFBhZ2UoJ3JmcGFnZTJuZEF1cm9yYVNvbGRPdXQnLCBbeyB4OiAxNTAsIHk6IDI1NywgcjogMjM5LCBnOiAyNCwgYjogMjQgfV0pO1xuICAgICAgY29uc3QgcmZwYWdlM3JkQXVyb3JhU29sZE91dCA9IG5ldyBQYWdlKCdyZnBhZ2UzcmRBdXJvcmFTb2xkT3V0JywgW3sgeDogMjQ3LCB5OiAyNjAsIHI6IDIwNiwgZzogMjAsIGI6IDI0IH1dKTtcbiAgICAgIGNvbnN0IHJmcGFnZUNhcm1lbE1hcE1heCA9IG5ldyBQYWdlKCdyZnBhZ2VDYXJtZWxNYXBNYXgnLCBbXG4gICAgICAgIHsgeDogMzM5LCB5OiAyOTEsIHI6IDE5NiwgZzogMTMwLCBiOiA3MiB9LFxuICAgICAgICB7IHg6IDMzMywgeTogMjg5LCByOiAxNTcsIGc6IDkxLCBiOiAzNiB9LFxuICAgICAgICB7IHg6IDMyNCwgeTogMjk0LCByOiAxNDgsIGc6IDIxOSwgYjogNTcgfSxcbiAgICAgIF0pO1xuICAgICAgY29uc3QgcmZwYWdlQ2FybWVTY29wZU1heCA9IG5ldyBQYWdlKCdyZnBhZ2VDYXJtZVNjb3BlTWF4JywgW1xuICAgICAgICB7IHg6IDQzMSwgeTogMjkxLCByOiAyNTUsIGc6IDE2NiwgYjogNzMgfSxcbiAgICAgICAgeyB4OiA0MjMsIHk6IDI5NiwgcjogMTM4LCBnOiAxOTksIGI6IDE3OCB9LFxuICAgICAgICB7IHg6IDQxNiwgeTogMjk0LCByOiAxNDgsIGc6IDIxNSwgYjogNTcgfSxcbiAgICAgIF0pO1xuXG4gICAgICAvLyBSZW1vdmUgc29sZCBvdXQgYXVyb3JhIGl0ZW1zXG4gICAgICAvLyBUT0RPOiBkb3VibGUgY29uZmlybVxuICAgICAgaWYgKGNvbmZpZy5hdXRvQmFsYW5jZUF1cm9yYVN0b2NrcyAmJiBzZWFzaWRlTWFya2V0U3RhdHVzLnJhcmVJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHJmcGFnZTFzdEF1cm9yYVNvbGRPdXQsIGltYWdlKSkge1xuICAgICAgICAgIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zID0gc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMuZmlsdGVyKChvYmo6IFJFQ1QpID0+IG9iai54ICE9PSA2Nik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlMm5kQXVyb3JhU29sZE91dCwgaW1hZ2UpKSB7XG4gICAgICAgICAgc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMgPSBzZWFzaWRlTWFya2V0U3RhdHVzLnJhcmVJdGVtcy5maWx0ZXIoKG9iajogUkVDVCkgPT4gb2JqLnggIT09IDE1OCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlM3JkQXVyb3JhU29sZE91dCwgaW1hZ2UpKSB7XG4gICAgICAgICAgc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMgPSBzZWFzaWRlTWFya2V0U3RhdHVzLnJhcmVJdGVtcy5maWx0ZXIoKG9iajogUkVDVCkgPT4gb2JqLnggIT09IDI1Myk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gTWFya2V0IHdpbGwgcmVtb3ZlIENhcm1lbCBtYXAvc2NvcGUgYmFjayBmcm9tIHRoZSBzaG9wcGluZyBsaXN0IGlmIGl0IGlzIGZ1bGxlZFxuICAgICAgaWYgKGNvbmZpZy5hdXRvQnV5Q2FyYW1lbFN0dWZmICYmIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlQ2FybWVsTWFwTWF4LCBpbWFnZSkpIHtcbiAgICAgICAgICAvLyBzZWFtYXJrZXRTdGF0ZS5yYXJlSXRlbXMgPSBzZWFtYXJrZXRTdGF0ZS5yYXJlSXRlbXMuZmlsdGVyKG9iaiA9PiBvYmoueCAhPT0gMzQ2KTtcbiAgICAgICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLnJhcmVJdGVtcyA9IHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLmZpbHRlcigob2JqOiBSRUNUKSA9PiBvYmoueCAhPT0gMzQ2KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZnBhZ2VDYXJtZVNjb3BlTWF4LCBpbWFnZSkpIHtcbiAgICAgICAgICAvLyBzZWFtYXJrZXRTdGF0ZS5yYXJlSXRlbXMgPSBzZWFtYXJrZXRTdGF0ZS5yYXJlSXRlbXMuZmlsdGVyKG9iaiA9PiBvYmoueCAhPT0gNDM5KTtcbiAgICAgICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLnJhcmVJdGVtcyA9IHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLmZpbHRlcigob2JqOiBSRUNUKSA9PiBvYmoueCAhPT0gNDM5KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zb2xlLmxvZygnPj4gY29uc2lkZXJQdXJjaGFzZVNlYXNpZGVNYXJrZXQ6JywgY29uc2lkZXJQdXJjaGFzZVNlYXNpZGVNYXJrZXQoc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMuc2hpZnQoKSEpKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHNlYXNpZGVNYXJrZXRTdGF0dXMubmVlZFRvQnV5UmFkaWFudFNoYXJkKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsICdQdXJjaGFzaW5nIHJhZGlhbnQgc2hhcmQnKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU0MCwgeTogMjcwIH0pO1xuICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMxNSwgeTogMjY1IH0pO1xuICAgICAgICBVdGlscy5zbGVlcCgyMDAwKTtcbiAgICAgICAgc2Vhc2lkZU1hcmtldFN0YXR1cy5uZWVkVG9CdXlSYWRpYW50U2hhcmQgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gZm9yIGkgPSByaWdodFNsaWRlQ291bnQgPCByaWdodFNsaWRlTGltaXRcbiAgICAgIC8vIGZvciBqID0gcHVyY2hhc2VJbmRleCA8IE9iamVjdC5rZXlzKElDT05TLmljb25TZWFzaWRlTWFya2V0SXRlbXMpXG4gICAgICAvLyBmb3IgayA9IGZvdW5kSW5kZXggPCBPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpXG4gICAgICBjb25zb2xlLmxvZygnPj4gMSwgY29uc2lkZXIgc2xpZGUgdG8gcmlnaHQnLCBKU09OLnN0cmluZ2lmeShzZWFzaWRlTWFya2V0U3RhdHVzKSk7XG4gICAgICBpZiAoc2Vhc2lkZU1hcmtldFN0YXR1cy5yaWdodFNsaWRlQ291bnQgPj0gc2Vhc2lkZU1hcmtldFN0YXR1cy5yaWdodFNsaWRlTGltaXQpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYEpvYnMgZmluaXNoYCk7XG4gICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zb2xlLmxvZygnPj4gMiwgbG9vcCB0aHJvdWdoIHNob3BwaW5nIGxpc3QnLCBKU09OLnN0cmluZ2lmeShzZWFzaWRlTWFya2V0U3RhdHVzKSk7XG4gICAgICBpZiAoc2Vhc2lkZU1hcmtldFN0YXR1cy5wdXJjaGFzZUluZGV4ID49IE9iamVjdC5rZXlzKElDT05TLmljb25TZWFzaWRlTWFya2V0SXRlbXMpLmxlbmd0aCkge1xuICAgICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLnJpZ2h0U2xpZGVDb3VudCsrO1xuICAgICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLnB1cmNoYXNlSW5kZXggPSAwO1xuICAgICAgICBzd2lwZUZyb21Ub1BvaW50KHsgeDogNjAwLCB5OiAyMzQgfSwgeyB4OiAwLCB5OiAyMzQgfSwgNiwgdW5kZWZpbmVkLCByZnBhZ2VJblNlYXNpZGVNYXJrZXQpO1xuICAgICAgICBzbGVlcCgyMDAwKTtcbiAgICAgICAgc2Vhc2lkZU1hcmtldFN0YXR1cy5mb3VuZFJlc3VsdHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJz4+IDMsIGdvIGZpbmQgbmV4dCBpdGVtIGFzIHNlYXNpZGVNYXJrZXRTdGF0dXMuZm91bmRSZXN1bHRzIGZpbmlzaGVkJywgSlNPTi5zdHJpbmdpZnkoc2Vhc2lkZU1hcmtldFN0YXR1cykpO1xuICAgICAgaWYgKHNlYXNpZGVNYXJrZXRTdGF0dXMuZm91bmRSZXN1bHRzICYmIHNlYXNpZGVNYXJrZXRTdGF0dXMuZm91bmRJbmRleCA+PSBPYmplY3Qua2V5cyhzZWFzaWRlTWFya2V0U3RhdHVzLmZvdW5kUmVzdWx0cykubGVuZ3RoKSB7XG4gICAgICAgIHNlYXNpZGVNYXJrZXRTdGF0dXMucHVyY2hhc2VJbmRleCsrO1xuICAgICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLmZvdW5kUmVzdWx0cyA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2Vhc2lkZU1hcmtldFN0YXR1cy5mb3VuZFJlc3VsdHMgPT09IHVuZGVmaW5lZCB8fCBPYmplY3Qua2V5cyhzZWFzaWRlTWFya2V0U3RhdHVzLmZvdW5kUmVzdWx0cykubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCc+PiAzLjEsIGxvb2sgZm9yIG5leHQgaXRlbSBpbiBzaG9wcGluZyBsaXN0JywgSlNPTi5zdHJpbmdpZnkoc2Vhc2lkZU1hcmtldFN0YXR1cykpO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSBzZWFzaWRlTWFya2V0U3RhdHVzLnB1cmNoYXNlSW5kZXg7IGkgPCBPYmplY3Qua2V5cyhJQ09OUy5pY29uU2Vhc2lkZU1hcmtldEl0ZW1zKS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCc+PiAzLjIsIGNoZWNraW5nIGl0ZW06ICcsIGksIEpTT04uc3RyaW5naWZ5KHNlYXNpZGVNYXJrZXRTdGF0dXMpKTtcbiAgICAgICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLmZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uU2Vhc2lkZU1hcmtldEl0ZW1zW2ldLCBtYXJrZXRTZWFyY2hBcmVhKTtcbiAgICAgICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLmZvdW5kSW5kZXggPSAwO1xuICAgICAgICAgIHNlYXNpZGVNYXJrZXRTdGF0dXMucHVyY2hhc2VJbmRleCA9IGk7XG5cbiAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoc2Vhc2lkZU1hcmtldFN0YXR1cy5mb3VuZFJlc3VsdHMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCc+PiAzLjMgZm91bmQgaXRoIGl0ZW0nLCBKU09OLnN0cmluZ2lmeShzZWFzaWRlTWFya2V0U3RhdHVzKSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKHNlYXNpZGVNYXJrZXRTdGF0dXMuZm91bmRSZXN1bHRzISkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICBgPj4gNCBjb25zaWRlciB0byBwdXJjaGFzZSAke0lDT05TLmljb25TZWFzaWRlTWFya2V0SXRlbXNbc2Vhc2lkZU1hcmtldFN0YXR1cy5wdXJjaGFzZUluZGV4XS5uYW1lfSwgc3RhdGU6ICR7SlNPTi5zdHJpbmdpZnkoXG4gICAgICAgICAgc2Vhc2lkZU1hcmtldFN0YXR1c1xuICAgICAgICApfSwgcmVzdWx0OiAke2NvbnNpZGVyUHVyY2hhc2VTZWFzaWRlTWFya2V0KHtcbiAgICAgICAgICB4OiBtYXJrZXRTZWFyY2hBcmVhLnggKyBzZWFzaWRlTWFya2V0U3RhdHVzLmZvdW5kUmVzdWx0cyFbc2Vhc2lkZU1hcmtldFN0YXR1cy5mb3VuZEluZGV4XS54LFxuICAgICAgICAgIHk6IDI4MixcbiAgICAgICAgICB3OiA2MixcbiAgICAgICAgICBoOiAxOCxcbiAgICAgICAgfSl9YFxuICAgICAgKTtcblxuICAgICAgc2xlZXAoMTAwMCk7XG4gICAgICBzZWFzaWRlTWFya2V0U3RhdHVzLmZvdW5kSW5kZXgrKztcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VNYXJrZXRJdGVtRGV0YWlsLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlTWFya2V0SXRlbURldGFpbCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZS5zdWJzdHJpbmcoMCwgNSkgIT09ICdoYWJvcicpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUluU2Vhc2lkZU1hcmtldCwgYnV0IGN1cnJlbnQgdGFzayBpcyAke2NvbnRleHQudGFzay5uYW1lfSwgc2tpcHBpbmdgKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaW4gcmZwYWdlTWFya2V0SXRlbURldGFpbCwgaGFuZGxlIGl0YCk7XG5cbiAgICAgIC8vIOiugOmAmeWAi+adseilv+ePvuWcqOacieWkmuWwkVxuICAgICAgbGV0IHRhcmdldEl0ZW1BbW91bnQgPSBvY3JOdW1iZXJJblJlY3QoeyB4OiAzMzAsIHk6IDE1NCwgdzogMjgsIGg6IDE0IH0sIElDT05TLmJOdW1iZXJzKTtcbiAgICAgIGlmICh0YXJnZXRJdGVtQW1vdW50ID09PSAtMSkge1xuICAgICAgICBsb2dzKFxuICAgICAgICAgIGNvbnRleHQudGFzay5uYW1lLFxuICAgICAgICAgIGBBYm91dCB0byBwdXJjaGFzZSAke0lDT05TLmljb25TZWFzaWRlTWFya2V0SXRlbXNbc2Vhc2lkZU1hcmtldFN0YXR1cy5wdXJjaGFzZUluZGV4XS5uYW1lfSBidXQgZm91bmQgJHt0YXJnZXRJdGVtQW1vdW50fSAoT0NSIGZhaWx1cmUpLCBza2lwIHRoaXMgb25lYFxuICAgICAgICApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgfVxuXG4gICAgICAvLyDoiIfmiYvkuIrnm7jmr5RcbiAgICAgIGNvbnN0IGl0ZW1UeXBlID0gY2hlY2tJZk5lZWRTa2lwVGhpc1NwZWNpYWxJdGVtcygpO1xuICAgICAgbG9ncygncmZwYWdlTWFya2V0SXRlbURldGFpbCcsIGBDb25zaWRlcmluZyB0cmFkZSAke3NlYXNpZGVNYXJrZXRTdGF0dXMubm93SGF2ZX0gKHR5cGUgJyR7aXRlbVR5cGV9JykgZm9yICR7dGFyZ2V0SXRlbUFtb3VudH1gKTtcblxuICAgICAgaWYgKGl0ZW1UeXBlID09PSBTZWFzaWRlTWFya2V0SXRlbVR5cGUubXVzdFNraXApIHtcbiAgICAgICAgbG9ncygncmZwYWdlTWFya2V0SXRlbURldGFpbCcsIGBUaGUgcmVxdWlyZWQgaXRlbSBpcyBhIFNlYXNpZGVNYXJrZXRJdGVtVHlwZS5tdXN0U2tpcCwgc2tpcCB0aGlzIG9uZWApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2UgaWYgKGl0ZW1UeXBlID09PSBTZWFzaWRlTWFya2V0SXRlbVR5cGUuY29tcGFyZUFtb3VudCkge1xuICAgICAgICBpZiAoc2Vhc2lkZU1hcmtldFN0YXR1cy5ub3dIYXZlID4gdGFyZ2V0SXRlbUFtb3VudCkge1xuICAgICAgICAgIGxvZ3MoJ3JmcGFnZU1hcmtldEl0ZW1EZXRhaWwnLCBgRGVjaWRlZCB0byB1c2UgJHtzZWFzaWRlTWFya2V0U3RhdHVzLm5vd0hhdmV9IHRvIGJ1eSAke3RhcmdldEl0ZW1BbW91bnR9YCk7XG4gICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZU1hcmtldEl0ZW1EZXRhaWwpO1xuICAgICAgICAgIHNsZWVwKDEwMDApO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsb2dzKCdyZnBhZ2VNYXJrZXRJdGVtRGV0YWlsJywgYERlY2lkZWQgTk9UIHRvIHVzZSAke3NlYXNpZGVNYXJrZXRTdGF0dXMubm93SGF2ZX0gdG8gYnV5ICR7dGFyZ2V0SXRlbUFtb3VudH1gKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNDM4LCB5OiA5MCB9KTsgLy8gY2xvc2UgdGhlIHdpbmRvd1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChpdGVtVHlwZSA9PT0gU2Vhc2lkZU1hcmtldEl0ZW1UeXBlLmJ1eUFueXdheSkge1xuICAgICAgICBsb2dzKCdyZnBhZ2VNYXJrZXRJdGVtRGV0YWlsJywgYERlY2lkZWQgdG8gdXNlICR7c2Vhc2lkZU1hcmtldFN0YXR1cy5ub3dIYXZlfSB0byBidXkgJHt0YXJnZXRJdGVtQW1vdW50fSAoYnV5QW55d2F5KWApO1xuICAgICAgICByZXJvdXRlci5nb05leHQocmZwYWdlTWFya2V0SXRlbURldGFpbCk7XG4gICAgICAgIHNsZWVwKDEwMDApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgRG9uJ3QgZG8gYW55dGhpbmcgYXMgY2Fubm90IHJlc29sdmUgaXRlbVR5cGVgKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZU5vdEVub3VnaEl0ZW1Ub0J1eVRoaXMubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VOb3RFbm91Z2hJdGVtVG9CdXlUaGlzLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmcGFnZU5vdEVub3VnaEl0ZW1Ub0J1eVRoaXMsIHNlbmQgYmFjayB0d2ljZWApO1xuXG4gICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgfSxcbiAgfSk7XG5cbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyZnBhZ2VJblNoZWxsU2hvcC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluU2hlbGxTaG9wLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSAnaGFib3JTaG9wSW5TaGVsbEdhbGxlcnknKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJblNoZWxsU2hvcCwgYnV0IGN1cnJlbnQgdGFzayBpcyAke2NvbnRleHQudGFzay5uYW1lfSwgc2tpcHBpbmdgKTtcbiAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZnBhZ2VMZWdlbmRhcnlTb2xkT3V0ID0gbmV3IFBhZ2UoJ3JmcGFnZUxlZ2VuZGFyeVNvbGRPdXQnLCBbXG4gICAgICAgIHsgeDogODQsIHk6IDIyNiwgcjogMjA3LCBnOiAyMiwgYjogMjQgfSxcbiAgICAgICAgeyB4OiAxNDgsIHk6IDE5NiwgcjogMjA3LCBnOiAyMiwgYjogMjQgfSxcbiAgICAgIF0pO1xuICAgICAgaWYgKHNoZWxsR2FsbGVyeVN0YXR1cy5hdXRvQnV5U2VhRmFpcnkpIHtcbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlTGVnZW5kYXJ5U29sZE91dCwgaW1hZ2UpKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYFB1cmNoYXNlZCBsZWdlbmRhcnkgY29va2llIHN1Y2Nlc3NmdWxseWApO1xuICAgICAgICAgIHNoZWxsR2FsbGVyeVN0YXR1cy5hdXRvQnV5U2VhRmFpcnkgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgUHVyY2hhc2luZyBsZWdlbmRhcnkgY29va2llYCk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDgwLCB5OiAzMTMgfSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJmcGFnZVJlbGljU29sZE91dCA9IG5ldyBQYWdlKCdyZnBhZ2VSZWxpY1NvbGRPdXQnLCBbXG4gICAgICAgIHsgeDogNDE0LCB5OiAyNDIsIHI6IDEyNiwgZzogMCwgYjogMSB9LFxuICAgICAgICB7IHg6IDM5MywgeTogMjUzLCByOiAyMDcsIGc6IDIyLCBiOiAyNCB9LFxuICAgICAgICB7IHg6IDQwNywgeTogMjYyLCByOiAxMDcsIGc6IDEwNywgYjogMTA3IH0sXG4gICAgICAgIHsgeDogMzk4LCB5OiAyODUsIHI6IDEzOSwgZzogMTM5LCBiOiAxMzkgfSxcbiAgICAgIF0pO1xuICAgICAgaWYgKHNoZWxsR2FsbGVyeVN0YXR1cy5hdXRvQnV5R3VpbGRSZWxpYykge1xuICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZnBhZ2VSZWxpY1NvbGRPdXQsIGltYWdlKSkge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBQdXJjaGFzZWQgZ3VpbGQgcmVsaWMgc3VjY2Vzc2Z1bGx5YCk7XG4gICAgICAgICAgc2hlbGxHYWxsZXJ5U3RhdHVzLmF1dG9CdXlHdWlsZFJlbGljID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYFB1cmNoYXNpbmcgZ3VpbGQgcmVsaWNgKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzYwLCB5OiAzMTMgfSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJmcGFnZUxlZ2VuZFNvdWxFc3NlbmNlU29sZE91dCA9IG5ldyBQYWdlKCdyZnBhZ2VMZWdlbmRTb3VsRXNzZW5jZVNvbGRPdXQnLCBbXG4gICAgICAgIHsgeDogMjkyLCB5OiAxMTgsIHI6IDIwNSwgZzogMjIsIGI6IDI3IH0sXG4gICAgICAgIHsgeDogMjc3LCB5OiAxNDAsIHI6IDI0NiwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICAgIF0pO1xuICAgICAgaWYgKHNoZWxsR2FsbGVyeVN0YXR1cy5hdXRvQnV5TGVnZW5kU291bEVzc2VuY2UpIHtcbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlTGVnZW5kU291bEVzc2VuY2VTb2xkT3V0LCBpbWFnZSkpIHtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgUHVyY2hhc2VkIGxlZ2VuZCBzb3VsIGVzc2VuY2Ugc3VjY2Vzc2Z1bGx5YCk7XG4gICAgICAgICAgc2hlbGxHYWxsZXJ5U3RhdHVzLmF1dG9CdXlMZWdlbmRTb3VsRXNzZW5jZSA9IGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBQdXJjaGFzaW5nIGxlZ2VuZCBzb3VsIGVzc2VuY2VgKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMjcwLCB5OiAxOTIgfSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJmcGFnZUVwaWNTb3VsRXNzZW5jZVNvbGRPdXQgPSBuZXcgUGFnZSgncmZwYWdlRXBpY1NvdWxFc3NlbmNlU29sZE91dCcsIFtcbiAgICAgICAgeyB4OiAyOTMsIHk6IDI0MSwgcjogMjA2LCBnOiAyMCwgYjogMjQgfSxcbiAgICAgICAgeyB4OiAyNzQsIHk6IDI2MywgcjogMjQ3LCBnOiAxMzgsIGI6IDI0NyB9LFxuICAgICAgXSk7XG4gICAgICBpZiAoc2hlbGxHYWxsZXJ5U3RhdHVzLmF1dG9CdXlFcGljU291bEVzc2VuY2UpIHtcbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocmZwYWdlRXBpY1NvdWxFc3NlbmNlU29sZE91dCwgaW1hZ2UpKSB7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYFB1cmNoYXNlZCBlcGljIHNvdWwgZXNzZW5jZSBzdWNjZXNzZnVsbHlgKTtcbiAgICAgICAgICBzaGVsbEdhbGxlcnlTdGF0dXMuYXV0b0J1eUVwaWNTb3VsRXNzZW5jZSA9IGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBQdXJjaGFzaW5nIGVwaWMgc291bCBlc3NlbmNlYCk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDMxMCwgeTogMjc3IH0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgJHtjb250ZXh0LnBhdGh9IGZpbmlzaFJvdW5kYCk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlU2hlbGxTaG9wTm90RW5vdWdoU2hlbGwubmFtZX1gLFxuICAgIG1hdGNoOiByZnBhZ2VTaGVsbFNob3BOb3RFbm91Z2hTaGVsbCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VTaGVsbFNob3BOb3RFbm91Z2hTaGVsbCwgc2VuZCBiYWNrIHR3aWNlIGFuZCBmaW5pc2hSb3VuZGApO1xuXG4gICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgVXRpbHMuc2xlZXAoMTUwMCk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICB9LFxuICB9KTtcblxuICBwYXNzaXZlQWRkUm91dGUoW3JmcGFnZUNvbmZpcm1CdXlMZWdlbmRTb3VsU3RvbmUsIHJmcGFnZUNvbmZpcm1CdXlHdWlsZFJlbGljcywgcmZwYWdlQ29uZmlybUJ1eUxlZ2VuZFNvdWxFc3NlbmNlLCByZnBhZ2VDb25maXJtQnV5RXBpY1NvdWxFc3NlbmNlXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRTZW5kSGFib3JTaGlwVGFzaygpIHtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1MuaGFib3JTZW5kU2hpcCxcbiAgICBtYXhUYXNrRHVyaW5nOiAxMCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIG1pblJvdW5kSW50ZXJ2YWw6IDEyMCAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRTZWFzaWRlTWFya2V0VGFzaygpIHtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1MuaGFib3JTaG9wSW5TZWFNYXJrZXQsXG4gICAgbWF4VGFza0R1cmluZzogMTUgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiAxMjAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihzZWFzaWRlTWFya2V0U3RhdHVzLCB7XG4gICAgICAgIG5lZWRQdWxsVG9SaWdodEhlYWQ6IHRydWUsXG4gICAgICAgIHJhcmVJdGVtczogW10gYXMgUkVDVFtdLFxuICAgICAgICByaWdodFNsaWRlQ291bnQ6IDAsXG4gICAgICAgIHJpZ2h0U2xpZGVMaW1pdDogY29uZmlnLmF1dG9TaG9wSW5TZWFzaWRlTWFya2V0ID8gNSA6IDAsXG4gICAgICAgIG5lZWRUb0J1eVJhZGlhbnRTaGFyZDogY29uZmlnLmF1dG9CdXlSYWRpYW50U2hhcmRzSW5IYWJvcixcbiAgICAgICAgcHVyY2hhc2VJbmRleDogMCxcbiAgICAgICAgZm91bmRSZXN1bHRzOiB1bmRlZmluZWQgYXMgUG9pbnRbXSB8IHVuZGVmaW5lZCxcbiAgICAgICAgZm91bmRJbmRleDogMCxcbiAgICAgICAgbm93SGF2ZTogMCxcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoY29uZmlnLmF1dG9CYWxhbmNlQXVyb3JhU3RvY2tzKSB7XG4gICAgICAgIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLnB1c2goc2Vhc2lkZVN0b2NrUmVjdFswXSk7XG4gICAgICAgIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLnB1c2goc2Vhc2lkZVN0b2NrUmVjdFsxXSk7XG4gICAgICAgIHNlYXNpZGVNYXJrZXRTdGF0dXMucmFyZUl0ZW1zLnB1c2goc2Vhc2lkZVN0b2NrUmVjdFsyXSk7XG4gICAgICB9XG4gICAgICBpZiAoY29uZmlnLmF1dG9CdXlDYXJhbWVsU3R1ZmYpIHtcbiAgICAgICAgc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMucHVzaChzZWFzaWRlU3RvY2tSZWN0WzNdKTtcbiAgICAgICAgc2Vhc2lkZU1hcmtldFN0YXR1cy5yYXJlSXRlbXMucHVzaChzZWFzaWRlU3RvY2tSZWN0WzRdKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFNoZWxsR2FsbGVyeVRhc2soKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLmhhYm9yU2hvcEluU2hlbGxHYWxsZXJ5LFxuICAgIG1heFRhc2tEdXJpbmc6IDMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiAxODAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgYmVmb3JlUm91dGU6ICgpID0+IHtcbiAgICAgIGFzc2lnbihzaGVsbEdhbGxlcnlTdGF0dXMsIHtcbiAgICAgICAgYXV0b0J1eVNlYUZhaXJ5OiBjb25maWcuYXV0b0J1eVNlYUZhaXJ5LFxuICAgICAgICBhdXRvQnV5RXBpY1NvdWxFc3NlbmNlOiBjb25maWcuYXV0b0J1eUVwaWNTb3VsRXNzZW5jZSxcbiAgICAgICAgYXV0b0J1eUxlZ2VuZFNvdWxFc3NlbmNlOiBjb25maWcuYXV0b0J1eUxlZ2VuZFNvdWxFc3NlbmNlLFxuICAgICAgICBhdXRvQnV5R3VpbGRSZWxpYzogY29uZmlnLmF1dG9CdXlHdWlsZFJlbGljLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNvbnNpZGVyUHVyY2hhc2VTZWFzaWRlTWFya2V0KHRhcmdldDogUkVDVCk6IGJvb2xlYW4ge1xuICBsZXQgbmV3U3RvY2sgPSBvY3JTdG9ja3NJblJlY3QodGFyZ2V0LCBJQ09OUy5udW1iZXJBdXJvcmFTdG9ja0luVHJhZGVCaXJkKTtcbiAgbGV0IG5ld1N0b2NrMiA9IG9jclN0b2NrQW5kUmVxSW5SZWN0KHRhcmdldCwgSUNPTlMubnVtYmVyQXVyb3JhU3RvY2tJblRyYWRlQmlyZCk7XG4gIGxvZ3MoJ2hhYm9yU2hvcEluU2VhTWFya2V0JywgYGNvbnNpZGVyUHVyY2hhc2VTZWFzaWRlTWFya2V0LCBvY3IxIGdvdCAnJHtuZXdTdG9ja30nLCBvY3IyIGdvdCAnJHtuZXdTdG9jazJ9JywgdGFyZ2V0IGFyZWE6ICcke0pTT04uc3RyaW5naWZ5KHRhcmdldCl9J2ApO1xuXG4gIGlmIChuZXdTdG9jayA+IDUwKSB7XG4gICAgbG9ncygnaGFib3JTaG9wSW5TZWFNYXJrZXQnLCBgVHJ5IHRvIGJ1eSBhcyAke25ld1N0b2NrfSA+IDUwYCk7XG4gICAgc2Vhc2lkZU1hcmtldFN0YXR1cy5ub3dIYXZlID0gbmV3U3RvY2s7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh0YXJnZXQpO1xuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBsb2dzKCdoYWJvclNob3BJblNlYU1hcmtldCcsIGBza2lwIGFzIE9DUiBmYWlsZWQgLyBjb25kaXRpb24gbm90IG1ldGApO1xuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGNoZWNrSWZOZWVkU2tpcFRoaXNTcGVjaWFsSXRlbXMoKTogU2Vhc2lkZU1hcmtldEl0ZW1UeXBlIHtcbiAgaWYgKCFyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VNYXJrZXRJdGVtRGV0YWlsKSkge1xuICAgIGxvZ3MoJ2NoZWNrU2Vhc2lkZU1hcmtldFNwZWNpYWxJdGVtcycsIGBTa2lwIGFzIHdlIGFyZSBub3QgaW4gcmZwYWdlTWFya2V0SXRlbURldGFpbGApO1xuICAgIHJldHVybiBTZWFzaWRlTWFya2V0SXRlbVR5cGUub3RoZXJzO1xuICB9XG5cbiAgbGV0IGl0ZW1Gb3VuZCA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uU2Vhc2lkZU1hcmtldERldGFpbEJlYW5zLCB7IHg6IDI4OCwgeTogMjY2LCB3OiA2MCwgaDogNDAgfSk7XG4gIGlmIChpdGVtRm91bmQubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBTZWFzaWRlTWFya2V0SXRlbVR5cGUubXVzdFNraXA7XG4gIH1cbiAgaXRlbUZvdW5kID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25TZWFzaWRlTWFya2V0RGV0YWlsQXVyb3JhQ29tcGFzcywgeyB4OiAyODgsIHk6IDI2NiwgdzogNjAsIGg6IDQwIH0pO1xuICBpZiAoaXRlbUZvdW5kLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gU2Vhc2lkZU1hcmtldEl0ZW1UeXBlLmNvbXBhcmVBbW91bnQ7XG4gIH1cbiAgaXRlbUZvdW5kID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25TZWFzaWRlTWFya2V0RGV0YWlsQXVyb3JhQ29sdW1uLCB7IHg6IDI4OCwgeTogMjY2LCB3OiA2MCwgaDogNDAgfSk7XG4gIGlmIChpdGVtRm91bmQubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBTZWFzaWRlTWFya2V0SXRlbVR5cGUuY29tcGFyZUFtb3VudDtcbiAgfVxuICBpdGVtRm91bmQgPSBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvblNlYXNpZGVNYXJrZXREZXRhaWxBdXJvcmFCcmljaywgeyB4OiAyODgsIHk6IDI2NiwgdzogNjAsIGg6IDQwIH0pO1xuICBpZiAoaXRlbUZvdW5kLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gU2Vhc2lkZU1hcmtldEl0ZW1UeXBlLmNvbXBhcmVBbW91bnQ7XG4gIH1cblxuICByZXR1cm4gU2Vhc2lkZU1hcmtldEl0ZW1UeXBlLmJ1eUFueXdheTtcbn1cbiIsImltcG9ydCB7IEdyb3VwUGFnZSwgUGFnZSwgVXRpbHMsIHJlcm91dGVyIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgbG9ncywgc2VuZEV2ZW50UnVubmluZywgc2VuZEtleUJhY2sgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBUQVNLUyB9IGZyb20gJy4uL3Rhc2tzJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uL3NjcmlwdENvbmZpZyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCAqIGFzIElDT05TIGZyb20gJy4uL2ljb25zJztcbmltcG9ydCB7IGFzc2lnbiwgZmluZFNwZWNpZmljSWNvbkluU2NyZWVuLCBwYXNzaXZlQWRkUm91dGUsIHNlbmRDb3VudGVyIH0gZnJvbSAnLi4vaGVscGVyJztcblxuY29uc3QgcmZwYWdlSW5Ucm9waWNhbElzbGFuZCA9IG5ldyBQYWdlKCdyZnBhZ2VJblRyb3BpY2FsSXNsYW5kJywgW1xuICB7IHg6IDM4LCB5OiAzMzMsIHI6IDI1NSwgZzogOTcsIGI6IDE3MyB9LFxuICB7IHg6IDQ5LCB5OiAzMjMsIHI6IDIzOSwgZzogNzcsIGI6IDE0MCB9LFxuICB7IHg6IDYyLCB5OiAzNDEsIHI6IDQ0LCBnOiA4MSwgYjogMTE4IH0sXG5dKTtcbmNvbnN0IHJmcGFnZVJlYWR5VG9DbGVhclJlZFN3b3JkID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VSZWFkeVRvQ2xlYXJSZWRTd29yZCcsXG4gIFtcbiAgICB7IHg6IDUzMSwgeTogMzI0LCByOiAxMjEsIGc6IDIwNywgYjogMTIgfSxcbiAgICB7IHg6IDQ1NiwgeTogMjgsIHI6IDI0MSwgZzogNTMsIGI6IDYwIH0sXG4gICAgeyB4OiA0OTQsIHk6IDIzLCByOiAyNTIsIGc6IDI0NiwgYjogMjE2IH0sXG4gICAgeyB4OiA1NzIsIHk6IDMyNywgcjogNjAsIGc6IDcwLCBiOiAxMDUgfSxcbiAgXSxcbiAgeyB4OiA1MzEsIHk6IDMyNCB9XG4pO1xuY29uc3QgcmZwYWdlQmF0dGxlVG9DbGVhclNvZGFJc2xhbmQgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUJhdHRsZVRvQ2xlYXJTb2RhSXNsYW5kJyxcbiAgW1xuICAgIHsgeDogNjAxLCB5OiAzMjYsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICAgIHsgeDogNjIzLCB5OiAzMTMsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gICAgeyB4OiA1NzMsIHk6IDg0LCByOiAyNTQsIGc6IDI1MywgYjogMjUxIH0sXG4gICAgeyB4OiAxNjUsIHk6IDMzNSwgcjogMTIxLCBnOiAyMDcsIGI6IDEyIH0sXG4gICAgeyB4OiAyOTcsIHk6IDgzLCByOiA4MiwgZzogMjE1LCBiOiAwIH0sXG4gICAgeyB4OiA0MjYsIHk6IDc0LCByOiAyNTUsIGc6IDM2LCBiOiAzMyB9LFxuICBdLFxuICB7IHg6IDYwMSwgeTogMzI2IH1cbik7XG5jb25zdCByZnBhZ2VFbXB0eVN1bmJlZHNMaXN0SW5NaWRkbGUgPSBuZXcgUGFnZShcbiAgJ3JmcGFnZUVtcHR5U3VuYmVkc0xpc3RJbk1pZGRsZScsXG4gIFtcbiAgICB7IHg6IDIxNywgeTogNjAsIHI6IDEzMywgZzogMjMxLCBiOiA3NCB9LFxuICAgIHsgeDogMjI5LCB5OiAxMzIsIHI6IDQ0LCBnOiA0NiwgYjogNjAgfSxcbiAgICB7IHg6IDI0NywgeTogNTIsIHI6IDU3LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiAyMjYsIHk6IDgyLCByOiAxNjUsIGc6IDYwLCBiOiA5MCB9LFxuICAgIHsgeDogNDI4LCB5OiAxOSwgcjogMiwgZzogNjcsIGI6IDEyNyB9LFxuICAgIHsgeDogNDcsIHk6IDMyOCwgcjogMTE5LCBnOiA0MCwgYjogNjcgfSxcbiAgXSxcbiAgeyB4OiA0MzcsIHk6IDU3IH1cbik7XG5cbmxldCB0cm9waWNhbElzbGFuZFN0YXR1cyA9IHtcbiAgaWNvblJlZEV4Y2xhbWF0aW9uQ291bnQ6IDAsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkVHJvcGljYWxJc2xhbmRSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5Ucm9waWNhbElzbGFuZC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluVHJvcGljYWxJc2xhbmQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUuc3Vic3RyaW5nKDAsIDE0KSAhPT0gJ3Ryb3BpY2FsSXNsYW5kJykge1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoY29udGV4dC50YXNrLm5hbWUpIHtcbiAgICAgICAgY2FzZSBUQVNLUy50cm9waWNhbElzbGFuZFNoaXA6XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmcGFnZUluVHJvcGljYWxJc2xhbmQsIGNoZWNrIHRoZSBzaGlwIHN0YXR1c2ApO1xuICAgICAgICAgIGNvbnN0IHJmcGFnZUNhbkNsYWltUmVzb3VyY2UgPSBuZXcgUGFnZShcbiAgICAgICAgICAgICdyZnBhZ2VDYW5DbGFpbVJlc291cmNlJyxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgeyB4OiAzMDcsIHk6IDMzMywgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICAgICAgICAgICAgeyB4OiAzNjMsIHk6IDMzMSwgcjogMTIzLCBnOiAyMDcsIGI6IDggfSxcbiAgICAgICAgICAgICAgeyB4OiAzMywgeTogMzMyLCByOiAyNTUsIGc6IDEwMCwgYjogMTc2IH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgeyB4OiAzNjAsIHk6IDMzMyB9XG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZnBhZ2VDYW5DbGFpbVJlc291cmNlLCBpbWFnZSkpIHtcbiAgICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VDYW5DbGFpbVJlc291cmNlKTtcbiAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBzdWNjZXNzZnVsbHkgY29sbGVjdGVkIGlzbGFuZCByZXNvdXJjZWApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgbW9yZSByZXNvdXJjZXMgYXJlIG9uIHRoZSB3YXlgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgY2FzZSBUQVNLUy50cm9waWNhbElzbGFuZFN1bmJlZDpcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgY2hlY2sgc3VuYmVkYCk7XG4gICAgICAgICAgY29uc3QgcmZwYWdlU3VuYmVkc1dpdGhGaW5pc2hlZENvb2tpZXMgPSBuZXcgUGFnZShcbiAgICAgICAgICAgICdyZnBhZ2VTdW5iZWRzV2l0aEZpbmlzaGVkQ29va2llcycsXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIHsgeDogNTIsIHk6IDMyMywgcjogMjM4LCBnOiA2OCwgYjogMTE5IH0sXG4gICAgICAgICAgICAgIHsgeDogNjEsIHk6IDMzNiwgcjogNDQsIGc6IDc3LCBiOiAxMTAgfSxcbiAgICAgICAgICAgICAgeyB4OiA2MSwgeTogMzAzLCByOiAyNTUsIGc6IDAsIGI6IDAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB7IHg6IDUyLCB5OiAzMjMgfVxuICAgICAgICAgICk7XG4gICAgICAgICAgY29uc3QgcmZwYWdlRnJlZUFsbENyaXNweUNvb2tpZSA9IG5ldyBQYWdlKFxuICAgICAgICAgICAgJ3JmcGFnZUZyZWVBbGxDcmlzcHlDb29raWUnLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICB7IHg6IDM0MSwgeTogMzE2LCByOiAxMjMsIGc6IDIwNywgYjogOCB9LFxuICAgICAgICAgICAgICB7IHg6IDM3NiwgeTogMzEzLCByOiA0OSwgZzogNjAsIGI6IDkwIH0sXG4gICAgICAgICAgICAgIHsgeDogMjIzLCB5OiA4NSwgcjogMjU1LCBnOiAxMDEsIGI6IDE3MyB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIHsgeDogMzQxLCB5OiAzMTYgfVxuICAgICAgICAgICk7XG4gICAgICAgICAgY29uc3QgcmZwYWdlSGFzTm9DcmlzcHlDb29raWUgPSBuZXcgUGFnZSgncmZwYWdlSGFzTm9DcmlzcHlDb29raWUnLCBbXG4gICAgICAgICAgICB7IHg6IDQyNSwgeTogMTExLCByOiA0NCwgZzogNDYsIGI6IDYwIH0sXG4gICAgICAgICAgICB7IHg6IDQyMiwgeTogMTMyLCByOiA0NCwgZzogNDYsIGI6IDYwIH0sXG4gICAgICAgICAgXSk7XG5cbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgY29sbGVjdGluZyBzdW5iZWQgY29va2llcywgdGhpcyB3aWxsIHdhaXQgNCBzZWNzIGZvciB0aGUgY29va2llIGxpc3QgdG8gc2hvdyB1cGApO1xuICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VTdW5iZWRzV2l0aEZpbmlzaGVkQ29va2llcyk7XG5cbiAgICAgICAgICAvLyBXYWl0aW5nIGlzIHJlcXVpcmVkLCBhcyB0aGUgY29va2llIGxpc3Qgc2hvd3MgdXAgd2l0aCBhIGRlbGF5XG4gICAgICAgICAgaWYgKHJlcm91dGVyLndhaXRTY3JlZW5Gb3JNYXRjaGluZ1BhZ2UobmV3IEdyb3VwUGFnZSgnZ3JvdXBJblN1bmJlZCcsIFtyZnBhZ2VGcmVlQWxsQ3Jpc3B5Q29va2llLCByZnBhZ2VIYXNOb0NyaXNweUNvb2tpZV0pLCA0MDAwKSkge1xuICAgICAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUZyZWVBbGxDcmlzcHlDb29raWUpKSB7XG4gICAgICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VGcmVlQWxsQ3Jpc3B5Q29va2llKTtcbiAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBzdWNjZXNzZnVsbHkgY29sbGVjdCBzdW5iZWQgY29va2llc2ApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlRW1wdHlTdW5iZWRzTGlzdEluTWlkZGxlKSkge1xuICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHN1biBiZWQgY29va2llIGxpc3QgaXMgZW1wdHlgKTtcbiAgICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VFbXB0eVN1bmJlZHNMaXN0SW5NaWRkbGUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBmaW5pc2ggY29sbGVjdGluZyBjb29raWVzYCk7XG4gICAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgY2FzZSBUQVNLUy50cm9waWNhbElzbGFuZENsZWFyQnViYmxlOlxuICAgICAgICAgIGxldCBmb3VuZFJlc3VsdHM7XG4gICAgICAgICAgbGV0IGkgPSAwO1xuICAgICAgICAgIGZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uR3JlZW5DaGVja2VkV2hpdGVCYWNrZ3JvdW5kKTtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaGFuZGxlIGljb25HcmVlbkNoZWNrZWRXaGl0ZUJhY2tncm91bmQsIGZvdW5kICR7T2JqZWN0LmtleXMoZm91bmRSZXN1bHRzKS5sZW5ndGh9IG9mIHRoZW1gKTtcbiAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoZm91bmRSZXN1bHRzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoZm91bmRSZXN1bHRzKS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKGZvdW5kUmVzdWx0c1tpXSk7XG4gICAgICAgICAgICAgIFV0aWxzLnNsZWVwKGNvbmZpZy5zbGVlcEFuaW1hdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uUmVkRXhjbGFtYXRpb24pO1xuICAgICAgICAgIGlmICh0cm9waWNhbElzbGFuZFN0YXR1c1snaWNvblJlZEV4Y2xhbWF0aW9uQ291bnQnXSA8IE9iamVjdC5rZXlzKGZvdW5kUmVzdWx0cykubGVuZ3RoKSB7XG4gICAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaGFuZGxlIGljb25SZWRFeGNsYW1hdGlvbiwgZm91bmQgJHtPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aH0gb2YgdGhlbWApO1xuICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGZvdW5kUmVzdWx0cykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoZm91bmRSZXN1bHRzKS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoZm91bmRSZXN1bHRzW2ldKTtcbiAgICAgICAgICAgICAgICBVdGlscy5zbGVlcChjb25maWcuc2xlZXBBbmltYXRlKTtcbiAgICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKGZvdW5kUmVzdWx0c1tpXSk7XG4gICAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSk7XG4gICAgICAgICAgICAgICAgdHJvcGljYWxJc2xhbmRTdGF0dXNbJ2ljb25SZWRFeGNsYW1hdGlvbkNvdW50J10rKztcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBDbGVhciBoYW1tZXJzXG4gICAgICAgICAgZm91bmRSZXN1bHRzID0gZmluZFNwZWNpZmljSWNvbkluU2NyZWVuKElDT05TLmljb25Jc2xhbmRIYW1tZXIpO1xuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBoYW5kbGUgaWNvbklzbGFuZEhhbW1lciwgZm91bmQgJHtPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aH0gb2YgdGhlbWApO1xuICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoZm91bmRSZXN1bHRzW2ldKTtcbiAgICAgICAgICAgICAgVXRpbHMuc2xlZXAoY29uZmlnLnNsZWVwQW5pbWF0ZSAqIDMpO1xuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzI0LCB5OiAyNjMgfSk7IC8vIFRhYiBidWlsZFxuXG4gICAgICAgICAgICAgIGlmICghcmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShyZnBhZ2VJblRyb3BpY2FsSXNsYW5kLCA0MDAwKSkge1xuICAgICAgICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBOb3QgZW5vdWdoIHJlc291cmNlIHRvIGJ1aWxkIGlzbGFuZCwgc2tpcHBpbmdgKTtcbiAgICAgICAgICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICAgICAgICAgIHNlbmRLZXlCYWNrKCk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYEJ1aWxkIGhhbW1lciBzdWNjZXNzZnVsbHlgKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIENsZWFyIGJhdHRsZXNcbiAgICAgICAgICBmb3VuZFJlc3VsdHMgPSBmaW5kU3BlY2lmaWNJY29uSW5TY3JlZW4oSUNPTlMuaWNvblJlZFN3b3JkKTtcbiAgICAgICAgICBsb2dzKGNvbnRleHQudGFzay5uYW1lLCBgaGFuZGxlIGljb25SZWRTd29yZCwgZm91bmQgJHtPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aH0gb2YgdGhlbTogJHtKU09OLnN0cmluZ2lmeShmb3VuZFJlc3VsdHMpfWApO1xuICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNlbmRFdmVudFJ1bm5pbmcoKTtcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiBmb3VuZFJlc3VsdHNbaV0ueCArIDEwLCB5OiBmb3VuZFJlc3VsdHNbaV0ueSArIDEwIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGZvdW5kUmVzdWx0cyA9IGZpbmRTcGVjaWZpY0ljb25JblNjcmVlbihJQ09OUy5pY29uV2hpdGVTd29yZCk7XG4gICAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGhhbmRsZSBpY29uV2hpdGVTd29yZCwgZm91bmQgJHtPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aH0gb2YgdGhlbWApO1xuICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhmb3VuZFJlc3VsdHMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIC8vIHJlcm91dGVyLnNjcmVlbi50YXAoZm91bmRSZXN1bHRzW2ldKTtcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiBmb3VuZFJlc3VsdHNbaV0ueCArIDEwLCB5OiBmb3VuZFJlc3VsdHNbaV0ueSArIDEwIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBGaW5pc2ggdHJvcGljYWwgaXNsYW5kYCk7XG4gICAgICAgICAgc2VuZEtleUJhY2soKTtcbiAgICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgICAgc2VuZENvdW50ZXIoY29udGV4dC50YXNrLm5hbWUsIGNvbnRleHQucGF0aCwge30pO1xuICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JmcGFnZUJhdHRsZVRvQ2xlYXJTb2RhSXNsYW5kLm5hbWV9YCxcbiAgICBtYXRjaDogcmZwYWdlQmF0dGxlVG9DbGVhclNvZGFJc2xhbmQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnRyb3BpY2FsSXNsYW5kQ2xlYXJCdWJibGUpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYGluIHJmcGFnZUJhdHRsZVRvQ2xlYXJTb2RhSXNsYW5kLCBzZW5kIGJhY2sgYXMgdGhpcyBpcyBub3QgbXkgdGFza2ApO1xuICAgICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGBpbiByZnBhZ2VCYXR0bGVUb0NsZWFyU29kYUlzbGFuZCwgc3RhcnQgYmF0dGxlYCk7XG4gICAgICByZXJvdXRlci5nb05leHQocmZwYWdlQmF0dGxlVG9DbGVhclNvZGFJc2xhbmQpO1xuICAgICAgcmV0dXJuO1xuICAgIH0sXG4gIH0pO1xuXG4gIHBhc3NpdmVBZGRSb3V0ZShbcmZwYWdlUmVhZHlUb0NsZWFyUmVkU3dvcmQsIHJmcGFnZUVtcHR5U3VuYmVkc0xpc3RJbk1pZGRsZV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkVHJvcGljYWxJc2xhbmRUYXNrcygpIHtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1MudHJvcGljYWxJc2xhbmRTaGlwLFxuICAgIG1heFRhc2tEdXJpbmc6IDMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBjb25maWcuYXV0b0NvbGxlY3RUcm9waWNhbElzbGFuZHNJbnRlcnZhbEluTWlucyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLnRyb3BpY2FsSXNsYW5kU3VuYmVkLFxuICAgIG1heFRhc2tEdXJpbmc6IDMgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBjb25maWcuYXV0b0NvbGxlY3RUcm9waWNhbElzbGFuZHNJbnRlcnZhbEluTWlucyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLnRyb3BpY2FsSXNsYW5kQ2xlYXJCdWJibGUsXG4gICAgbWF4VGFza0R1cmluZzogMzAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBjb25maWcuYXV0b0NvbGxlY3RUcm9waWNhbElzbGFuZHNJbnRlcnZhbEluTWlucyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICBiZWZvcmVSb3V0ZTogKCkgPT4ge1xuICAgICAgYXNzaWduKHRyb3BpY2FsSXNsYW5kU3RhdHVzLCB7XG4gICAgICAgIGljb25SZWRFeGNsYW1hdGlvbkNvdW50OiAwLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG4iLCJpbXBvcnQgeyBQYWdlLCBVdGlscywgcmVyb3V0ZXIgfSBmcm9tICdSZXJvdXRlcic7XG5pbXBvcnQgeyBUQVNLUyB9IGZyb20gJy4uL3Rhc2tzJztcbmltcG9ydCB7IGxvZ3MsIHNlbmRFdmVudFJ1bm5pbmcsIHNlbmRLZXlCYWNrIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjb25maWcsIGRlZmF1bHRXaXNoZXMgfSBmcm9tICcuLi9zY3JpcHRDb25maWcnO1xuaW1wb3J0IHsgYXNzaWduLCBpc1NhbWVDb2xvckF0UG50LCBwYXNzaXZlQWRkUm91dGUsIHJlY29nbml6ZVdpc2hpbmdUcmVlUmVxdWlyZW1lbnRzLCBzZW5kQ291bnRlciB9IGZyb20gJy4uL2hlbHBlcic7XG5pbXBvcnQgeyBSZWNvcmRzLCBXaXNoLCBXaXNoU3RhdHVzIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgSUNPTlMgZnJvbSAnLi4vaWNvbnMnO1xuXG5jb25zdCByZnBhZ2VJbldpc2hpbmdUcmVlID0gbmV3IFBhZ2UoJ3JmcGFnZUluV2lzaGluZ1RyZWUnLCBbXG4gIHsgeDogMTU3LCB5OiAyOSwgcjogMTA3LCBnOiA1NiwgYjogODIgfSxcbiAgeyB4OiAyMzUsIHk6IDM1LCByOiAyNTUsIGc6IDAsIGI6IDgxIH0sXG4gIHsgeDogMzQ4LCB5OiAyMiwgcjogMjU1LCBnOiA0MCwgYjogMTIzIH0sXG4gIHsgeDogNDEyLCB5OiAxOCwgcjogMjU1LCBnOiAxOTAsIGI6IDggfSxcbiAgeyB4OiA1MjMsIHk6IDE1LCByOiAwLCBnOiAxOTUsIGI6IDI1NSB9LFxuXSk7XG5jb25zdCByZnBhZ2VOb3RFbm91Z2hGb3JUcmVlID0gbmV3IFBhZ2UoXG4gICdyZnBhZ2VOb3RFbm91Z2hGb3JUcmVlJyxcbiAgW1xuICAgIHsgeDogNDQ1LCB5OiA5NywgcjogNTcsIGc6IDE2NiwgYjogMjMxIH0sXG4gICAgeyB4OiA0MzcsIHk6IDk3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzOTcsIHk6IDExMiwgcjogNTcsIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDI1MiwgeTogMTQyLCByOiAxOTEsIGc6IDE4MywgYjogMTc0IH0sXG4gICAgeyB4OiAyNDcsIHk6IDE0MCwgcjogODAsIGc6IDgwLCBiOiA4MCB9LFxuICAgIHsgeDogMjUzLCB5OiAxNSwgcjogMTI3LCBnOiAyMiwgYjogNjEgfSxcbiAgICB7IHg6IDYwLCB5OiAxOCwgcjogNDEsIGc6IDE4LCBiOiAyOCB9LFxuICAgIHsgeDogNjQsIHk6IDQxLCByOiAyMCwgZzogMzIsIGI6IDY2IH0sXG4gICAgeyB4OiA4LCB5OiAyNCwgcjogNDksIGc6IDMwLCBiOiA5NCB9LFxuICAgIHsgeDogNTI0LCB5OiAyMCwgcjogMCwgZzogNjksIGI6IDEyNyB9LFxuICBdLFxuICB7IHg6IDQ0MiwgeTogOTcgfVxuKTtcbmNvbnN0IHJmcGFnZUNoZWNrV2lzaGluZ1RyZWVTdG9jayA9IG5ldyBQYWdlKCdyZnBhZ2VDaGVja1dpc2hpbmdUcmVlU3RvY2snLCBbXG4gIHsgeDogMzU1LCB5OiAzMDIsIHI6IDEyMSwgZzogMjA3LCBiOiAxMiB9LFxuICB7IHg6IDI0NCwgeTogNDYsIHI6IDYwLCBnOiA3MCwgYjogMTA1IH0sXG4gIHsgeDogMjU3LCB5OiAyMSwgcjogMTI3LCBnOiAxMiwgYjogNDYgfSxcbiAgeyB4OiA0MTAsIHk6IDE4LCByOiAxMjcsIGc6IDk0LCBiOiA0IH0sXG4gIHsgeDogNiwgeTogMjUsIHI6IDUwLCBnOiAzMSwgYjogOTMgfSxcbl0pO1xuXG5sZXQgd2lzaGluZ1RyZWVTdGF0dXMgPSB7XG4gIHJlY29yZHM6IHtcbiAgICBvcGVuZWQ6IDAsXG4gICAgZ29sZGVuOiAwLFxuICAgIGZ1bGZpbGxlZDogMCxcbiAgICBub3RFbm91Z2hBbmRTa2lwOiAwLFxuICAgIGdvbGRlbkFuZFNraXA6IDAsXG4gIH0sXG59O1xuXG5sZXQgd2lzaGVzID0gWy4uLmRlZmF1bHRXaXNoZXNdO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkV2lzaGluZ1RyZWVSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cmZwYWdlSW5XaXNoaW5nVHJlZS5uYW1lfWAsXG4gICAgbWF0Y2g6IHJmcGFnZUluV2lzaGluZ1RyZWUsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLndpc2hpbmdUcmVlKSB7XG4gICAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJbldpc2hpbmdUcmVlLCBsZWF2ZSBiZWNhdXNlIGN1cnJlbnQgdGFzayBpcyBub3Qgd2lzaGluZyB0cmVlLCBidXQ6ICR7Y29udGV4dC50YXNrLm5hbWV9YCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA2MTgsIHk6IDIwIH0pOyAvLyB0YXAgWFxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxvZ3MoY29udGV4dC50YXNrLm5hbWUsIGByZnBhZ2VJbldpc2hpbmdUcmVlLCBzdGFydCB3b3JraW5nYCk7XG5cbiAgICAgIGNvbnN0IHJmcGFnZUFsbFdpc2hpbmdEYWlseVJld2FyZENvbGxlY3RlZCA9IG5ldyBQYWdlKCdyZnBhZ2VBbGxXaXNoaW5nRGFpbHlSZXdhcmRDb2xsZWN0ZWQnLCBbXG4gICAgICAgIHsgeDogNTksIHk6IDI0MiwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuICAgICAgICB7IHg6IDYwLCB5OiAyNTYsIHI6IDEzOCwgZzogMTM4LCBiOiAxMzggfSxcbiAgICAgIF0pO1xuXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZnBhZ2VBbGxXaXNoaW5nRGFpbHlSZXdhcmRDb2xsZWN0ZWQsIGltYWdlKSAmJiAhY29uZmlnLmFsd2F5c0Z1bGZpbGxXaXNoZXMpIHtcbiAgICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgYHJmcGFnZUluV2lzaGluZ1RyZWUsIEFsbCB3aXNoIGZ1bGZpbGxlZCwgc2tpcHBpbmcgYW5kIHNlbmQgcnVubmluZ2ApO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA2MTgsIHk6IDIwIH0pOyAvLyB0YXAgWFxuICAgICAgICBzZW5kQ291bnRlcihjb250ZXh0LnRhc2submFtZSwgY29udGV4dC5wYXRoLCB7fSk7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxldCByZWZyZXNoaW5nID0gMDtcbiAgICAgIGZvciAodmFyIGkgaW4gd2lzaGVzKSB7XG4gICAgICAgIHZhciB3aXNoID0gd2lzaGVzW2ldO1xuXG4gICAgICAgIGxldCByZWNvcmRzID0gd2lzaGluZ1RyZWVTdGF0dXMucmVjb3JkcztcbiAgICAgICAgdmFyIHJlc3VsdCA9IGdldFN0YXR1c09mR2l2ZW5XaXNoKHdpc2gsIHdpc2hpbmdUcmVlU3RhdHVzLnJlY29yZHMsIGNvbmZpZy53aXNoaW5nVHJlZVJlZnJlc2hHb2xkZW5XaXNoZXMpO1xuICAgICAgICB3aXNoID0gcmVzdWx0Wyd3aXNoJ107XG4gICAgICAgIHJlY29yZHMgPSByZXN1bHRbJ3JlY29yZHMnXTtcbiAgICAgICAgY29uc29sZS5sb2coJ2hhbmRsaW5nIHdpc2gnLCBpLCBKU09OLnN0cmluZ2lmeSh3aXNoKSk7XG5cbiAgICAgICAgaWYgKHdpc2guc3RhdHVzID09PSAncmVmcmVzaCcpIHtcbiAgICAgICAgICByZWZyZXNoaW5nKys7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH0gZWxzZSBpZiAod2lzaC5zdGF0dXMgPT09ICdvcGVuZWQnKSB7XG4gICAgICAgICAgcmVzdWx0ID0gY2hlY2tUb1NlbmRTcGVjaWZpY1dpc2god2lzaCwgcmVjb3JkcywgY29uZmlnLndpc2hpbmdUcmVlU2FmZXR5U3RvY2spO1xuICAgICAgICAgIHdpc2ggPSByZXN1bHRbJ3dpc2gnXTtcbiAgICAgICAgICByZWNvcmRzID0gcmVzdWx0WydyZWNvcmRzJ107XG4gICAgICAgICAgY29uc29sZS5sb2coJ2hhbmRsZWQgd2lzaCcsIGksIEpTT04uc3RyaW5naWZ5KHdpc2gpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHdpc2hpbmdUcmVlU3RhdHVzLnJlY29yZHMgPSByZWNvcmRzO1xuICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXApO1xuICAgICAgfVxuICAgICAgY29uc29sZS5sb2coJz4+PiBXaXNpbmcgdHJlZSByZWNvcmRzJywgSlNPTi5zdHJpbmdpZnkod2lzaGluZ1RyZWVTdGF0dXMucmVjb3JkcykpO1xuXG4gICAgICB2YXIgcmZwYWdlQ29sbGVjdFRyZWVSZXdhcmQgPSBuZXcgUGFnZSgncmZwYWdlQ29sbGVjdFRyZWVSZXdhcmQnLCBbeyB4OiA4NSwgeTogMjg5LCByOiA0NCwgZzogMjAzLCBiOiA4IH1dKTtcbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaChyZnBhZ2VDb2xsZWN0VHJlZVJld2FyZCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0RhaWx5IHJld2FyZCBjb2xsZWN0ZWQnKTtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDYwLCB5OiAyNTUgfSk7XG4gICAgICAgIFV0aWxzLnNsZWVwKDIwMDApO1xuXG4gICAgICAgIHJlcm91dGVyLndhaXRTY3JlZW5Gb3JNYXRjaGluZ1BhZ2UocmZwYWdlSW5XaXNoaW5nVHJlZSwgODAwMCk7XG4gICAgICAgIC8vIHdhaXRVbnRpbFNlZVBhZ2UocGFnZUluV2lzaGluZ1RyZWUsIDgsIHBhZ2VDb2xsZWN0VHJlZVJld2FyZCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWZyZXNoaW5nID09PSA0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBbGwgd2lzaGVzIGFyZSByZWZyZXNoaW5nLCBqb2JzIGRvbmUgaGVyZScpO1xuICAgICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgICAgIHNlbmRDb3VudGVyKGNvbnRleHQudGFzay5uYW1lLCBjb250ZXh0LnBhdGgsIHt9KTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbG9ncyhjb250ZXh0LnRhc2submFtZSwgJ3JmcGFnZUluV2lzaGluZ1RyZWUsIGNvbnRpbnVlIHdvcmtpbmcgbmV4dCBsb29wJyk7XG4gICAgICBzZW5kRXZlbnRSdW5uaW5nKCk7XG4gICAgfSxcbiAgfSk7XG5cbiAgcGFzc2l2ZUFkZFJvdXRlKFtyZnBhZ2VOb3RFbm91Z2hGb3JUcmVlXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRXaXNoaW5nVHJlZVRhc2soKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLndpc2hpbmdUcmVlLFxuICAgIG1heFRhc2tEdXJpbmc6IDQgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBjb25maWcuYXV0b0Z1bGZpbGxXaXNoZXNJbnRlcnZhbEluTWlucyAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgICBiZWZvcmVSb3V0ZTogKCkgPT4ge1xuICAgICAgYXNzaWduKHdpc2hpbmdUcmVlU3RhdHVzLCB7XG4gICAgICAgIHJlY29yZHM6IHtcbiAgICAgICAgICBvcGVuZWQ6IDAsXG4gICAgICAgICAgZ29sZGVuOiAwLFxuICAgICAgICAgIGZ1bGZpbGxlZDogMCxcbiAgICAgICAgICBub3RFbm91Z2hBbmRTa2lwOiAwLFxuICAgICAgICAgIGdvbGRlbkFuZFNraXA6IDAsXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICAgIGxldCB3aXNoZXMgPSBbLi4uZGVmYXVsdFdpc2hlc107XG4gICAgfSxcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFN0YXR1c09mR2l2ZW5XaXNoKHdpc2g6IFdpc2gsIHJlY29yZHM6IFJlY29yZHMsIHJlZnJlc2hHb2xkZW46IGJvb2xlYW4pOiB7IHdpc2g6IFdpc2g7IHJlY29yZHM6IFJlY29yZHMgfSB7XG4gIGlmIChpc1NhbWVDb2xvckF0UG50KHdpc2gucmVmcmVzaFBudCwgeyByOiAyNTUsIGc6IDI0OSwgYjogMjAzIH0pKSB7XG4gICAgd2lzaC5zdGF0dXMgPSBXaXNoU3RhdHVzLm9wZW5lZDtcbiAgfSBlbHNlIGlmIChpc1NhbWVDb2xvckF0UG50KHdpc2gucmVmcmVzaFBudCwgeyByOiAyNDYsIGc6IDIxMCwgYjogMTM1IH0sIDE1KSkge1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAod2lzaC51bmZvbGRQbnQpO1xuICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUgKiAyKTtcbiAgICB3aXNoLnN0YXR1cyA9IFdpc2hTdGF0dXMub3BlbmVkO1xuICAgIHJlY29yZHNbJ29wZW5lZCddKys7XG4gIH0gZWxzZSBpZiAoaXNTYW1lQ29sb3JBdFBudCh3aXNoLnJlZnJlc2hQbnQsIHsgcjogMTkzLCBnOiAxNjAsIGI6IDExMSB9KSkge1xuICAgIHdpc2guc3RhdHVzID0gV2lzaFN0YXR1cy5yZWZyZXNoO1xuICB9IGVsc2UgaWYgKGlzU2FtZUNvbG9yQXRQbnQod2lzaC5yZWZyZXNoUG50LCB7IHI6IDI1NSwgZzogMjIyLCBiOiA0MSB9KSkge1xuICAgIC8vIEZvbGRlZCBnb2xkZW4gd2lzaFxuICAgIHdpc2guZ29sZGVuID0gdHJ1ZTtcbiAgICByZWNvcmRzWydnb2xkZW4nXSsrO1xuICAgIGlmIChyZWZyZXNoR29sZGVuKSB7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHdpc2gucmVmcmVzaFBudCk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAod2lzaC5yZWZyZXNoUG50KTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgbG9ncyhUQVNLUy53aXNoaW5nVHJlZSwgYHJlZnJlc2ggYXMgaXQgaXMgYW4gdW5mb2xkZWQgZ29sZGVuIHdpc2g6ICR7SlNPTi5zdHJpbmdpZnkod2lzaCl9YCk7XG4gICAgICB3aXNoLnN0YXR1cyA9IFdpc2hTdGF0dXMucmVmcmVzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh3aXNoLnVuZm9sZFBudCk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlKTtcbiAgICAgIHdpc2guc3RhdHVzID0gV2lzaFN0YXR1cy5vcGVuZWQ7XG4gICAgICByZWNvcmRzWydvcGVuZWQnXSsrO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc1NhbWVDb2xvckF0UG50KHdpc2gucmVmcmVzaFBudCwgeyByOiAyNTUsIGc6IDI0NywgYjogMTIzIH0pKSB7XG4gICAgLy8gRXhwZW5kZWQgZ29sZGVuIHdpc2hcbiAgICB3aXNoLmdvbGRlbiA9IHRydWU7XG4gICAgaWYgKHJlZnJlc2hHb2xkZW4pIHtcbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAod2lzaC5yZWZyZXNoUG50KTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICAgICAgbG9ncyhUQVNLUy53aXNoaW5nVHJlZSwgYHJlZnJlc2ggYXMgaXQgaXMgYW4gdW5mb2xkZWQgZ29sZGVuIHdpc2g6ICR7SlNPTi5zdHJpbmdpZnkod2lzaCl9YCk7XG4gICAgICB3aXNoLnN0YXR1cyA9IFdpc2hTdGF0dXMucmVmcmVzaDtcbiAgICAgIHJlY29yZHNbJ2dvbGRlbkFuZFNraXAnXSsrO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aXNoLnN0YXR1cyA9IFdpc2hTdGF0dXMub3BlbmVkO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7IHdpc2g6IHdpc2gsIHJlY29yZHM6IHJlY29yZHMgfTtcbn1cblxuZnVuY3Rpb24gY2hlY2tUb1NlbmRTcGVjaWZpY1dpc2god2lzaDogV2lzaCwgcmVjb3JkczogUmVjb3Jkcywgc2FmZXR5U290Y2s6IG51bWJlcikge1xuICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2gocmZwYWdlTm90RW5vdWdoRm9yVHJlZSkpIHtcbiAgICBsb2dzKFRBU0tTLndpc2hpbmdUcmVlLCBgY2hlY2tUb1NlbmRTcGVjaWZpY1dpc2ggZm91bmQgcGFnZU5vdEVub3VnaEZvclRyZWUsIHRhcCB0byBjbG9zZSB0aGF0YCk7XG4gICAgcmVyb3V0ZXIuZ29OZXh0KHJmcGFnZU5vdEVub3VnaEZvclRyZWUpO1xuICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcEFuaW1hdGUpO1xuICB9XG5cbiAgbGV0IHN0b2Nrczoge1xuICAgIHN0b2NrOiBudW1iZXI7XG4gICAgbmVlZDogbnVtYmVyO1xuICB9W10gPSBbXTtcblxuICBmb3IgKHZhciBwbnRJZHggaW4gd2lzaC5yZXF1aXJlbWVudEljb25QbnRzKSB7XG4gICAgdmFyIHJlcVBudCA9IHdpc2gucmVxdWlyZW1lbnRJY29uUG50c1twbnRJZHhdO1xuXG4gICAgaWYgKCgrcG50SWR4ID4gMCAmJiBpc1NhbWVDb2xvckF0UG50KHJlcVBudCwgeyByOiAyNTUsIGc6IDI0OSwgYjogMjAzIH0pKSB8fCBpc1NhbWVDb2xvckF0UG50KHJlcVBudCwgeyByOiAyNTUsIGc6IDI1NSwgYjogMTQyIH0pKSB7XG4gICAgICBjb25zb2xlLmxvZygnVGhpcyBwb2ludCBoYXMgbm8gaXRlbSwgc2tpcHBpbmc6JywgcG50SWR4LCBKU09OLnN0cmluZ2lmeShyZXFQbnQpKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgICBjb25zb2xlLmxvZyhgdGFwcGVkIHBvaW50ICR7cG50SWR4fSwgKCR7SlNPTi5zdHJpbmdpZnkocmVxUG50KX0pIGFuZCB3YWl0IGZvciByZnBhZ2VDaGVja1dpc2hpbmdUcmVlU3RvY2tgKTtcbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAocmVxUG50KTtcbiAgICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZUNoZWNrV2lzaGluZ1RyZWVTdG9jaywgMjAwMCkpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUluV2lzaGluZ1RyZWUpKSB7XG4gICAgICBsb2dzKCdjaGVja1RvU2VuZFNwZWNpZmljV2lzaCcsICdza2lwIHRoaXMgcG9pbnQgYXMgY2Fubm90IGdldCBpbnRvIHJmcGFnZUNoZWNrV2lzaGluZ1RyZWVTdG9jaycpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgbGV0IG9jclJlc3VsdCA9ICcnO1xuICAgIGlmIChyZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZUNoZWNrV2lzaGluZ1RyZWVTdG9jaywgNzAwMCwgMSkpIHtcbiAgICAgIC8vIFVzZSB0aGlzIHRvIGNvbGxlY3Qgc3RvY2sgaW5mb1xuICAgICAgdmFyIGltZyA9IGdldFNjcmVlbnNob3QoKTtcbiAgICAgIHZhciBjSW1nMSA9IGNyb3BJbWFnZShpbWcsIDMyNSwgMTEwLCA0MCwgMTUpO1xuICAgICAgb2NyUmVzdWx0ID0gcmVjb2duaXplV2lzaGluZ1RyZWVSZXF1aXJlbWVudHMoSUNPTlMubnVtYmVySW1hZ2VzV2lzaGluZ1RyZWUsIGNJbWcxLCAxMiwgMC45MiwgMC43KTtcbiAgICAgIHJlbGVhc2VJbWFnZShjSW1nMSk7XG4gICAgICByZWxlYXNlSW1hZ2UoaW1nKTtcbiAgICB9XG5cbiAgICBpZiAoIXJlcm91dGVyLmlzUGFnZU1hdGNoKHJmcGFnZUluV2lzaGluZ1RyZWUpKSB7XG4gICAgICBzZW5kS2V5QmFjaygpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcbiAgICB9XG5cbiAgICByZXJvdXRlci53YWl0U2NyZWVuRm9yTWF0Y2hpbmdQYWdlKHJmcGFnZUluV2lzaGluZ1RyZWUsIDcwMDAsIDEpO1xuICAgIC8vIHdhaXRVbnRpbFNlZVBhZ2UocGFnZUluV2lzaGluZ1RyZWUsIDcsIHBhZ2VDaGVja1dpc2hpbmdUcmVlU3RvY2ssIG51bGwsIDMpO1xuXG4gICAgb2NyUmVzdWx0ID0gb2NyUmVzdWx0LnRyaW0oKTtcbiAgICB2YXIgc3RvY2tBbmRSZXE6IGFueVtdID0gW107XG4gICAgaWYgKG9jclJlc3VsdC5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICB9IGVsc2UgaWYgKG9jclJlc3VsdC5pbmRleE9mKCcvJykgPT09IC0xKSB7XG4gICAgICBzdG9ja0FuZFJlcSA9IFtvY3JSZXN1bHQuc3Vic3RyKDAsIG9jclJlc3VsdC5sZW5ndGggLSAxKSwgb2NyUmVzdWx0LnN1YnN0cihvY3JSZXN1bHQubGVuZ3RoIC0gMSwgMSldO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdG9ja0FuZFJlcSA9IG9jclJlc3VsdC5zcGxpdCgnLycpO1xuICAgIH1cblxuICAgIHN0b2NrQW5kUmVxWzBdID0gcGFyc2VJbnQoc3RvY2tBbmRSZXFbMF0sIDEwKTtcbiAgICBzdG9ja0FuZFJlcVsxXSA9IHBhcnNlSW50KHN0b2NrQW5kUmVxWzFdLCAxMCk7XG5cbiAgICBzdG9ja3NbcG50SWR4XSA9IHtcbiAgICAgIHN0b2NrOiBzdG9ja0FuZFJlcVswXSxcbiAgICAgIG5lZWQ6IHN0b2NrQW5kUmVxWzFdLFxuICAgIH07XG5cbiAgICBpZiAoc3RvY2tBbmRSZXEubGVuZ3RoID09PSAwIHx8IHN0b2NrQW5kUmVxWzBdID09PSBudWxsKSB7XG4gICAgICBsb2dzKFRBU0tTLndpc2hpbmdUcmVlLCBgT0NSIGZhaWxlZCwgc2tpcCB0aGlzIG9uZSwgcG50SWR4LCBzdG9ja0FuZFJlcTogJHtwbnRJZHh9LCAke0pTT04uc3RyaW5naWZ5KHN0b2NrQW5kUmVxKX1gKTtcbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAod2lzaC5yZWZyZXNoUG50KTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcCk7XG5cbiAgICAgIHdpc2guc3RhdHVzID0gV2lzaFN0YXR1cy5yZWZyZXNoO1xuICAgICAgcmV0dXJuIHsgd2lzaDogd2lzaCwgcmVjb3JkczogcmVjb3JkcyB9O1xuICAgIH1cblxuICAgIGlmIChzdG9ja0FuZFJlcVswXSAtIHN0b2NrQW5kUmVxWzFdIDwgc2FmZXR5U290Y2spIHtcbiAgICAgIGxvZ3MoVEFTS1Mud2lzaGluZ1RyZWUsIGBTa2lwIHRoaXMgb25lIGFzIHRoZSBzdG9jayAke3N0b2NrQW5kUmVxWzBdfSBpcyBsb3dlciB0aGFuIGNvbmZpZyAke3NhZmV0eVNvdGNrfSwgbmVlZCAke3N0b2NrQW5kUmVxWzFdfWApO1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh3aXNoLnJlZnJlc2hQbnQpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcblxuICAgICAgd2lzaC5zdGF0dXMgPSBXaXNoU3RhdHVzLnJlZnJlc2g7XG4gICAgICByZXR1cm4geyB3aXNoOiB3aXNoLCByZWNvcmRzOiByZWNvcmRzIH07XG4gICAgfVxuICB9XG5cbiAgbG9ncyhUQVNLUy53aXNoaW5nVHJlZSwgYFN0b2NrIGlzIGVub3VnaCwgZnVsZmlsbCB0aGlzIHdpc2gsICR7SlNPTi5zdHJpbmdpZnkod2lzaCl9LCAke0pTT04uc3RyaW5naWZ5KHN0b2Nrcyl9YCk7XG4gIHJlcm91dGVyLnNjcmVlbi50YXAod2lzaC5mdWxmaWxsUG50KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcblxuICBpZiAocmVyb3V0ZXIud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZShyZnBhZ2VOb3RFbm91Z2hGb3JUcmVlLCAyMDAwKSkge1xuICAgIGxvZ3MoVEFTS1Mud2lzaGluZ1RyZWUsIGB3aXNoICR7d2lzaC5pZH0gdGFwcGVkIGJ1dCBub3QgZW5vdWdoIHN0b2NrICh3cm9uZyBvY3I/KSwgcmVmcmVzaCBpdCdgKTtcblxuICAgIHJlcm91dGVyLmdvTmV4dChyZnBhZ2VOb3RFbm91Z2hGb3JUcmVlKTtcbiAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBBbmltYXRlICogMik7XG5cbiAgICByZXJvdXRlci5zY3JlZW4udGFwKHdpc2gucmVmcmVzaFBudCk7XG4gICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwKTtcbiAgICB3aXNoLnN0YXR1cyA9IFdpc2hTdGF0dXMucmVmcmVzaDtcbiAgICByZXR1cm4geyB3aXNoOiB3aXNoLCByZWNvcmRzOiByZWNvcmRzIH07XG4gIH1cblxuICBjb25zb2xlLmxvZygnd2lzaCAnLCB3aXNoLmlkLCAnIGlzIGZ1bGZpbGxlZCcpO1xuICByZWNvcmRzWydmdWxmaWxsZWQnXSsrO1xuICByZXR1cm4geyB3aXNoOiB3aXNoLCByZWNvcmRzOiByZWNvcmRzIH07XG59XG4iLCJpbXBvcnQgeyBSRUNULCBYWSB9IGZyb20gJ1Jlcm91dGVyJztcblxuZXhwb3J0IHR5cGUgU2NyaXB0Q29uZmlnID0ge1xuICBpc0Nsb3VkPzogYm9vbGVhbjsgLy8gaGlkZGVuIHNldHRpbmdcbiAgaXNMb2NhbFBhaWQ6IGJvb2xlYW47XG4gIGhhc0Nvb2xGZWF0dXJlPzogYm9vbGVhbjsgLy8gPSBpc0Nsb3VkIHx8IGlzTG9jYWxQYWlkXG4gIGxlYWd1ZVNlYXNvbk1vZGU6ICdmdWxsJyB8ICdoYWxmJyB8ICdxdWFydGVyJyB8ICdwb3N0U2Vhc29uJztcbiAgbGVhZ3VlWWVhcjogbnVtYmVyOyAvL2dMZWFndWVZZWFyTWluXG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VXaW5kb3cge1xuICBuYW1lOiBzdHJpbmc7XG4gIHg6IG51bWJlcjtcbiAgeTogbnVtYmVyO1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcblxuICB0YXJnZXRZOiBudW1iZXI7XG4gIGxvb2tpbmdGb3JDb2xvcjogeyByOiBudW1iZXI7IGc6IG51bWJlcjsgYjogbnVtYmVyIH07XG4gIHRhcmdldENvbG9yQ291bnQ6IG51bWJlcjtcbiAgdGFyZ2V0Q29sb3JUaHJlYXNob2xkOiBudW1iZXI7XG59XG5cbmV4cG9ydCBjbGFzcyBJY29uIHtcbiAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgcHVibGljIGJhc2U2NFN0cmluZzogc3RyaW5nO1xuICBwdWJsaWMgaW1hZ2U6IEltYWdlO1xuICBwdWJsaWMgdGhyZXM6IG51bWJlcjtcbiAgcHVibGljIG5leHQ/OiBYWTtcbiAgcHVibGljIGJhY2s/OiBYWTtcblxuICBwdWJsaWMgY29uc3RydWN0b3IobmFtZTogc3RyaW5nLCBiYXNlNjRTdHJpbmc6IHN0cmluZywgdGhyZXM6IG51bWJlciB8IHVuZGVmaW5lZCA9IDAuOSwgbmV4dDogWFkgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQsIGJhY2s6IFhZIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLmJhc2U2NFN0cmluZyA9IGJhc2U2NFN0cmluZztcbiAgICB0aGlzLnRocmVzID0gdGhyZXM7XG4gICAgdGhpcy5uZXh0ID0gbmV4dDtcbiAgICB0aGlzLmJhY2sgPSBiYWNrO1xuICB9XG5cbiAgcHVibGljIGxvYWRJbWFnZSgpIHtcbiAgICB0aGlzLmltYWdlID0gZ2V0SW1hZ2VGcm9tQmFzZTY0KHRoaXMuYmFzZTY0U3RyaW5nKTtcbiAgfVxuXG4gIHB1YmxpYyByZWxlYXNlSW1hZ2UoKSB7XG4gICAgcmVsZWFzZUltYWdlKHRoaXMuaW1hZ2UpO1xuICB9XG59XG5cbi8vIFRoZSBzdGF0ZSBvZiBpbmRpdmlkdWFsIHRhc2tzXG5leHBvcnQgaW50ZXJmYWNlIFRhc2tTdGF0dXMge1xuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9pbnQge1xuICBzY29yZTogbnVtYmVyO1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbn1cblxuZXhwb3J0IGVudW0gV2lzaFN0YXR1cyB7XG4gIG9wZW5lZCA9ICdvcGVuZWQnLFxuICByZWZyZXNoID0gJ3JlZnJlc2gnLFxuICB1bmtub3duID0gJ3Vua25vd24nLFxufVxuXG5leHBvcnQgdHlwZSBXaXNoID0ge1xuICBpZDogbnVtYmVyO1xuICByZWZyZXNoUG50OiBYWTtcbiAgdW5mb2xkUG50OiBYWTtcbiAgZnVsZmlsbFBudDogWFk7XG4gIHN0YXR1czogV2lzaFN0YXR1cztcbiAgcmVxdWlyZW1lbnRJY29uUG50czogeyBba2V5OiBudW1iZXJdOiBYWSB9O1xuICBmYWlsZWRDb3VudDogbnVtYmVyO1xuICByZXF1aXJlRnVsZmlsbGVkOiBudW1iZXI7XG4gIGdvbGRlbjogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCB0eXBlIFJlY29yZHMgPSB7XG4gIG9wZW5lZDogbnVtYmVyO1xuICBnb2xkZW46IG51bWJlcjtcbiAgZnVsZmlsbGVkOiBudW1iZXI7XG4gIG5vdEVub3VnaEFuZFNraXA6IG51bWJlcjtcbiAgZ29sZGVuQW5kU2tpcDogbnVtYmVyO1xufTtcblxuZXhwb3J0IHR5cGUgQm91bnR5SW5mbyA9IHtcbiAgaW5kZXg6IG51bWJlcjtcbiAgLy8gZW50cnlQbnQ6IFhZO1xuICBwb3dkZXJTdG9jazogbnVtYmVyO1xuICBsZXZlbDogbnVtYmVyO1xufTtcblxuZXhwb3J0IGVudW0gQWR2YW50dXJlcyB7XG4gIGJvdW50aWVzID0gJ2JvdW50aWVzJyxcbiAgcHZwID0gJ3B2cCcsXG4gIGd1aWxkID0gJ2d1aWxkJyxcbiAgdG93ZXJPZlN3ZWV0Q2hhb3MgPSAndG93ZXJPZlN3ZWV0Q2hhb3MnLFxuICBzdXBlck1heWhlbSA9ICdzdXBlck1heWhlbScsXG4gIHRyb3BpY2FsSXNsYW5kID0gJ3Ryb3BpY2FsSXNsYW5kJyxcbiAgY29va2llQWxsaWFuY2UgPSAnY29va2llQWxsaWFuY2UnLFxufVxuXG5leHBvcnQgZW51bSBTZWFzaWRlTWFya2V0SXRlbVR5cGUge1xuICBtdXN0U2tpcCA9ICdtdXN0U2tpcCcsXG4gIGNvbXBhcmVBbW91bnQgPSAnY29tcGFyZUFtb3VudCcsXG4gIGJ1eUFueXdheSA9ICdidXlBbnl3YXknLFxuICBvdGhlcnMgPSAnb3RoZXJzJyxcbn1cblxuZXhwb3J0IHR5cGUgQWR2YW50dXJlID0ge1xuICBwbnQ6IFhZO1xuICBmcm9tSGVhZDogYm9vbGVhbjtcbiAgYmFja3dhcmQ6IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3Qgc2Vhc2lkZVN0b2NrUmVjdDogeyBba2V5OiBudW1iZXJdOiBSRUNUIH0gPSB7XG4gIDA6IHsgeDogNjYsIHk6IDI4MiwgdzogNjAsIGg6IDE4IH0sXG4gIDE6IHsgeDogMTU4LCB5OiAyODIsIHc6IDYwLCBoOiAxOCB9LFxuICAyOiB7IHg6IDI1MywgeTogMjgyLCB3OiA2MCwgaDogMTggfSxcbiAgMzogeyB4OiAzNDYsIHk6IDI4MiwgdzogNjAsIGg6IDE4IH0sXG4gIDQ6IHsgeDogNDM5LCB5OiAyODIsIHc6IDYwLCBoOiAxOCB9LFxufTtcblxuZXhwb3J0IGNvbnN0IGdvb2RzTG9jYXRpb25SZWN0OiB7IFtrZXk6IHN0cmluZyB8IG51bWJlcl06IFJFQ1QgfSA9IHtcbiAgMTogeyB4OiA0MzEsIHk6IDEwMSwgdzogMjIsIGg6IDEyIH0sXG4gIDI6IHsgeDogNDMxLCB5OiAyMDksIHc6IDIyLCBoOiAxMiB9LFxuICAzOiB7IHg6IDQzMSwgeTogMzE1LCB3OiAyMiwgaDogMTIgfSxcbiAgNDogeyB4OiA0MzEsIHk6IDEwNiwgdzogMjIsIGg6IDEyIH0sXG4gIDU6IHsgeDogNDMxLCB5OiAyMTMsIHc6IDIyLCBoOiAxMiB9LFxuICA2OiB7IHg6IDQzMSwgeTogMzE5LCB3OiAyMiwgaDogMTIgfSxcbiAgc2hvdmVsOiB7IHg6IDQzMiwgeTogMzE3LCB3OiAyMiwgaDogMTYgfSxcbn07XG5cbmV4cG9ydCB0eXBlIHByb2R1Y3RTdGF0ZSA9IHtcbiAgaWQ6IG51bWJlcjtcbiAgc3RvY2s6IG51bWJlcjtcbiAgY2FuUHJvZHVjZTogYm9vbGVhbjtcbiAgbWluaW11bVRhcmdldDogbnVtYmVyO1xuICBwcm9kdWN0aW9uVGFyZ2V0OiBudW1iZXI7XG4gIHN0b2NrVGFyZ2V0RnVsbGZpbGxlZFBlcmNlbnQ6IG51bWJlcjtcbiAgbm90RW5vdWdoU3RvY2s6IGJvb2xlYW47XG4gIG5lZWQ6IHtcbiAgICBba2V5OiBudW1iZXJdOiB7XG4gICAgICBzdG9jazogbnVtYmVyO1xuICAgICAgY29uc3VtZTogbnVtYmVyO1xuICAgIH07XG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgRGlyZWN0aW9ucyA9IE9iamVjdC5mcmVlemUoe1xuICBORTogeyB4OiAtNDgwLCB5OiAyNDUgfSxcbiAgTlc6IHsgeDogNDYwLCB5OiAyNTUgfSxcbiAgU0U6IHsgeDogLTQ2MCwgeTogLTI1NSB9LFxuICBTVzogeyB4OiA0ODAsIHk6IC0yNDUgfSxcbiAgUzogeyB4OiAwLCB5OiAtMjUwIH0sXG4gIFNTOiB7IHg6IDAsIHk6IC0zNTAgfSxcbiAgTjogeyB4OiAwLCB5OiAyNTAgfSxcbiAgTk46IHsgeDogMCwgeTogMzUwIH0sXG4gIEU6IHsgeDogLTQ2MCwgeTogMCB9LFxuICBFRTogeyB4OiAtNTYwLCB5OiAwIH0sXG4gIFc6IHsgeDogNDYwLCB5OiAwIH0sXG4gIFdXOiB7IHg6IDU2MCwgeTogMCB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBzZWFyY2hIb3NlUGF0aHM6IHsgW2tleTogbnVtYmVyXTogWFlbXSB9ID0ge1xuICAwOiBbXG4gICAgRGlyZWN0aW9ucy5TUyxcbiAgICBEaXJlY3Rpb25zLlMsXG4gICAgRGlyZWN0aW9ucy5FRSxcbiAgICBEaXJlY3Rpb25zLk4sXG4gICAgRGlyZWN0aW9ucy5FLFxuICAgIERpcmVjdGlvbnMuRSxcbiAgICBEaXJlY3Rpb25zLkUsXG4gICAgRGlyZWN0aW9ucy5FLFxuICAgIERpcmVjdGlvbnMuTixcbiAgICBEaXJlY3Rpb25zLlcsXG4gICAgRGlyZWN0aW9ucy5XLFxuICAgIERpcmVjdGlvbnMuVyxcbiAgICBEaXJlY3Rpb25zLlcsXG4gIF0sXG4gIDE6IFtEaXJlY3Rpb25zLkVFLCBEaXJlY3Rpb25zLlNTLCBEaXJlY3Rpb25zLkUsIERpcmVjdGlvbnMuVywgRGlyZWN0aW9ucy5XLCBEaXJlY3Rpb25zLlcsIERpcmVjdGlvbnMuTiwgRGlyZWN0aW9ucy5FLCBEaXJlY3Rpb25zLlcsIERpcmVjdGlvbnMuV10sXG4gIDI6IFtEaXJlY3Rpb25zLkVFLCBEaXJlY3Rpb25zLkVFLCBEaXJlY3Rpb25zLlNTLCBEaXJlY3Rpb25zLkVFLCBEaXJlY3Rpb25zLlMsIERpcmVjdGlvbnMuVywgRGlyZWN0aW9ucy5XLCBEaXJlY3Rpb25zLlcsIERpcmVjdGlvbnMuTl0sXG59O1xuIiwiaW1wb3J0IHsgUGFnZSwgVXRpbHMgfSBmcm9tICdSZXJvdXRlcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWRaZXJvKG51bTogbnVtYmVyKSB7XG4gIHJldHVybiBudW0gPCAxMCA/IGAwJHtudW19YCA6IGAke251bX1gO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9ncyhhY3Rpdml0eTogYW55LCBtZXNzYWdlOiBzdHJpbmcpIHtcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKFV0aWxzLmdldFRhaXdhblRpbWUoKSk7XG4gIGNvbnNvbGUubG9nKFxuICAgIGBbJHtwYWRaZXJvKGRhdGUuZ2V0TW9udGgoKSArIDEpfS0ke3BhZFplcm8oZGF0ZS5nZXREYXRlKCkpfVQke3BhZFplcm8oZGF0ZS5nZXRIb3VycygpKX06JHtwYWRaZXJvKGRhdGUuZ2V0TWludXRlcygpKX06JHtwYWRaZXJvKFxuICAgICAgZGF0ZS5nZXRTZWNvbmRzKClcbiAgICApfV0sICR7YWN0aXZpdHl9LCAke21lc3NhZ2V9YFxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VuZEtleUJhY2soKSB7XG4gIGNvbnNvbGUubG9nKCdzZW5kIGEgYmFjaycpO1xuICBrZXljb2RlKCdLRVlDT0RFX0JBQ0snLCAxMDApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VuZEV2ZW50UnVubmluZygpIHtcbiAgc2VuZEV2ZW50KCdydW5uaW5nJywgJycpO1xufVxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiIiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKFwiLi9pbmRleC50c1wiKTtcbiIsIiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==